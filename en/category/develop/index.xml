<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on Pseudoyu</title><link>https://www.pseudoyu.com/en/category/develop/</link><description>Recent content in Develop on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Jul 2024 15:30:00 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/category/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>How I Rescued Critical Data When My Cloud Server Crashed</title><link>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</link><pubDate>Mon, 01 Jul 2024 15:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</guid><description>Preface On Friday, my 2C2G server purchased from BandwagonHost suddenly reported a kernel error, making it impossible to connect via SSH or restart. After a series of circuitous rescue attempts, I finally managed to salvage over a thousand images from my image hosting service. Still shaken by the experience, I&amp;rsquo;d like to document the rescue process and, incidentally, discuss the new image hosting solution I&amp;rsquo;ve set up.
Server Rescue This server had been running stably for about a year and a half, hosting many of my critical services, including over a thousand irreplaceable images for my blog&amp;rsquo;s image hosting service, persistently stored on the host via Docker Volume.</description></item><item><title>Cosmos Blockchain Architecture and Tendermint Consensus Mechanism</title><link>https://www.pseudoyu.com/en/2023/02/10/cosmos_introduction_and_explaination/</link><pubDate>Fri, 10 Feb 2023 20:00:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/10/cosmos_introduction_and_explaination/</guid><description>Preface In my work, I am primarily involved in the architectural design and implementation of cross-chain projects. As our company&amp;rsquo;s existing solution is based on the Cosmos blockchain, I have spent over a year working on some underlying chain development modifications using the Cosmos SDK. This has given me some understanding of its technical implementation. However, due to the tight development schedule, I never had the opportunity to gain a systematic understanding of Cosmos&amp;rsquo; architectural design and the Tendermint consensus mechanism.</description></item><item><title>Photography Collection #02 - Moment In Peking (The Autumn)</title><link>https://www.pseudoyu.com/en/2023/01/02/moment_in_peking_the_autumn/</link><pubDate>Mon, 02 Jan 2023 18:00:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/02/moment_in_peking_the_autumn/</guid><description>Preface It has been over a year since I came to Beijing. Due to long periods of staying in my small room and lacking the mood to explore, its four seasons have merely been the changing greenery on my way to work. I haven&amp;rsquo;t even visited the most well-known landmarks.
In fact, I&amp;rsquo;ve moved between quite a few cities over the years. Each time, I always thought, &amp;ldquo;There&amp;rsquo;s still time,&amp;rdquo; &amp;ldquo;There are plenty of days ahead,&amp;rdquo; &amp;ldquo;There will always be a chance,&amp;rdquo; yet often left with many regrets.</description></item><item><title>Photography Collection #01 - Cat In The Box</title><link>https://www.pseudoyu.com/en/2023/01/01/cat_in_the_box/</link><pubDate>Sun, 01 Jan 2023 21:18:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/01/cat_in_the_box/</guid><description>Preface Since November, I&amp;rsquo;ve been wanting to take proper photos of Nini, but the lighting at home isn&amp;rsquo;t ideal. Due to a busy work schedule, I hadn&amp;rsquo;t deliberately purchased backdrop or lighting equipment. Today, while editing the photos (I mainly just adjust the colors, being lazy), I felt the final images weren&amp;rsquo;t entirely satisfactory. However, I can&amp;rsquo;t abandon my New Year&amp;rsquo;s Day resolution, so I asked a friend to select a few photos that seemed acceptable.</description></item><item><title>Docker Fundamentals and Practices</title><link>https://www.pseudoyu.com/en/2022/09/07/container_docker_basic/</link><pubDate>Wed, 07 Sep 2022 01:30:48 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/07/container_docker_basic/</guid><description>《后来的我们 - 五月天》 Preface This is the first article in the container section of the work practice series, primarily introducing the basic knowledge and practices of Docker. As a backend developer, when I first started working, I mainly debugged locally and hadn&amp;rsquo;t really learned about Docker usage. It wasn&amp;rsquo;t until later when I began to engage with more complex underlying chain development</description></item><item><title>PostgreSQL Basics and Practice</title><link>https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/</link><pubDate>Mon, 05 Sep 2022 23:30:46 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/</guid><description>《后来的我们 - 五月天》 Preface Recently, I&amp;rsquo;ve been thinking about organizing and summarizing the technical points and tools commonly used in my work. On one hand, this helps me review these knowledge points and deepen my memory of their usage. On the other hand, it can serve as a reference for future use. Currently, I&amp;rsquo;m planning to cover several core areas including databases,</description></item><item><title>Implementing Two-Phase Commit in Solidity Smart Contracts Using State Locks</title><link>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</link><pubDate>Fri, 01 Jul 2022 10:54:57 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</guid><description>《后来的我们 - 五月天》 Preface In smart contract applications involving interactions between multiple systems or contracts, particularly in businesses where asset or data accuracy is sensitive, we need to ensure data atomicity throughout the entire business process. Therefore, we need to implement a mechanism similar to multi-phase commit at the contract level, which decomposes the state change process in the contract into two</description></item><item><title>Solidity Smart Contract Development - Using the Hardhat Framework</title><link>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</link><pubDate>Thu, 09 Jun 2022 14:38:10 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface After the previous articles on smart contract basics, Web3.py, and ethers.js, we have mastered the fundamental knowledge of interacting directly with blockchain networks through programs. For those unfamiliar, you can review:
Solidity Smart Contract Development - Basics Solidity Smart Contract Development - Mastering Web3.py Solidity Smart Contract Development - Mastering ethers.js However, in real complex business scenarios, we often use some further encapsulated frameworks, such as HardHat, Brownie, Truffle, etc.</description></item><item><title>Solidity Smart Contract Development - Mastering ethers.js</title><link>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</link><pubDate>Wed, 08 Jun 2022 00:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</guid><description>《後來的我們 - 五月天》 Preface In the previous article &amp;ldquo;Solidity Smart Contract Development - Basics&amp;rdquo;, we learned the basic syntax of Solidity and understood that we can debug using frameworks like Brownie and HardHat. In another article &amp;ldquo;Solidity Smart Contract Development - Mastering Web3.py&amp;rdquo;, we also interacted directly with our local Ganache node using Web3.py. Originally, because I was more familiar with Python,</description></item><item><title>Solidity Smart Contract Development - Mastering Web3.py</title><link>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</link><pubDate>Mon, 30 May 2022 15:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</guid><description>《后来的我们 - 五月天》 Preface In the previous article &amp;ldquo;Solidity Smart Contract Development - Basics&amp;rdquo;, we learned the basic syntax of Solidity and understood that we can debug using frameworks such as Brownie and HardHat. However, before using these pre-packaged frameworks, we can interact directly with our local Ganache node using Web3.py to better understand the principles and lay a solid foundation for</description></item><item><title>Solidity Smart Contract Development - Fundamentals</title><link>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</link><pubDate>Wed, 25 May 2022 01:07:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface Last year, during my graduate studies, I took the course &amp;ldquo;COMP7408 Distributed Ledger and Blockchain Technology&amp;rdquo; at HKU. In this course, I learned about Ethereum smart contract development and created a simple library management ÐApp. For my graduation project, I chose to develop a music copyright application based on Ethereum, which can be found at Uright - Blockchain Music Copyright Management ÐApp. Through these experiences, I gained a basic understanding of Solidity development.</description></item><item><title>Distributed Systems and Blockchain Consensus Mechanisms</title><link>https://www.pseudoyu.com/en/2021/09/08/blockchain_consensus/</link><pubDate>Wed, 08 Sep 2021 11:03:55 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/09/08/blockchain_consensus/</guid><description>Preface As internet systems grow increasingly complex, most have shifted from monolithic to distributed architectures. Blockchain technology, which is fundamentally based on distributed systems, heavily relies on data consistency and consensus mechanisms.
This article will introduce the concepts of consistency and consensus in distributed systems, as well as their practical applications and developments in blockchain technology.
Distributed Systems The Consistency Problem As business scenarios become more complex, a single service is often provided by multiple servers forming a cluster.</description></item><item><title>Introduction and Architecture of Blockchain as a Service (BaaS) Platforms</title><link>https://www.pseudoyu.com/en/2021/09/07/blockchain_baas_platform/</link><pubDate>Tue, 07 Sep 2021 10:00:52 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/09/07/blockchain_baas_platform/</guid><description>Preface In my current work, I am responsible for the chaincode management portion of a Blockchain as a Service (BaaS) platform for Hyperledger Fabric. I&amp;rsquo;m quite interested in the architecture and implementation of BaaS platforms. As a platform that provides developers with one-stop creation, management, and maintenance of blockchain applications, what does its architecture look like?
This article is a summary and analysis of the BaaS platform architecture.
Introduction to BaaS Blockchain is a complex distributed system, especially enterprise consortium chain platforms like Hyperledger Fabric, where deployment and operation are extremely intricate.</description></item><item><title>Cross-Chain Technology Principles and Practice</title><link>https://www.pseudoyu.com/en/2021/09/06/blockchain_crosschain/</link><pubDate>Mon, 06 Sep 2021 15:34:40 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/09/06/blockchain_crosschain/</guid><description>Preface Currently, blockchain platforms are becoming increasingly diverse, including established ones like Hyperledger Fabric and Ethereum, as well as domestic platforms such as Hyperchain and Z-ledger. As blockchain application ecosystems grow more complex, single-chain performance faces certain bottlenecks. Consequently, collaboration and interaction between chains (information synchronization, sharing, contract interoperability, etc.) have become crucial aspects of chain and application ecosystem development. This article provides an overview of cross-chain technology concepts and</description></item><item><title>Hyperledger Fabric Go SDK Event Analysis</title><link>https://www.pseudoyu.com/en/2021/09/01/blockchain_hyperledger_fabric_gosdk_event/</link><pubDate>Wed, 01 Sep 2021 17:21:58 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/09/01/blockchain_hyperledger_fabric_gosdk_event/</guid><description>Preface Recently, while working on a cross-chain adapter, I needed to use the Go SDK to connect to a Fabric network on a local chain and listen for events. Therefore, I&amp;rsquo;ve decided to summarize the events supported by Fabric and the listening methods provided by the SDK.
Fabric Events Events are a way for clients to interact with the Fabric network. As shown in the image above, after executing a transaction in the Fabric network, because it is done asynchronously, the client cannot obtain the submitted transaction status (whether it was accepted).</description></item><item><title>Go Error Handling Summary and Best Practices</title><link>https://www.pseudoyu.com/en/2021/08/29/go_error_handling/</link><pubDate>Sun, 29 Aug 2021 00:19:42 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/08/29/go_error_handling/</guid><description>Preface Recently, I&amp;rsquo;ve been reviewing and summarizing the Go Advanced Training Camp by Mr. Mao Jian from GeekTime. This is a course that leans more towards engineering and principles, covering a wide range of knowledge points. Therefore, I&amp;rsquo;ve decided to start a series to record and summarize, which will also facilitate my own review and reference. This is the first article in the series, &amp;ldquo;Go Error Handling&amp;rdquo;.
Go Error Handling Mechanism Go Built-in Errors In Go, an error is simply a regular interface representing a value:</description></item><item><title>Blockchain Network Storage and Optimization Based on CNFS</title><link>https://www.pseudoyu.com/en/2021/08/20/blockchain_paper_cnfs/</link><pubDate>Fri, 20 Aug 2021 09:30:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/08/20/blockchain_paper_cnfs/</guid><description>Research on Cloud Computing Processing and Optimization of Distributed Computer Preface After a year of blockchain-related studies at HKU, I developed an interest in the field of distributed storage. My graduation project was also related to IPFS, as detailed in &amp;ldquo;Uright - Blockchain Music Copyright Management ÐApp&amp;rdquo;. Upon returning to the mainland, I had the opportunity to collaborate with Dr. Sun Ye from CNFS Protocol Lab to write this paper, &amp;ldquo;Research on Cloud Computing Processing and Optimization of Distributed Computer (Blockchain Network Storage and Optimization Based on CNFS)&amp;rdquo;, which deepened my understanding of distributed network storage and computing.</description></item><item><title>Detailed Explanation of Ethereum MPT (Merkle Patricia Tries)</title><link>https://www.pseudoyu.com/en/2021/08/16/blockchain_ethereum_mpt/</link><pubDate>Mon, 16 Aug 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/08/16/blockchain_ethereum_mpt/</guid><description>Preface Recently, I received a work assignment to change the data structure of the project&amp;rsquo;s smart contract state tree from a red-black tree to a trie, and to compare the performance of the two data structures. The Trie mainly refers to Ethereum&amp;rsquo;s official Java implementation ethereum/ethereumj, while the red-black tree is implemented by myself. This article is a record of the theoretical and practical comparison of the two data structures.</description></item><item><title>Common Data Structures for LeetCode Problem Solving (Go Edition)</title><link>https://www.pseudoyu.com/en/2021/05/29/algorithm_data_structure_go/</link><pubDate>Sat, 29 May 2021 00:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/05/29/algorithm_data_structure_go/</guid><description>Preface Recently, I&amp;rsquo;ve resumed solving LeetCode algorithm problems using Go. For work-related algorithm practice, the main focus is on honing problem-solving approaches and coding skills, rather than employing complex data structures as in algorithmic competitions. The commonly used data structures and operations are relatively few, but mastering them can significantly improve one&amp;rsquo;s code quality. I&amp;rsquo;ve compiled this summary for easy reference.
Data Structures Arrays Initialization // Initialize an array of size 10 with default value 0 nums := make([10]int) // Initialize a two-dimensional boolean array visited := make([5][10]int) Common Methods for i := 0; i &amp;lt; len(nums); i++ { // Access num[i] } Strings Initialization s1 := &amp;#34;hello world&amp;#34; // Create a multi-line string s2 := `This is a multiline string.</description></item><item><title>Uright - Blockchain Music Copyright Management ÐApp</title><link>https://www.pseudoyu.com/en/2021/05/10/uright_case_study/</link><pubDate>Mon, 10 May 2021 19:30:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/05/10/uright_case_study/</guid><description>Uright - Blockchain Music Copyright Management ÐApp Introduction A music copyright management Decentralized Application (ÐApp) based on Angular+Solidity+Web3.js, applying technologies such as IPFS, ENS, and Oracles, deployed on Ethereum using Truffle.
The Uright decentralized application allows musicians (content owners) to register their works as &amp;ldquo;Manifestations&amp;rdquo; and record them on the Ethereum blockchain.
&amp;ldquo;Manifestations&amp;rdquo; present musicians&amp;rsquo; works as content fragments to prove authorship and ownership. This is accomplished through the &amp;ldquo;Manifestations&amp;rdquo; smart contract, which records the IPFS hash displaying the work&amp;rsquo;s content, title (planned additional metadata), and registration time.</description></item><item><title>BlockchainGuide - Blockchain Core Knowledge Base</title><link>https://www.pseudoyu.com/en/2021/04/03/blockchain_guide/</link><pubDate>Sat, 03 Apr 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/04/03/blockchain_guide/</guid><description>BlockchainGuide A continuously updated blockchain core knowledge base
Source Project | Read Online
Table of Contents
BlockchainGuide Fundamentals Blockchain Basics Bitcoin Ethereum Hyperledger Fabric Emerging Technologies IPFS Cross-chain BaaS Platforms Development Practice Programming Languages Development Tools Personal Projects Miscellaneous About Me Fundamentals Blockchain Basics Blockchain Fundamentals and Key Technologies Bitcoin Official Website Whitepaper (Chinese Translation) Source Code Bitcoin Core Technology Insights Ethereum Official Website Whitepaper Documentation Source Code Ethereum Core Technology Analysis Ethereum MPT (Merkle Patricia Tries) Explained Hyperledger Fabric Official Website Documentation Source Code Hyperledger Fabric System Architecture Detailed Explanation Hyperledger Fabric Network and Security System Analysis Hyperledger Fabric Go SDK Event Analysis Emerging Technologies IPFS Official Website Whitepaper Documentation Source Code IPFS Distributed Storage Protocol Analysis and Reflection IPFS Local Node Setup (Command Line) Blockchain Network Storage and Optimization Based on CNFS Cross-chain Cross-chain Technology Principles and Practice BaaS Platforms Introduction and Architecture of Blockchain-as-a-Service (BaaS) Platforms Development Practice Programming Languages Solidity Go Development Tools MetaMask Truffle Web3.</description></item><item><title>MySQL Fundamentals and Practice</title><link>https://www.pseudoyu.com/en/2021/03/29/database_mysql_basic/</link><pubDate>Mon, 29 Mar 2021 00:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/29/database_mysql_basic/</guid><description>Preface Databases are commonly used in both foundational learning and real enterprise business scenarios. There&amp;rsquo;s often a jest that daily work always revolves around CRUD operations. Proficiency in using mainstream relational databases is a fundamental skill for developers. This article will provide an overview of the basic knowledge and related operations of MySQL, a popular relational database, on the MacOS system for easy reference.
Overview of Data and Databases Data Fundamentally, data is a type of fact or observed result, a logical summary of objective matters, and a form and carrier of information.</description></item><item><title>Setting Up an IPFS Local Node (Command Line)</title><link>https://www.pseudoyu.com/en/2021/03/27/blockchain_ipfs_practice/</link><pubDate>Sat, 27 Mar 2021 18:46:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/27/blockchain_ipfs_practice/</guid><description>Preface In the previous article, &amp;ldquo;IPFS Distributed File Storage Principles&amp;rdquo;, we provided a detailed introduction to the design concepts, functions, working principles, and IPNS of the IPFS system. So, how do we set up an IPFS node locally?
This article demonstrates the setup of an IPFS node (command-line version) on the macOS 11.2.3 system, and performs actual operations on file uploading, downloading, network synchronization, pin, GC, IPNS, etc., to deepen the understanding of IPFS working principles.</description></item><item><title>Analysis and Reflections on IPFS Distributed Storage Protocol</title><link>https://www.pseudoyu.com/en/2021/03/25/blockchain_ipfs_structure/</link><pubDate>Thu, 25 Mar 2021 16:30:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/25/blockchain_ipfs_structure/</guid><description>Preface Recently, I&amp;rsquo;ve been working on a school Case Study project, which is a music copyright management project based on the Ethereum platform. It uses IPFS distributed file storage technology for uploading music works and copyright proof documents, mainly utilizing its deduplication feature to detect infringement. I became interested in the IPFS system and read the IPFS series articles on the QTech platform. I also consulted some related materials and</description></item><item><title>A Brief Analysis of Hyperledger Fabric Network and Security System</title><link>https://www.pseudoyu.com/en/2021/03/23/blockchain_hyperledger_fabric_network/</link><pubDate>Tue, 23 Mar 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/23/blockchain_hyperledger_fabric_network/</guid><description>Preface In the previous article, &amp;ldquo;Detailed Explanation of Hyperledger Fabric Architecture&amp;rdquo;, we provided a comprehensive interpretation and analysis of Fabric&amp;rsquo;s architecture and operational principles. As an enterprise-grade blockchain system, how does it construct networks based on complex business requirements? What security issues exist during its operation, and how does Fabric preventively address these issues through its mechanisms?
This article will illustrate how a simplified enterprise Fabric network is constructed through examples, and analyze its network and security system.</description></item><item><title>Detailed Explanation of Hyperledger Fabric System Architecture</title><link>https://www.pseudoyu.com/en/2021/03/20/blockchain_hyperledger_fabric_structure/</link><pubDate>Sat, 20 Mar 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/20/blockchain_hyperledger_fabric_structure/</guid><description>Preface As my graduation case study project was primarily based on the Ethereum public chain and lacked enterprise application scenarios, my previous understanding of Hyperledger Fabric was mostly limited to concepts such as its permission management mechanism, channels, and flexible smart contract writing. I had only a vague understanding of its architecture, the roles of various nodes, and operational mechanisms. Recently, while taking the course &amp;ldquo;FITE3011 Distributed Ledger and Blockchain&amp;rdquo; at HKU, the professor provided a detailed explanation of Hyperledger Fabric&amp;rsquo;s working principles, network setup, and chaincode-related knowledge.</description></item><item><title>COMP7103 Topic 3 Clustering</title><link>https://www.pseudoyu.com/en/2021/03/18/comp7103_topic3/</link><pubDate>Thu, 18 Mar 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/18/comp7103_topic3/</guid><description>COMP7103 Data Mining Topic 3 Clustering Cluster Analysis Finding groups of objects such that the objects in a group will be similar (or related) to one another and different from (or unrelated to) the objects in other groups
Application Understanding Group related documents for browsing, group genes and proteins that have similar functionality, or group stocks with similar price fluctuations Summarization Reduce size of large data sets Types of Clusterings Partitional Clustering A division data objects into non-overlapping subsets (clusters) such that each data object is in exactly one subset Hierarchical clustering A set of nested clusters organized as a hierarchical tree Other Distinctions Between Sets of Clusters Exclusive versus non-exclusive In non-exclusive clusterings, points may belong to multiple clusters Can represent multiple classes or &amp;lsquo;border&amp;rsquo; points Fuzzy versus non-fuzzy In fuzzy clustering, a point belongs to every cluster with some weight between 0 and 1 Weights must sum to 1 Probabilistic clustering has similar characteristics Partial versus complete In some cases, we only want to cluster some of the data Heterogeneous versus homogeneous Cluster of widely different sizes, shapes, and densities Well-separated clusters A cluster is a set of points such that any point in a cluster is closer (or more similar) to every other point in the cluster than to any point not in the cluster</description></item><item><title>COMP7801 Topic 4 Top-k</title><link>https://www.pseudoyu.com/en/2021/03/06/comp7801_topic4/</link><pubDate>Sat, 06 Mar 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/03/06/comp7801_topic4/</guid><description>Background Multidimensional Data Flat relational tables Multimedia feature vectors Data warehouse data Spatial data Text documents Attribute Types Attributes of multidimensional tuples may have variable types Ordinal (e.g., age, salary) Nominal categorical values (e.g., color, religion) Binary (e.g., gender, owns_property)Basic queries: range, NN, similarity Basic Queries (Range) selection query Returns the records that qualify a (multidimensional) range predicate Example: Return the employees of age between 45 and 50 and salary above $100,000 Distance (similarity) query Returns the records that are within a distance from a reference record.</description></item><item><title>COMP7801 Topic 3 Spatial Networks</title><link>https://www.pseudoyu.com/en/2021/02/27/comp7801_topic3/</link><pubDate>Sat, 27 Feb 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/27/comp7801_topic3/</guid><description>Background Network Distance In many real applications accessibility of objects is restricted by a spatial network Examples Driver looking for nearest gas station Mobile user looking for nearest restaurant Shortest path distance used instead of Euclidean distance SP(a,b) = path between a and b with the minimum accumulated length Challenges Euclidean distance is no longer relevant R-tree may not be useful, when search is based on shortest path distance Graph cannot be flattened to a one-dimensional space Special storage and indexing techniques for graphs are required Graph properties may vary directed vs.</description></item><item><title>COMP7103 Topic 2 Association Rules</title><link>https://www.pseudoyu.com/en/2021/02/25/comp7103_topic2/</link><pubDate>Thu, 25 Feb 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/25/comp7103_topic2/</guid><description>COMP7103 Data Mining Topic 2 Association Rules Market-Basket Model A general many-many mapping (association) between two kinds of things
A large set of items, e.g., things sold in a supermarket A large set of baskets, each of which is a small set of the items, e.g., the things one customer buys on one day Frequent Itemsets Support Support for itemset I (s(I)) = the number of baskets containing all items in I</description></item><item><title>Ethereum Core Technology Interpretation</title><link>https://www.pseudoyu.com/en/2021/02/20/blockchain_ethereum_basic/</link><pubDate>Sat, 20 Feb 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/20/blockchain_ethereum_basic/</guid><description>Preface Bitcoin, as a decentralized digital currency, has been extremely successful. However, limited by the Bitcoin script (which is not Turing complete and can only handle simple logic), it cannot process very complex business operations. Ethereum introduced smart contracts, allowing the concept of decentralization to be applied to a wider range of application scenarios, thus also being called blockchain 2.0. This article will interpret the core technologies of Ethereum. Any errors or omissions are welcome for discussion and correction.</description></item><item><title>Bitcoin Core Technology Interpretation</title><link>https://www.pseudoyu.com/en/2021/02/17/blockchain_bitcoin_basic/</link><pubDate>Wed, 17 Feb 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/17/blockchain_bitcoin_basic/</guid><description>Preface In the previous article &amp;ldquo;Blockchain Fundamentals and Key Technologies&amp;rdquo;, I outlined the basic knowledge and key technologies of blockchain. As Bitcoin is the most typical application of blockchain, this article will interpret the core technologies of Bitcoin. If there are any errors or omissions, please feel free to discuss and correct them.
Bitcoin System Bitcoin is a digital currency invented by Satoshi Nakamoto in 2009, mainly to counter the centralized banking system.</description></item><item><title>Blockchain Fundamentals and Key Technologies</title><link>https://www.pseudoyu.com/en/2021/02/12/blockchain_basic/</link><pubDate>Fri, 12 Feb 2021 12:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/12/blockchain_basic/</guid><description>Preface Recently, I&amp;rsquo;ve been taking the course &amp;lt;COMP7408 Distributed Ledger and Blockchain Technology&amp;gt; at HKU, which has given me a more systematic understanding of the basic concepts of blockchain. Combined with Professor Xiao Zhen&amp;rsquo;s public course &amp;ldquo;Blockchain Technology and Applications&amp;rdquo; from Peking University that I took previously, I&amp;rsquo;ve come to realize the vastness of the blockchain knowledge system. I plan to update a series of articles to systematically organize the knowledge of blockchain, Bitcoin, Ethereum, etc.</description></item><item><title>COMP7801 Topic 2 Spatial Data Management</title><link>https://www.pseudoyu.com/en/2021/02/06/comp7801_topic2/</link><pubDate>Sat, 06 Feb 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/02/06/comp7801_topic2/</guid><description>Spatial Data Management Concepts Spatial Data
Location data Check-in service Online Maps Location-based services Location tracking Traffic Data Spatial Databases
PostgreSQL with PostGIS Neo4J-spatial HadoopGIS Ingres GeoMesa Spatial Data Management
Spatial Database Systems Manage large collections of multidimensional objects (2D/3D) A spatial object Contains (at least) one spatial attributes that describes its location and/or geometry A spatial relation Is an organized collection of spatial objects of the same entity Spatial Data Representation</description></item><item><title>COMP7801 Topic 1b Database Indexing</title><link>https://www.pseudoyu.com/en/2021/01/30/comp7801_topic1b/</link><pubDate>Sat, 30 Jan 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/01/30/comp7801_topic1b/</guid><description>Database Indexing Concepts Indexing mechanisms used to speed up access to desired data Search Key An attribute or a set of attributes used to look up records in a file An index file consists of records (called index entries) of the form search key - pointer Index files are typically much smaller than the original file Two basic kinds of indices Ordered indices: search keys are stored in sorted order Hash indices: search keys are distributed across &amp;ldquo;buckets&amp;rdquo; using a &amp;ldquo;hash function&amp;rdquo; Good Index Index quality is evaluated by several factors Access types supported by the index efficiently records with a specified value in the attribute (equality query) or records with an attribute value falling in a specified range of values (range query) Access time – query response time Insertion time – data record insertion time Deletion time – data record deletion time Space overhead – size of the index file Classification of Indexes Primary index In a sequentially ordered file, the index whose search key specifies the sequential order of the file Secondary index an index whose search key specifies an order different from the sequential order of the file Also called non-clustered index Dense index Index record appears for every search-key value in the file Sparse Index Contains index records for only some search-key values Applicable when records are sequentially ordered on search-key Less space and less maintenance overhead for insertions and deletions Generally slower than dense index for locating records Good tradeoff: sparse index with an index entry for every block in file, corresponding to least search-key value in the block Primary and Secondary Indices Secondary indices have to be dense Indices offer substantial benefits when searching for records Index is much smaller than relation file (cheap scan) Index can be ordered (fast search) When a file is modified, every index on the file must be updated Updating indices imposes overhead on database modification Indexes should be used with care Sequential scan using primary index is efficient, but a sequential scan using a secondary index is expensive Each record access may fetch a new block from disk Multilevel Index If index does not fit in memory, access becomes expensive To reduce number of disk accesses to index records, treat 1st level of index kept on disk as a sequential file and construct a sparse index on it outer index – a sparse index on 1st-level index file inner index – the 1st-level index file If even outer index is too large to fit in main memory, yet another level of index can be created, and so on B+-Tree Index Files A dynamic, multi-level index Advantage automatically reorganizes itself with small local changes, in the face of insertions and deletions Reorganization of entire file is not required to maintain performance Disadvantage of B+-trees Extra insertion and deletion overhead, space overhead Advantages of B+-trees outweigh disadvantages, and they are used extensively Basic Properties Disk-based tree structure every node of the tree is a block and has an address (block-id) on the disk Multiway tree each node has multiple children (between n/2 and n, where n/2 is the order or degree of the tree) Therefore, at least 50% of the space in a node is guaranteed to be occupied (this rule may not apply to tree root) Balanced tree all paths from the root to a leaf have the same length guarantees good search performance (to be seen later) Disjoint partition of attribute domain into ranges each sub-tree indexes a range in the attribute domain the entries of a directory node define the separators between domain intervals leaf nodes store index entries and pointers to the relation file Non-Leaf Nodes in B+-Trees Each non-leaf node contains up to n-1 search key values and up to n pointers All non-leaf nodes (except root) contain at least n/2 pointers (n/2 is sometimes called the minimum fan-out or degree) Non leaf nodes form a multi-level sparse index on the leaf nodes.</description></item><item><title>COMP7103 Topic 1 Introduction</title><link>https://www.pseudoyu.com/en/2021/01/28/comp7103_topic1/</link><pubDate>Thu, 28 Jan 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/01/28/comp7103_topic1/</guid><description>COMP7103 Data Mining Topic 1 Introduction Decision-Support System (DSS)
A decision-support system (DSS) is a system that assists decision makers to make important decisions for an organization or business KDD and data mining are important components in many DSS&amp;rsquo;s Data and Knowledge
Data A collecion of facts about certain group of objects Pattern Certain characteristics of data that are frequently observed Knowledge Some general rules about the objects Data Warehouse</description></item><item><title>COMP7801 Topic 1a Relational Database</title><link>https://www.pseudoyu.com/en/2021/01/23/comp7801_topic1a/</link><pubDate>Sat, 23 Jan 2021 01:18:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/01/23/comp7801_topic1a/</guid><description>Relational Databases Structure of Relational Databases Basic structure Given sets D1, D2, &amp;hellip;, Dn A relation r is a subset of D1 x D2 x &amp;hellip;, x Dn A relation is a set of n-tuples (a1, a2, &amp;hellip;, an) where each ai Di Example
if customer-name = {Jones, Smith, Curry, Lindsay} customer-street = {Main, North, Park} customer-city = {Harrison, Rye, Pittsfield} Then r = {(Jones, Main, Harrison), (Smith, North, Rye), (Curry, North, Rye), (Lindsay, Park, Pittsfield)} is a relation over customer-name x customer-street x customer-city Attribute Types Each attribute of a relation has a name The set of allowed values for each attribute is called the domain of the attribute Relation Schema A1, A2, &amp;hellip;, An are attributes R = (A1, A2, &amp;hellip;, An ) is a relation schema E.</description></item><item><title>Common Data Structures for LeetCode Problem Solving (Java Edition)</title><link>https://www.pseudoyu.com/en/2021/01/01/algorithm_data_structure_java/</link><pubDate>Fri, 01 Jan 2021 00:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2021/01/01/algorithm_data_structure_java/</guid><description>Preface Recently, I&amp;rsquo;ve started solving algorithm problems on LeetCode. For job-related algorithm practice, the main focus is on honing problem-solving approaches and coding skills, rather than using complex data structures as in algorithm competitions. Therefore, the commonly used data structures and operations are not numerous. Proficient use of these can significantly improve one&amp;rsquo;s code quality. I&amp;rsquo;ve compiled this summary for easy reference.
Data Structures Array [] Initialization // Initialize an array of size 10 with default value 0 int[] nums = new int[10]; // Initialize a 2D boolean array boolean[][] visited = new boolean[5][10]; Common Methods // Generally, a non-empty check is performed at the beginning of a function, then elements are accessed using index if (nums.</description></item><item><title>xDeepFM for Recommender Systems</title><link>https://www.pseudoyu.com/en/2020/11/11/comp7404_group_project/</link><pubDate>Wed, 11 Nov 2020 16:30:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/11/11/comp7404_group_project/</guid><description>Preface eXtreme Deep Factorization Machine (xDeepFM)
This paper proposes a novel Compressed Interaction Network (CIN), which aims to generate feature interactions in an explicit fashion and at the vector-wise level.
Github Repository GitHub: xDeepFM_for_Recommender_Systems
Video Demo YouTube | Google Drive
Datasets Criteo Dataset. It is a famous industry benchmarking dataset for developing models predicting ad click-through rate, and is publicly accessible. Given a user and the page he is visiting, the goal is to predict the probability that he will clik on a given ad Running Environment I strongly recommmend that you use Anaconda to implement this project.</description></item><item><title>ICOM6045 Topic 1 Cryptography</title><link>https://www.pseudoyu.com/en/2020/10/21/icom6045_topic1/</link><pubDate>Wed, 21 Oct 2020 19:53:17 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/21/icom6045_topic1/</guid><description>ICOM6045 Fundamentals of E-Commerce Security Topic 1 Cryptography Definition Process of transforming information to make it unreadable to anyone except those possessing the key Purpose Data confidentiality Transpositions/Permutations An encryption in which the letters of the message are rearranged Function Try to break established patterns Example Columnar transposition Rearrangement of the characters of the plaintext into columns Based on characteristic patterns of pairs of adjacent letters, called digrams Analysis Compute the letter frequencies Break the text into columns by compare a block of ciphertext characters against characters successively farther away in the ciphertext.</description></item><item><title>ICOM6012 Topic 4 Transport Layer</title><link>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</link><pubDate>Tue, 20 Oct 2020 09:37:44 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 4 Transport Layer Actions Sender Get application layer message Determine segment header fields values Create segment Pass segment to IP Receiver Receive segment from IP Check header values Extract application layer message Demultiplexes message up to application via socket Services Provide logical communication between processes Run in end system Send side Break app messages into segment Pass to network layer Receive side Reassembles segments into messages Pass to application layer Protocols TCP Features Point-to-point One sender, one receiver Reliable, in-order byte system No message boundaries Full duplex data Bi-directional data flow in same connection MSS: maximum segment size (excluding header) Cumulative ACKs Pipelining TCP congestion and flow control set window size Flow Control Sender will not overwhelm receiver Congestion control Concepts Segment structure Sequence numbers Byte stream &amp;ldquo;number&amp;rdquo; of first byte in segment&amp;rsquo;s data Acknowledgements (ACKs) Seq # of next byte expected from other side Cumulative ACKs Procedure Connection-oriented Handshaking initializes sender, receiver state before data exchange TCP socket identified by 4-tuple Source IP Source Port # Dest IP Dest Port # Server host may support many simultaneous TCP sockets Web servers have different sockets for each connecting client (Non-persistent HTTP will have different socket for each request) Demux Receiver uses all four values to direct segment to appropriate socket 3-way handshake Connection setup Connection management Handshake Agree to establish connection Agree on connection parameters Retransmission Closing a connection Events Data received from application Create segment with seq # (a byte-stream number of first data byte in segment) Start timer if not already running Think of timer as for oldest unACKed segment Expiration interval: TimeOutInterval Timeout Retransmit segment that caused timeout Restart timer ACK received Update what is known to ACKed Start timer if there are still unACKed segment Shortcomings SYN DoS Attack Half-open TCP connections consume all the TCP connection resources SYN packet with a spoofed source address UDP Features</description></item><item><title>ICOM6012 Topic 3 Application Layer</title><link>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</link><pubDate>Mon, 19 Oct 2020 17:50:44 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 3 Application Layer Creating a Network App Run on different end systems Communication over network No need to write for network-core devices Client-Server Architecture (The Centralized Internet) Server Always-on host Permanent IP address Often in data centers (for scaling) Clients Contact, communicate with server May be intermittently connected May have dynamic IP addresses Don&amp;rsquo;t communicate directly with each other Peer-to-Peer (P2P) Architecture No always-on server</description></item><item><title>A Look at Tik-Tok</title><link>https://www.pseudoyu.com/en/2020/10/16/ecom6013_discussion_topic4/</link><pubDate>Fri, 16 Oct 2020 09:19:19 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/16/ecom6013_discussion_topic4/</guid><description>A Look at Tik-Tok Given there are many social media platforms already existing in US, what makes Tik-Tok so successful that it becomes a big enough threat to cause the US Government to act the way it did towards a commercial company (ignore political factors) Economically, at about 2016, US tech giants such as Facebook or Google mainly focused on long video platform instead of the short video platform. A company called Musical.</description></item><item><title>ECOM6013 Topic 8 Blockchain and Cybercurrency</title><link>https://www.pseudoyu.com/en/2020/10/09/ecom6013_topic8/</link><pubDate>Fri, 09 Oct 2020 11:01:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/09/ecom6013_topic8/</guid><description>ECOM6013 E-Commerce Technologies Topic 8 Blockchain and Cybercurrency Form of Money
Token money Physical token Value is lost without the token No intermediary is required for spending Requires faith in the issuer (a government or a bank) Notationary money Notation/entry in a ledger, passbook, or database Can&amp;rsquo;t be lost Requires an intermediary Requires faith in the maintainer of the ledger Hybrid money Requires both a token and a ledger account Can be lost Requires an intermediary Requires faith in the issuer Virtual money No token/ledger Can be lost No intermediary required No issuer, no government backing Digital money String of bytes (data) stored on a device Value is lost/stolen when devices fail/invaded Cybercurrency Bitcoin is the most influential one Based on blockchain Bitcoin</description></item><item><title>ICOM6012 Topic 2 The Big Picture</title><link>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</link><pubDate>Mon, 05 Oct 2020 09:06:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 2 The Big Picture The Internet: &amp;ldquo;nuts and bolts&amp;rdquo; view
Billions of connected computing devices Host = end system Running network apps Internet of things (IoT) Packet switches routers switchers Communication links Fiber, copper, radio, satellite Transmission rate: bandwidth Networks Collection of devices, routers, switches, links Managed by an organization Internet: &amp;ldquo;network of networks&amp;rdquo; Interconnected ISPs Protocols Control sending, receiving of messages Internet standards RFC: Requests for Comments IETF: Internet Engineering Task Force IEEE: Institute of Electronical &amp;amp; Electronic Engineering The Internet: a &amp;ldquo;service&amp;rdquo; view</description></item><item><title>COMP7404 Topic 3 Adversarial Search</title><link>https://www.pseudoyu.com/en/2020/10/05/comp7404_topic3/</link><pubDate>Mon, 05 Oct 2020 00:30:11 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/05/comp7404_topic3/</guid><description>COMP7404 Computational Intelligence and Machine Learning Topic 3 Adversarial Search A Multi-agent Competitive Environment
Other agents are planning against us Goals are in conflict (not necessarily) Game Definition
A game can be defined as s : States s0: Initial state Player(s) : Defines which player has the move Actions(s) : Returns a set of legal moves Result(s,a) : Defines the result of a move TerminalTest(s) : True when game is over, false otherwise Utility(s,p) : Defines the final numeric value for a game that ends in terminal state s for player p A game tree can be constructed Nodes are game states and edges are moves Tic-Tac-Toe Game Tree</description></item><item><title>COMP7404 Topic 2 Beyond Classical Search</title><link>https://www.pseudoyu.com/en/2020/10/04/comp7404_topic2/</link><pubDate>Sun, 04 Oct 2020 21:30:11 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/04/comp7404_topic2/</guid><description>COMP7404 Computational Intelligence and Machine Learning Topic 2 Beyond Classical Search Planning vs Identification
Planing: sequence of actions The path to the goal is the important thing Paths have various costs, depths Heuristics to guide, frontier to keep backups Identification: assignments to variables The goal itself is important, not the path Local Search can find solutions faster for specific types of identification problems
Local Search
Evaluate and modify one current state rather than systematically explore paths from an initial state Suitable for problems were all that matters in the solution state and not the path cost to reach it Although local search algorithms are not systematic they have two advantages Require very little memory Often find reasonable solutions in large spaces Local Search Algorithm</description></item><item><title>Mobile Payment Systems Case Study</title><link>https://www.pseudoyu.com/en/2020/10/01/ecom6013_discussion_topic3/</link><pubDate>Thu, 01 Oct 2020 22:25:19 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/01/ecom6013_discussion_topic3/</guid><description>Mobile Payment Systems Why has China been an ideal environment to support mobile payment systems Politically, payment licenses are controlled by government (relative financial institutions) and under strict regulation. So, tech giants like Alibaba who are qualified can increasingly develop their payment business in the early age. Plus, in the early stage of mobile payment, laws and rules are not so completed. Payment platform can utilize smart market strategies (like very high return rate) to attract more new potential users and enhance existing users’ engagement, which is effective in market expanding stage.</description></item><item><title>ECOM6013 Topic 7 E-Payment Systems</title><link>https://www.pseudoyu.com/en/2020/09/27/ecom6013_topic7/</link><pubDate>Sun, 27 Sep 2020 11:30:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/27/ecom6013_topic7/</guid><description>ECOM6013 E-Commerce Technologies Topic 7 E-Payment Systems Payment System Stakeholders&amp;rsquo; Priorities
Customer Low-risk Low-cost Refutable Convenience Reliable Merchants Low-risks Low-cost Irrefutable Secure Reliable Financial intermediaries Secure Low-risk Maximizing profit Government regulators Secure Trust Protecting participants and enforcing reporting Type of Payment Systems
Cash Cheque transfer Credit card Stored value Accumulating balance B2C Payment System
Credit cards Financial cybermediaries Electronic bill presentment and payment Smart cards Mobile payment Features
Make large purchases Will not pay with credit card or financial cybermediary Use financial EDI (Electronic Data Interchange) Pay for many purchases at once Likely that cloud-based payment gateway (or other Internet-based technology) will eventually take over completely!</description></item><item><title>ECOM6013 Topic 6 E-Commerce Security</title><link>https://www.pseudoyu.com/en/2020/09/26/ecom6013_topic6/</link><pubDate>Sat, 26 Sep 2020 15:46:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/26/ecom6013_topic6/</guid><description>ECOM6013 E-Commerce Technologies Topic 6 E-Commerce Security Good E-Commerce Security
Highest degree of security New technologies Organizational policies and procedures Industry standards and government law Other factors Cost of security vs. potential loss Security often breaks at weakest link The Tense Between Security and Other Values
Security vs. Easy of use More Secure -&amp;gt; More difficult to use + slower Security vs. Desire of individuals to act anonmously Basic E-Commerce Security Issues and Landscape</description></item><item><title>ECOM6013 Topic 5 Mobile Commerce</title><link>https://www.pseudoyu.com/en/2020/09/21/ecom6013_topic5/</link><pubDate>Mon, 21 Sep 2020 10:44:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/21/ecom6013_topic5/</guid><description>ECOM6013 E-Commerce Technologies Topic 5 Mobile Commerce Basic Principle of Mobile Technology
FDMA (Frequency Division Multiple Access) TDMA (Time Division Multiple Access) CDMA (Code Division Multiple Access) Fundamental Mobility: Cellphones
Cell Handover
4G vs. 5G
4G 10 ms 100 Thousand Connections / km^2 1 Gbps 5G &amp;lt; 1ms 1 Million Connections / km^2 20 Gbps E-Commerce vs. M-Commerce
E-Commerce Device: PC Network: Internet (HTTP) M-Commerce Device: Mobile devices Network Mobile carrier network WiFi Local frequency (RFID/NFC) Definition of M-Commerce</description></item><item><title>New iPad Air 4 (2020) Presence by Apple Inc.</title><link>https://www.pseudoyu.com/en/2020/09/18/ecom6013_discussion_topic2/</link><pubDate>Fri, 18 Sep 2020 01:25:19 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/18/ecom6013_discussion_topic2/</guid><description>E-Commerce Presence Look Around New iPad Air 4 (2020) Presence by Apple Inc Website Link
The iPad Air 4 (2020) got shown off at Apple&amp;rsquo;s September event held on September 16. There is a specific designed website (mobile version included) for this product. I&amp;rsquo;d like to do an analysis towards this very impressive E-Commerce presence.
Apple iPad Air product line is mainly targeted to educators/students, staffs and kids/teenagers. So, the most premium features this new product wants to convey to customers is its fancy appearance and powerful A14 Bionic for creation, study and entertainment.</description></item><item><title>ECOM6013 Topic 4 Website Design, Testing and Maintenance</title><link>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic4/</link><pubDate>Wed, 16 Sep 2020 21:25:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic4/</guid><description>ECOM6013 E-Commerce Technologies Topic 4 Website Design, Testing and Maintenance Planing: The Systems Development Life Cycle
Systems analysis/planing Busisess objectives System functionalities Information requirements Systems design Building the system Testing Implementation Quality Consideration
Navigation Accessibility Scalability Reliability Maintainability Usability Compatibility and interoperability Security Readability In-House / Outsourcing (Hiring vendors to provide services)
Build own / outsourcing Host own / outsourcing (preferred) Implementation, Maintenance, and Optimization
Systems break down unpredictably
Ongoing maintenance Benchmarking Website Optimization</description></item><item><title>ECOM6013 Topic 3 E-Commerce Presence</title><link>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic3/</link><pubDate>Wed, 16 Sep 2020 20:25:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic3/</guid><description>ECOM6013 E-Commerce Technologies Topic 3 E-Commerce Presence Image You E-Commerce Presence
Idea Mission Target audience Intended market space Strategic analysis Marketing matrix Development timeline Preliminary budget About Money (e.g. Amazon&amp;rsquo;s e-commerce &amp;amp; Amazon&amp;rsquo;s AWS) Business models Revenue models About target audience Demographics Lifestyle Consumption patterns &amp;hellip; Marketplace Characteristics Size Growth Demographics Structure Content SWOT Analysis E-Commerce presence map Milestones Costs Simple website: US$5000 Small startup: US$25,000 tp US$50,000 Large corporate website: US$100,000 + to millions SWOT Analysis</description></item><item><title>ECOM6013 Topic 2 Internet and E-Commerce Infrasture</title><link>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic2/</link><pubDate>Wed, 16 Sep 2020 19:28:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/16/ecom6013_topic2/</guid><description>ECOM6013 E-Commerce Technologies Topic 2 Internet and E-Commerce Infrasture Internet
Interconnected network of thousands of networks and hundreds of millions of computers Links businesses, educational institutions, government agencies, and individuals World Wide Web (WWW)
One of the internet&amp;rsquo;s most popular services Provides access to billions, possibly trillions, of Web pages Evolution of Internet
Innovation phase (1961 - 1974) Institutionalization phase (1975 - 1995) Commercialization Phase (1995 - present) Packet Switching</description></item><item><title>COMP7404 Topic 1 Solving Problems by Searching</title><link>https://www.pseudoyu.com/en/2020/09/16/comp7404_topic1/</link><pubDate>Wed, 16 Sep 2020 00:28:11 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/16/comp7404_topic1/</guid><description>COMP7404 Computational Intelligence and Machine Learning Topic 1 Solving Problems by Searching Types of Search
Uninformed Search (Know nothing about the problem except definition) Informed Search (know something more like how close to the goal) Local Search (Randomly initilize a state and make it better, e.g. Deep Learning) Constraint Satisfaction Problems (Know more about the problem) Adversarial Search (have an opponent, e.g. chess, star craft game) Is Search the same as Unsupervised/Supervised Learning?</description></item><item><title>ICOM6012 Topic 1 Overview</title><link>https://www.pseudoyu.com/en/2020/09/09/icom6012_topic1/</link><pubDate>Wed, 09 Sep 2020 20:22:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/09/icom6012_topic1/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 1 Overview Internet&amp;rsquo;s Birthday: Sept. 2 or Oct. 29, 1969.
ARPANET (1969 -) TCP protocol in 1974 &amp;ldquo;Internet = Internetworking&amp;rdquo; NSFNET (1986 -) The Internet (late 1980s) Some Interesting Topics about Internet (More than Technical)
Who controls the Internet? What is Net Neutrality? A TikTok Ban Is Overdue Zoom’s stock surges 41% after earnings beat, adding over $37 billion in market cap Evolution of Computers</description></item><item><title>Puma Goes Omni Case Study</title><link>https://www.pseudoyu.com/en/2020/09/08/ecom6013_discussion_topic1/</link><pubDate>Tue, 08 Sep 2020 23:30:19 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/08/ecom6013_discussion_topic1/</guid><description>Puma Goes Omni About Puma Puma Official Website
A Fancy Presentation
Slogan: &amp;ldquo;Run The Streets. Do You.&amp;rdquo;
The third largest sportswear manufacture in the world. (2018)
The company was founded in 1948 by Rudolf Dassler.
Building a Centralize Website Restructuring Strategy
Replacing multiple e-commerce sites on different platform Unifying content and product strategies Building multiple teams in different regions, separate tasks Content Management System (CMS)
&amp;ldquo;Database software program specifically designed to manage structures, unstructured data and objects in a Website environment.</description></item><item><title>ECOM6013 Topic 1 Introduction to E-Commerce Technology</title><link>https://www.pseudoyu.com/en/2020/09/06/ecom6013_topic1/</link><pubDate>Sun, 06 Sep 2020 04:28:28 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/06/ecom6013_topic1/</guid><description>ECOM6013 E-Commerce Technologies Topic 1 Introduction to E-Commerce Technology Discussion Topic #1: Puma Goes Omni
What is the purpose of Puma&amp;rsquo;s content management systems? Why did Puma build a single centralized website rather than continue with multiple websites serving different countries and regions? [choosen] What social media sites does Puma use, and what do they contribute to Puma&amp;rsquo;s marketing effort? Case Study
Alibaba Singles&amp;rsquo; Day 2019
Core E-Commerce Technologies Introduction to E-Commerce Technology Internet and E-Commerce Infrasture E-Commerce Presence and Development Life Circle Web Design, Implementation and Testing Introduction to Mobile Commerce Internet and E-Commerce Commerce Electronic Payment Systems Cybercurrency, Bitcoin and Blockchain Emerging Technology &amp;amp; Cloud Computing and IoT Artificial Intelligence, Machine Learning and E-Commerce Trends E-Commerce and Data Science</description></item><item><title>WeChat Mini Program Cloud Development Project: What to Eat?</title><link>https://www.pseudoyu.com/en/2020/04/05/mini_program_dev/</link><pubDate>Sun, 05 Apr 2020 23:40:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/04/05/mini_program_dev/</guid><description>WeChat Mini Program Cloud Development Project: What to Eat? Project GitHub
Development Details Too lazy&amp;hellip; To be updated
Cloud Development Features Experimented with WeChat&amp;rsquo;s official cloud development functionality, eliminating the need for self-hosted servers and resolving the issue of large images that couldn&amp;rsquo;t be saved locally (exceeding the mini program&amp;rsquo;s upload size limit)
Preview Experience QR Code</description></item></channel></rss>