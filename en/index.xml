<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pseudoyu</title><link>https://www.pseudoyu.com/en/</link><description>Recent content on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 02 Jul 2024 06:12:47 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 WebP Cloud 与 Cloudflare WAF 为你的图床添加隐私和版权保护</title><link>https://www.pseudoyu.com/en/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/</link><pubDate>Tue, 02 Jul 2024 06:12:47 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/</guid><description>前言 在「从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）」一文中，我用 Cloudflare R2 搭建了一个免费的图床系统，并通过 WebP Cloud 进行图</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在「<a href="https://www.pseudoyu.com/en/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/">从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）</a>」一文中，我用 Cloudflare R2 搭建了一个免费的图床系统，并通过 <a href="https://webp.se/">WebP Cloud</a> 进行图片优化。</p>
<p>在使用 WebP Cloud 的过程中，我发现它还提供了自定义 Proxy User Agent、水印等功能，于是萌生了一个想法，是不是可以通过 WebP Cloud 对我的图床源站链接进行保护，使 WebP Cloud 的代理链接成为访问我所有图片的唯一入口，并统一添加我的专属版权水印。</p>
<p>本文是对这一实践的记录，也算是图床搭建番外篇了。</p>
<h2 id="需求分析">需求分析</h2>
<p><img src="https://image.pseudoyu.com/images/webp_proxy_info.png" alt="webp_proxy_info"></p>
<p>我目前的图床方案是将图片都托管在 Cloudflare R2 上，并且通过 WebP Cloud 这一强大的图片代理工具进行访问优化，但其实使用代理链接 <code>image.pseudoyu.com</code> 与源站链接 <code>images.pseudoyu.com</code> 都可以访问我的图片，只是前者被优化过，后者则是我保存的原图。</p>
<h3 id="隐私保护">隐私保护</h3>
<p>事实上我们通过手机、数码相机等设备拍摄的照片都会携带 EXIF(EXchangeable Image File Format) 信息，通常会包含拍摄设备、时间和地点等敏感信息，我们可以通过一些技术方式手动去除这些元数据，但操作十分繁琐且容易遗漏。</p>
<p><img src="https://image.pseudoyu.com/images/webp_exif_remove.png" alt="webp_exif_remove"></p>
<p>我查阅了一下 WebP Cloud 的文档，发现它果然提供自动擦除 EXIF 信息的功能，无须额外配置操作，但其实访客依然可以可以通过 Cloudflare R2 暴露出的源站信息访问到原图，为了避免这一点，我需要限制用户只能通过 WebP Cloud 代理链接进行请求，访问 Cloudflare R2 源站链接时获取不到任何有用信息。</p>
<h3 id="版权保护">版权保护</h3>
<p><img src="https://image.pseudoyu.com/images/randy_pic_copyright.png" alt="randy_pic_copyright"></p>
<p>之前在推上看到 Randy 自己拍的 desk setup 图被盗用的经历。</p>
<p>而自己也玩一些摄影，虽没什么特别的商业价值，但终究是自己的作品，理应保护版权，因此我想在图片上统一添加自己的版权水印，以防止被他人盗用。</p>
<h2 id="实现方案">实现方案</h2>
<p>需求清晰了，其实主要分为两部分：</p>
<ol>
<li>让用户只能通过 WebP Cloud 代理链接访问到我的图片，禁止直接访问原图链接</li>
<li>在 WebP Cloud 代理层面为所有的图片统一自动添加自己的版权水印，无须手动操作</li>
</ol>
<p>以下是我的实现方案与详细步骤。</p>
<h3 id="webp-自定义-user-agent--cloudflare-waf">WebP 自定义 User Agent + Cloudflare WAF</h3>
<p>和 <a href="https://webp.se/">WebP Cloud</a> 的开发者 <a href="https://x.com/n0vad3v">Nova Kwok</a> 聊了一下，发现 WebP Cloud 提供了自定义「Proxy User Agent」的功能，并推荐在 Cloudflare WAF 中配置对应规则以保护图片安全，文档中有详细说明 &ndash; 「<a href="https://docs.webp.se/webp-cloud/security/#cloudflare">Security | WebP Cloud Services Docs</a>」。</p>
<h4 id="webp-cloud-配置">WebP Cloud 配置</h4>
<p>当我们访问互联网上的网页或图片链接时，请求通常会包含一个 User Agent 字段，一般包含浏览器版本等信息，网站可针对不同的 User Agent 进行一些特定逻辑处理。</p>
<p>WebP Cloud 默认会使用 <code>WebP Cloud Services/1.0</code> 作为值，也就是不论用户访问图片时使用的是什么终端设备和浏览器，请求到 Cloudflare R2 时都会被统一为 WebP Cloud 定义的 User Agent 值，而这个值又是用户可以自定义的。</p>
<p><img src="https://image.pseudoyu.com/images/webp_custom_user_agent.png" alt="webp_custom_user_agent"></p>
<p>因此，我们登录 WebP Cloud 的控制台，将「Proxy User Agent」字段设置为一个自定义值，如 <code>pseudoyu.com/1.0</code>。</p>
<h4 id="cloudflare-waf-配置">Cloudflare WAF 配置</h4>
<p><img src="https://image.pseudoyu.com/images/cloudflare_waf_intro.png" alt="cloudflare_waf_intro"></p>
<p><a href="https://developers.cloudflare.com/waf">WAF（Web Application Firewall）</a> 是 Cloudflare 提供的一个防火墙服务，可以自定义规则来限制特定请求以保护网站安全，登录 Cloudflare 后在左侧边栏点击「网站」，点击进入需要保护的域名，选择侧边栏「安全性」 - 「WAF」即可免费使用（注：不是最外层的账户级 WAF），免费账户可设定五个自定义规则。</p>
<p><img src="https://image.pseudoyu.com/images/waf_create_rule.png" alt="waf_create_rule"></p>
<p>点击「创建规则」，进入设置页面。</p>
<p><img src="https://image.pseudoyu.com/images/user_agent_protection_waf.png" alt="user_agent_protection_waf"></p>
<p>点击「表达式预览」右侧的「编辑表达式」，填入以下规则：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">(http.user_agent ne &#34;pseudoyu.com/1.0&#34;) and (http.host eq &#34;images.pseudoyu.com&#34;)
</span></span></code></pre></div><p>首先，需要把其中 <code>pseudoyu.com/1.0</code> 这部分填入上文在 WebP Cloud 中你自定义的 User Agent 值；另外，为了防止我在同一域名下的其他自部署服务的图片无法正常显示，我添加了 <code>(http.host eq &quot;images.pseudoyu.com&quot;)</code> 条件，即只对图床的访问链接生效，这部分需要替换为自己的图床域名 host。</p>
<p>并且在「选择操作」下拉选择「阻止」，这样会匹配我们的规则并阻止特定网络请求，编辑完成后点击「部署/保存」即可。</p>
<p>我使用的是目前 WebP Cloud 官方文档提供的<a href="https://docs.webp.se/webp-cloud/security/#cloudflare">推荐规则</a>，后续或许会针对新的功能有所调整，可以直接参考文档。</p>
<p><img src="https://image.pseudoyu.com/images/block_by_waf_example.png" alt="block_by_waf_example"></p>
<p>完成配置后，当我们再次访问以 <code>images.pseudoyu.com</code> 开头的源站链接时会被 WAF 拦截，例如：</p>
<p><a href="https://images.pseudoyu.com/images/new_mbp_setup.jpg">images.pseudoyu.com/images/new_mbp_setup.jpg</a></p>
<p>而经 WebP Cloud 代理过的链接则可以正常访问，例如：</p>
<p><a href="https://image.pseudoyu.com/images/new_mbp_setup.jpg">image.pseudoyu.com/images/new_mbp_setup.jpg</a></p>
<p>完美实现了我们的需求。</p>
<h3 id="使用-webp-cloud-为图片添加版权水印">使用 WebP Cloud 为图片添加版权水印</h3>
<p>经过了上文的操作，我们已经确保用户只能经过 WebP Cloud 代理链接访问到我们的图片了，接下来就是为图片添加版权水印。</p>
<p><img src="https://image.pseudoyu.com/images/webp_watermark_feature.png" alt="webp_watermark_feature"></p>
<p>同样是查阅了 WebP Cloud 的文档，发现它在「Visual Effects」模块中提供了「Watermark」功能，可以为图片添加自定义的水印，使用 <code>Fabric.js</code> 库实现，提供了可视化编辑的一些选项，还写了一篇有意思的博客 &ndash; 「<a href="https://blog.webp.se/dashboard-fabric-zh/">使用 Fabric.js 实现实时水印预览</a>」。</p>
<p><img src="https://image.pseudoyu.com/images/watermark_list_webp.png" alt="watermark_list_webp"></p>
<p>进入 WebP 控制台，选择左侧「Visual Effects」，并点击右上角「Create Watermark」，就可以进行一些自定义水印样式配置了。</p>
<p><img src="https://image.pseudoyu.com/images/pseudoyu_copyright.png" alt="pseudoyu_copyright"></p>
<p>这是我的配置，即在图片的底部中间添加一个浅灰色的 <code>@pseudoyu</code> 字样。</p>
<p><img src="https://image.pseudoyu.com/images/webp_purge_all_cache.png" alt="webp_purge_all_cache"></p>
<p>需要注意的是，WebP Cloud 会为用户缓存图片数据，因此若想要之前上传的图片也应用水印或更新了新的水印则需要在代理配置中点选「Purge All Cache」来清理缓存。</p>
<p><img src="https://image.pseudoyu.com/images/apply_watermark_webp.png" alt="apply_watermark_webp"></p>
<p>编辑完水印后，进入代理的详细配置页面，下拉到「Watermark Setting」模块，选取刚创建的水印，点击右上角「Save」即可。</p>
<p>效果就不单独展示了，本文所有配图都通过这种方式添加了水印。</p>
<h2 id="总结">总结</h2>
<p><img src="https://image.pseudoyu.com/images/webp_thoughts.png" alt="webp_thoughts"></p>
<p>使用 <a href="https://webp.se/">WebP Cloud</a> 才第三天，最开始一直以为只是一个类 CDN 图片加速访问工具，经过折腾后发现了很多有意思的地方，并且为个人免费用户提供的 Free Quota 足够到大家拥有更好的图片体验，也就是他们所坚持的「做正确的事」。</p>
<p>团队更多是做一些技术沉淀和实践，写了许多博客 &ndash; 「<a href="https://blog.webp.se/">WebP Cloud Services Blog</a>」，闲时读读也能感受到他们的热情，最近因为「<a href="https://www.pseudoyu.com/en/2024/07/01/weekly_review_20240701/">周报 #63 - 不愉快的订花经历、商家和消费者与日渐 AI 化的人</a>」这一篇中的经历而在思考「劣币驱逐良币」这一问题，我觉得坚持做正确的事不向商业做过多妥协的团队理应被更多人看到，理应过得更好，我人微言轻，仅以这些教程来让更多的人了解到他们。</p>
]]></content:encoded></item><item><title>当云服务器崩溃时，我是如何救援重要数据的</title><link>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</link><pubDate>Mon, 01 Jul 2024 15:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</guid><description>前言 周五的时候我在搬瓦工平台购买的 2C2G 服务器突然内核报错，连不上 ssh 也 无法重启。经过了迂回的各种抢救方案，终于救回了一千多张图床的的图片，心有余</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>周五的时候我在搬瓦工平台购买的 2C2G 服务器突然内核报错，连不上 ssh 也 无法重启。经过了迂回的各种抢救方案，终于救回了一千多张图床的的图片，心有余悸，记录一下救援过程，顺便折腾了一套新的图床方案。</p>
<h2 id="服务器救援">服务器救援</h2>
<p>这台服务器大约已经稳定运行了一年半，运行了我许多重要服务，还有我博客图床的一千多张无备份的图片通过 Docker Volume 持久化在主机上。</p>
<h3 id="服务器宕机">服务器宕机</h3>
<p>其实我至今仍不知道出了什么问题，早上刚好需要更新服务器上的我运行的 RSSHub 实例的镜像版本，于是想着干脆把所有服务都更新到最新吧，于是一通 <code>docker pull</code> 和 <code>docker-compose</code> 重启操作，前面的都没什么问题，直到最后一个服务突然启动容器失败，报了一个类似 <code>not enough space</code> 的错误，我心想着可能是下载的镜像太多了导致磁盘满了，于是又一通 <code>docker image prune --all</code>、<code>docker volume prune</code> 和 <code>docker system prune</code> 操作，释放出了接近 10G 的空间，重试，依然不行。</p>
<p>作为一个有且仅有一点服务器运维经验的开发来说，我第一反应想到的就是重启，未曾想，这才是一天噩梦的开始。</p>
<p><img src="https://image.pseudoyu.com/images/uptime_kuma_status.png" alt="uptime_kuma_status"></p>
<p>没想到重启后我的 Uptime Kuma 提醒我所有服务都下线了，也无法再通过 ssh 连上机子了。</p>
<p><img src="https://image.pseudoyu.com/images/bwg_kernel_panic.jpg" alt="bwg_kernel_panic"></p>
<p>于是赶紧登录到搬瓦工的线上控制台，发现内核报错，无法启动，强制重启也依然不生效，于是先提交了一个工单，并且赶紧求援我的 DevOps 朋友们。</p>
<h3 id="拯救数据">拯救数据</h3>
<p><img src="https://image.pseudoyu.com/images/ask_strrl_about_vps.png" alt="ask_strrl_about_vps"></p>
<p>STRRL 说应该 <code>rootfs</code> 出现了问题，不过鉴于这种小云厂商并没有提供什么高级启动等额外的功能，只能等官方技术支持处理了，但想到我有一年半毫无备份的图床数据在上面，依然很慌，于是开始想办法抢救数据。</p>
<p><img src="https://image.pseudoyu.com/images/bwg_vps_snapshot.png" alt="bwg_vps_snapshot"></p>
<p>研究了一下搬瓦工的控制台，发现它提供一个大约每周一次的备份，并且可以一键将备份转为快照，最近的一次在 6.22 日，还好。我首先想到的是直接通过快照恢复机器，如果是我今天的操作导致了什么配置问题，那理应一周前的快照是能正常启动的，于是满怀信心地等待了十几分钟的快照恢复，结果报了同样的错误。依然不死心，把 6.15 的备份也恢复了一下，还是不行。</p>
<p>这下意识到了事情的严重性，甚至做好了数据全部丢失的最坏打算，但在等待工单回复时开始检索类似情况，最后发现搬瓦工机器的快照镜像是可以下载的，并找到了一篇「<a href="https://www.bandwagonhost.net/7558.html">搬瓦工备份快照镜像文件 .tar.gz 下载解压后打开 .disk 文件查看数据教程</a>」。</p>
<p>于是先下载了快照镜像，得到了一个 <code>.disk</code> 文件，这个文件应该是一个专属格式，看教程可以通过 Virtual Box 的命令行工具 <code>vboxmanage convertfromraw</code> 来进行格式转换，但官网下载后发现并不支持 M 芯片的 Mac，于是又在之前的老 19 款 Intel Mac 上安装并且执行转换，得到了一个 <code>.vmdk</code> 文件。</p>
<p>转换完成后将这个 <code>.vmdk</code> 作为一个磁盘挂载到 Virtual Box CentOS 虚拟机上，发现依然报同样的错误。</p>
<p><img src="https://image.pseudoyu.com/images/7zip_format.png" alt="7zip_format"></p>
<p>于是另辟蹊径，发现 <a href="https://arc.net/l/quote/tirhqejc">7-Zip</a> 软件支持常见虚拟机格式的解压，但客户端只有 Windows 版本。</p>
<p><img src="https://image.pseudoyu.com/images/x7z_vmdk_x.jpg" alt="x7z_vmdk_x"></p>
<p>虽然按理说可以在 macOS 上使用命令行版本 <a href="https://github.com/p7zip-project/p7zip">p7zip</a> 来执行，但我解压时会报错，所以又堵住了一条路，想了个曲线救国的方式，通过虚拟机下载了一个 Win11，下载了 7-Zip 软件直接解压成功了。</p>
<p><img src="https://image.pseudoyu.com/images/fuse_load_img.png" alt="fuse_load_img"></p>
<p>问题又来了，得到的是 <code>1.img</code>、<code>2.img</code> 这样格式的 Linux 磁盘镜像文件，macOS 上无法加载，又问了我司运维朋友，折腾了一下 fuse 但是还是无法加载。</p>
<p><img src="https://image.pseudoyu.com/images/ufs_load_img_log.jpg" alt="ufs_load_img_log"></p>
<p>期间倒也是有好消息，在全网搜罗的时候发现了一个数据恢复软件 UFS Explorer，尝试了一下可以正常加载，只是超过 768k 的文件则需要付费，当然没打算，只是看到文件确实是可以识读之后心里就安心了许多，至少数据还在，剩下都是技术问题了。</p>
<p><img src="https://image.pseudoyu.com/images/bwg_reply.png" alt="bwg_reply"></p>
<p>期间搬瓦工的工单也回复了，让我重启或重装试试。。。🤣</p>
<p><img src="https://image.pseudoyu.com/images/str_orbstack_img.png" alt="str_orbstack_img"></p>
<p>放弃了工单沟通，继续抢救我 <code>img</code> 中的数据，万能的 STRRL 告诉我 OrbStack 可以启动一个 Linux Machine，然后可以把这个 <code>img</code> 作为一个 Linux 磁盘挂载上去。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo losetup -fP 1.img
</span></span><span class="line"><span class="cl">mkdir /mnt/bwg
</span></span><span class="line"><span class="cl">sudo mount /dev/loop0 /mnt/bwg
</span></span></code></pre></div><p>通过以上命令成功把我的 <code>img</code> 磁盘镜像挂载到了 OrbStack 的 Ununtu 机器上。</p>
<p><img src="https://image.pseudoyu.com/images/rescue_image_from_bwg_img.png" alt="rescue_image_from_bwg_img"></p>
<p>当我看到我的图片出现在命令行输出结果时，感动得都快流泪了 😭。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tar -czvf cheverto_chevereto_images.tar.gz cheverto_chevereto_images/
</span></span><span class="line"><span class="cl">rsync -acvP ./cheverto_chevereto_images.tar.gz pseudoyu@<span class="o">[</span>yu-mac-studio<span class="o">]</span>:~/Downloads/
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/rsync_service.jpg" alt="rsync_service"></p>
<p>紧接着赶紧打个 <code>tar</code> 包，然后通过 <code>rsync</code> 传到了我本地的 Mac 上，本机解压后，终于看到了我所有的图片。</p>
<h3 id="迁移图床系统至-r2">迁移图床系统至 r2</h3>
<p>但由于这一次的遭遇，不再信任服务器单机部署的图床稳定性了，花了半天折腾了一套新的免费图床系统 —— 「<a href="https://www.pseudoyu.com/en/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/">从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）</a>」。</p>
<p><img src="https://image.pseudoyu.com/images/rclone_service.jpg" alt="rclone_service"></p>
<p>至于现有的数据传到 <code>r2</code>，我则是使用了 <code>rclone</code> 来进行上传，彻底完成迁移，大功告成！</p>
<h2 id="总结">总结</h2>
<p>也开始重新考虑了服务部署、数据安全等问题，准备还是将一些重要的数据上云而不再依赖单机，也继续把一些服务迁移到 <a href="https://fly.io">fly.io</a><a href="https://zeabur.com/">、Zeabur</a> 等 serverless 平台。</p>
]]></content:encoded></item><item><title>周报 #63 - 不愉快的订花经历、商家和消费者与日渐 AI 化的人</title><link>https://www.pseudoyu.com/en/2024/07/01/weekly_review_20240701/</link><pubDate>Mon, 01 Jul 2024 08:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/07/01/weekly_review_20240701/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-06-24 到 2024-06-30 这周生活的记录与思考。 一次不愉快的订花和维权体验，思考了商家与消费者的关系，以及</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240701_new.png" alt="weekly_review_20240701_new"></p>
<p>本篇是对 <code>2024-06-24</code> 到 <code>2024-06-30</code> 这周生活的记录与思考。</p>
<p>一次不愉快的订花和维权体验，思考了商家与消费者的关系，以及 AI 越来越拟人化的现在，人却似乎变得 AI 化了的现象；周五的时候服务器突然 Kernel Panic，无法重启，经过了迂回的各种抢救方案，终于救回了一千多张图床的的图片，心有余悸，顺便折腾了一套新的图床方案；想到上一次写博客搭建教程已经是两年多前，不论是内容还是组件都经过了许多变化，于是重新开启系列。</p>
<h2 id="一次不愉快的订花经历">一次不愉快的订花经历</h2>
<p><img src="https://image.pseudoyu.com/images/refund_flower.jpg" alt="refund_flower"></p>
<p>周末发生了一件非常不愉快的事（甚至现在依然还因商家拒绝上门取货而处理中）。</p>
<p>6 月 30 日是我和学姐在一起一周年的日子，我早上在饿了么外卖平台订购了一束花，原本是一件挺开心的事，结果送到学姐那的时候，花上还附了一张卡片，上面写着“to 小语宝贝”和一些私人的祝福，但我并没有要求附赠卡片。</p>
<p>想来是放错了卡片，所幸收货时我也在现场，不至于引起什么误会或是矛盾，当时有些扫兴但也还不至多生气，于是联系了商家退货。</p>
<p>我跟商家描述了情况，表示理解可能是花艺师放错了，但因为送花本来就是情绪价值大于花本身的一件事，我并不想要这样一束似乎原意是“送给别人”的花了，然而商家的态度很恶劣。</p>
<blockquote>
<p>“放错了你把卡片丢掉就好了”</p>
<p>“我又没做错为什么要退”</p>
<p>“那你联系客服维权好了”</p>
</blockquote>
<p>我自诩是一个情绪稳定的人，也多少对身边的人和这个世界善意相待，不会为难因恶劣天气延误的快递员、送到的外卖洒了也从未要求小哥的赔偿或是退款，但依然被商家的态度气到了。</p>
<p>我可以理解花艺师的疏忽，也并不对花本身有什么不满，只是感到可悲，商家做的是“花艺”的生意，理应明白送花的人送的不仅仅是花，更多的是一份心意的传递或是情绪的表达，而她的态度让我感到这份心情并没有被尊重。</p>
<p>似乎对于这位卖花的店家来说，花只是花，是流水线上生产出的人工造物，送花人的忐忑、收花人的羞怯或是惊喜似乎都无关紧要。</p>
<p>当然，我理解这作为商业当然有成本和营收的考量，可这依然刺痛了我仍留存的几分理想主义，没有这些心情加持的花艺，再美丽也不过是一堆很快就会腐朽的有机物罢了。</p>
<h3 id="商家与消费者">商家与消费者</h3>
<p>于是我联系了客服，一番沟通后才知道为什么商家那么有恃无恐。原来在饿了么平台上，花是属于无法退货的商品，我理解本意或许是由于鲜花是人工制作的易腐商品，退货后也无法二次销售。</p>
<p>我联想到前一阵子关于消费者利用拼多多平台“仅退款”机制伤害商家的争议，这次经历又何尝不是商家在利用平台规则来伤害消费者呢？</p>
<h3 id="人的-ai-化现象">人的 AI 化现象</h3>
<p>这事还没结束，和饿了么客服的对话更是让我有些无语。</p>
<blockquote>
<p>我：（再一次详细描述了情况以及商家的态度问题），我想要申请退货，但商家拒绝了</p>
<p>客服：请问花是没问题的对么？</p>
<p>我：&hellip;你要这么说可能也没错，但我不想要了。</p>
<p>客服：我们鲜花按照平台政策是不能退款的呢~</p>
<p>我：但附赠了给别人的卡片，这不是我想要的花。</p>
<p>客服：那我联系商家给您重新发一张卡片可以么？</p>
<p>我：&hellip;</p>
</blockquote>
<p>我现在还对这段对话有些哭笑不得，都说 ChatGPT 出来之后 AI 越来越像人了，AGI 或许也不远了，但我倒是觉得在此之前，人是越来越 AI 化了，似乎对于他们来说把对面当作一个有情绪有脑子的人看待都已经是一件很难的事了。</p>
<p>有时候我常常会思考现在的人是怎么了，以制作鲜花为业的人不好好对待花，也无法设想如果自己收到爱人送的一束写着别人名字的花的不良情绪；以解决用户问题为业的平台客服不好好听用户讲话，只知道模板化地回复。</p>
<p><img src="https://image.pseudoyu.com/images/flower_from_beijing.png" alt="flower_from_beijing"></p>
<p>想起在北京时长期会订的一位花艺师，因为是定制花束，比起平台上的贵上许多，但会问问我的故事和想要表达的情感，会记得我们把花放在花瓶的习惯，也能将我各种对花的小想法一一实现。当时只是对花艺师小姐姐的用心印象深刻，现在才发现，好好讲话，用心做好自己的工作，原来在当今社会已经是一件需要奢求的事了。</p>
<p>那是一家并不大的店，从配货、选花、做花到配送只有店主一个人，而我这次订的这家在杭州算是个网红店，常居各种平台榜首，销量 9000+，劣币驱逐良币，真是悲哀。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="博主">博主</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV19w4m1Y7o1">程序员转行金融科技 4 年，像又读了一次大学，不写代码了？| 年龄焦虑 | 未来计划 | 冒名顶替效应 | Life updates</a></li>
</ul>
<p>落拓学长回来了！！！四五年前一直看他的视频，甚至人生走向都是沿着他当时说有些遗憾自己未选择的区块链方向，一直以他为目标。</p>
<p>后来他转行 fintech，去了 Jane Street，这几年也不断在选择新的挑战，慢慢停更了。回来后聊了学习成长、焦虑与冒名顶替综合征，这些也都是这几年慢慢步入工作的我开始思索的东西，依然有被激励到！</p>
<p><del>这就继续学 Rust 去了。</del></p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/34453257/"><strong>Normal People</strong></a>，很喜欢这个英剧，这两天看其他书的时候突然想到了这本，打算补一下原著。</li>
<li><a href="https://book.douban.com/subject/35754687/"><strong>What My Bones Know</strong></a>，去年看了一小半，这两天想到关于家庭和心理疗愈的问题，每天看一章左右。</li>
<li><a href="https://book.douban.com/subject/33445309/"><strong>阿特拉斯耸耸肩</strong></a>，读者送的，读了前两张章了。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://danilafe.com/blog/blog_microfeatures/">Microfeatures I Love in Blogs and Personal Websites</a></li>
<li><a href="https://www.boyilu.com/lost-desire-to-express">失去的表达欲</a></li>
<li><a href="https://innei.in/posts/tech/a-universal-method-about-show-electron-native-and-web-custom-menus">一种在 Electron 和 Web 环境下显示原生及自定义菜单的通用方法</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV19w4m1Y7o1">程序员转行金融科技 4 年，像又读了一次大学，不写代码了？| 年龄焦虑 | 未来计划 | 冒名顶替效应 | Life updates</a></li>
<li><a href="https://www.bilibili.com/video/BV1nE421N77f">vlog #62｜女程序员下班后的学习记录｜开坑 SwiftUI｜关于时间管理的想法｜在读《被讨厌的勇气》｜日常英语学习｜香港团建 😁</a></li>
</ul>
]]></content:encoded></item><item><title>从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）</title><link>https://www.pseudoyu.com/en/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/</link><pubDate>Sun, 30 Jun 2024 14:12:47 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/</guid><description>前言 在「2024 年了，我的博客有了什么变化」一文中，我介绍了自己使用 Serverless 平台和一些开源项目搭建的博客系统，也开启了这个系列教程来记录搭建和部署</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在「<a href="https://www.pseudoyu.com/en/2024/06/29/what_changed_in_my_blog_2024/">2024 年了，我的博客有了什么变化</a>」一文中，我介绍了自己使用 Serverless 平台和一些开源项目搭建的博客系统，也开启了这个系列教程来记录搭建和部署全过程。</p>
<p>本篇是关于图床系统的解决方案。</p>
<p><strong>[2024-07-02 更新]</strong></p>
<p>新写了一篇教程实现了图床添加隐私和版权保护，算是番外篇。</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/">使用 WebP Cloud 与 Cloudflare WAF 为你的图床添加隐私和版权保护</a></li>
</ul>
<h2 id="图床方案迭代">图床方案迭代</h2>
<p>其实在博客搭建之初因为内容并不多，也比较少有插图，所以大部分的图片都是直接放在我的 Hugo 博客仓库的 <code>static</code> 目录下，也没觉得有什么不便，直到有一段时间需要多平台发布，复制了博客的 markdown 源文件后，因为所有图片都是博客的相对路径，导致图片全部无法显示，需要把图片一张张重新上传，十分繁琐。</p>
<p>那时才开始了解到图床（Image hosting）这个概念，把图片上传到一个专用的存储服务并通过公开链接使用，不但可以统一进行管理，还能有效减少博客仓库文件的体积，提高网站的加载速度。</p>
<h3 id="github--jsdelivr-cdn--picgo">GitHub + jsDelivr CDN + PicGo</h3>
<p>一开始我是新建了一个 GitHub 仓库「<a href="https://github.com/pseudoyu/image-hosting">GitHub - image-hosting</a>」，通过 PicGo 直接上传到仓库，并在 PicGo 返回时的图片路径改为 <a href="https://www.jsdelivr.com/">jsDelivr</a> CDN 加速后的链接，其实倒也还算方便，还多了一份版本管理。</p>
<p>不过好景不长， jsDelivr 遭到了 DNS 污染，被大陆封锁，以至于我的博客图片在很长一段时间完全无法加载，也让我对这种纯依赖 CDN 的方式有了一些顾虑，再加上 GitHub 托管图片是基于代码仓库，上传图片依赖的是代码提交，容易污染 commit 记录，且终究算是一种滥用，万一账号/仓库访问有问题也容易丢失所有图片，于是开始寻找其他方案。</p>
<h3 id="阿里云-oss--picgo">阿里云 OSS + PicGo</h3>
<p>第二个想到的就是云服务商提供的对象存储了，像是 Amazon S3、阿里云 OSS 等都是云厂商提供的对象存储服务，在提供可访问的公开链接的基础上还多了权限控制、数据备份、拓展性等优势，在相对低成本的前提下提供了针对文件数据存储和管理的较优解决方案。</p>
<p>由于是想针对中国大陆用户进行访问优化，最终我选择了阿里云 OSS，配置不算复杂，同样是通过 PicGo 进行上传并转换为阿里云 OSS 的链接，在访问速度上有了明显的提升。</p>
<p><img src="https://image.pseudoyu.com/images/aliyunoss_invoice.jpeg" alt="aliyunoss_invoice"></p>
<p>不过由于多是按量计费，持续增长的成本对于非盈利的个人博客来说也是需要考虑的。23 年初有一阵子博客流量较大，月账单持续上涨，再加上阿里云 OSS 如果需要自定义访问域名则需要进行备案，我域名本身通过 Cloudflare 进行托管，并不考虑备案，所以在用了几个月后，还是考虑更换图床方案。</p>
<h3 id="chevereto--picgo">Chevereto + PicGo</h3>
<p>经过了一番调研，在我线路不错的搬瓦工服务器（CN2GIA DC6 机房）上使用 Docker 镜像部署了 <a href="https://github.com/rodber/chevereto-free">Chevereto</a> 的免费自部署版本，并将图片以 Docker Volume 的形式挂载在主机上。</p>
<p>Chevereto 的界面实话说风格有些老旧，还是古早的 php 服务，免费版也很久就不再维护升级，但胜在功能完备，同样可以使用 PicGo 对接 Chevereto 的 API 进行图片上传等操作，稳定性也不错，于是就这样用了一年半。</p>
<p>但自己对于自部署服务的稳定性和数据的珍贵性还是有些大意，前几天服务器突然挂了，内核报错直接无法重启，服务挂了倒还好说，但是我这一年半多的图片数据也无法导出，工单联系技术支持，一天只回复了我两次，一次让我重启，一次建议我聘请一个网络管理员排查。</p>
<p>只能自力更生，翻遍了网上各种方案，折腾了一天终于算是解决了，但这一次的教训让我对有重要数据的服务备份和自部署稳定程度都有了全新的认识，再加上想要重新部署的时候发现免费版镜像等已经下线，只剩一个按年付费的 License 版本，于是放弃了原方案。</p>
<h3 id="cloudflare-r2--webp-cloud--picgo">Cloudflare R2 + WebP Cloud + PicGo</h3>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_free_tier.png" alt="cloudflare_r2_free_tier"></p>
<p>于是重新转向了云服务厂商的对象存储，发现了赛博菩萨 Cloudflare 提供的 R2 对象存储这一服务，免费计划中有每月 10 GB 的存储容量，对于个人使用来说完全够用，大厂的服务与数据安全也有保障。</p>
<p>为了优化用户的访问，又使用了一个「<a href="https://webp.se/">WebP Cloud</a>」服务对 R2 的图片进行代理，在代理层面进一步减小图片体积，虽然对于国内用户来说速度肯定还是比不上阿里云 OSS 这种线路，但是在不用备案、稳定且免费的综合条件下，这是我能想到的最好的方案了。</p>
<p>在电脑端同样是通过 PicGo 客户端几乎一键上传并生成博客直接可用的 markdown 图片链接，配置完成后使用起来很顺滑。</p>
<h2 id="图床搭建说明">图床搭建说明</h2>
<p>Cloudflare R2 + WebP Cloud + PicGo 的方案尽管牵扯到了多个组件和平台，但所有操作都在 Free Plan 中，也是我最终选定的方案，下面将从零开始介绍如何搭建这个免费图床系统。</p>
<h3 id="cloudflare-r2">Cloudflare R2</h3>
<p>R2 是 Cloudflare 推出的免费对象存储服务，需要免费注册一个 <a href="https://www.cloudflare.com/zh-cn/">Cloudflare 账号</a>才能使用，注册登录后，点击左侧边栏的 R2 访问服务，但需要注意的是开通 R2 服务需要绑定信用卡（国内外主流信用卡皆可），但并不会扣费，主要是为了验证用户身份使用。</p>
<h4 id="创建图床-bucket">创建图床 Bucket</h4>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_interview.png" alt="cloudflare_r2_interview"></p>
<p>开通 R2 服务后，点击右上角「创建存储桶」按钮进行创建。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_create_bucket.png" alt="cloudflare_r2_create_bucket"></p>
<p>进入创建配置界面后，需要填写存储桶（Bucket）名称，建议有一些辨识度，后续在配置上传时会用到。</p>
<p>位置则选择「自动」，但可以额外多配置一个位置提示，由于我后续还将使用「<a href="https://webp.se/">WebP Cloud</a>」服务的美西机房进行图片代理优化，所以在此处选择的是「北美洲西部（WNAM）」，根据需求选其他区域也可以，但 Cloudflare 并不保证一定会分配到所指定的区域。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_create_done.png" alt="cloudflare_r2_create_done"></p>
<p>点击「创建存储桶」按钮即完成创建，此时我们已经可以向我们的「yu-r2-test」存储桶上传文件了，可以选择在网页直接上传文件或文件夹。</p>
<p>也可以使用 S3 API 进行上传，我们后续使用 PicGo 客户端进行上传就依赖这种方式，但需要进行一些额外配置，点击导航栏「设置」选项进行配置。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_config.png" alt="cloudflare_r2_config"></p>
<p>首先我们需要打开「R2.dev 子域」，这是为了后续访问图片时需要的公网地址，点击「允许访问」，并按照提示输入「allow」即可开启。</p>
<p><img src="https://image.pseudoyu.com/images/r2_dev_domain_allow.png" alt="r2_dev_domain_allow"></p>
<p>完成后会显示一个以 <code>r2.dev</code> 结尾的公网网址，即我们后续访问图片的网址。</p>
<h4 id="自定义图床域名可选">自定义图床域名（可选）</h4>
<p>但是分配的网址比较长，不易于记忆，我们可以通过「自定义域」来绑定我们的专属域名，点击「连接域」按钮。</p>
<p><img src="https://image.pseudoyu.com/images/r2_custom_domain_setup.png" alt="r2_custom_domain_setup"></p>
<p>输入自己想绑定的域名，如 <code>yu-r2-test.pseudoyu.com</code>，点击继续。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_r2_custom_domain.png" alt="cloudflare_r2_custom_domain"></p>
<p><img src="https://image.pseudoyu.com/images/r2_custom_domain_dns_wait.png" alt="r2_custom_domain_dns_wait"></p>
<p>连接域，并等待 DNS 解析生效即可。</p>
<p><img src="https://image.pseudoyu.com/images/r2_bucket_status.png" alt="r2_bucket_status"></p>
<p>完成后 bucket 状态处「公共 URL 访问」显示“已允许”，且「域」显示为我们刚自定义的域名即配置成功。</p>
<h4 id="配置-bucket-访问-api">配置 Bucket 访问 API</h4>
<p><img src="https://image.pseudoyu.com/images/yu_bucket_preview.png" alt="yu_bucket_preview"></p>
<p>当我们完成上述配置后，可以回到存储桶「对象」界面，上传一张示例图片，点开详情则会显示该图片的访问地址，此时我们就拥有了一个可访问的图床服务了。</p>
<p>但每次都要打开 Cloudflare 页面手动上传图片的方式显然不够便捷。R2 提供了 S3 兼容的 API，可以方便地使用一些客户端/命令行工具进行上传、删除等操作。</p>
<p><img src="https://image.pseudoyu.com/images/create_r2_api_token.png" alt="create_r2_api_token"></p>
<p><img src="https://image.pseudoyu.com/images/create_r2_api_key.png" alt="create_r2_api_key"></p>
<p>回到 R2 主页面，点击右上角「管理 R2 API 令牌」，进入后点击「创建 API 令牌」。</p>
<p><img src="https://image.pseudoyu.com/images/r2_apikey_conifg.png" alt="r2_apikey_conifg"></p>
<p>输入令牌名称，「权限」选择“对象读和写”并将此 API 指定之前所创建的 Bucket，这样最小化权限也保障数据安全，其余选项保持默认即可。</p>
<p><img src="https://image.pseudoyu.com/images/api_key_config_details.png" alt="api_key_config_details"></p>
<p>完成创建后会显示所有密钥，我们使用 PicGo 需要的是下面三个信息，不过因为只会显示一次，建议在密码管理软件或其他地方妥善保管好这些参数信息。</p>
<p>至此，我们需要在 Cloudflare R2 上配置的部分就完成了，接下来我们需要配置 PicGo 客户端。</p>
<h3 id="picgo">PicGo</h3>
<p>PicGo 是一个用于快速上传并获取图片 URL 的工具软件，有着较为丰富的插件生态，支持多种图床服务，其 GitHub 仓库为「<a href="https://github.com/Molunerfinn/PicGo">GitHub - Molunerfinn/PicGo</a>」，可以下载对应平台客户端使用。</p>
<h4 id="配置-r2-图床">配置 R2 图床</h4>
<p>PicGo 本体并不包括 S3 图床，但可以通过「<a href="https://github.com/wayjam/picgo-plugin-s3">GitHub - wayjam/picgo-plugin-s3</a>」插件来支持。</p>
<p><img src="https://image.pseudoyu.com/images/picgo_s3_plugin.png" alt="picgo_s3_plugin"></p>
<p>在「插件设置」中选择安装，「图床设置」中就新增了 Amazon S3 选项。点击进入配置选项。</p>
<p><img src="https://image.pseudoyu.com/images/r2_picgo_s3_config.png" alt="r2_picgo_s3_config"></p>
<p>这里有几项配置需要尤其注意。</p>
<ul>
<li><strong>应用密钥 ID</strong>，填写 R2 API 中的 Access Key ID（访问密钥 ID）</li>
<li><strong>应用密钥</strong>，填写 R2 API 中的 Secret Access Key（机密访问密钥）</li>
<li><strong>桶名</strong>，填写 R2 中创建的 Bucket 名称，如我上文的 <code>yu-r2-test</code></li>
<li><strong>文件路径</strong>，上传到 R2 中的文件路径，我选择使用 <code>{fileName}.{extName}</code> 来保留原文件的文件名和扩展名。</li>
<li><strong>自定义节点</strong>，填写 R2 API 中的「为 S3 客户端使用管辖权地特定的终结点」，即 <code>xxx.r2.cloudflarestorage.com</code> 格式的 S3 Endpoint</li>
<li><strong>自定义域名</strong>，填写上文生成的 <code>xxx.r2.dev</code> 格式的域名或自定义域名，如我配置的 `yu-r2-test.pseudoyu.com</li>
</ul>
<p>其他配置保持默认即可，确认参数无误后点击「确定」与「设置为默认图床」即可。</p>
<h4 id="图片上传">图片上传</h4>
<p><img src="https://image.pseudoyu.com/images/upload_r2_with_picgo.png" alt="upload_r2_with_picgo"></p>
<p>完成上述配置后，我们就可以在「上传区」直接拖入文件进行图片上传了，如上传后显示无误则为配置成功，生成的链接会自动在系统剪贴板中，直接在需要的地方粘贴即可。</p>
<p><img src="https://image.pseudoyu.com/images/picgo_custom_url_format.png" alt="picgo_custom_url_format"></p>
<p>并且可以在链接格式处选择对应格式，如 URL 或是博客可用的 Markdown 格式链接等。这里我还做了一个小的配置，在左侧「PicGo 设置」 - 「自定义链接格式」中修改为 <code>![$fileName]($url)</code>，并在上传区的链接格式处选择了「Custom」，这样我上传后就会根据文件名生成以文件名为 Alt 文本的 Markdown 图片链接。</p>
<h3 id="webp-cloud-图片优化">WebP Cloud 图片优化</h3>
<p>至此我们已经完成了整个图床的搭建、配置和上传，但通常我们本地截图或是相机拍摄的图片体积较大，对于访客来说加载时间会较长，并不直接适合互联网发布。</p>
<p><img src="https://image.pseudoyu.com/images/tiny_png_compress.png" alt="tiny_png_compress"></p>
<p>我在很长的一段时间都用了非常笨的方法，即「<a href="https://tinypng.com/">TinyPNG</a>」这一在线网站的 api 配合一个开源的 macOS 客户端应用，将图片拖入其中进行压缩后再通过 PicGo 上传到图床，通常能够在图片质量损失较小的前提下减少图片 50% 以上的体积，繁琐却有效。</p>
<p>这次更换图床方案后也开始寻找更智能的图片优化服务，想到了「<a href="https://webp.se/">WebP Cloud</a>」。</p>
<p>其实了解到这一服务是去年的一个晚上和 <a href="https://x.com/strrlthedev">STRRL</a> 正在杭州一个商城的电玩城里看人打音游，他给我看了 <a href="https://x.com/n0vad3v">Nova Kwok</a> 的一篇博客上了 hacker news 榜首的消息，一起围观了半天，不过当时大概只知道是优化图片的服务，并没有详细了解。</p>
<p>于是又去打开了官网「<a href="https://webp.se/">webp.se</a>」看了一下更为详细的介绍。</p>
<p><img src="https://image.pseudoyu.com/images/webp_se_intro.png" alt="webp_se_intro"></p>
<p>简单来说这是一个类 CDN 的图片代理 SaaS 服务，可以在几乎不改变画质的情况下大幅缩小图片体积，加快整体站点加载速度。发展到现在除了图片体积减少外，还提供了缓存、添加水印、图片滤镜等更多实用的功能，并提供了自定义 Header 等配置选项。</p>
<p>看了一圈，觉得能很好满足我的博客图片优化需求，开始折腾配置。</p>
<h4 id="配置-webp-cloud">配置 WebP Cloud</h4>
<p><img src="https://image.pseudoyu.com/images/webp_cloud_login.png" alt="webp_cloud_login"></p>
<p>首先通过 GitHub 授权登录 <a href="https://dashboard.webp.se/">WebP Cloud</a> 平台。</p>
<p><img src="https://image.pseudoyu.com/images/webp_cloud_overview.png" alt="webp_cloud_overview"></p>
<p>页面非常直观，主要显示了当前 Plan 下的 Free Quota 和额外 Quota 的数据，以及一些用量统计。</p>
<p>点击「Create Proxy」按钮可以添加配置。</p>
<p><img src="https://image.pseudoyu.com/images/webp_cloud_config.png" alt="webp_cloud_config"></p>
<ul>
<li>为了优化国内访问，我「Proxy Region」选择的是美西「Hillsboro, OR」区域</li>
<li>「Proxy Name」填写一个自定义名称即可</li>
<li>「Proxy Origin URL」，比较重要，需要填写上文我们配置好的 R2 自定义域名，如我填写的是 <code>yu-r2-test.pseudoyu.com</code>，如果没配置自定义域名则填写 R2 提供的 <code>xxx.r2.dev</code> 格式的域名</li>
</ul>
<p><img src="https://image.pseudoyu.com/images/yu_webp_test.png" alt="yu_webp_test"></p>
<p>图中 Basic info 部分「Visitor」下显示的以 <code>xxx.webp.li</code> 格式即为我们的代理地址。</p>
<p>例如我们之前通过 PicGo 上传到 R2 的文件 <a href="https://yu-r2-test.pseudoyu.com/new_mbp_setup.jpg">yu-r2-test.pseudoyu.com/new_mbp_setup.jpg</a> 则可以用 <a href="https://dc84642.webp.li/new_mbp_setup.jpg">dc84642.webp.li/new_mbp_setup.jpg</a> 这一链接进行访问。</p>
<p>如果不喜欢默认的代理地址，则可以右下角 Chat 或是邮箱联系开发者进行自定义域名修改，之后或许也会有更自动化的配置流程。</p>
<p>下面可以通过滑动条来调整图片压缩比率，默认为 80%，5M 的 jpg 图片压缩后的 webp 大小通常小于 1M，基本满足了网络传播需求，其他配置保持默认即可，如有需要可以根据文档进行配置。</p>
<h4 id="更改-picgo-配置">更改 PicGo 配置</h4>
<p><img src="https://image.pseudoyu.com/images/change_pic_go_config.png" alt="change_pic_go_config"></p>
<p>需要注意的是，由于我们最终需要放在博客中的图片是经过 WebP Cloud 代理过的链接，所以需要回到 PicGo 的「图床设置」中，将「自定义域名」改为我们刚配置的 WebP Cloud 代理地址，即格式为 <code>xxx.webp.li</code> 的代理链接或其他自定义域名。</p>
<h4 id="webp-cloud-用量">WebP Cloud 用量</h4>
<p>免费用户每天有 2000 Free Quota，即能够代理 2000 次图片访问请求，并提供 100M 的图片缓存，对于一般用户来说完全够用，如有一些流量较大的特定时期也可以购买额外 Quota，价格很便宜。</p>
<p>如超过了 Quota，访问则会被 301 转发到源站图片地址，不经 WebP Cloud 服务压缩，但依然可用；超过 100M 的缓存则会按照 LRU 算法清理，所以依然能够保障一些高频请求的图片能够有较好的访问体验。</p>
<p><img src="https://image.pseudoyu.com/images/yu_webp_uasge.png" alt="yu_webp_uasge"></p>
<p>我博客的日访问量大概在 300-500 visits 左右，再加上一些 RSS 订阅和爬虫的流量，根据 WebP Cloud 统计测算来看，平日的请求大概在 4000-5000 次，发博文当天会有 10000+。</p>
<p><img src="https://image.pseudoyu.com/images/webp_cloud_price.png" alt="webp_cloud_price"></p>
<p>所以目前先选择了 Lite 计划，配合一些额外用量来 Cover 高峰流量，打算再观察一阵子看看。</p>
<h2 id="总结">总结</h2>
<p>以上就是我的图床系统搭建方案，本文的所有图片也都使用 PicGo 上传、Cloudflare R2 存储并经 WebP Cloud 代理优化。</p>
<p>这是我的博客搭建部署系列教程之一，如对评论系统、数据统计系统等搭建感兴趣，请持续关注，希望能对大家有所参考。</p>
]]></content:encoded></item><item><title>2024 年了，我的博客有了什么变化</title><link>https://www.pseudoyu.com/en/2024/06/29/what_changed_in_my_blog_2024/</link><pubDate>Sat, 29 Jun 2024 13:48:58 +0000</pubDate><guid>https://www.pseudoyu.com/en/2024/06/29/what_changed_in_my_blog_2024/</guid><description>前言 在两年前的这一篇「2022 年了，聊聊我为什么还在写博客」，我聊到了我写博客的缘起、初衷和搭建方案。 两年多过去了，初衷仍在，写作也依然坚持</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>在两年前的这一篇「<a href="https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/">2022 年了，聊聊我为什么还在写博客</a>」，我聊到了我写博客的缘起、初衷和搭建方案。</p>
<p>两年多过去了，初衷仍在，写作也依然坚持下来了，虽没有完成自己所计划的周更，但多少也积淀了些文字。</p>
<p>经历了很多事，似乎渐渐转向了一个「周报博主」，写的内容和风格已经大不同。技术和工具效率主题更少了，分享生活和思考更多了；少了些通宵两天更新四篇技术教程的冲劲，却多了些通过笔触表达情感后的自洽；收到很多关于博客搭建和技术教程的感谢依然会很开心，却也更珍惜和素昧谋面的大家交心的感动。</p>
<h2 id="周报博主">周报博主</h2>
<p>可能是有一次开会闲聊 xLog 未来的发展，有位同事突然 cue 我说，你作为一个「周报博主」有什么想法，我一愣，这个称呼倒是第一次听到，翻了翻主页，确实。</p>
<p>之前一直自诩是技术博主、工具效率博主，最后留下内容最多，给大家印象最深的似乎还是周报，也不错。</p>
<p><img src="https://image.pseudoyu.com/images/weekly_review_group_chat.png" alt="weekly_review_group_chat"></p>
<p>开始写周报似乎是「<a href="https://x.com/RealAkemiHomura">Homura</a>」组织了一个周报监督小组，当时不论是在推特还是独立博客群体中都还是个小透明，也希望有更多人进行抱团和交流，当时会每周把自己的周报丢到群里，会有互相被卷到，也有对于他人生活状态的关心，很开心。</p>
<p>后来大家都经历了许多生活的工作的变动，群里最后的消息停留在了 23 年 1 月，但那依然是我很快乐的一段时光，也是我后来能继续写周报的动力，因为我知道，即使分享的只是生活的琐碎和一些不成熟的小想法，依然有人在认真读你的文字。</p>
<p><img src="https://image.pseudoyu.com/images/weekly_view_discuss_with_randy.png" alt="weekly_view_discuss_with_randy"></p>
<p>之前有一次收到 Randy 的催更，他说其实没必要把它定义为周报，不然常常会有压力和束缚，不过我反倒依赖这种输出倒逼输入的模式，这样有了周报作为一个结果导向，才会更有动力把这周过好。</p>
<p><del>虽然我常常重新定义周就是了。</del></p>
<h2 id="独立博客">独立博客</h2>
<p>比起编排精美的书刊杂志，我更享受于访问他人的博客网站，站名名称、主题配色、配乐排版都更真实具体地呈现了一个人格化的存在，而在阅读博文时，我也常常会视为一次穿越时空的对话，会想象写下这些文字碎片的作者当时是怎样的心情，有时甚至也会带些顽皮地脑补他是一个怎样的人，此刻在做些什么。</p>
<p>独立博客其实是一个说大不大说小不小的圈子，两年过去，我反倒觉得开始搭博客、写博客的人渐渐变得多了，也有了更多有意思的高质量内容。</p>
<p>相比起其他不论是粉丝积累还是互动都更为方便的成熟内容平台来说，不仅仅是平台和写作形式上的独立（我其实也愿意称在 mastodon 或是 misskey 上认真分享内容的人为独立博客作者），而是思想的独立，即好的文章不止授人知识，还引人思考。</p>
<p><img src="https://image.pseudoyu.com/images/dubo_1_intro.png" alt="dubo_1_intro"></p>
<p>还跟 Randy 聊到想为独立博客做一些事，以刊物的形式收录这一段时间内读到的好的文章并为之作序推荐，其实已经筹备好了第一期，但由于两个人错峰的忙碌和更专注地做 EpubKit 产品，迟迟未能发布，这也是希望能够在未来某个节点能够持续做下去的事。</p>
<h2 id="博客系统">博客系统</h2>
<p>这是两年前写过的几篇关于博客搭建的文章：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/">2022 年了，聊聊我为什么还在写博客</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/">Hugo + GitHub Action，搭建你的博客自动发布系统</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
</ul>
<p>主要是围绕着我使用 Hugo 这一静态网页生成器（SSG）搭建个人博客及一些周边服务的一些记录，也看到很多人通过各种联系方式加到我说根据这一系列教程成功拥有了自己的博客，很开心能够为博客这一已经有些式微的创作方式做出一些小小的贡献。</p>
<p>当时写的时候对自己的整套方案很满意，然而时隔两年回头看了下。</p>
<ul>
<li><strong>博客本体</strong>：Hugo 本体没变，部署方案: GitHub Pages + Cloudflare CDN -&gt; Cloudflare Pages</li>
<li><strong>评论系统</strong>：Cusdis -&gt; Remark42，部署平台：Railway -&gt; Vercel + Supabase -&gt; fly.io</li>
<li><strong>统计系统</strong>：Umami -&gt; goatcounter，部署平台：Vercel + Heroku -&gt; Railway -&gt; Netlify + Supabase -&gt; fly.io</li>
<li><strong>图床系统</strong>：GitHub + jsDelivr -&gt; 阿里云 OSS -&gt; VPS 上自部署的 Chevereto + PicGo -&gt; Cloudflare R2 + WebP Cloud + PicGo</li>
<li><strong>内容搜索</strong>：无 -&gt; Pagefind 静态搜索</li>
</ul>
<p>更换的原因很多，有些是由于 Heroku 和 Railway 渐渐取消了免费计划，有些是由于开源项目更新少了缺少功能，也有些单纯是自己想折腾一下更轻量些。</p>
<p>想起来当时写这套系列教程的时候主要就是觉得网上能够搜到的方案和教程零散且常常落后，于是想给想搭建博客的读者一站式搭建起来的可行方案，发布后收到了许多人的反馈，有些内容也早该更新，却一直拖到现在才开始重新写，很惭愧。</p>
<p>下文会对当前的方案作一些介绍，后续更新后的系列文章完成后也会追加链接。</p>
<h3 id="博客本体">博客本体</h3>
<p><img src="https://image.pseudoyu.com/images/yu_blog_homepage_20240629.png" alt="yu_blog_homepage_20240629"></p>
<p>我使用 <a href="https://gohugo.io/">Hugo</a> 这个静态网站生成器来搭建我的个人博客，使用并改造了一个比较 retro 的主题「<a href="https://github.com/shaform/hugo-theme-den">hugo-theme-den</a>」。</p>
<p>大体的流程可以参看「<a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/">Hugo + GitHub Action，搭建你的博客自动发布系统</a>」这篇文章和「<a href="https://github.com/pseudoyu/yu-blog">GitHub - yu-blog</a>」这个仓库。</p>
<p>加了一些每天自动更新 About 页面的 GitHub Actions 自动化操作，并且由于 GitHub Pages 托管的网站从国内访问速度几乎不可用了，迁移到了 Cloudflare Pages，免费且体验感好了很多，其他几乎没什么改动了。</p>
<p>其实倒也不是没想过换框架，之前看到「<a href="https://www.owenyoung.com/">Owen</a>」和「<a href="https://pinchlime.com/">PJ Wu</a>」使用的 <a href="https://www.getzola.org/">Zola</a> 就有些眼馋，甚至也有想过像「<a href="https://justgoidea.com/">槿呈 Goidea</a>」或是「<a href="https://innei.in/">Innei</a>」一样自己写一个。</p>
<p>不过冷静下来一想，自己现在网站积累了不少文章，要是想要保留原有路径免不了一番折腾，再加上确实很喜欢现在的主题，有什么想法干脆就直接去定制和改动主题了，还是少花一些心力在折腾平台，多写些博文比较重要，不然多少有点买椟还珠之嫌，遂作罢。</p>
<h3 id="评论系统">评论系统</h3>
<p>在博客诞生之初直到今年四五月我一直使用的都是 <a href="https://cusdis.com/">Cusdis</a>，整整用了三年。</p>
<p>时至今日依然是十分值得推荐的方案，轻量，方便自部署，风格也简约好看，搭建教程参看「<a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a>」。</p>
<p>不过鉴于 Railway 从去年 8 月起已经取消了 Free Plan，如果依然想完全免费使用，可以使用 Vercel/Netlify/Zeabur 免费部署主项目，并在 <a href="https://supabase.com">Supabase</a> 上部署一个免费的 PostgreSQL 数据库实例，把链接作为环境变量传入 Cusdis 服务中即可，其他流程大同小异。</p>
<p><img src="https://image.pseudoyu.com/images/yu_remark42_preview.png" alt="yu_remark42_preview"></p>
<p>最近有一次由于更换数据库 URI 时 Vercel 部署一直报错，再加上确实需要一些新的功能，于是下定决心从 Cusdis 迁移，调研了一圈后选择了 <a href="https://reorx.com/">reorx</a> 在「<a href="https://reorx.com/blog/blog-commenting-systems/">更换博客评论系统</a>」一文中最后选定的 <a href="https://remark42.com/">Remark42</a>。</p>
<p>单纯就配置选项来说比起 cusdis 还是丰富了不少，目前配置了常用的几种社交账号登录（GitHub、Twitter、Telegram、邮箱）、可以匿名评论、支持邮件订阅回复提醒并且也设置了 TG bot 提醒，并且部署在 <a href="https://fly.io/">fly.io</a>，go 单二进制 + 数据库单文件，很舒服的解决方案，完成博文后会在这里更新教程链接。</p>
<h3 id="数据统计系统">数据统计系统</h3>
<p>我之前自部署了一个 Umami（参看教程「<a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a>」不过后来由于 Heroku 取消了免费 Plan，我最后折腾一圈，选择了 Netlify 部署服务 + Supabase 部署 PostgreSQL 数据库实例部署的方式，其余流程依然适用。</p>
<p><img src="https://image.pseudoyu.com/images/yu_goatcounter_preview.png" alt="yu_goatcounter_preview"></p>
<p>不过一方面因为我部署得比较早，有一个大版本无法升级，以至于一直停留在自己 fork 的一个旧版本上，另一方面确实也渐渐觉得这种服务和数据库需要分离的方式免不了因为平台规则变动而频繁迁移，有些太重了，所以最后改为了 <a href="https://www.goatcounter.com/">goatcounter</a>，同样是 go 单二进制 + sqlite 数据库单文件部署在 <a href="https://fly.io/">fly.io</a>，又是很舒服的部署方案，等更新博文后同样会在这里更新教程链接。</p>
<p><img src="https://image.pseudoyu.com/images/yu_google_console_preview.png" alt="yu_google_console_preview"></p>
<p>另外就是依然使用 <a href="https://search.google.com/search-console">Google Console</a> 来统计分析我的访客信息与搜索权重。</p>
<p>这个结果很有参考性，我发现一篇关于终端对比的文章「<a href="https://www.pseudoyu.com/en/2022/07/10/my_config_and_beautify_solution_of_macos_terminal/">Warp，iTerm2 还是 Alacritty？我的终端折腾小记</a>」让我持续不断地有通过搜索引擎来的访客，另外的就是关于个人博客和搭建的系列文章了。</p>
<h3 id="图床系统">图床系统</h3>
<p>两年前我其实还没怎么关注图床的问题，图片都是直接丢在 GitHub 仓库里，并且使用 jsDelivr 作为 CDN 加速（后来国内访问也几乎不可用了），不过随着文章数量增多，常常有身边的朋友告诉我说我的博客图片加载不出来，想着还是要兼顾一下阅读体验，于是调研了一圈方案。</p>
<p><img src="https://image.pseudoyu.com/images/aliyunoss_invoice.jpeg" alt="aliyunoss_invoice"></p>
<p>先选择了阿里云 OSS 存图，电脑使用 PicGo 上传，方案挺好的，前几个月也没什么问题，直到 23 年初有几篇文章流量比较大，看着月账单上涨的势头，顿感贫穷。</p>
<p>于是在线路还不错的搬瓦工服务器上自建了 Chevereto 图床，同样配合 PicGo 的插件进行上传，稳稳地用了一年半。但自己对于自部署服务的稳定性和数据的珍贵性还是有些大意，前几天服务器突然挂了，内核报错直接无法重启，服务挂了倒还好说，但是我这一年半多的数据没有备份，也无法导出。</p>
<p>工单联系技术支持，一天只回复了我两次，一次让我重启，一次建议我聘请一个网络管理员排查。只能自力更生，翻遍了网上各种方案，折腾了一天终于算是解决了，但这一次的教训让我对与有重要数据的服务部分和自部署稳定程度都有了全新的认识，于是不敢再用原方案。</p>
<p><img src="https://image.pseudoyu.com/images/yu_webp.png" alt="yu_webp"></p>
<p>最后采用了 <a href="https://www.cloudflare.com/en-gb/developer-platform/r2/">Cloudflare R2</a> 对象存储来存放图片，每个月 10G 的免费额度很足够，大厂的服务与数据安全也有保障。为了优化用户的访问，又使用了一个「<a href="https://webp.se/">WebP Cloud</a>」服务对 R2 的图片进行代理，在代理层面进一步减小图片体积，虽然对于国内用户来说速度肯定还是比不上阿里云 OSS 这种线路，但是在不用备案、稳定且免费的综合条件下，这是我能想到的最好的方案了。</p>
<p><img src="https://image.pseudoyu.com/images/yu_picgo_pics.png" alt="yu_picgo_pics"></p>
<p>在电脑端通过 PicGo 客户端几乎一键上传并生成博客直接可用的 markdown 图片链接，配置完成后使用起来很顺滑。</p>
<p>图床搭建教程见这篇：</p>
<ul>
<li><a href="https://www.pseudoyu.com/zh/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/">从零开始搭建你的免费图床系统 （Cloudflare R2 + WebP Cloud + PicGo）</a></li>
</ul>
<p><strong>[2024-07-02 更新]</strong></p>
<p>新写了一篇教程实现了图床添加隐私和版权保护，算是番外篇。</p>
<ul>
<li><a href="https://www.pseudoyu.com/zh/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/">使用 WebP 与 Cloudflare WAF 为你的图床添加隐私和版权保护</a></li>
</ul>
<h3 id="内容搜索">内容搜索</h3>
<p><img src="https://image.pseudoyu.com/images/search_in_my_blog.png" alt="search_in_my_blog"></p>
<p>之前我的博客是没有内容搜索功能的，本来文章也不多，再加上静态博客没有后端，实现起来感觉也不容易，于是一直没支持。但随着后来有时候要查阅自己之前的文章只能用 VS Code 在一堆 markdown 文件中搜索的体验后，觉得还是很有必要的。</p>
<p>调研了一圈使用了 <a href="https://pagefind.app/">Pagefind</a> 这一项目，基于静态文件的搜索库，无须引入或是托管其他后端服务，我只需要在每次发布博客的 CI 中构建全博客的索引文件，就能够很方便地支持搜索，中文搜索效果相对弱一些，不过也是够用的程度，基本上对主流的博客框架都支持。</p>
<p>这部分可以参照「<a href="https://pinchlime.com/blog/how-to-add-a-search-function-to-zola-generated-static-websites-via-pagefind/">如何透過 Pagefind 在 Zola 產生的靜態網站裡加入搜尋功能</a>」这篇文章，我也正在着手写基于 GitHub Actions 更详细的教程，后续会更新在这里。</p>
<h2 id="总结">总结</h2>
<p>2024 年了，我大抵还是个爱好写作的人，从早些年的书评影评、技术教程到现在的生活周记，似乎所见所思只有落笔写下才会转为触手可及的真实。而随着上百篇文章的沉淀，个人博客站点也成为了我在这世界的另一个载体，源于我却又独立于我，有时是随手可拾起的记忆碎片，有时又是自己精神的避难所。</p>
<p>也希望你们能够继续在我的博客中发现一些有趣的东西，或是知识，或是启发，抑或是一点点小小的共鸣，或许在某个时刻，你们也会想拥有自己的博客站点，让自己的所思所想在这个世界上留下一些痕迹，生根、发芽，也希望这套系列教程能够提供一些帮助。</p>
]]></content:encoded></item><item><title>周报 #62 - 香港之行、5am club 计划与 Rust 学习</title><link>https://www.pseudoyu.com/en/2024/06/23/weekly_review_20240623/</link><pubDate>Sun, 23 Jun 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/06/23/weekly_review_20240623/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-06-17 到 2024-06-23 这周生活的记录与思考。 去香港参加 Google AI+Web3 活动，面基了组里的很多小伙伴；体验了因订不到</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240623.png" alt="weekly_review_20240623"></p>
<p>本篇是对 <code>2024-06-17</code> 到 <code>2024-06-23</code> 这周生活的记录与思考。</p>
<p>去香港参加 Google AI+Web3 活动，面基了组里的很多小伙伴；体验了因订不到房而露宿网吧；打算根据 5am Club 理念调整生活节奏；第二次入门 Rust；还有很多有意思的事。</p>
<h2 id="香港之行">香港之行</h2>
<p><img src="https://image.pseudoyu.com/images/henry_and_kate_at_google.jpg" alt="henry_and_kate_at_google"></p>
<p>这周最有意思的事是去香港参加了 Google 的 Web+AI 的活动，我们项目在其中有一些 talk 和圆桌论坛，刚好也有机会参观了 Google 的香港办公室（以及拿了一些周边）。远程办公之后，其实比较少能有机会和同事们面对面，而这次活动我们组除了一位在美国的同事没法赶到外，其他人都相聚香港，还一起聚餐、打德州以及后面续了一场深圳漫步。</p>
<p><img src="https://image.pseudoyu.com/images/stay_netbar.jpg" alt="stay_netbar"></p>
<p>很有意思的是由于我和杭州一同来的同事 ares 没有提前订好房，直到零点之后在铜锣湾时代广场四处找酒店，最后选择了去露宿网吧，刚好拿着从 Google 那边领的抱枕，倒也是挺好睡的。</p>
<p>突然想到之前在香港读书赶课程大作业的 due，当最后卡着 ddl 提交后，和小组成员一起买了一堆零食和啤酒在维港闲聊、看日出的经历；也想起之前和朋友去泰国，跟着 Pokémon GO 的地图四处解锁景点；以及去青岛旅行时让出租车司机随便开，带着我绕一圈有趣的地方，这些都是很有趣的人生体验。</p>
<p>我虽然是个 j 人，在大部分时候会制定严密的计划，但也非常享受这份生活的随机性，或许多年之后并不会记得这场 Google 的 talk 有什么有趣的发言，但一定不会忘记这一晚在网吧过夜的记忆画面。</p>
<h2 id="5am-club-计划">5am club 计划</h2>
<p><img src="https://image.pseudoyu.com/images/hangzhou_night.jpg" alt="hangzhou_night"></p>
<p>Robin Sharma 有一本书叫《5am Club》，提出了一个早上五点起床，进行自我提升学习、锻炼以达到最佳状态的概念，虽然对于经常熬夜到三四点甚至更晚的我可能 5am 睡更容易达到，不过依然对这种新的生活方式有些憧憬。</p>
<p>大学有过很长一段时间的极端自律，每天一两点睡、六七点起，似乎有着用不完的精力和时间，在香港读研期间也由于跨专业的焦虑和课业压力，每天六点多起床去图书馆占座，接近 11 点才回到租屋，循环往复却也乐在其中。</p>
<p>但大概是由于工作之后白天的许多时间天然被占据，似乎这样的习惯很快被打破了，为了有更完整的自己的时间，更晚睡，却也更晚起。有阶段性会保持不错的状态，但也容易陷入一些不好的循环，晚上学习状态不好 -&gt; 焦虑 -&gt; 报复性熬夜 -&gt; 第二天起床更晚 -&gt; 白天效率低下 -&gt; 晚上学习状态更不好。</p>
<p>于是想从这周开始进行一下尝试与挑战，倒不一定是严格的五点，只是相对更早，把熬夜的学习时间平移到早上，一直到 11 点左右调整到开始上班的状态。</p>
<p>而由于被隔壁 「<a href="https://space.bilibili.com/58078997">polebug</a>」 的 study vlog 卷到，也有了一些尝试新领域的学习动力，所以也给自己定了更加有趣的目标，早上最开始学习的是一些跟工作并不直接相关但一直想体验的东西，比如 SwiftUI、Rust 以及使用 langchain 进行一些 AI 应用的开发实践等等，这次也打算直接 learn by getting hands dirty，直接上手一些 side project 或是给开源项目贡献 pr。</p>
<h2 id="rust-学习">Rust 学习</h2>
<p><img src="https://image.pseudoyu.com/images/rust_bag_2023.jpg" alt="rust_bag_2023"></p>
<p>承上文，打算<del>第二次</del>入门 Rust，上次入门还是在 22 年，其实还挺认真地学了一阵子，跟着写了一些 demo 项目，还做了学习笔记「<a href="https://github.com/pseudoyu/learn-rust">pseudoyu/learn-rust</a>」，不过确实工作里没有应用场景，已经忘得差不多了。</p>
<p>组里有个 Rust 狂热爱好者 kally，香港和深圳之行一路在推荐，甚至在我上飞机前还让我下了 YouTube 上的入门视频，<del>确实挺好睡的</del>。</p>
<p>不过正经地打算重新学习一下，也上手写一些自己的项目，目前的想法是把之前一个通过 RSSHub 来订阅多个平台信息源同步的 go 项目通过 rust 重写一下，以及看看有没有什么好玩的开源项目可以参与。</p>
<p>目前在看 kally 推荐的一些 YouTube Channel 的基础视频，以及很久之前买的极客时间的「Rust 编程第一课」，Rust，启动！</p>
<h2 id="telegram-channel-1000-subscribers">Telegram Channel 1000 subscribers</h2>
<p><img src="https://image.pseudoyu.com/images/channel_1000_subscribers.jpg" alt="channel_1000_subscribers"></p>
<p><a href="https://t.me/pseudoyulife">频道</a> 1000 subscribers 达成！感觉越来越少在推或者其他平台上表达，更喜欢在频道里碎碎念了。</p>
<p>其实分享欲这个东西一直存在，有时候是与自己对话，有时候是和身边的人秉烛夜谈，又有更多的时候想分享给更多人得到一些反馈，只是关闭朋友圈的我似乎已经不太习惯将这些分享到我的周围，所以有很长一段时间 twitter 成为了这个出口，而这一年，博客的读者和频道的关注者才慢慢成为分享的对象，感觉其实现在的节奏下似乎好好听人说话、思考并回应似乎成为了一件弥足珍贵的事，我也时常告诫不要忘记这一点。</p>
<p>也谢谢你们好好听我讲话。</p>
<h2 id="其他">其他</h2>
<h3 id="mac">mac</h3>
<p><img src="https://image.pseudoyu.com/images/new_mbp_setup.jpg" alt="new_mbp_setup"></p>
<p>新拿到的 Google Cloud 贴纸贴上了我的 MBP，集邮了！</p>
<p>周中发现 mac 出现了灵异事件，当 slack/zoom 等软件打开麦克风时光标就不受控制，以 2-3 秒一次的频率点左上角菜单栏，像是被远程控制了一样，且其他时候一切正常，去了 Apple 和技术支持小哥一起排查了好一会儿定位到了是新安装的 Bartender 的替代品 iBar 导致的，据评论区说 Barbee 也有这个问题，大家可以参考一下 🫡。</p>
<p>小哥说我复现、排查思路和操作的熟练度可以来这里上班了 🤣，Apple 的用户真的是自适应的。</p>
<p>再加上之前刚有一个电脑被家里另一只小猫饭饭咬坏了屏幕，决定斥巨资给我的 MBP14 补买一个 Apple Care，刚好 7.3 过一年的保，Apple 小哥跟我说一年内补买可以在这个基础上再续三年，感觉很划算，等于多了一年！</p>
<h3 id="招聘">招聘</h3>
<p>顺便发一个我司的招聘：<a href="https://rss3.notion.site/52350e21c7e74a319807a4fcd6adf68e?v=3eb777c3d54f4a6888c405968cee9d69">Work With RSS3/Job Description</a></p>
<p>目前在招 DevOps Engineer/AI Engineer/Blockchain Engineer，远程办公，工作氛围很好，有疑问可以随时问我，期待未来做同事。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/35049755/"><strong>索拉里斯星</strong></a>，与三体的设定类似，索拉里斯星围绕着双星旋转，但是不同于三体的降临或是拯救，索拉里斯星其实或许根本并不关心地球和上面渺小的人类，只是人类单向的自我中心罢了，甚至想用自己更为“高尚”的思想与价值观去改变它，探索也不过只是伪善。。</li>
<li><a href="https://book.douban.com/subject/34453257/"><strong>Normal People</strong></a>，很喜欢这个英剧，这两天看其他书的时候突然想到了这本，打算补一下原著。</li>
<li><a href="https://book.douban.com/subject/35754687/"><strong>What My Bones Know</strong></a>，去年看了一小半，这两天想到关于家庭和心理疗愈的问题，就睡前又翻了几页。</li>
<li><a href="https://book.douban.com/subject/33445309/"><strong>阿特拉斯耸耸肩</strong></a>，读者送的，开始读了。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://cs193p.sites.stanford.edu/2023">CS193p - Developing Apps for iOS</a></li>
<li><a href="https://developer.apple.com/tutorials/swiftui">SwiftUI Tutorials | Apple Developer Documentation</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://macwright.com/2024/06/16/how-i-use-obsidian">How I Use Obsidian</a></li>
<li><a href="https://blog.douchi.space/blog-code-syntax-highlighting/">给 Hugo 博客的代码区块更换主题</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Jr421F7W9">vlog #60｜女程序员下班后的学习记录｜啃 Celestia 的文档｜Modular Blockchain｜英语日常练习｜桌面小装修｜入手了新设备</a></li>
<li><a href="https://www.bilibili.com/video/BV1CS411A7xw">《博德之门 3》青出于蓝，变革虽大但在某个方面其实是完美的延续【就知道玩游戏】</a></li>
<li><a href="https://www.bilibili.com/video/BV1L1421k7bK">vlog #61｜女程序员下班后的学习记录｜状态混乱就快去学习吧｜RUST｜在读《被讨厌的勇气》｜运动带给我的变化｜日常英语学习｜TEDTalk</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #61 - 好朋友的婚礼与对婚姻的思考</title><link>https://www.pseudoyu.com/en/2024/06/16/weekly_review_20240616/</link><pubDate>Sun, 16 Jun 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/06/16/weekly_review_20240616/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-06-07 到 2024-06-16 这周生活的记录与思考。 好朋友的婚礼 端午回北京参加了一场婚礼，是高中的挚友渐仔。 高</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240616.png" alt="weekly_review_20240616"></p>
<p>本篇是对 <code>2024-06-07</code> 到 <code>2024-06-16</code> 这周生活的记录与思考。</p>
<h2 id="好朋友的婚礼">好朋友的婚礼</h2>
<p>端午回北京参加了一场婚礼，是高中的挚友渐仔。</p>
<p>高中是在文科班，仅有八个男生，其中还有一位在高二时突然思想觉醒要振兴中华文坛而休学写书去了，所以陪伴着度过高三生活的只有七位了。或许是因为人很少，反倒有了些抱团取暖的相惜，毕业后直到疫情爆发都基本保持着一年两三聚的频率。</p>
<p>其中又有包括我在内的三位更为同频而保持着尤其亲近的联系，有小群日常闲谈、会趁着出差在北京、上海或是杭州赶着约上一顿饭，也都去各自的家中做客，互尝过厨艺，见过对彼此重要的人。</p>
<p>去年三人小组的另一位率先结了婚，当时的我因一头蓝色长发而有些“不过关”，没当成伴郎，其实一直还有些小遗憾。渐仔婚礼日子定下来之后就早早邀请了我当伴郎，且是唯一一个，伴郎的英文是 best man，很诱人的 title，惊喜而珍惜。</p>
<p>其实除去那些职责性的婚礼现场要做的事外，我觉得邀请重要的人来见证自己人生的一个重要节点本就是一件浪漫的事。</p>
<p>提前几天去试了一下午西装，发现气质完全 hold 不住，最后还是在常买的男装网店东拼西凑了一套休闲西服，算是穿上了这辈子最正式的一套装扮，头发没舍得剪短却也修整了下，也梳成了大人模样。</p>
<p>是草坪婚礼的形式，在电影里看过很多次，现实中却是第一次参加，很有仪式感却也不失温馨，早早参与到婚礼筹备过程中的我才更加能感受到这完美的仪式背后的细节与心意。</p>
<p>新娘那一侧的伴娘是个 E 人，E 得耀眼夺目，而我临上场了还在低头默背呈递婚戒时的左右手顺序，I 得格格不入，也算是一种有趣的反差，还有点期待看到后面的现场成片的。</p>
<h2 id="婚礼与婚姻">婚礼与婚姻</h2>
<p>其实早在五月中，就陪同他们去跟婚庆策划公司谈过细节，看着冗长而细致的流程表、物品单和布置图，有些惊叹于一场婚礼的复杂和昂贵程度。当时谈报价时看到两扇花门和座位上一些点缀的花束加起来逾五万，以至于我和学姐到了婚礼现场看到花门都不自觉想到这些数字。</p>
<p>婚礼似乎总是被冠以“一生一次”的标签，所以似乎为了这一瞬的完美哪怕付出再多心血或是花费再多金钱都值得。但我常常也在想，当一件原本感性而浪漫的事变成了 Excel 表格中下拉不完的条目和背后精确的数字，当新郎新娘的一举一动都要被完美规定时，这场婚礼究竟是为了谁而办的？</p>
<p>或许因为我和学姐是重体验多过形式的人，比起一场婚宴的奢华，我们或许觉得共同策划和拍摄一个关于婚姻与爱情的纪录片、一次带着头纱和祝福见双方重要却多年未见的好友的“巡回”之旅，或是在喜欢的国家城市教堂拍下一些属于两个人更真实而珍贵的承诺会更有记忆。</p>
<p>但站在新郎身边见证婚礼上的誓言和感动的那一刻，觉得或许怎样都好，只要是对的人。</p>
<h2 id="其他">其他</h2>
<h3 id="博客评论">博客评论</h3>
<p><img src="https://image.pseudoyu.com/images/ququ_comments.jpg" alt="ququ_comments"></p>
<p>当发现从最开始用 RSS 阅读器的时代就躺在我订阅列表里的屈屈大佬也看我的周报并且还评论了时，有种追星成功 &amp; 次元壁破了的感觉 😭</p>
<h3 id="读者的陪伴">读者的陪伴</h3>
<p><img src="https://image.pseudoyu.com/images/atlas_book.jpg" alt="atlas_book"></p>
<p>我生日的时候发起了一项抽奖，抽了六位留言的读者，中奖者三位选了 EpubKit 会员，两位选择了实体书，还有一位选择了微信读书。</p>
<p>有趣的是其中一位中奖的朋友还反向给我寄了一套大部头，去年他在我的那篇「推石头的人」的生日总结文章评论说不如让西西弗斯也耸耸肩，今天看到他给我寄来的《阿特拉斯耸耸肩》让我感受到一种奇妙而又温暖的陪伴与链接 🥰。</p>
<h3 id="更换笔记系统">更换笔记系统</h3>
<p><img src="https://image.pseudoyu.com/images/change_to_obsidian.jpg" alt="change_to_obsidian"></p>
<p>今天整理了一下午笔记，发现 Logseq 某种程度上改变了我的思维习惯，虽然以 Daily Notes 的方式确实是减轻了记录的心智负担，但也让自己并不那么连续思考了，思路都转换成了一个个 bullet points，却又常常连不成一篇完整的博文，学过的很多东西慢慢也就淡忘了。</p>
<p>于是下定决心转到了 Obsidian，没装什么插件，想到有什么要记录的就以 「20240615 + 关键词」这种模式开头的文件 + 每篇文稿前注明 tag 这种更原始的单文本模式来记录，反倒是能够更加体系地整理一些东西。</p>
<h3 id="更换-macos-主题">更换 macOS 主题</h3>
<p><img src="https://image.pseudoyu.com/images/dark_desktop.jpg" alt="dark_desktop"></p>
<p>发现一个纯暗黑的 icon + 壁纸<a href="https://www.darkosicon.com/">全套主题</a>，效果很沉浸（除了 Finder 改不了图标很扎眼），实践效果如图。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/35171215/"><strong>虫子旁</strong></a>，去完游学营后开始好奇，里面讲的虫子似乎也都更亲切了些。</li>
<li><a href="https://book.douban.com/subject/33445309/"><strong>阿特拉斯耸耸肩</strong></a>，读者送的，每天早起读一点。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://github.com/scalar/scalar">GitHub - scalar/scalar</a></li>
<li><a href="https://t.me/polebugisabug">up 主 polebug 的频道</a></li>
<li><a href="https://speech.ee.ntu.edu.tw/~hylee/genai/2024-spring.php">Introduction to Generative AI 2024 Spring</a></li>
<li><a href="https://www.darkosicon.com/">DarkOS Icon Pack</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://imququ.com/post/ebook-reader.html">聊聊墨水屏阅读器</a></li>
<li><a href="https://www.bmpi.dev/dev/renaissance-sqlite/">SQLite 的文艺复兴</a></li>
<li><a href="https://mbuffett.com/posts/maintaining-motivation/">Managing My Motivation, as a Solo Dev</a></li>
<li><a href="https://blog.inoki.cc/2024/06/08/My-10-years/">弹指十年间</a></li>
<li><a href="https://mp.weixin.qq.com/s/aYFDP4fmGKc048uQ_noz9g">Ai 复兴 RSS ？</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1q1421y7MT">vlog #58｜下班之后能做些什么呢｜女程序员下班后的学习记录｜被 AltLayer 忽悠｜对于英文思维的思考｜读《时间贫困》的启发</a></li>
<li><a href="https://www.bilibili.com/video/BV1L7421d7dN">从学生到新婚，旅行 17 年总结的干货大放送</a></li>
<li><a href="https://www.bilibili.com/video/BV1j7421d77x">vlog #59 | 忙里偷闲的学习记录｜女程序员下班后的学习日常｜Rust 学习中｜五月复盘｜长期英语学习｜在读《时间贫困》</a></li>
<li><a href="https://www.bilibili.com/video/BV1rT421e7bx">一个叛逆的中年考生拿到今年的作文题时……</a></li>
<li><a href="https://www.bilibili.com/video/BV1mS411P7Hm">第三节 Solidity 智能合约开发</a></li>
</ul>
]]></content:encoded></item><item><title>27 岁的自白：成长是一件很扫兴的事</title><link>https://www.pseudoyu.com/en/2024/06/06/yearly_review_27/</link><pubDate>Thu, 06 Jun 2024 19:42:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/06/06/yearly_review_27/</guid><description>《请回答 1988 OST》 前言 现在是 2024 年 6 月 6 日，我 27 岁了。 周报的想法就是在前年的生日这天萌生的，在去年的总结里也说过这是个一直想坚持下去的栏目和仪</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/1988.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《请回答 1988 OST》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/yearly_review_27_new.png" alt="yearly_review_27"></p>
<p>现在是 2024 年 6 月 6 日，我 27 岁了。</p>
<p>周报的想法就是在前年的生日这天萌生的，在去年的总结里也说过这是个一直想坚持下去的栏目和仪式感，如约而至。</p>
<p>第一年写了 40 篇周报，而去年只有 20 篇了，减少的不仅仅是数量，还有自己的思考、情绪与表达欲。我常常说周报是自己生活和表达欲的载体，当自己生活一团糟的时候是没办法好好写些什么的，但似乎这一年这样“状态不好”的时候未免太多了些，或者换句话说，我对这样的自己太过纵容了些，这很可怕。</p>
<p>原以为长大后的一年一年不会再像刚毕业时那样有那么多的变动，甚至做好了准备接受生活终究会归于平淡，但站在此刻回顾这一整年，依然发生了许多事。</p>
<h2 id="月亮与六便士">月亮与六便士</h2>
<p>学姐曾有一段时间赶在工作日的午后挤出时间去画室画画，连续几天遇到两位学员专注而又放松地闲谈着、画着，略感羡慕，问她们能够在工作日的下午尽情画画的秘诀是什么，一位耸了耸肩说“忍受贫穷就好了呀”。</p>
<p>似乎人是没有办法在抬头看着月亮的时候同时捡拾硬币的。</p>
<p>但或许因为我在成长过程中有几分幸运地常常被周遭的人保护着，所以一直是个理想化的人，一直追求的似乎并不是工作的 title 或是收入，而更像是一个能够让我继续做喜欢的事的环境和氛围，是一群可以真诚相待共同成长的同路人。</p>
<p>也很厌弃所谓的职场文化，在上一份工作中就会因不合理的甲方需求与擅于推委责任的项目经理而在全员大会里并不“圆滑”地直接表达不满。许多已是“过来人”的前辈和朋友跟我聊完后常常会提醒我有一些提防之心或是放下这些并不切实际的执念，劝我早些抓住那些更加具象化的看得见的利益，我明白，也知道这有用，但无法说服自己做到。</p>
<p><img src="https://image.pseudoyu.com/images/rss3_2024_annual.jpg" alt="rss3_2024_annual"></p>
<p>很幸运，我追求的一切在 RSS3，在我现在的组里随处可见。</p>
<p>去年生日后不久，在这里转正答辩成功，正如在之前的一篇「<a href="https://www.pseudoyu.com/en/2024/04/30/weekly_review_20240430/">周报 #58 - 远程工作这一年</a>」中所述，工作本身有忙碌有闲暇，起起伏伏，不知不觉已经度过了一年了，也期待一起走得更远。</p>
<h2 id="小王子与他的玫瑰花">小王子与他的玫瑰花</h2>
<p>同样是去年生日后不久，我恋爱了（参看「<a href="https://www.pseudoyu.com/en/2023/07/10/weekly_review_20230710/">周报 #43 - In the Mood for Love</a>」），距今也已经一年了，就像小王子与玫瑰花一样，彼此倾注了时间，也让对方变得更为重要。</p>
<p><img src="https://image.pseudoyu.com/images/rss3_huddle_share.png" alt="rss3_huddle_share"></p>
<p>前几天公司里刚好有一个内部分享会，我没选自己更擅长的工具使用或是写作经验之类的话题，而是分享了一个更私人的话题 —— 姐弟恋，才发现，似乎与她有关的一切，才是我分享欲的来源。</p>
<p>这一年里，我们一起去过了很多地方，见过巴厘岛的海浪，骑过内蒙沙漠的骆驼，在北京的啤酒节蹦过迪，在南京的汤山泡过山泉水，在阿那亚的沙滩前赤脚跑着笑着，也在杭州的小河边缓缓漫步；一起学过很多东西，凛冽的冬日六七点起床去上私教课、第一次学拳击、第一次画油画、第一次冲浪&hellip;</p>
<p>这一年所经历的正像是很喜欢的鲁米的一首诗中所描述的那样：</p>
<blockquote>
<p>我所问出的问题都关于你，</p>
<p>我所踏出的每步都指向你。</p>
<p>处处皆是你，</p>
<p>声音所至，目光所及。</p>
</blockquote>
<h2 id="成长是一件很扫兴的事">成长是一件很扫兴的事</h2>
<p>似乎从世俗的角度来说，一切都进展得还算顺利，工作、恋爱和生活这几项人类被赋予的大的命题似乎都在按部就班甚至过于顺利地进行着，我们作为社会、家庭的的一员似乎也都在履行自己的责任，人越长大，似乎对待这个世界越来越温和，却对自己越来越忽视。</p>
<blockquote>
<p>“I&rsquo;m in Kernel Panic.”</p>
</blockquote>
<p>这是我的微信签名，挂了很久很久了，是对自己的警醒，而如今恐慌的缘由依然存在，生活依然存在着许多事与愿违，不论是向内观还是向外求也依然与理想中的自己相距甚远，但似乎我已经与这个世界和解了，或者说是妥协了，让步给了生活中更朴实而具体的东西，比如亲情，比如社交。</p>
<p>在和学姐去内蒙接连几天见各类亲戚把酒言欢、觥筹交错时，我们都开始怀念几年前的自己，那时的我们都能够有那么多的时间看想看的书、学想学的东西，成为想成为的人，而不是作为一个社会和家庭的符号被桎梏在这里。如今，其实我们索求的东西没有变，学姐依然想去一个远离人群的地方画画，我依然想宅在家里学习新的技术或是开发喜欢的产品，但我们都学会了怎么去扮演一个“好”的社会人，却忘记了如何扮演“自己”。</p>
<p>意识到这种变化的时候其实有一点难过，并不是难过自己变了，而是难过这才是成长，是家人朋友口中的”你成熟多了“，而成长，本来就是一件很扫兴的事。</p>
<h2 id="其他">其他</h2>
<p><img src="https://image.pseudoyu.com/images/birthday_from_strangers.png" alt="birthday_from_strangers"></p>
<p>但依然很感谢在过去的这一年里即使我不再周更还依然关心和关注我的人，甚至今天一早醒来还收到了一位陌生新读者的祝福，字不多，却温暖而感动。</p>
<p>成长确实是一件很扫兴的事，但我依然愿意用周报留下曾经这些非黑即白的、从不妥协的日子，也感谢这些时光中陪伴着我的你们。</p>
<p>祝 27 岁的自己，快乐。</p>
<h2 id="特别活动">特别活动</h2>
<p>用博客来记录生活两年了，留下了许多记忆，也幸运地结识了你们，会在本篇博客的留言中选取 6 位朋友，送上我准备的小礼物，祝愿你们也能够一直快乐。</p>
<p>抽签会持续到 UTC +8 时间 6 月 10 日晚上 23:59 分，结果会在 Telegram Channel 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 中公布，也会在中选的留言评论中回复，到时候会联系你们，再次感谢大家的陪伴。</p>
]]></content:encoded></item><item><title>周报 #60 - 虫子旁、教育理念与 EpubKit</title><link>https://www.pseudoyu.com/en/2024/06/02/weekly_review_20240602/</link><pubDate>Sun, 02 Jun 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/06/02/weekly_review_20240602/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-05-16 到 2024-06-02 这两周生活的记录与思考。 南京游学 在北京曾看过几次一席的演讲，对他们的风格调性还算</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240602.png" alt="weekly_review_20240602"></p>
<p>本篇是对 <code>2024-05-16</code> 到 <code>2024-06-02</code> 这两周生活的记录与思考。</p>
<h2 id="南京游学">南京游学</h2>
<p><img src="https://image.pseudoyu.com/images/yixi_ticket.jpg" alt="yixi_ticket"></p>
<p>在北京曾看过几次一席的演讲，对他们的风格调性还算喜欢，偶然看到要在南京举办一次亲子游学营，其中有一项安排是参观学姐非常喜欢的一位设计师/作家朱赢椿老师的工作室，于是借了个孩子（我妹）一起报名参加了，因为这两周其实也还没走出四处奔波的疲累，所以原本也没抱有太高的期待，却意外度过了有意思的两天一夜。</p>
<h3 id="虫子旁">虫子旁</h3>
<p><img src="https://image.pseudoyu.com/images/zhuyingchun_trip.jpg" alt="zhuyingchun_trip"></p>
<p>大概是由于我有近十年的时间在乡村度过，最开始不是很能理解为什么会有这样一个活动让一群小朋友看虫子，甚至每天工作 debug 的自己也对虫子算不上有太多好感 🤣，但在跟着老师观察各种虫子写的“字”、画的“画”以及吟唱的“乐曲”时，才突然意识到似乎自己已经很久没有好好看过虫子了。</p>
<p>还记得小时候会拿着网兜去捉知了、收集它们褪下的壳珍藏，会在草地里抓蛐蛐来互相争斗，新奇地看着蚂蚁排成队搬运着什么，看到花纹独特的七星瓢虫也会蹲下来观察半天，到了城市后夜晚依然有蝉鸣，在我耳中却只剩噪声和夏日的烦闷。</p>
<p><img src="https://image.pseudoyu.com/images/zhangyuxuan_speech.jpg" alt="zhangyuxuan_speech"></p>
<p>在《虫子旁》这本书里，老师与随园的虫子为伴，以它们的微观视角看着这个世界，想象着它们的生活琐事，甚至有一个环节是拍了一只小蚂蚁被困在水池中微电影，让队伍中的小朋友们发散想象力画画来拯救它。</p>
<p>或许是我们眼中所需要容纳的东西太多太多，其实它们真实而多彩地生活在我们身旁，却从未被我的目光注视过，随之消失的还有我的童心和对生活的好奇。</p>
<p><img src="https://image.pseudoyu.com/images/beside_bugs.jpg" alt="beside_bugs"></p>
<p>而学姐的这份童心却似乎以某种方式存在着，会画几队直升机救援队去拯救蚂蚁，也会在老师给她珍藏的《虫子旁》书上签名时提出要画一只毛毛虫，在得偿所愿时还因为追星成功而哭了。</p>
<p>突然想起大半年前的一个午后在学姐家的书架前徘徊想找一本书打发时间时她有推荐过这本和另一本画了各种形态老虎的书，而我随意翻了下就选了另外的、忘了是《加谬手记》还是《未来简史》之类的更为厚重经典的书，时至今日似乎我才慢慢有些体会到这样了解虫子的时刻于她过去人生的重要性。</p>
<h3 id="教育理念">教育理念</h3>
<p><img src="https://image.pseudoyu.com/images/yixi_speech_xuan.jpg" alt="yixi_speech_xuan"></p>
<p>还有一个很有意思的体验是这次游学营最后有一个少年一席演讲环节，每位小朋友需要准备一个主题演讲来分享这两天的所见所思，而我和学姐作为家长席会协助 Brainstorming 和一些指导。</p>
<p>讨论的时间其实只有十几分钟，却非常明显地呈现出了学姐和我教育理念的差异。学姐更多以引导式提问的方式让妹妹一点点发掘几次行程中印象深刻的点和自己想法的变化，而我更倾向于给出更清晰的框架来帮助她整理思路以保障最好的演讲效果。</p>
<p>深切地体会到了人长大后的观念和思维方式常常会是对于自己成长经历中所缺失部分的代偿。</p>
<p>我偶尔会觉得如果童年的许多时刻得到更多的关注和引导会少走一些弯路，对待像是成绩、表演这样会放在聚光灯下评判的事也会更在意结果本身，下意识就会希望她能够在这些方面获取更多的自信和成就感；而学姐或许因为父母是老师，总是会为她规划更多，似乎学生时代的很多事仅需要按部就班完成，也因而少了许多独立和自我探索的机会，因此她会更注重激发妹妹自己的想法和创造力，不论怎样的结果都看作她成长的珍贵体验。</p>
<h2 id="epubkit">EpubKit</h2>
<p><img src="https://image.pseudoyu.com/images/epubkit_intro.png" alt="epubkit_intro"></p>
<p>最近几周在参与 <a href="https://lutaonan.com/">Randy</a> 的产品 <a href="https://epubkit.app/">EpubKit</a> 的研发工作，在接到他邀请的时候还有些又惊又喜，自己本身是个后端，React 写得半吊子，也还没接触过 Electron，但也很珍惜能够和他亲密合作的机会，产品本身也非常吸引我，于是读了几遍文档，了解了下 IPC 机制后就开始上手写了。</p>
<p>从最开始的新增更新按钮这样的小功能到后面在用户群中收集需求在 GitHub Projects 一项项完成，整个过程非常有趣，也带来了很大的成就感。</p>
<p>而这几周担任开源之夏以及一些训练营项目的导师刚好需要课程资料，于是把之前博客写的区块链/Solidity 相关教程转成了 epub 格式电子书，体验丝滑，也联想到“Eating your own dog food”这一理念，自己参与开发的工具应用恰好满足自己需求的感觉真美好。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/30144095/"><strong>海边的卡夫卡</strong></a>，和《世界尽头与冷酷仙境》相似的双线平行叙事，故事零散地围绕着俄狄浦斯的诅咒、随处可见的隐喻以及少年卡夫卡和老年中田的平淡的旅程故事，各自路途遇到的人、猫却令人印象深刻，都带着不同程度的善和互相救赎，更喜欢中田线。</li>
<li><a href="https://book.douban.com/subject/35171215/"><strong>虫子旁</strong></a>，去完游学营后开始好奇，里面讲的虫子似乎也都更亲切了些。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://heydola.com/">Dola - AI 日历助手</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://1byte.io/articles/luck/">运气与努力</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Kr421L7uD">vlog #56｜女程序员下班后的学习记录｜调研 Based Rollup｜Taiko 文档｜日常英语学习｜在看《不能承受的生命之轻》｜保持思考与记录</a></li>
<li><a href="https://www.youtube.com/watch?v=acxiTIm0CzY">《代码之外》一周年直播</a></li>
<li><a href="https://www.bilibili.com/video/BV1ei421S7hc">vlog #57 | 女程序员下班后的学习记录｜Rust 学习中｜调研 Substrate｜日常英语学习｜专注自我｜读完《不能承受的生命之轻》</a></li>
<li><a href="https://www.bilibili.com/video/BV1if421d7uz">“每天不一定是完美的日子。”</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/34937650/"><strong>庆余年 第二季</strong></a>，学生时代看过小说且第一季留下的印象很好，还挺期待的，但实际看完实在是有些失望，人设、剧情和节奏都变化很大，还到处穿插着烂梗，实在是对不起这历经五年的“打磨”。</li>
<li><a href="http://movie.douban.com/subject/25777620/"><strong>天才：游戏的法则</strong></a>，虽然不怎么看综艺但是很喜欢智斗的环节，经推荐周末看了一下，太精彩了。</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/2inHbB2phEpzpvJmjJbHGn"><strong>Chasing</strong></a> by Mameyudoufu</li>
<li><a href="https://open.spotify.com/track/0QUavh8qOxWeGutYZHgymz"><strong>Unsure</strong></a> by Alan Walker</li>
<li><a href="https://open.spotify.com/track/23vGlzvoccr0VVm62GTxjG"><strong>1 to 10</strong></a> by Midnight Jogging Club</li>
<li><a href="https://open.spotify.com/track/59wlTaYOL5tDUgXnbBQ3my"><strong>A Moment</strong></a> Apart by ODESZA</li>
<li><a href="https://open.spotify.com/track/5glPFBAuA1C85tBcVWVzvO"><strong>満ちてゆく</strong></a> by Fujii Kaze</li>
<li><a href="https://open.spotify.com/track/0tCr7DoUBSdtdSl0rxZmct"><strong>Spring Snow</strong></a> by 10CM</li>
</ul>
]]></content:encoded></item><item><title>周报 #59 - 沙漠之行、家庭与家人</title><link>https://www.pseudoyu.com/en/2024/05/15/weekly_review_20240515/</link><pubDate>Wed, 15 May 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/05/15/weekly_review_20240515/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-05-01 到 2024-05-15 这两周生活的记录与思考。 五一的小长假和家人一起去了内蒙，出发了才反应过来似乎这是</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240515.png" alt="weekly_review_20240515"></p>
<p>本篇是对 <code>2024-05-01</code> 到 <code>2024-05-15</code> 这两周生活的记录与思考。</p>
<p>五一的小长假和家人一起去了内蒙，出发了才反应过来似乎这是第一次全家一起出远门旅行，在这之前似乎最远也就是驱车前往上海迪士尼，还是挺不一样的体验。于是本篇想聊一下家庭与家人，以及一次难忘的沙漠之行。</p>
<h2 id="家庭与家人">家庭与家人</h2>
<p><img src="https://image.pseudoyu.com/images/family_photo.jpg" alt="family_photo"></p>
<p>其实我一直不算是一个恋家的人，小时候在老家长大到七八岁才转学来杭州，大概是由于缺失了一些童年相处的时刻，起初和父母似乎都有一些疏离。</p>
<p>小时候的我成绩中下、木讷不善言辞，也常常混迹于游戏厅，可能够不上问题少年，但也和乖巧懂事搭不上边。父母算是我见过的最为敦厚和睦的人，不论是个体还是小家庭，从小到大从未见他们有过什么争吵，也极少对我有什么指责。</p>
<p>十二三岁的时候似乎突然长大了，开始专心学业，也不再让父母操心，生活学业中的各种决策，从要补哪门科目这样的小事到放弃保送或是高考志愿填报这样对人生轨迹有影响的事都自己一个人决定，也早早地意识到人要为自己所做的一切决定承担后果，父母给予了应有的尊重和自由度，在当时的我看来却少了一些参与感和陪伴，甚至有些羡慕身边被父母“过度关心”的同学们。</p>
<p>高考后想脱离江浙沪这一片熟悉的区域，走出去看看，于是去了武汉，之后的人生也似乎多了几分颠沛流离，有过很多次自己搬家或是匆匆前往另一个城市，但我几乎不会想家。</p>
<p>当然，我和父母的关系很好，有时候出差路过途径杭州已经是深夜，也会在客厅聊上几个小时，讲讲我这些天的见闻与心绪；我和妹妹也很亲近，见到我就不断唠叨着她在学校发生的有趣的事，学业进步了也会第一时间打电话给我炫耀；父母对我也很照顾，会几次驱车几千公里把我从北京接回杭州，也会在我宅在家的时候给我送来饭菜。</p>
<p>可能是由于太久的时间我习惯于所依靠的只有自己，我们相处很像是朋友，因而也很难从亲情中汲取能量。但经过了这些年的成长，渐渐理解到了他们给予了我更珍贵的东西，也开始更感激当初他们的“放手”，让我在面对人生海海时多了不少的勇气与信心。</p>
<h2 id="沙漠之行">沙漠之行</h2>
<p>不过也慢慢在探索家庭相处的模式，反倒是疫情初期在家以及这几个月住在杭州时才多了好些可以成为“family bonding”的感受，去年暑假一起去了上海迪士尼给我妹妹庆生，也在周末的晚上偶尔举家去吃海底捞，这些似乎稀松平常的事在我家过去的二十几年里确实很少发生。</p>
<p>父母早年来到了杭州，也在这里安家立业，努力工作给予了我们不错的物质条件和家庭环境，却忽略了他们自己的生活，所以从小到大我们几乎没有一起出过远门，我和我妹也都属于自得其乐的性格，对此也没什么埋怨，不过总还是少了些家庭记忆，也几乎没留下什么合照。</p>
<p>而最近又因故要前往内蒙，心向往大草原和沙漠已久，于是全家一起去了内蒙古鄂尔多斯。</p>
<p><img src="https://image.pseudoyu.com/images/desert_family_01.png" alt="desert_family_01"></p>
<p><img src="https://image.pseudoyu.com/images/desert_family_02.png" alt="desert_family_02"></p>
<p>从小在江浙长大，后来的轨迹也几乎没偏离东南沿海太多，所以这甚至是我第一次看到沙漠，也很容易联想到刚看完的《沙丘》电影。</p>
<p>重要的不是景本身，而是共同陪伴着走过这些景的人和共同沉淀下来的记忆。</p>
<h2 id="其他">其他</h2>
<p><img src="https://image.pseudoyu.com/images/me_with_nienie.jpg" alt="me_with_nienie"></p>
<p>最近由于工作忙碌与自己的一些人生命题而持续有些精神紧绷，一天下午忙完工作一偏头才看到捏捏一直在旁边陪着，很认真地注视着我，有感觉到被治愈，随着陪伴的时间越来越长，似乎是我更依赖她的存在了。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/26677130/"><strong>弗兰克尔自传</strong></a>，看错书了，感觉晚年自传难免带上很多 ego 的部分，想看的应该是另一本 🥲</li>
<li><a href="https://book.douban.com/subject/30144095/"><strong>海边的卡夫卡</strong></a>，继续开始补村上的书。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://books.epubkit.app/">EpubKit 电子书精选</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://quakewang.github.io/life/24_04-one_year/">杭漂一年</a></li>
<li><a href="https://blog.douchi.space/reading-habbits/">我的读书习惯演化史</a></li>
<li><a href="https://blog.codingnow.com/2024/05/farewell.html">重新启程</a></li>
<li><a href="https://blog.inoki.cc/2024/04/16/Ollama-cn/">Ollama 架构解析 | Inoki in the World</a></li>
<li><a href="https://justgoidea.com/posts/2024-015/">五一随笔 | 槿呈 Goidea</a></li>
<li><a href="https://lutaonan.com/blog/a-year-off-work/">不上班的第一年</a></li>
<li><a href="https://longform.asmartbear.com/slc">Your customers hate MVPs. Make a SLC instead.</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.youtube.com/watch?v=ML743nrkMHw">Create a Desktop App With JavaScript &amp; Electron</a></li>
<li><a href="https://www.bilibili.com/video/BV1KE42157Qp">【杜比视界】是建模还是实拍？它真的能骗过人眼！</a></li>
<li><a href="https://www.bilibili.com/video/BV1jJ4m1J7ba">青年的两次跨越：【非黑即白】和【不过如此】</a></li>
<li><a href="https://www.bilibili.com/video/BV1uC411E7jU">千万不要带老婆去北欧【挪威五大至暗时刻】</a></li>
<li><a href="https://www.bilibili.com/video/BV1Er421J7M8">vlog #54 | 女程序员下班后的学习日常｜雨天宅家充电｜啃 EigenLayer 白皮书｜四月复盘｜持续英语学习｜《福格行为模型》完结撒花</a></li>
<li><a href="https://www.bilibili.com/video/BV1uf421U7eT">理念如此业余的 Vision Pro 真的是出自苹果的产品？【Gamker】</a></li>
<li><a href="https://www.bilibili.com/video/BV17T421Q7ej">给勇敢辞职的朋友煽风点火</a></li>
<li><a href="https://www.bilibili.com/video/BV1PZ42177eS">“结婚 31 年，我妈想跟我爸离婚”</a></li>
<li><a href="https://www.bilibili.com/video/BV16H4y1g7GY">vlog #55｜女程序员下班后的学习记录｜享受独处｜WorldCoin 白皮书｜持续英语学习｜Taiko 学习中｜看完《谁动了我的奶酪》</a></li>
<li><a href="https://www.youtube.com/watch?v=DQacCB9tDaw">Introducing GPT-4o</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ay411e7uD">英语白痴闯挪威，北欧会惩罚每一个 P 人</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/26689409/"><strong>我的家里空无一物</strong></a>，断舍离。</li>
</ul>
]]></content:encoded></item><item><title>周报 #58 - 远程工作这一年</title><link>https://www.pseudoyu.com/en/2024/04/30/weekly_review_20240430/</link><pubDate>Tue, 30 Apr 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/04/30/weekly_review_20240430/</guid><description>《Fix You - Coldplay》 前言 本篇是对 2024-04-10 到 2024-04-30 这几周生活的记录与思考。 从巴厘岛回来已经是 4 月中旬，迎来了生活的另一大变动，再一次从北京“搬</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/fix_you.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Fix You - Coldplay》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240430.png" alt="weekly_review_20240430"></p>
<p>本篇是对 <code>2024-04-10</code> 到 <code>2024-04-30</code> 这几周生活的记录与思考。</p>
<p>从巴厘岛回来已经是 4 月中旬，迎来了生活的另一大变动，再一次从北京“搬”回杭州和重新租房，生活的节奏也随之有了些微妙的变化，恰恰是上次搬回杭州一年之后，于是想在本篇谈谈远程工作这一年。</p>
<h2 id="远程工作这一年">远程工作这一年</h2>
<p><img src="https://image.pseudoyu.com/images/sunset.jpg" alt="sunset"></p>
<p>去年三月经历了一次工作变动，从通勤坐班转为远程工作，也从生活了近两年的北京搬回了杭州。</p>
<p>当时的我急于逃离忙碌却无意义的工作，离开北京只是换一种心情，于我而言，杭州虽是家乡，却也不过是暂留之地，从高中开始就离开了这座城市，后续反倒只有疫情初起那半年才安安心心待在家里，那次回来前匆匆和几位朋友同事见了面道别，父母开车来北京运回了我、捏捏和所有家当，到杭州仅看了一两间房就定了下来，第二天就搬家入住。</p>
<p>当时的自己也没想到短短一年会发生那么多事，琐事就不多讲了，更多聊聊感受吧。</p>
<p>其实在上一份工作的后期，由于疫情和工作模式的各种因素，已经有一些时间可以不去公司了，但是由于开不完的会议和同事的工作时间，仅算是免去通勤之苦。而刚入职在杭州安顿好后，才真正体会到了远程工作的自由度，那时的我一整个月游荡于武汉、上海、深圳、香港、成都、西安等等多个城市，参加了很多活动，时常为了有完整的工作时间而工作到深夜。</p>
<p>仅一两个月后，出行自由的新鲜感就已经褪去大半，开始走向了另一个极端，宅在家里不出门，这时的我花了许多时间学习感兴趣的技术、写博客、看书、陪捏捏玩，乐在其中。可渐渐也发现，虽然我是个 I 人更多依赖与自我对话汲取能量，但长时间的封闭所带来的孤独感与惯性却让积攒起来的能量快速耗尽，尽管时间变多了，工作之外的时间却反倒更难好好利用了，焦虑随之而来。</p>
<p>尔后，随着踏入恋爱，生活的重心渐渐偏移，也不再把自己关在家里，常常往返于北京，工作之外多了更多生活实感，会接送学姐上下班，天气好时会在公园闲逛，回家一起做饭，吃饭时看一些感兴趣的剧或是纪录片。我的工作与生活似乎因为远程办公而实现了某种平衡，似乎美好得令人艳羡。</p>
<p>但这同样存在问题，正如许多人将工作的情绪代入恋爱或婚姻中所引发的矛盾，远程办公却更容易将生活的状态惯性代入工作。然而，生活总是起起伏伏，工作作为一项团队协作的社会化活动却需要更多稳定的状态与产出。我前些日子就常常陷入这样的困境中，生活短时间内有了许多变动，或许需要更多时间去调节与思考，工作也伴随着项目上线而逐渐忙碌，我试图同时做好两边，却在恶性循环中产生了自我怀疑。</p>
<p>时至今日其实我还是没能找到一个完美的解决方案或是平衡点，但逐渐开始面对和承认自己的精力有限，工作中做不好的事会愿意去寻求帮助，下班后或是周末也会给自己远离电脑单纯放松的时刻；周四有时候会去参加良渚的疯狂星期四见到不同的人，平日里也和学姐约好有一些互不打扰的独处时光，各自去阅读、学习或做自己喜欢的事。</p>
<p>也渐渐发现需要给自己和生活设置边界感，没有了上下班的打卡或是通勤也需要有起床的时间，把时间划分为一个个区间来安排任务，也需要给一天的工作一个仪式感的信号，例如回家吃一顿饭或是出门逛个超市。</p>
<p>我依然在探索远程办公给我带来的生活方式的改变，也仍然在适应于这种新的生活节奏，但这一年让我更多专注于自己的内心，生活和家不再是曾经那样工作完暂歇的冷冰冰的避难所，而是自我的延伸，也是一次次接近自我的尝试。</p>
<h2 id="第二次搬家">第二次搬家</h2>
<p>时隔一年，又一次“搬家”回杭州，这次是由于学姐的工作调动，后续也会常驻在杭州，这次搬家似乎与之前很不同，更有了像是把一个家平移到另一个地方，迎接新的生活的仪式感，会断舍离很多不再需要的物品，会想尽办法在某个角落塞进曾经承载过记忆的酒杯或是小玩意。</p>
<p>我其实并不那么在意城市本身，对城市也没有太多归属感，甚至这次搬家于我而言不过也依然在熟悉的地方，流程也与去年差不多，却对这次搬家和后续的生活充满了更多期待，或许慢慢也理解了小王子中的这句话：</p>
<blockquote>
<p>&ldquo;It is the time you have wasted for your rose that makes your rose so important.&rdquo;</p>
</blockquote>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/36680227/"><strong>读库 2400</strong></a>，开始订阅读库，第 0 期的访谈录还挺有意思的。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://github.com/xyhp915/logseq-fenced-code-plus">GitHub - xyhp915/logseq-fenced-code-plus</a></li>
<li><a href="https://github.com/supabase/index_advisor">GitHub - supabase/index_advisor</a></li>
<li><a href="https://epubkit.app/">EpubKit</a></li>
<li><a href="https://book.hardhacker.com/">两个月 $12000 ARR 实践之路 – 硬地骇客</a></li>
<li><a href="https://haye.ai/">Haye AI - In-context AI assistant for macOS</a></li>
<li><a href="https://www.electronjs.org/">Electron</a></li>
<li><a href="https://electron-vite.org/">electron-vite | Next Generation Electron Build Tooling</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.huxiu.com/article/2705104.html">一个县城高中生，被困在小红书的平行世界里-虎嗅网</a></li>
<li><a href="https://ddaocommunity.notion.site/Telegram-Channel-25f72489ba3c4a4db5d24ca7df720b13#5b041c8e4fff4e38a6411e7396be7703">如何基于 Telegram Channel 快速创建链上内容分享社区？</a></li>
<li><a href="https://frostming.com/2024/diversity/">我们生活在差异里 | Frost&rsquo;s Blog</a></li>
<li><a href="https://blog.gujiakai.top/2024/04/fake-selfhost-lover">虚假的自托管爱好者</a></li>
<li><a href="https://elizen.me/posts/2024/04/stop-reading-the-news/">拒看新闻的生活艺术</a></li>
<li><a href="https://s.foresightnews.pro/article/detail/58768">何一致美国法官信件全文：一个更真实的赵长鹏是怎样的？</a></li>
<li><a href="https://mp.weixin.qq.com/s/XzAjnC1_0Z9JtdrLi3IllA">给自己人生二次毕业的思考</a></li>
<li><a href="https://chengweihu.com/rules/">Useful Personal Rules</a></li>
<li><a href="https://lutaonan.com/blog/electron-sqlite/">在 Electron 中使用 SQLite 的最好方式</a></li>
<li><a href="https://www.electronjs.org/docs/latest/tutorial/ipc">Inter-Process Communication</a></li>
<li><a href="https://nutjs.dev/blog/i-give-up">I&rsquo;m giving up — on open source</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.youtube.com/watch?v=BGMY3dn5V4U">【硬件科普】NAS 究竟是什么东西？你需要一台 NAS 吗？</a></li>
<li><a href="https://www.youtube.com/watch?v=8J0Up8B7YkU">小白成神之路，网络知识看这一期足矣！软路由 桥接 端口转发 旁路由 单臂路由 IPv4 IPv6 DDNS</a></li>
<li><a href="https://www.bilibili.com/video/BV1uH4y1T7Bi">vlog #51 | 日常学习与治愈碎片 📷 ｜持续学习英语｜op stack 学习中｜阅读《福格行为模型》｜珠海的春天与大海</a></li>
<li><a href="https://www.youtube.com/watch?v=LB8KwiiUGy0">Node.js: The Documentary | An origin story</a></li>
<li><a href="https://www.bilibili.com/video/BV1ym421x7Py">如何选择你的“人生镜头”？｜ SEL1625G</a></li>
<li><a href="https://www.bilibili.com/video/BV1FZ421t7cV">北海道独自旅行 VLOG❄️｜属于冬天的白色浪漫，发现不一样的札幌～</a></li>
<li><a href="https://www.youtube.com/watch?v=uIcUi_CF1jg">「黑貓」這會是最合適 Mac 的便攜屏嗎？JSAUX FlipGo 便攜雙屏評測體驗</a></li>
<li><a href="https://www.bilibili.com/video/BV1Z1421d7ky">一个人游北海道｜漫步小樽&amp;函馆的小众之旅～❄️</a></li>
<li><a href="https://www.bilibili.com/video/BV17q421F7dA">VLOG #52｜程序员下班后的日常学习记录｜工作累了就去林子看看书吧｜持续英语学习｜OP Stack 学习中｜《福格行为模型》｜在林子里露营的慢生活</a></li>
<li><a href="https://www.youtube.com/watch?v=CWAi_2oLhYg">Backend Developer Roadmap - Everything you need to know in 2023</a></li>
<li><a href="https://www.bilibili.com/video/BV1Zt421j7ft">专治嘴硬！挑战世界上最恐怖的鬼屋！</a></li>
<li><a href="https://www.bilibili.com/video/BV1q1421X7bX">vlog #53｜程序员下班后的日常学习记录｜工作再忙，也要好好充电呀｜学习各种 DEBUG 工具｜快看完《福格行为模型》啦，这书贼棒｜英语持续学习中</a></li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://hardhacker.com/podcasts/661d2dc748c40e2fb07c6b99">EP56 沉浸式翻译背后的故事 | 对话创始人 Owen</a></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><a href="http://movie.douban.com/subject/3001114/"><strong>沙丘</strong></a>，诗意而富有哲理的设定，原始宗教+科技文明+封建帝制的世界观很惊艳，主角的梦境和情感、预言和狂热的迷信交织推动着剧情发展，有一种娓娓道来的宏大叙事感。</li>
<li><a href="http://movie.douban.com/subject/35575567/"><strong>沙丘 2</strong></a>，接连看了一二部，总期待这一部能够更多呈现世界观设定与剧情的内核，但看到的更多是酣畅的对决、对主角的考验以及战争，感觉更侧重在个人的变化成长，却少了些叙事，打算去补一下原著了。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35417202/"><strong>地球改变之年</strong></a>，很有趣的视角，在人类社会视为天灾的疫情对于整个地球与其他物种来说或许无关紧要，又或许少了人类的干预它们又有了更多良性的改变，平静而美好。</li>
<li><a href="http://movie.douban.com/subject/21355794/"><strong>企鹅群里有特务</strong></a>，从企鹅的视角看它们迁徙、觅食、繁衍的日常，迁徙、觅食、繁衍以及与它们的天敌们斗智斗勇，好萌！</li>
</ul>
]]></content:encoded></item><item><title>周报 #57 - 生活在别处（巴厘岛之行）</title><link>https://www.pseudoyu.com/en/2024/04/10/weekly_review_20240410/</link><pubDate>Wed, 10 Apr 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/04/10/weekly_review_20240410/</guid><description>《Fix You - Coldplay》 前言 本篇是对 2024-04-01 到 2024-04-10 这周生活的记录与思考。 下笔的当下其实已经是五月底了，不知不觉又拖了两个月之久，其实并不只是周</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/fix_you.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Fix You - Coldplay》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240410.png" alt="weekly_review_20240410"></p>
<p>本篇是对 <code>2024-04-01</code> 到 <code>2024-04-10</code> 这周生活的记录与思考。</p>
<p>下笔的当下其实已经是五月底了，不知不觉又拖了两个月之久，其实并不只是周报的更新，最近发生的事情之多似乎让我的整个生活都有些难以抽离，但其实在连我自己都未发觉的时候，周报这一记录生活的载体已经是自己的一部分了，失去记录的这部分时间，常常也会觉得失去了自我，于是还是打算找回来。</p>
<p>不同于往常的总集篇，我这次会按照时间顺序来记录，虽然由于时间跨度过长难免失了细节，但回忆的过程总还是能抓住些，这是第一篇，努力追进度中。</p>
<h2 id="生活在别处">生活在别处</h2>
<p>三月的后半月忙于早起练车和连续科二科三的考试，疲惫却有终有收获，在 4.3 拿到了我的驾照。前些篇章也讲过我对学车并无好感甚至有些抵触，但真正完成了这件事后依然感受到莫名的成就感，后续在杭州的出行也确实受益其中。</p>
<p>紧接着就是清明节，也是计划许久的巴厘岛之行。</p>
<p>米兰昆德拉有一本书叫《生活在别处》，书名很贴切地描述了我当时的心情。其实自己不算热爱旅行，对于蓝天白云海岛沙滩也没有什么特别的执念或是向往，只是在生活的各种压力接踵而至之时，似乎别处的生活能给自己带来一丝喘息，既是逃离，也是追寻。</p>
<h3 id="度假与旅行">度假与旅行</h3>
<p><img src="https://image.pseudoyu.com/images/bj_to_bali_airline.jpg" alt="bj_to_bali_airline"></p>
<p>北京飞巴厘岛要在菲律宾中转，总航程接近 10 个小时，在 kindle 上看完了《红与黑》后睡了大半程，醒来时已近黄昏，看向窗外，夕阳与云层相叠，心情似乎也随之明朗了许多。</p>
<p><img src="https://image.pseudoyu.com/images/bali_blue_sky.jpg" alt="bali_blue_sky"></p>
<p>疲累之下抵达酒店已经是凌晨了，起初因为烦闷的空气和随处可见的蚊虫并没有带来多好的第一印象，但一切情绪都在第二天早上出门看到如画一样的海滩时都烟消云散。前两天的行程多在沙滩和泳池，典型的度假模式，却在第二天穿着巴厘岛本地 T 恤踩着凉拖时，才真正开始自己的旅行。</p>
<p>和学姐有闲谈过度假和旅行的差异，像之前我们去秦皇岛阿那亚过纪念日时，更多在意的是两人处于一个环境中，重要的是放松的心境，无关地点本身，后续去北京或是南京汤山泡汤泉也是如此；而旅行不同，所选择的地方、食物、文化包括见到的人都是重要的一部分，我更享受的是融入和感受，一餐并不可口的饭菜、路边难闻的摩托车尾气或是和街边摆摊小贩的讨价还价都会是记忆的一部分。</p>
<p>说来神奇，一路见过了壮观的瀑布、遍布漫山的猴子、神圣的寺庙仪式和许多许多，印象最深的却是快要离开时在库塔的一家小店里松弛地躺在地上的店家，我们在挑选手链时他依然躺着，直到结账时才象征性地讨了下价，又继续躺着了。</p>
<p>似乎从大学某个时刻开始，我一直忙碌于各种事，学业、社团、工作，似乎那时开始就没有真正的放空时刻，当然，发呆、懒惰或是不务正业刷剧常有，我指的是能够 think nothing 的时刻。</p>
<p>即使是明知不会用到，每次出行也都会背上电脑，也如网上传的各种梗那样在朋友婚礼现场、游乐园、餐厅、路边垃圾桶上开过会、写过代码，似乎这是我认可甚至有些享受其中的生活方式，而在库塔，我似乎看到了隔着几千公里外的异国另外一种生活方式，这种生活并不属于我，也非我心之所向，却能够感受到这种“什么都不做”的轻松与自在。</p>
<h3 id="旅行剪影">旅行剪影</h3>
<p><img src="https://image.pseudoyu.com/images/bali_views.png" alt="bali_views"></p>
<p><img src="https://image.pseudoyu.com/images/bali_snapshot.png" alt="bali_snapshot"></p>
<p>其余便是些常规的旅行记录，巴厘岛风景确实不错，但美食实在是一般，基本上在酒店吃的自助餐；在 Nusa Dua 休整了两天后去了库塔，<a href="https://t.me/pseudoyulife/2849">初次体验了冲浪</a>，虽然只是浅海滩，在海浪里栽了好多次，也喝了很多海水，但在一个多小时的练习后已经能够冲上几个小浪了；在 klook 上雇了当地导游，带我们去了瀑布、圣泉寺，还在猴林里被猴子打了眼镜。除了冲浪外算是中规中矩的一次游玩，拍了些视频，或许 vlog 第二弹有些素材了。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/30218046/"><strong>A Philosophy of Software Design</strong></a>，软件设计哲学。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://github.com/heyform/heyform">GitHub - heyform/heyform</a></li>
<li><a href="https://doubanbook.plus/">Douban Book+</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.linkedin.com/pulse/while-everyone-distracted-social-media-successful-people-simmons-1e/">While Everyone Is Distracted by Social Media, Successful People Double Down on an Underrated Skill</a></li>
<li><a href="https://wiki.heptabase.com/how-Heptabases-founder-use-Heptabase-for-learning?lang=zh-Hant">How Heptabase’s Founder Use Heptabase for Learning, Research, Planning, and Writing</a></li>
<li><a href="https://blog.cloudflare.com/python-workers">Bringing Python to Workers using Pyodide and WebAssembly</a></li>
<li><a href="https://tianxianzi.me/2024/04/01/book_movie_2024_1st_season/">2024 第一季度书影音总结</a></li>
<li><a href="https://island.shaform.com/zh/2020/04/01/hope/">理想的生活</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV13p421y7iv">可是她已经 72 岁了啊</a></li>
<li><a href="https://www.bilibili.com/video/BV1Nt421n7uX">灵魂拷问 AI 手机</a></li>
<li><a href="https://www.bilibili.com/video/BV1cz421Z7Tj">study vlog #50｜学习可以消除所有的不快乐呐｜忙里偷闲的充电记录｜英语学习｜读《福格行为模型》｜日常学习</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #56 - 面基 Randy 与考科目二</title><link>https://www.pseudoyu.com/en/2024/03/31/weekly_review_20240331/</link><pubDate>Sun, 31 Mar 2024 16:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/03/31/weekly_review_20240331/</guid><description>《Fix You - Coldplay》 前言 本篇是对 2024-03-25 到 2024-03-31 这周生活的记录与思考。 这周最开心的事就是见到了 Randy，追星成功，聊得很开心；因为不想影响</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/fix_you.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Fix You - Coldplay》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240331.png" alt="weekly_review_20240331"></p>
<p>本篇是对 <code>2024-03-25</code> 到 <code>2024-03-31</code> 这周生活的记录与思考。</p>
<p>这周最开心的事就是见到了 <a href="https://twitter.com/randyloop">Randy</a>，追星成功，聊得很开心；因为不想影响工作而连续四五天 5 点多起床出发去驾校练实车，痛苦但一次过了科目二，不亏；继续健身运动，整体身体状况还不错；筹备节后搬家回杭州的事宜，感觉可以更多参加疯狂星期四了；还有很多有意思的事。</p>
<h2 id="面基-randy">面基 Randy</h2>
<p><img src="https://image.pseudoyu.com/images/meet_with_randy.jpg" alt="meet_with_randy"></p>
<p>之前好像有看到过一篇文章说，如果你喜欢一篇文章、一个开源产品或是什么，不要吝于言辞去表达自己的感谢和想法，也许仅仅是一句话就会对作者产生莫大的鼓励，所以其实我还挺喜欢和珍惜能够与屏幕对面的人面对面沟通的机会的。</p>
<p>而在许久之前看到 Randy 在推上发了一条要来北京，可以找他约咖啡的<a href="https://twitter.com/randyloop/status/1764551037095223590">推文</a>，上次他去良渚玉鸟集疯狂星期四的时候我刚好不在杭州，一直很遗憾，但真的有了和偶像面对面的时候，却又有些犹疑，既有初次见面的紧张感，又担心没什么话可以聊而浪费了他的时间。</p>
<p>我初次了解到 Randy 大概是 21 年，是在 <a href="https://frostming.com/">Frost</a> 写的「<a href="https://frostming.com/2021/04-28/self-host-comment-system/">自建、免费、开源的评论系统解决方案</a>」一文结尾提到了这一句：</p>
<blockquote>
<p>最后也推荐一下<a href="https://lutaonan.com/">作者的博客</a>，内容质量高，非常启发思考。</p>
</blockquote>
<p>当时初入技术领域，不认识什么开发者，对开源也没什么具体的概念，只是好奇这样一个小众精品的评论系统背后是一个怎样的人，于是点进去了。</p>
<p>不知不觉就看完了所有的文章，可以说他符合了当时的我对即将成为的程序员这一群体的所有期待。</p>
<p>他有技术理想和创造力，能够通过技术实现自己想做的事却又不拘于技术；对于生活有自己的见解和追求，代码之外有更多自己的兴趣爱好；乐于分享自己的思考，文字有真诚而具有感染力；不囿于世俗标准和所谓光环，本科退学、大厂裸辞。</p>
<p>而彼时的我还未从香港毕业，即将开始求职面试，对即将到来的技术生涯期待却又迷茫，既担心自己是否能够在这条未知的路走下去，又担心自己会不会在繁重的工作下失去创造力和技术热情。可以说他让我看到了未来自己想成为的样子与可能性，也让我真正开始思考开源、分享和创造的真谛。</p>
<p>而之后的我用了他的 Cusdis 评论系统，在他招募 v2 团队的时候也参与了一些微小的开发，第一次有了私聊沟通，得到了一些 code review 和代码指导；跟着他的视频通过 Logseq 搭建了自己的个人项目/知识管理系统；在他发布 <a href="https://notepal.randynamic.org/">notepal</a>、<a href="https://epubkit.app/">epubkit</a> 的时候都抢先体验和报一些小 bug；直到这次鼓起勇气去约见面。</p>
<p><img src="https://image.pseudoyu.com/images/lego_hat.jpg" alt="lego_hat"></p>
<p>见面之前想挑选一个礼物作为对他这一路以来对我的启发和帮助的感谢，最后选了哈利·波特分院帽的一款乐高和毛姆的一本「阅读是一座随身携带的避难所」小书。</p>
<p>对于刚踏入代码这一“魔法”世界的我来说，前方有着无数的未知和选择，而他就像分院帽一样，让我听从内心的声音，坚定地选择了自己的路。</p>
<p>见面后开心地聊了三个多小时。听到说他也常看我的周报，惊讶而欣喜；了解了他微软离职后的生活状态与所思所想，咨询了我对于工作规划、发展方向的一些困惑，碰撞了一些关于独立博客、前端学习、自媒体的一些想法，兴奋地计划了一些有意思的事，还有很多很多。</p>
<p>三年前刚点开 Randy 博客主页的我一定不会想到有一天能和他在北京的一家咖啡厅里面对面畅谈，追星成功的喜悦之余，也感慨自己一路走来的起伏与变化，一切似乎都值得了。</p>
<h2 id="考科目二">考科目二</h2>
<p><img src="https://image.pseudoyu.com/images/kemu2_feichirensheng.jpg" alt="kemu2_feichirensheng"></p>
<p>大四的时候曾在大学附近的一个驾校学过一段时间车，也考完了科目二，但是后续因为毕业、去香港读书和疫情等种种原因，一直拖到过期了。而当时烈日下练车的不好体验让我对学车这件事一直没什么热情，甚至还有些抵触。直到今年才下定决心开始。</p>
<p>年前考完了科目一后又拖到了 3 月中旬才开始练车。报名了周四上午的科目二考试，经过了四次 VR 模拟练车后，这周连着三天五点多起床坐班车去驾校实车练习，早起的痛苦和飘忽不定的点位让焦虑在周三达到了峰值，抱着随缘的心态参加了一早的考试，但是满分一次通过了，开心！！！毕业已经有两年多了，感觉很久没体会过的“考试”所带来的压力与成就感在考驾照上倒是找回来了。</p>
<p>不过由于上午学车，下午赶工作，第二天还得早起的魔鬼安排，在输入输出上本周有些难以顾及，希望下周的科三能顺利通过吧！</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/35781152/"><strong>红与黑</strong></a>，从一个视频看到的讲解，关于于连的自尊和因此表现出来的傲慢的描述印象很深，正在看。</li>
<li><a href="https://book.douban.com/subject/34802764/"><strong>加缪手记</strong></a>，刚开始看。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://github.com/RSS3-Network/etherface">GitHub - RSS3-Network/etherface: Ethereum Signature Database</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://nova.moe/crypto-simple-earn/">用 Grafana + InfluxDB 可视化 APR——Binance（币安）和欧易（OKX）简单赚币（理财）对比</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1x1421S7Y3">study vlog #49 | 越加班越想学习 | 程序员下班后的学习日常｜务必多多记录生活｜英语学习｜看完了《365 天的静心冥想》｜一些碎碎念</a></li>
<li><a href="https://www.bilibili.com/video/BV1fq421A7aj">在世界的尽头，我们重新开始吧！</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35196946/"><strong>三体 第一季</strong></a>，我不算是三体的原著党，之前看腾讯出的国内版本观感上也没什么怨言，但依然对奈飞版本有挺高的期待，刚出来就花了几天刷完了，整体来说画面、剧情和节奏都还可以，但也没看到什么亮点，算是合格的会让人期待第二季的改编吧。</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/6WY4wvlmgccWapnIg14Vy0"><strong>Merry Christmas Mr. Lawrence</strong></a> by Ryuichi Sakamoto</li>
</ul>
]]></content:encoded></item><item><title>周报 #55 - 油画体验、博客系统升级与对 self-hosting 的思考</title><link>https://www.pseudoyu.com/en/2024/03/24/weekly_review_20240324/</link><pubDate>Sun, 24 Mar 2024 05:20:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/03/24/weekly_review_20240324/</guid><description>《Fix You - Coldplay》 前言 本篇是对 2024-03-17 到 2024-03-24 这周生活的记录与思考。 这周重拾了很多工作学习的热情，把 TODO 里列了很久的博客评论系统和数据统计系</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/fix_you.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Fix You - Coldplay》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240324.png" alt="weekly_review_20240324"></p>
<p>本篇是对 <code>2024-03-17</code> 到 <code>2024-03-24</code> 这周生活的记录与思考。</p>
<p>这周重拾了很多工作学习的热情，把 TODO 里列了很久的博客评论系统和数据统计系统迁移做完了，有种整理规置了书桌的舒心感；周末第一次体验了油画，给自己画了一个新头像，成就感满满；恢复了健身；继续学车并报考了科目二；还有很多有意思的事。</p>
<h2 id="油画体验与新头像">油画体验与新头像</h2>
<p>我和学姐性格和喜好迥异，她有许多我不曾涉足的兴趣爱好，而我着迷的似乎往往也是她未知的领域，于是我们前段时间有立一些 flag 说带对方体验自己的爱好/技能，我定的是双拼和编程这两项，目前双拼已经卓有成效；她则是在这周带我去上了一节油画课。</p>
<p>我对画画其实确实是零基础，也从不觉得自己和这些艺术搭边的爱好有什么关联，只是好奇于究竟是怎样的吸引力能促使她常常在素描或是油画画室坐上大半个下午打磨着一些小细节，期待之余还有些紧张。</p>
<p><img src="https://image.pseudoyu.com/images/oil_painting_experience.png" alt="oil_painting_experience"></p>
<p>按理说初学者不太会从人像这样的复杂主题开始，只是想要换一个新头像，画室的老师也很 nice 地愿意辅导，选了一张以“头”为主的照片就开始了，画轮廓、调色、上色、根据光线和位置加细节，一切比想象得更加有趣，几种简单的颜色组合能够幻化出很多的层次，创造本身也如同魔术一样令人心驰神往。</p>
<p><img src="https://image.pseudoyu.com/images/yu_painting.jpg" alt="yu_painting"></p>
<p>一个下午的成果如图，笔触生涩，却是我用自己的画笔创造出来的作品，也有着与众不同的意义，换了全平台的头像。</p>
<h2 id="博客系统升级">博客系统升级</h2>
<h3 id="cusdis---remark42">Cusdis -&gt; Remark42</h3>
<p>之前写过一篇「<a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a>」，有讲过我博客使用的是自部署的 <a href="https://lutaonan.com/">Randy</a> 开源的 <a href="https://cusdis.com/">Cusdis</a> 评论系统，从 2021 年中就开始使用了，到现在整整三年了，除了最开始的时候因为 Heroku、Railway 相继收费而折腾了一下部署平台外，一直都稳稳地运行着。</p>
<p>不过我在使用中也有遇到一些问题：</p>
<ol>
<li>大概是由于微信内置浏览器做了一些魔改，在博客从微信聊天/对话打开是看不到评论组件的</li>
<li>尽管可以输入邮箱，但并不支持订阅评论回复</li>
<li>需要管理员手动审核评论，但评论提醒的 TG Bot 时常失效而错过评论</li>
</ol>
<p>另外因为其核心功能已经许久没有什么更新，比起其他较为成熟的评论系统也显得有些简陋，不过由于我也秉持着够用即可的原则，一直没动迁移/更新的念头，只有在其中一阵子在学前端时还参与了一些 Cusdis V2 版本的开发，不过也没做多久开发小群就不再活跃了。</p>
<p>而最近几个月因为博客几乎没怎么更新，也没收到评论 TG Bot 的提醒，一直以为是没人评论，直到最近数据库托管的 Supabase 平台需要更换一下 Connection String，我才发现原来陆陆续续有几十条评论，有的是关心和鼓励，也有的是咨询一些技术问题，但看到的时候也已经是一两个月后了，还挺不好意思的。</p>
<p>再加上更换数据库 URI 时 Vercel 部署一直报错，于是下定决心从 Cusdis 迁移，调研了一圈后选择了和 <a href="https://reorx.com/">reorx</a> 在「<a href="https://reorx.com/blog/blog-commenting-systems/">更换博客评论系统</a>」一文中最后选定的 <a href="https://remark42.com/">Remark42</a>。</p>
<p>单纯就配置选项来说比起 cusdis 还是丰富了不少，目前配置了常用的几种社交账号登录（GitHub、Twitter、Telegram、邮箱）、可以匿名评论、支持邮件订阅回复提醒并且也设置了 TG bot 提醒，并且部署在 <a href="https://fly.io/">fly.io</a>，go 单二进制 + 数据库单文件，很舒服的解决方案。</p>
<p>而因为之前积攒了很多评论数据，因为 Cusdis 使用的是 pg 而 Remark42 使用的是 boltdb 单文件数据库，后者不支持远程连接，没法直接 sql 语句写入，只能先联表查询导出需要字段的 json 文件，再手动执行 Migrator 脚本（而因为官方只支持 wordpress、disqus 和 commento 这三个，于是还得手动实现转换逻辑），幸好是熟悉的 go 写的，花了一晚上终于肝完了 <a href="https://github.com/pseudoyu/remark42/pull/1/files">pr</a>！！！</p>
<p>迁移完才发现这些年一共积攒了 438 条评论，自己都惊到了，都回来了！！！</p>
<h3 id="umami---goatcounter">Umami -&gt; GoatCounter</h3>
<p>本着既然连评论系统都换了的心态，干脆把一直也是个心结的数据统计系统也更新了。</p>
<p>Umami 其实一直用得倒没出现什么问题，直到我更换时尽职地跑了整整一年半，只不过可能因为自己用得比较早，在一次大版本更新的时候数据库 Migration 脚本出现了不兼容的字段更新，其实有点不理解这样量级的开源项目为什么会出现这样的问题，也看到 issue 中有很多其他用户有同样的诉求，但最终并没有给出一个比较好的解决方案。</p>
<p>但是又由于自己已经运行了大半年，舍不得之前的数据，于是一直拖着，直到现在还停留在自己 fork 的一个旧版本，虽然倒也没有对新版本有那么多功能上的诉求，只是有点半强迫症地感觉不舒服，但也就拖着。</p>
<p>于是趁着这次博客大施工，就顺便换为了 <a href="https://www.goatcounter.com/">goatcounter</a>，同样是 go 单二进制 + sqlite 数据库单文件部署在 fly.io，又是很舒服的配置。</p>
<p>有意思的是，因为 goatcounter 的作者很有坚持，觉得这样单文件的应用容器化反而会增加更多维护成本，所以不提供官方镜像，不过自己在 vps 或者 serverless 平台部署有个镜像还是方便一些，所以用 Github Actions 做了一个 CI 每天拉取最新代码、构建镜像和上传 Docker Hub，有需要的可以使用，对应的 Dockerfile 和 Docker Compose 文件也可以参照<a href="https://github.com/pseudoyu/goatcounter/pull/1/files">这个 PR</a>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker pull pseudoyu/goatcounter
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/yu_umami_record.png" alt="yu_umami_record"></p>
<p>这半年的周报输出频率堪忧，除了一篇关于信息管理系统的长文外也没有什么满意的输出，所以决定之前的访问数据就不作迁移了（复杂度应该也高很多），感谢每一位点进我博客网站的赛博朋友们，截图以作留念。</p>
<p>最近感觉折腾这些软硬件/服务配置的心情回归了，也有了很多博客想法，新的数据就当作一个新的开始了 🫡</p>
<p><img src="https://image.pseudoyu.com/images/yu_goatcounter_data.png" alt="yu_goatcounter_data"></p>
<p>更换的一个最大动力还是 goatcounter 的界面跟我的古早博客主题一样完美卡在我的审美点上，感觉我能一直盯着这个界面看 🤩 无法抗拒这种 Retro Internet 设计。</p>
<h2 id="关于-self-hosting-的一些思考">关于 self-hosting 的一些思考</h2>
<p>其实我对于 vps 和 serverless 平台经历过许多次的折腾和反复，算不上心得，但确实是深度体验后的经验之谈了。</p>
<p>曾经的我算是 serverless 的拥趸，当时几乎是能在 Vercel/Railway 等 PaaS 平台部署的绝不自己搭建，能在几乎没有运维成本的前提下还能获得媲美大平台的稳定性，也确实践行了把自己的各项服务都 serverless 化了，确实经历过很长一段时间的省心省力。</p>
<p>然而随着经历过 HeroKu 和 Railway 相继中途改变收费模式，以及 n8n 在 Railway 上跑出单月十几刀的账单时，才也逐渐发现一些弊端，serverless 确实是减少了对于自己运维服务器的要求，但相对应地也要受制于这些平台的规则。</p>
<p>收费模式其实只是一部分缘由，比起自己租赁一台配置不错的服务器，成本倒是还好，只是似乎又将自己的服务和数据绑定在一个中心化平台了，会有一种任人宰割的不安全感；而当想要迁移到另一个平台时，往往平台不会给出较为方便的解决方案，自己去折腾的操作复杂度比起服务器之间 docker-compose 文件外加挂载 volume 直接复制要高不少。</p>
<p><img src="https://image.pseudoyu.com/images/vps_service_01.png" alt="vps_service_01"></p>
<p><img src="https://image.pseudoyu.com/images/vps_service_02.png" alt="vps_service_02"></p>
<p>因此也把自己的很多服务都放在服务器上，稳定地跑了 430+ 天。</p>
<p><img src="https://image.pseudoyu.com/images/xiao_self_hosted.png" alt="xiao_self_hosted"></p>
<p>而前几天和 <a href="https://reorx.com/">reorx</a> 聊到服务部署方案时，他提到了现在会优先考虑 sqlite 或其他同类文件数据库的 self-host 方案，能够减少许多维护和迁移的成本和复杂度。</p>
<p>后来我想了想，其实不管是在 vps 还是 serverless 平台，本质上都是 self-hosting 的选择，其实更多需要的是思考部署的服务依赖本身，如我之前 Cusdis、Umami 很多不稳定性来源其实是在服务端在 Vercel、Netlify 这样的 PaaS，而数据却托管在 Supabase 这样的 DaaS，一个自用的服务同时依赖两个平台，任何一方出了问题都会导致服务不可用，vps 所做的其实也不过是把这样的风险变为单点自己维护而已。</p>
<p><img src="https://image.pseudoyu.com/images/flyio_services.png" alt="flyio_services"></p>
<p>于是又久违地开始折腾，把 Remakr42 与 GoatCounter 都部署在了 <a href="https://fly.io/">fly.io</a> 上，因为单二进制+文件数据库，性能消耗完全在 free plan 的范围内；而把 RSSHub、n8n、图床等相对依赖更重且需要对外提供服务的应用还是继续更集中地放在 vps 上；而把一些性能或存储消耗较高的服务则是跑在 Home Server 上并且通过内网穿透方案来暴露。</p>
<h2 id="其他">其他</h2>
<p><img src="https://image.pseudoyu.com/images/applite_overview.png" alt="applite_overview"></p>
<p>把 Mac 从各个来源安装的软件都统一了一下，原则就是能 brew cask 安装的都重新安装，之前命令行需要自行搜索没什么感觉，现在有了 GUI 查看后发现确实软件源比想象得丰富很多，这种方式便于管理/迁移且相对能保障软件的来源安全性 🫡</p>
<p>从 RapidAPI 切换到一个新的 API 调试工具 <a href="https://www.usebruno.com/">Bruno</a>，预购了它的 Golden Edition，目前使用起来体验很不错。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/35781152/"><strong>红与黑</strong></a>，从一个视频看到的讲解，关于于连的自尊和因此表现出来的傲慢的描述印象很深，正在看。</li>
<li><a href="https://book.douban.com/subject/34802764/"><strong>加缪手记</strong></a>，刚开始看。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://github.com/milanvarady/Applite">GitHub - milanvarady/Applite</a></li>
<li><a href="https://github.com/usebruno/bruno">GitHub - usebruno/bruno</a></li>
<li><a href="https://github.com/plankanban/planka">GitHub - plankanban/planka</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://antfu.me/posts/mental-health-oss">Mental Health in Open Source</a></li>
<li><a href="https://justgoidea.com/posts/2024-009/">重新理解 Heptabase</a></li>
<li><a href="https://fly.io/javascript-journal/demystify-docker-js/">Demystifying Docker for JavaScript</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV131421Q7KT">去东京，我只做三件事！</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35196946/"><strong>三体 第一季</strong></a>，在看。</li>
</ul>
]]></content:encoded></item><item><title>周报 #54 - 漂流计划、钱包被盗与 Home Server</title><link>https://www.pseudoyu.com/en/2024/03/16/weekly_review_20240316/</link><pubDate>Sat, 16 Mar 2024 05:20:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/03/16/weekly_review_20240316/</guid><description>《Photograph - Ed Sheeran》 前言 本篇是对 2024-03-01 到 2024-03-16 这两周生活的记录与思考。 如上篇周报所述，我开启了一段漂流计划，最后以「杭州 -&amp;gt; 上海</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/photograph.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Photograph - Ed Sheeran》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/weekly_review_20240316_cover.png" alt="weekly_review_20240316_cover"></p>
<p>本篇是对 <code>2024-03-01</code> 到 <code>2024-03-16</code> 这两周生活的记录与思考。</p>
<p>如上篇周报所述，我开启了一段漂流计划，最后以「杭州 -&gt; 上海 -&gt; 湖州 -&gt; 南京 -&gt; 北京」这样近两周的旅程告一段落，几乎都处在江浙，没什么特殊的风景，更多还是关于人和事；由于主钱包被盗且没找出原因，重装了两台主力电脑，也刚好重新整理开发环境配置；把家里的 Mac Studio 作为 7/24 的 Home Server，跑了 Home Assistant 等常驻应用控制智能家居，折腾却也有趣；工作上组里忙了许久的 Alpha 主网上线，久违的兴奋感；还有很多有意思的事。</p>
<h2 id="漂流计划">漂流计划</h2>
<p><img src="https://image.pseudoyu.com/images/tianmushan_view.jpg" alt="tianmushan_view"></p>
<p>年后开启的漂流计划第一站是上海，这些年前前后后去过大概也有几十次了，有过一两个月实习的长居也有偶尔的短暂停留，通常都是有事要办或是有人要见，真正“生活”可能还是少有的机会，没选什么繁华的区域，也没安排什么特别出行的计划，只是选了个离朋友还算接近的地点定了一周的民宿，就又回归了正常工作学习的节奏。</p>
<p>偶尔下楼到周遭的商圈觅食，到了周末也和许久未见的大学舍友约饭，剩余时间依旧宅在酒店里工作，顺便还刷完了 mark 已久的「西部世界」，很巧的是刚好有个同事住在离我一两公里的地方，于是也有了一次小小的三人团建。</p>
<p>接下来去了趟湖州，在朋友 <a href="https://twitter.com/gxgexiao">Xiao</a> 家里住了一周。和他的相逢是源自一年前的某天他在<a href="https://www.gexiao.me/2023/07/01/lets-wander/">各地巡游溜达</a>的时候发了一条在杭州的朋友可以约见面的推文，彼时的我刚回杭，对未来的生活充满着许多的未知和期待，鼓起勇气约了一次晚饭和西湖边漫步，虽然是第一次见面并且也没什么交集，却真诚而信任。</p>
<p>后来他搬到了湖州，我 8 月曾约了一次相见却因为种种缘由而没能成行，有些遗憾，于是趁着这次漂流赴约。在莫干山走野路上山，在安吉云上草原的悬崖上漫步，也去了两个数字游民公社参观，对他们的社区氛围很是心动。感觉今年的我似乎找到了一种久违的生活上的松弛感，会更愿意去见一些人和体验一些事，生活也不仅仅是工作和学习，人和与人有关的一切都对我产生了更多的吸引力，也由于和许多“网友”有了更深的链接，自己线上和线下的关系也变得逐渐模糊。</p>
<p>得益于公司每周三的「Work Together 1 Hour」，一位同事推荐了汤山的温泉和莫干山的森林书屋，于是和学姐相约在南京会和，度过了惬意的一周，也开始探索一些周末行的去处，生活变得更加具体。</p>
<h2 id="钱包被盗与设备重装">钱包被盗与设备重装</h2>
<p>最近把自己的笔记本和家里的台式都重装了一下系统，起因是自己的主钱包不幸被盗了。看链上记录大概是年初一的中午，钱包里所有资产（包括一些参与开源项目的空投）都被转为 ETH 和 BNB 后转走了，钱包里还有自己的 ens 和一些 NFT（<del>不过黑客看不上所以还留着就是了</del>），整体的金钱损失不大，但因为找不出是哪里泄漏的私钥，不得不将所有设备环境都重装一遍，可以说是个大工程。</p>
<p>因为都是 macOS 系统，所以系统设置和软件方面倒是轻车熟路，主体还是参照我的个人工具箱项目「<a href="https://github.com/pseudoyu/yu-tools">GitHub - yu-tools</a>」，但在这个基础上做了不少的减法，更多只保留了刚需的一些，发现把 <a href="https://www.rewind.ai/">Rewind</a> 卸载后我的 MacBook Pro 续航恢复了很多，出门几乎可以不用带充电器了。</p>
<p><img src="https://image.pseudoyu.com/images/x-cmd_env_install.png" alt="x-cmd_env_install"></p>
<p>另外也正好趁机整理了自己的软件安装来源、开发环境管理和命令行配置等，正好尝试了朋友公司开发的「<a href="https://cn.x-cmd.com/">x-cmd</a>」项目。</p>
<p><img src="https://image.pseudoyu.com/images/zshrc_config.png" alt="zshrc_config"></p>
<p>配合 ohmyzsh 把自己的命令行配置简化到了短短的十几行，后面都可以通过 <code>x env</code> 等命令来管理各种环境和命令行工具，很易用。</p>
<p><img src="https://image.pseudoyu.com/images/x-cmd-env-ls.png" alt="x-cmd-env-ls"></p>
<p>最后使用 <code>x env</code> 来管理了自己的 Go、Node、Python 开发环境，免去了各种需要自己安装 nvm、设置环境变量等步骤，也体验到了企业级客户支持（指遇到问题直接 tg 轰炸朋友来解决 🤣），后面也会成为自己的装机标配，还在持续深度体验中。</p>
<p>另外就是把 ssh key、GPG 签名等在两台设备之间统一管理了，配合 Elpass 进行密码管理和服务器自动登录，获得了通勤和宅家无缝切换的体验。</p>
<h2 id="home-server--home-assistant">Home Server &amp; Home Assistant</h2>
<p><del>大概是年纪慢慢上来了</del>，终究逃不过路由器、充电头、NAS 这三大魔咒。路由器用了去年从 <a href="https://twitter.com/strrlthedev">STRRL</a> 哥哥那淘来的 Asus AC86U，刷了新版梅林固件，很够用，就没再折腾软路由什么的了；充电头/充电器则是在体验了闪极全透明充电宝、100W 氮化镓充电头和硬糖工厂小电拼（<del>现在有点不敢用了</del>）后也退烧了。</p>
<p>终于还是把魔爪伸向了 NAS，在跟我们组可靠的运维 &amp; NAS 深度 DIY 玩家 Ares 聊了好一阵子，决定先把家里的 Mac Studio 作为一个 Home Server。</p>
<p><img src="https://image.pseudoyu.com/images/yu_home_assistant_macstudio.png" alt="yu_home_assistant_macstudio"></p>
<p>首先做的是把家里的智能设备都连上 Home Assistant，但是由于是 Apple M1 芯片，没有现成的官方解决方案，在折腾了好一番后，最终参照「<a href="https://siytek.com/home-assistant-macos-utm-debian-12/">Run Home Assistant on macOS With a Debian 12 Virtual Machine</a>」这一篇文章使用 UTM 安装了一个 Arm 架构的 Debian 的虚拟机，在里面跑了满血版 Home Assistant，并且用 frp 把接口映射到了公网，最后使用 iOS app 以及网页版本直接进行操作，目前的方案可能因为虚拟机网络模式问题，目前没办法通过 HomeKit Bridge 添加到 Apple 的家庭 App 中，不过能够把所有的小米、Yeelight 和小佩宠物设备链接起来，目前阶段也已经够用了。</p>
<p>另外作为一个 Home Server，保持了 7/24 小时常驻，在噪音和耗电上都几乎无感，开启了 smb 文件共享、ssh 远程登录和远程 vnc 桌面控制，并且通过内网穿透保障我在外面也能够访问到家里的设备。</p>
<p>为了保障安全性和稳定性，我同时采用了三种不同的内网穿透方案。</p>
<ol>
<li>frp</li>
<li>Surge Ponte</li>
<li>Cloudflare Argo Tunnel</li>
</ol>
<p>第一种方案我已经使用了近两年，在「<a href="https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/">基于 frp 内网穿透的瘦客户端开发工作流</a>」一文中有很详细的介绍，要求有个公网服务器，但配置简单且稳定，目前我只是保留了 ssh 与 Home Assistant 的端口。</p>
<p>第二种方案则是通过 Surge 软件在 macOS/iOS 设备之间便捷地实现内网穿透，可以在「<a href="https://kb.nssurge.com/surge-knowledge-base/guidelines/ponte">Surge Ponte Guide</a>」看到其详细介绍，需要有支持 UDP 的代理线路，除此之外几乎开箱即用，我用其来访问家里 Mac Studio 的文件和本地的一些服务，也可以在外部直接访问配置家里内网路由器等，更多是自用。</p>
<p>而第三种方案则是最近看到「<a href="https://nova.moe/accelerate-and-secure-with-cloudflared/">使用 Cloudflare Argo Tunnel(cloudflared) 来加速和保护你的网站</a>」文章时才新加的，之前都是通过 cloudflared 命令行工具手动配置的，多少还是有些麻烦于是没实践，最近 Cloudflare 把它集成到了 <a href="https://developers.cloudflare.com/cloudflare-one/">Zero Trust</a> 中，几乎可以在界面完成各种操作配置，我用来在家里服务器运行一些需要对外暴露的公网服务，例如前几天使用 <a href="https://ollama.com/">ollama</a> 跑了一个 <a href="https://ollama.com/library/codellama:70b">codellama:70b</a>，然后再通过 <a href="https://chatkit.app/">ChatKit</a> 直接访问，体验很不错，就是生成得太慢了，所以也就尝尝鲜。</p>
<p>刚好最近我们厂的<a href="https://rss3.io/blog/en/introducing-rss3-alpha-mainnet">Alpha 主网</a>上线了，打算等后面公益节点的时候用 Home Server 自己跑一个，现在跑不起 🤣。</p>
<h2 id="vr-学车">VR 学车</h2>
<p><img src="https://image.pseudoyu.com/images/vr_car_learn.png" alt="vr_car_learn"></p>
<p>因为即将要有一些自驾的需求，又重新报名了驾校开始学习，这次的驾校有 VR 练车设施，没有自己想象得那么抗拒了。</p>
<h2 id="其他">其他</h2>
<p>其他似乎没有太多有意思的事，处在忙碌和想做的事做不完而焦虑的反复中，不过一切也都在慢慢变好。</p>
<p>GitHub 给了 Copilot 的开源免费 License，可以继续白嫖代码补全和 Copilot Chat，配合上 Claude 3 Sonnet 和在「<a href="https://burn.hair/register?aff=isWf">burn.hair</a>」中白嫖的 GPT4 Token，已经能够满足我所有的代码和各类需求。</p>
<p>哦对，还约到了我的偶像程序员「<a href="https://lutaonan.com/">Randy</a>」月底在北京见面！！！</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/2228297/"><strong>The Monk and the Philosopher</strong></a>，关于宗教和哲学的一些思考，聊到所以刚开始看一点。</li>
<li><a href="https://book.douban.com/subject/35781152/"><strong>红与黑</strong></a>，从一个视频看到的讲解，关于于连的自尊和因此表现出来的傲慢的描述印象很深，正在看。</li>
</ul>
<h4 id="收藏">收藏</h4>
<ul>
<li><a href="https://million.dev/blog/lint">Million Lint is in public beta | Million.js</a></li>
<li><a href="https://discoverdaily.ai/">Discover Daily by Perplexity</a></li>
<li><a href="https://ehco-relay.cc/">Ehco Relay</a></li>
<li><a href="https://rss3.io/blog/en/introducing-rss3-alpha-mainnet">RSS3 Alpha Mainnet</a></li>
<li><a href="https://sindresorhus.com/velja">Velja — Sindre Sorhus</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://1q43.blog/post/5322">幸福的积分 – 虹线</a></li>
<li><a href="https://blog.douchi.space/road-trip/">我为什么喜欢 road trip | 椒盐豆豉</a></li>
<li><a href="https://www.wheresyoured.at/the-anti-economy/">Software Has Eaten The Media</a></li>
<li><a href="https://taresky.com/crypto-arbitrage">无风险年化 360%？小白也能懂的 Crypto 套利 - TARESKY</a></li>
<li><a href="https://tailscale.com/blog/how-nat-traversal-works">How NAT traversal works</a></li>
<li><a href="https://diygod.cc/6-year-of-rsshub">一个六岁开源项目的崩溃与新生 - DIYgod</a></li>
<li><a href="https://blog.douchi.space/notion-calendar-daily-quest/#gsc.tab=0">用 Notion Calendar 打造高效 daily quest 系统 | 椒盐豆豉</a></li>
<li><a href="https://siytek.com/home-assistant-macos-utm-debian-12/">Run Home Assistant on macOS with a Debian 12 Virtual Machine – Siytek</a></li>
<li><a href="https://nova.moe/accelerate-and-secure-with-cloudflared/">使用 Cloudflare Argo Tunnel(cloudflared) 来加速和保护你的网站 | Nova Kwok&rsquo;s Awesome Blog</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1cF4m157Cy">我悟了，原来最好的转运方式是结婚！</a></li>
<li><a href="https://www.bilibili.com/video/BV1Lj421Z7Vz">study vlog #48 | 26 岁新的开始｜程序员晚间日常学习｜一些小礼物希望你们喜欢</a></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35797709/"><strong>怪物</strong></a>，确实符合是枝裕和想要去描述的主题，但是可能加上了太多隐喻的部分，反倒是没能很传达到，也感受到剧情和情绪节奏的割裂。</li>
<li><a href="http://movie.douban.com/subject/36151692/"><strong>周处除三害</strong></a>，台湾拍犯罪倒是确实是别有风味，主题和画面也确实很敢，不过更多还是视觉的爽片吧，对人物人格的呈现和变化展现得有些仓促。</li>
<li><a href="http://movie.douban.com/subject/35042913/"><strong>西部世界</strong></a>，还是更喜欢第一二季的乐园 part，包括威廉的变化，后两季可能也是由于想要展现太过宏大的意识觉醒和自我选择，反倒是有些过家家。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35727023/"><strong>舞伎家的料理人</strong></a>，在看。</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/1HNkqx9Ahdgi1Ixy2xkKkL"><strong>Photograph</strong></a> by Ed Sheeran</li>
<li><a href="https://open.spotify.com/track/4EP4BmTjXvMGKzhBwKzWu5"><strong>温和表面</strong></a> by 趙登凱</li>
<li><a href="https://open.spotify.com/track/7e7JVMegy4WBMnzuZE9Srq"><strong>Different Lives</strong></a> by Fly By Midnight</li>
<li><a href="https://open.spotify.com/track/7e7JVMegy4WBMnzuZE9Srq"><strong>After the Love Has Gone</strong></a> by Earth, Wind &amp; Fire</li>
<li><a href="https://open.spotify.com/track/5FMRUnWOXZXXtTjaxpMxl3"><strong>IN THIS WORLD - feat. 坂本龍一 Vocal : 満島ひかり</strong></a> by Mondo Grosso</li>
</ul>
]]></content:encoded></item><item><title>周报 #53 - 空白的三个月、生活漂流与春节</title><link>https://www.pseudoyu.com/en/2024/02/29/weekly_review_20240229/</link><pubDate>Thu, 29 Feb 2024 19:13:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/02/29/weekly_review_20240229/</guid><description>《特别的人 - 方大同》 前言 本篇是对 2023-12-04 到 2024-02-29 这数月生活的记录与思考。 过去的几个月发生了很多事，各个维度的都是，让本意图记录日常生活和个人想法的周报</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/special_person.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《特别的人 - 方大同》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-12-04</code> 到 <code>2024-02-29</code> 这数月生活的记录与思考。</p>
<p>过去的几个月发生了很多事，各个维度的都是，让本意图记录日常生活和个人想法的周报变得有些难以起笔，似乎都不是一期两期能概述的，同时心情也做不到轻描淡写地仅是记录一些流水账而绝口不提感受。</p>
<p>于是，给自己放了个长长的假，长到中途屡次打开文档思绪都有些空白，长到开始怀疑自己是否还有这样的能力去做一个“周报”博主。</p>
<p>我总是说，我的文字源于我的生活，当生活一团糟的时候，我是没办法传达自己的感受的；却也常常惰于去梳理和面对生活所带来的起伏，在一个个周末的夜晚这样说服自己，1 月吧、年前一定、年后吧、不然元宵也不错，直到闰年的 2 月 29 日这样其实跟我毫无关联却有着莫名仪式感的日子，终于下定决心重启。</p>
<p>其实自己从来不缺分享欲，只是缺一个重新开始的勇气。</p>
<h2 id="空白的三个月">“空白”的三个月</h2>
<p>犹豫了很久，还是决定按照时间和心绪的变化开始回溯，讲讲这过去的三个月。</p>
<p>在「<a href="https://www.pseudoyu.com/en/2023/12/03/weekly_review_20231203/">周报 #52 - 自谦型人格与感情的另一个视角</a>」这篇中我有提到说，我和学姐是很不一样的人，当然，文中更多描述的是这样的差异所带来的良性的一面，殊不知，思考和行为习惯上的不同带来了不少好奇心与互相欣赏的同时，也需要有这样的觉悟去承受个性与价值观的差异所带来的代价。</p>
<p>而我，或许早已意识到了，但放任自己沉浸在更具体的幸福生活中，有些嫌隙已经悄然滋生了。具体的事情在当下或是情绪平复之后总是能辩出个对错，但无可避免地有一些感情在其中流逝。我常常觉得自己是个幸运的人，不论是在感情还是其他的关系其实我总是能够得到许多的包容，一边开玩笑说着“我不配”的同时其实也习以为常。直到矛盾爆发时，才意识到并没有什么幸运，沉默和包容其实更多也是我所收到的爱所带来的层层护甲，也终究会有破裂的时刻。</p>
<p>于是经历了关系的结束、坦诚而尖锐的对话、物理/心理上的隔绝和重新相处/相爱，似乎短短的几个月，已经走过了一段很长的路，有泥泞，也有分叉，所幸的是依然有着对彼此的信任与爱，也依然决定携手共度前路。</p>
<h2 id="生活漂流">生活漂流</h2>
<p>比起之前大半年常常说的”调整生活状态“，这几个月更确切地其实在重新选择生活的方向与重心。退了杭州的固定住所，开始真正的“半游民”生活。在杭州时，常去良渚附近寻觅民宿住上几天，参加玉鸟集的一些活动；而年后的现在，也开启了一项漂流计划，沿着之前坐过无数次的杭州到北京的高铁路线，一站一站地感受不同城市的气息。</p>
<p><img src="https://image.pseudoyu.com/images/anhui_view.jpg" alt="anhui_view"></p>
<p>其实这个想法是起源于一次杭州到北京的高铁上，刚好望向窗外，路过了安徽的蚌埠，看到了这样的景致，惊艳。才意识到这个地名途径了几十次，也在一些网络梗上见过许多，却从未想过自己的生活会与之有什么交集，或许这辈子也不一定会驻足。</p>
<p>其实不仅是地方，人也是，有些朋友住得其实不远，一两个小时的行程，总是在聊天时说“有机会来找你玩”，却也止于言语。这种想法其实是由于人总是会笃信太多的来日方长，在某个时刻来临时才后悔。</p>
<p><img src="https://image.pseudoyu.com/images/chat_with_maggie.jpg" alt="chat_with_maggie"></p>
<p>去年平安夜，我有一位同事 Maggie 离世了，就交流频率来说肯定还是称不上挚友的，只是缘起一次工作闲聊中给我算了八字，也开启了很多个人的话题。聊到感情时有给我讲她之前在金融行业遇到的渣男；有很开心地跟我讲说明年要去浸会当讲师了，问我当时在香港上学的时候学校是怎么教 web3 的；会认真看完 polebug 跟我的访谈，说她以前也是英语专业的；有讲她之前在新浪财经做调查写深度财经报道时的卧底经历和新闻理想；还有很多很多。</p>
<p>当时得知消息时其实一直处在加谬在异乡人中所描述的那种麻木感，直到后来看到说她在 12.20 发了一条朋友圈说“我的 oura 提醒我，我竟然发烧了”，想到之前问她礼物的时候跟我提到过，去翻了记录，所有的情绪才一并涌上来，一下子对离去有了实感，是一个真实的常常带着欢笑的友人的离去。</p>
<p>经历了这段时间后，似乎生活的重量有了一些变化。</p>
<p>去同在北京相隔不过三四站地铁的高中哥们渐仔家做客，周末相约打了几次羽毛球，邀请他来家里吃饭；与毕业后就四散奔波、甚至想着或许都再难见到的几个大学舍友在各个城市相约见面，聊了这些年的种种；过年时和高中的朋友聚餐，年后也开始沿着「杭州 -&gt; 上海 -&gt; 湖州 -&gt; 南京 -&gt; &hellip;」的路线一路漂流，见一见沿途的人和景。</p>
<h2 id="春节">春节</h2>
<p><img src="https://image.pseudoyu.com/images/neimeng_with_boyi.jpg" alt="neimeng_with_boyi"></p>
<p>今年的过年尤其热闹，一半时间跟随学姐去了她的家乡内蒙，一半时间带着她来了杭州见了我的家人朋友，路途奔波、紧张却也奇妙。虽然说不出具体源于什么，但经过这一周后，似乎能够感受到我们之间的某种纽带变的更加紧密，相处也似乎多了一些松弛。</p>
<p>我一直觉得一个人是由 ta 的人格、思想与成长经历环境共同构成的，没办法陪对方一起经历过去，但去见对方珍惜的人或仅仅是走过的路，也都像是了解一个人的探索之旅，会带来更多信任与勇气，亦是爱的重要组成。</p>
<p><img src="https://image.pseudoyu.com/images/seal_from_boyi.jpg" alt="seal_from_boyi"></p>
<p>过年期间也刚好是情人节，学姐给我刻了一个名字的印章。</p>
<h2 id="学习状态调整">学习状态调整</h2>
<p><img src="https://image.pseudoyu.com/images/duolingo_profile.png" alt="duolingo_profile"></p>
<p>有过一段时间的工作忙碌和生活状态低迷，再履行自己的学习计划的时候总觉得有些力不从心和注意力涣散，总是有些不在状态。再加上刚好看到了关于多邻国的一些采访，想着注册了一个，捡起我已经几年没碰过的第二外语德语（英语专业都需要选择另一门语言作为第二外语进行学习），所幸一些基础知识和底子还在，倒也是发现了很多乐趣。</p>
<p>经过了一阵子，也慢慢地更能沉下心来花几个小时去学一些新的东西了，也算是语言学习的一种“修身养性”吧，排行榜功能也很洞悉人性，我在午休的时候看到有人超了我的名次都会花点时间去刷回来。</p>
<h2 id="其他">其他</h2>
<p>其实还发生了很多事，但是周期拉得太长一时不知道从何说起。</p>
<p>这几个月的工作很开心，从去年接近年底的时候我们组的核心项目<a href="https://github.com/RSS3-Network/Node">完全开源</a>和去中心化了，发展的路径也随着白皮书和各项规划逐渐清晰，常常开两三个小时的会讨论一些细节却也乐在其中，开源也带来了代码质量和规范的要求，有了很多成长。</p>
<p>剪了一个生活 vlog —— 「<a href="https://www.bilibili.com/video/BV19e411q7if">生活漫游指南 #01 | 圆明园写生 | 朝阳啤酒节 | 内蒙之行 | 阿那亚纪念日</a>」，久违地找到了创作视频的乐趣，也是对生活另一种方式的留存和记录。</p>
<p>生活随着周报重新开始，感谢在此期间依然不断在我的博客中留言鼓励和关心我的朋友们，共勉。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/2228297/"><strong>The Monk and the Philosopher</strong></a>，关于宗教和哲学的一些思考，聊到所以刚开始看一点。</li>
<li><a href="https://book.douban.com/subject/35781152/"><strong>红与黑</strong></a>，从一个视频看到的讲解，关于于连的自尊和因此表现出来的傲慢的描述印象很深，正在看。</li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://www.xiaoyuzhoufm.com/episode/65bf3d81b6c9256aee8a92d8">打多姿多彩的工，搬五颜六色的砖</a></li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.boyilu.com/advice-from-a-brewing-professional">来自酿酒专业的建议</a></li>
<li><a href="https://mp.weixin.qq.com/s/3pQN5GKw72rqnwnKXFdVCg">外刊｜姐弟恋：姐姐到底图弟弟啥</a></li>
<li><a href="https://www.boyilu.com/day-155">Day 155</a></li>
<li><a href="https://tw93.fun/2023-10-25/new-fe.html">新一代前端发展的困境与破局 - Tw93</a></li>
<li><a href="https://lutaonan.com/blog/2023-summary/">2023 年终总结: 和自己对话 | Randy&rsquo;s Blog</a></li>
<li><a href="https://blog.douchi.space/hugo-blog-heatmap/#gsc.tab=0">如何给 Hugo 博客添加热力图</a></li>
<li><a href="https://papereditor.app/dev">9 years of Apple text editor solo dev</a></li>
<li><a href="https://www.tisonkun.org/2022/12/17/enterprise-choose-a-software-license/index.html">企业开源该选什么软件许可证？</a></li>
<li><a href="https://news.marsbit.co/20231215163247574629.html">技术解读以太坊铭文 ETHS：本质是金融炒作而非产品革新</a></li>
<li><a href="https://diffusionpilot.blogspot.com/2023/09/overview-ai-animation.html">overview of generative AI animation techniques</a></li>
<li><a href="https://commandcenter.blogspot.com/2024/01/what-we-got-right-what-we-got-wrong.html">What We Got Right, What We Got Wrong</a></li>
<li><a href="https://iximiuz.com/en/posts/ssh-tunnels/">A Visual Guide to SSH Tunnels: Local and Remote Port Forwarding</a></li>
<li><a href="https://diygod.cc/unified-markdown">如何优雅编译一个 Markdown 文档</a></li>
<li><a href="https://niracler.com/nyaruko-deploy-for-xlog">简单易懂的 Telegram to xLog Shorts 机器人部署方案</a></li>
<li><a href="https://greatdk.com/1962.html">哄哄模拟器的完整复盘，火了，但一度让我很发愁</a></li>
<li><a href="https://danwang.co/2023-letter/">2023 Letter</a></li>
<li><a href="https://itnext.io/linux-container-from-scratch-339c3ba0411d">Understanding Containerization by Recreating Docker</a></li>
<li><a href="https://xuanwo.io/2024/01-why-sql-hang-for-exactly-940s/">Why SQL Hang for Exactly 940s? TCP and Async Rust!</a></li>
<li><a href="https://diygod.cc/twitter-ddos">Twitter 对开源项目发起 DDoS 攻击</a></li>
<li><a href="https://www.zackwu.com/posts/2023-12-03-a-year-of-change/">二十四岁，充满变化的一年</a></li>
<li><a href="https://letters.geekplux.com/57/">金融行业里的程序员到底在干什么 #57</a></li>
<li><a href="https://docs.rss3.io/docs/implementing-a-high-performance-arweave-bundle-parser">Implementing a High-Performance Arweave Bundle Parser</a></li>
<li><a href="https://mp.weixin.qq.com/s/KbamZ7MIv2qQjkutJRaqjA">不是谁都能在跳海当一名打酒师丨晚点周末</a></li>
<li><a href="https://missuo.me/posts/cloudflare-1pb/">Warning of Account Suspension by Cloudflare</a></li>
<li><a href="https://www.theverge.com/24054862/apple-vision-pro-review-vr-ar-headset-features-price">Apple Vision Pro review: magic, until it’s not - The Verge</a></li>
<li><a href="https://mayo.rocks/2024/01/goodbye-dystopia/">Goodbye Dystopia</a></li>
<li><a href="https://captainz.xlog.app/Ordinal-ming-wen-xie-yi-de-yuan-li-yu-ji-shu-xi-jie-tao-lun-1md">Ordinal 铭文协议的原理与技术细节讨论</a></li>
<li><a href="https://base.qaq.wiki/s/a507fb14-a269-4d3b-b6b4-aaf4c14ad460">Vision Pro 使用体验</a></li>
<li><a href="https://slack.engineering/the-scary-thing-about-automating-deploys/">The Scary Thing About Automating Deploys</a></li>
<li><a href="https://medium.com/@Alphatue/introducing-sora-openais-groundbreaking-tool-transforms-text-into-instant-video-magic-34563debd89f">Introducing Sora: OpenAI’s Groundbreaking Tool Transforms Text Into Instant Video Magic | by Alphatu</a></li>
<li><a href="https://diygod.cc/palworld">和帕鲁生活在一起的两周</a></li>
<li><a href="https://read.lutaonan.com/preface">我和书的结缘</a></li>
<li><a href="https://www.theverge.com/2024/2/27/24085075/nintendo-switch-emulator-yuzu-lawsuit">Nintendo sues Switch emulator Yuzu for ‘facilitating piracy at a colossal scale’ - The Verge</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1SC4y1c7ju">〖FEDAY〗我的大前端世界观 - 黄玄 Hux</a></li>
<li><a href="https://www.bilibili.com/video/BV1f94y1E7tD">study vlog #39 | 保持学习、思考与对生活的期待｜React 学习中🤯｜TEDTalks｜看书《回忆、梦、思考》</a></li>
<li><a href="https://www.youtube.com/watch?v=2MJt1dTqbPk">一个公司到底谁说了算？ | OpenAI 背后权力的游戏</a></li>
<li><a href="https://www.bilibili.com/video/BV1UH4y1k7H5">民政局：恭喜二位成为合法夫妻！</a></li>
<li><a href="https://www.bilibili.com/video/BV1ww411t77B">study vlog #40 | 感谢 GPT 教我写前端🍻｜我是如何保持专注的｜那些我做完的事情，都有什么共性｜对于工作与退休的看法｜TEDxTalks</a></li>
<li><a href="https://www.bilibili.com/video/BV1C64y1V74Z">study vlog #41 | 事情或许没有想象的那么难，完成比完美更重要｜远程工作是否会焦虑｜TEDxTalks｜阅读</a></li>
<li><a href="https://www.bilibili.com/video/BV13a4y167Us">2023: 在远程办公中重塑自我的一年｜因为没发生什么大事，所以很短的｜明年也继续加油咯｜2023</a></li>
<li><a href="https://www.bilibili.com/video/BV1U64y1p7QK">结婚了，就不孤独了吗？</a></li>
<li><a href="https://www.bilibili.com/video/BV1Dw411V7DF">《红与黑》一种敏感的自尊和表演的傲慢让你感到内心矛盾</a></li>
<li><a href="https://www.youtube.com/watch?v=pUWmJ86X_do">Smart Contract Audits, Security, and DeFi FULL Course | Learn smart contract auditing</a></li>
<li><a href="https://www.bilibili.com/video/BV1jt4y1f7R2">啊啊啊采访到新海诚了！</a></li>
<li><a href="https://www.bilibili.com/video/BV1Re411U75P">✉️ 给 24 年的自己写一封信｜INFJ｜不忘初心，方能始终</a></li>
<li><a href="https://www.bilibili.com/video/BV1BK41147Bq">【年终忏悔录】要是我今年不太好，会不会让你开心一点！</a></li>
<li><a href="https://www.bilibili.com/video/BV19e411q7if">生活漫游指南 #01 | 圆明园写生 | 朝阳啤酒节 | 内蒙之行 | 阿那亚纪念日</a></li>
<li><a href="https://www.bilibili.com/video/BV11i4y1q72H">为了读评论，我涨到了 100W 粉丝</a></li>
<li><a href="https://www.bilibili.com/video/BV1SQ4y1V7J3">离家出走的女孩与卖诗的少女：他们说我是小姐，他们说我在要饭</a></li>
<li><a href="https://www.bilibili.com/video/BV1SQ4y157YM">vlog #43｜数字游民程序员的第一次旅居｜青岛下篇</a></li>
<li><a href="https://www.youtube.com/watch?v=iGz2uWl-kGc">一口气了解美联储 | 全球权力最大的金融机构</a></li>
<li><a href="https://www.bilibili.com/video/BV1eK411e7V3">10 部新动画！ 物语系列 OFF&amp;MONSTER Season 动画制作决定 PV【新房昭之/SHAFT/西尾维新】</a></li>
<li><a href="https://www.bilibili.com/video/BV1Mx411G76G">【战场原黑仪】星空下的荡漾情话</a></li>
<li><a href="https://www.youtube.com/watch?v=HgvR2QkfwG0">Heptabase Fundamentals 101: Sense-making with whiteboards</a></li>
<li><a href="https://www.youtube.com/watch?v=zlGRxZHlDgM">Heptabase Fundamentals 102: Organizing topics with nested whiteboards and tab groups</a></li>
<li><a href="https://www.bilibili.com/video/BV1EK411a7Hj">study vlog #44 | 程序员下班后的日常学习记录 | 新年伊始，多多充电｜日常英语学习、运动、思考</a></li>
<li><a href="https://www.bilibili.com/video/BV1bT4y1b7Nf">8w 块的相机能拍成啥样？ ｜哈苏 907X &amp; CFV 100C 首发测评</a></li>
<li><a href="https://www.youtube.com/watch?v=L69c8Ta1Vb4">Pokemon Meets ARK&hellip; on the Steam Deck?! PALWORLD Performance Test</a></li>
<li><a href="https://www.bilibili.com/video/BV1uU421Z7Nh">一个中年光棍过年回家的恐惧</a></li>
<li><a href="https://www.bilibili.com/video/BV1FA4m1j7zF">奇迹还是抄袭？《幻兽帕鲁》爆火的背后。【游戏之外】</a></li>
<li><a href="https://www.bilibili.com/video/BV1wC411r73d">2023 年御三家都干了啥？年度吐槽。</a></li>
<li><a href="https://www.bilibili.com/video/BV1e2421A7Zh">study vlog #45 | 稳定的内核是我持续学习的秘诀｜程序员下班后的学习日常｜TED｜体验外教课｜学习智能合约中｜在老家等我妈投喂真快乐😄</a></li>
<li><a href="https://www.bilibili.com/video/BV1DC411z7FQ">器材贵的，便是好么？</a></li>
<li><a href="https://www.bilibili.com/video/BV1NA4m157tt">研究生导师是老板，但学生又不受劳动法保护 | 1 月份网络热门话题鉴定</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ep421d7hB">情人节 9.0｜去 ta 的爱情</a></li>
<li><a href="https://www.bilibili.com/video/BV1tu4m1N7rG">我拍到了世界上最大的鸟拉屎 ｜新西兰</a></li>
<li><a href="https://www.youtube.com/watch?v=BBPAc5Dy9EQ">台灣團隊闖入矽谷最強加速器！Heptabase 是如何做出世界級筆記軟體的？ft. 詹雨安 ｜EP054｜強者我朋友｜志祺七七 Podcast</a></li>
<li><a href="https://www.bilibili.com/video/BV1Sv421k7pS">和女朋友一起向已婚 UP 主学习如何谈恋爱！</a></li>
<li><a href="https://www.bilibili.com/video/BV1w2421F7fa">study vlog #46｜学习是这枯燥生活的调味剂｜春节零碎片段记录｜TEDTalks｜读《百年孤独》</a></li>
<li><a href="https://www.youtube.com/watch?v=7jP9Aw88h2Y">How to learn German? Resources, methods, and study plan</a></li>
<li><a href="https://www.youtube.com/watch?v=d818NNeOaHc">【Vision Pro 评测】深度体验 10 天后，我发现我误会了苹果</a></li>
<li><a href="https://www.bilibili.com/video/BV1Rj421S7c4">遇到 ta 的概率是六十亿分之一！｜ 日本 4k 旅拍</a></li>
<li><a href="https://www.bilibili.com/video/BV1aw4m1f7uq">study vlog #47 | 程序员下班后的日常学习｜沉迷量子通信入门中｜英语学习日常｜小学日记本大公开</a></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><a href="http://movie.douban.com/subject/26874505/"><strong>人生果实</strong></a>，很早之前就收藏的记录片，讲的是一个曾是建筑师的老爷爷老奶奶的暮年故事，印象很深的是在拍摄期间老爷爷离世了，生前吃饭只爱用木勺而不是金属的，之后老奶奶一个人的生活中也总会在遗像前摆上一份饭，并放着木勺，很平实而温暖的叙述。</li>
<li><a href="http://movie.douban.com/subject/35208467/"><strong>想见你</strong></a>，唯一要说的可能就是圆了剧版结局的遗憾了，剩下的不管是逻辑还是节奏都差远了。</li>
<li><a href="http://movie.douban.com/subject/33456512/"><strong>涉过愤怒的海</strong></a>，就剧情来说有点垮，感觉有些刻意制造的冲突和有些做作的“疯狂”，但压抑、恐惧，病态的占有欲和无能的愤怒在电影结束许久都还萦绕着我，上一次有类似这样的感受还是《阳光普照》。</li>
<li><a href="http://movie.douban.com/subject/26761416/"><strong>至暗时刻</strong></a>，适时的转场、紧凑的音乐和最喜欢的打字机的画面，一下子就能代入到那个绝望的时刻，也第一次对丘吉尔有了除了历史上的寥寥几笔以外的印象，再结合之前看过的《敦刻尔克》，能感受到历史中的真实与厚重感。</li>
<li><a href="http://movie.douban.com/subject/35712804/"><strong>首尔之春</strong></a>，太多刻意呈现的英雄主义配合着平平的节奏感，有些失望，不过结局倒是有些意外，真实而大胆。</li>
<li><a href="http://movie.douban.com/subject/35725869/"><strong>年会不能停！</strong></a>，本来想年前去电影院看，结果一直耽误着到了片源都出来了，标准喜剧，不过题材倒是挺新的，随着自己也工作了，竟然也能从搞笑中找到一些真实感。</li>
<li><a href="http://movie.douban.com/subject/34963356/"><strong>过往人生</strong></a>，最近看的最喜欢的一部电影了，可以说几乎没什么剧情，但是画面、对话、心理描述都很美，联想到之前很喜欢的一部剧《Normal People》，尽管戏份不多，Arthur 真的是一个真实而温暖的人，很有吸引力的角色。</li>
<li><a href="http://movie.douban.com/subject/1291856/"><strong>戏梦巴黎</strong></a>，补标。大概是大一的时候看的，叛逆、热情、纵欲、自由到极致，让当时（还算）年少的我形成了“浪漫”的最初定义。卢浮宫奔跑的那一幕让我现在还印象深刻。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><a href="http://movie.douban.com/subject/34874646/"><strong>繁花</strong></a>，对于胡歌的剧还是一直挺有期待的，他的气质也很符合宝总，除了结尾的部分略显草率外，是今年看的国产剧中印象比较深刻的了，布景和摄影也真的美！</li>
<li><a href="http://movie.douban.com/subject/33394370/"><strong>街头绝味</strong></a>，小众的街头美食，总感觉东南亚的美食摊贩对自己的事业有着一种使命感和归属感，食物也有了灵魂。</li>
<li><a href="http://movie.douban.com/subject/36155049/"><strong>古相思曲</strong></a>，因为是了解过的影视剪辑 up 导演的剧，间断着看了一下，不过可能期待过高，看了后觉得平平。</li>
<li><a href="http://movie.douban.com/subject/35727023/"><strong>舞伎家的料理人</strong></a>，在看。</li>
<li><a href="http://movie.douban.com/subject/36140095/"><strong>新闻女王</strong></a>，对新闻一直还挺感兴趣的看在热播就看了一下，节奏还挺眼前一亮的，但是最后几集主要角色的黑化和洗白都有缺少些驱动力，像是草草收尾。</li>
<li><a href="http://movie.douban.com/subject/33425914/"><strong>做工的人</strong></a>，之前看过的《静寂工人》，一直对台湾的做工文化很着迷，被 B 站一个关于小杰的剪辑吸引（虽然其实主要讲的是他父辈们的事），几个小小的片段就能够感受到他的清澈、真诚与善良。看很多剧情的时候不由得为主角们着急。“怎么又被骗了”、“怎么那么傻”，包括到了结尾也气恼于“怎么好人没好报”，但这就是在面临苦难时自己本能的选择，是他们所认真生活的模样，即使天天想着赚钱，但在情义、善意面前依然会做出令人钦佩的选择。</li>
<li><a href="http://movie.douban.com/subject/36156235/"><strong>重启人生</strong></a>， 很小清新的重生剧，虽然剧情从一开始就能猜得差不多，但日常的叙事和穿插的梗很密集，虽然算不上群像，但主要角色的描绘也很丰满。</li>
<li><a href="http://movie.douban.com/subject/2338055/"><strong>西部世界</strong></a>， 一直很期待能有像是西部世界这样的接近“思考”的游戏，大概能想象到的是内置 gpt 的 minecraft 吧</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><a href="http://movie.douban.com/subject/35366293/"><strong>孤独摇滚</strong></a>，可能刷到开始看的，确实很可爱但是一点也不孤独，明明只是被爱包围的 i 人罢了。</li>
<li><a href="http://movie.douban.com/subject/36190888/"><strong>间谍过家家 第二季</strong></a>， 阿尼亚真是太可爱了！</li>
<li><a href="http://movie.douban.com/subject/34895145/"><strong>咒术回战</strong></a>，感觉设定和剧情走向有点像《电锯人》，整体节奏还挺不错的！</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/7I9aSaUzI35w6NBfT5Mede"><strong>Jorge Regula</strong></a> by The Moldy Peaches</li>
<li><a href="https://open.spotify.com/track/6w3qVDCpwYcnwShKygTvvP"><strong>Get Us Back Again</strong></a> by dazeychain</li>
<li><a href="https://open.spotify.com/track/1EAKh1MEglXvDEEqiNngnY"><strong>Moments.</strong></a> by 8Bite</li>
<li><a href="https://open.spotify.com/track/4GqO80eGXA542oTvlYv4LS"><strong>ハッピーエンド</strong></a> by back number</li>
<li><a href="https://open.spotify.com/track/3p7XQpdt8Dr6oMXSvRZ9bg"><strong>Eyes Closed</strong></a> by Ed Sheeran</li>
</ul>
]]></content:encoded></item><item><title>周报 #52 - 自谦型人格与感情的另一个视角</title><link>https://www.pseudoyu.com/en/2023/12/03/weekly_review_20231203/</link><pubDate>Sun, 03 Dec 2023 22:15:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/12/03/weekly_review_20231203/</guid><description>《特别的人 - 方大同》 前言 本篇是对 2023-11-30 到 2023-12-03 这一周生活的记录与思考。 周日的晚上在整理各种文件，打开文档时才发现前面好多期都是在工作日的夹缝中写的，</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/special_person.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《特别的人 - 方大同》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-11-30</code> 到 <code>2023-12-03</code> 这一周生活的记录与思考。</p>
<p>周日的晚上在整理各种文件，打开文档时才发现前面好多期都是在工作日的夹缝中写的，恰好周五夜里回了杭州，独处的时间更多，想着“久违”地不要拖延周报到周中而太过仓促。</p>
<p>路途和周末把很多时间花在了看书和补番上，「葬送的芙莉莲」很上头，没忍住一下子刷了 13 集，意犹未尽，甚至还重新憧憬了剑与魔法的世界，想着补一下「火焰纹章 Engage」，然而 Switch 充电的时候去看了《神经症与人的成长》，结果一看就是一整天，直到周末结束也没打开 Switch；因为生病两周没怎么运动于是重新开始跑步，重新看了杭州的夜景，也想起了七八月那段时光，恍若隔世；还有很多有意思的事。</p>
<h2 id="自谦型人格">“自谦型”人格</h2>
<p>自己常常能感觉到过去的一些经历给自己的性格所带来的别扭的部分，但是改变也无从下手。这周把「神经症与人的成长」看完了，其实自己算是比较少看这类书的，《自卑与超越》、《被讨厌的勇气》之前有看过，都属于看了确实找到了很多共鸣点却还是无能为力的。这本有一次被推荐到就加入了书单，周末想起来看，却被吸引住了，花了一天就看完了，在「自谦型」的很多描述中找到了自己。</p>
<p>我觉得最有价值的倒不是什么解决方案，心理疗愈本也不是一件仅靠几本书的理论就能见效的事，珍贵的是它对我自己很难去描述的行为与思维模式的形容贴切到让人惊叹。</p>
<p><img src="https://image.pseudoyu.com/images/neurosis_and_human_growth_02.png" alt="neurosis_and_human_growth_02"></p>
<p>自己最有感触的是这一段描写了，自诩不算一个太过优柔寡断的人，但常常在遇到一些爱（广义，并不局限于感情）与生活本身的一些节奏相冲突的时候似乎总是搞砸，像是一个一直正常运转的程序总会在特定条件下触发的必现的 bug，其实原因并不难找 —— 仅仅是我两者都想要，并没办法放弃任何一方。</p>
<p>我之前一直以为是完美主义作祟，让我期待着有一个两全的办法，后来逐渐发现其实并不完全是，而是两者矛盾本身让我产生了一种强烈的失序感，而我害怕这种失序感。在这样的时刻我并不会跟任一方去坦言我遇到的问题寻求帮助，而是更多自以为是地死磕着一个最优解，一个能够达到两者平衡的解决方案。然而事实其实往往难以两全，反而陷入因力所不能及而导致的自我批评与诋毁，然后引起更强烈的失序感。</p>
<p>似乎这样的描述有些抽象，恰好不久前就有一个例子。8 月底刚好收到了 muChiangmai mentor 计划的邀请，有一个机会去清迈待一阵子，条件就是完成一个 Solidity 的英文 Workshop，是一个挺有挑战却也有些期待的行程。</p>
<p>那时也正在和学姐计划第一次的旅行，于是想到说不然可以国庆一起去清迈，于是就提了一句。学姐对此很期待，早早开始看起了机票和攻略，买了好看的裙子，每隔一两天就有问我行程有没有确定，可以订什么时候的票，而那时的我一边忙于月底 ddl 所积攒的一些工作，一边又在考虑着 workshop 的主题，一直没给出很具体的安排。</p>
<p>直到有一天，学姐说了一句，“不知道是不是我的错觉，感觉你不是很想跟我一起去清迈”。我这才意识到，其实我并不是真的忙到连一眼机票时间都看不了，而是因为我对于“我应该确保和学姐的第一次旅行是完美的安排”和“我应该在清迈完成一次让我自己满意的英文 Workshop”这两个目标需要在短短的一周里同时达成感受到了强烈的矛盾感与焦虑感，无法决断，却又没有足够的信心在许多的未知中能够做好，然后开始对这样失序的自己感到沮丧，于是更加难以体察到学姐的情绪与感受。</p>
<p>而这样的时刻我并没有想到与学姐去沟通这个问题，而是与自己死磕，直至一切崩溃。其实在后来的沟通中，学姐表示她其实只是想在另一个国家留下两个人的足迹和记忆，并没有对于清迈或是旅行本身有过多的追求和执念，而我在自己的想象中给自己增加了太多的无形压力。</p>
<p>当然，这是生活而不是故事，后知后觉的醒悟并不一定会带来一个皆大欢喜的结果，如「<a href="https://www.pseudoyu.com/en/2023/11/07/weekly_review_20231107/">周报 #48 - 内蒙之行、清迈游民、重启的周报与生活</a>」所见，我们的旅行并没有成行，我独自去了清迈，甚至直到现在我们对于「一起旅行」这件事还很难当作是一个轻松的话题。</p>
<p>前几天我们聊到之前的一些想法的时候学姐给我发了她在那一天的日记片段，有这样一段话：</p>
<p><img src="https://image.pseudoyu.com/images/boyi_diary_20230903.png" alt="boyi_diary_20230903"></p>
<blockquote>
<p>他需要秩序感，小的失序（偶尔淋雨、随性的日常）他可以接受，But 大的层面失序（旅程、关系）他会 overwhelm。</p>
<p>我应多给他时间，push 没用，他自己需想通，我在此时该干嘛干嘛。</p>
<p>—— 20230903</p>
</blockquote>
<p>当我处在失序的时候，很庆幸的是她完全理解我在面对与克服的命题是什么，而非仅是情绪的互相宣泄，许久之后看到这一段话，依然有些感动。</p>
<h2 id="感情的另一个视角">感情的另一个视角</h2>
<p><img src="https://image.pseudoyu.com/images/flower_to_boyi.jpg" alt="flower_to_boyi"></p>
<p>或许因为这是我的周报，大多的时候都是从我的视角去叙述一些事，前几天我们在聊天时我也第一次看到了当时学姐的一些日记片段，回头看很有意思。</p>
<p><img src="https://image.pseudoyu.com/images/boyi_diary_20230618.png" alt="boyi_diary_20230618"></p>
<blockquote>
<p>今天他的微信很勤，给足我安全感，他总应该是喜欢我的.吧</p>
<p>和他相处很愉快，这一周竟像夏日梦一场，让整个 6 月都显得有些不真实了。</p>
<p>—— 20230618</p>
</blockquote>
<p>这是我的那篇「<a href="https://www.pseudoyu.com/en/2023/07/10/weekly_review_20230710/">In the Mood for Love</a>」中所提到的去上海与北京的那一周，而彼时的我情愫暗生，却别扭而不知所措。</p>
<p><img src="https://image.pseudoyu.com/images/yu_weekly_review_love.png" alt="yu_weekly_review_love"></p>
<blockquote>
<p>尽管上海之行仅有短短两天，变化却悄然在发生，情愫在心中肆意生长、蔓延。我们在外滩走走停停，猜着对面高楼或是游船上的字；明明有伞却在骤雨中淋着、笑着，像是长不大的两个人。</p>
<p>从虹桥各自离开的时候其实都明白再也没办法维持着原本那样的心照不宣，然而我却还是害怕了、退缩了、逃避了。</p>
<p>“害怕自己萌生的情感，既怕糟糕的自己没办法承载这样复杂的关系，又怕自己贪恋一时欢喜的口是心非。”</p>
<p>这大概就是我此前状态最真实的写照。</p>
</blockquote>
<p>许久之后对照起来看很有意思，她坦率而真诚，我胆怯而挣扎，这样的两颗心在一点点靠近。直至：</p>
<p><img src="https://image.pseudoyu.com/images/boyi_diary_20230706.png" alt="boyi_diary_20230706"></p>
<blockquote>
<p>OMG！我俩在一起了，爱情来得太快就像龙卷风。顺其自然吧，他在的时候就开心相处。</p>
</blockquote>
<p>就相处和了解而言，我们真的是完全不一样的人。</p>
<p>我来自东南沿海，她长于西北沙漠；她做事干脆、有时带点<del>暴脾气</del>，而我不紧不慢、确实也能把她磨得没脾气；师出同门，职业方向却截然不同；她喜欢攀岩、拳击、冲浪等各种运动，而我恨不得两个月在电脑前自生自灭；她 10 点就要睡觉，我凌晨 3 点还无困意；饮食习惯天差地别，我们在一个并不大的自助餐厅里拿回来的食物都找不到同类型的；她需要家里井然有序而精致，而我的秩序感可能是来自把 app 按照颜色归档在文件夹中和 VS Code 换了一个喜欢的主题色；我爱看电影和动漫，而她觉得人生苦短，更想从阅读中寻求一方净土。&hellip;</p>
<p>有时候我们也会讶异怎么这样的两个人走在了一起，又有时候会觉得理应如此，正如一次送花时的卡片上我所摘录的聂鲁达的一首诗：</p>
<blockquote>
<p>everything carries me to you,</p>
<p>as if everything that exists,</p>
<p>aromas, light, metals,</p>
<p>were little boats</p>
<p>that sail</p>
<p>toward those isles of yours that wait for me.</p>
</blockquote>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/26774193/">神经症与人的成长</a>，homura 推荐的，读完了，见上文。</li>
<li><a href="https://book.douban.com/subject/35754687/">What My Bones Know</a>，讲自我疗愈的，或许看完「神经症与人的成长」再看会有不一样的体会。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://xuanwo.io/2023/04-rust-std-fs-slower-than-python/">Rust std fs slower than Python!? No, it&rsquo;s hardware!</a></li>
<li><a href="https://www.newyorker.com/magazine/2023/12/11/the-inside-story-of-microsofts-partnership-with-openai">The Inside Story of Microsoft’s Partnership with OpenAI | The New Yorker</a></li>
<li><a href="https://ivyheretochill.xlog.app/Payment_Geography_Crypto_Adoption">支付金融地理志 ｜ 全球视角下的 Crypto 采用：动荡经济体的金融自由探索 - ivyheretochill</a></li>
<li><a href="https://blog.douchi.space/static-blog-half-year/#gsc.tab=0">静态博客半年记 | 椒盐豆豉</a></li>
<li><a href="https://www.liwenzhou.com/posts/Go/conc/">更友好的并发库 conc 介绍 | 李文周的博客</a></li>
<li><a href="https://www.kawabangga.com/posts/5301">四层负载均衡漫谈 | 卡瓦邦噶！</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1m94y177Eo">ZEALER 前员工从传播学角度聊聊王自如</a></li>
<li><a href="https://www.youtube.com/watch?v=RxL_1AfV7N4">EVM: From Solidity to byte code, memory and storage</a></li>
<li><a href="https://www.youtube.com/watch?v=nO0Q83VZCJM">DeFi Smart Contract Audit End-to-End | Thunder Loan - Security &amp; Auditing Full Course Excerpt</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><a href="https://movie.douban.com/subject/36190888/">间谍过家家 第二季</a>，阿尼亚赛高！</li>
<li><a href="http://movie.douban.com/subject/36093351/">葬送的芙莉莲</a>，太上头了，一口气刷 13 集。</li>
</ul>
]]></content:encoded></item><item><title>周报 #51 - 追星小鹿 Lawrence 与生病</title><link>https://www.pseudoyu.com/en/2023/11/29/weekly_review_20231129/</link><pubDate>Wed, 29 Nov 2023 09:41:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/11/29/weekly_review_20231129/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-11-22 到 2023-11-29 这一周生活的记录与思考。 这周因为学姐和我都患了甲流而几乎都在家休养，生病对生活工作造成了挺大的影响；录完了</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-11-22</code> 到 <code>2023-11-29</code> 这一周生活的记录与思考。</p>
<p>这周因为学姐和我都患了甲流而几乎都在家休养，生病对生活工作造成了挺大的影响；录完了上次说的播客，闲聊了一个多小时；周末烧了两天，但周日还是挣扎着出门去线下追星小鹿 Lawrence；退烧后以防万一还是去医院做了检查，没什么大碍，但也只能等待治愈；还有很多有意思的事。</p>
<h2 id="小鹿-lawrence">小鹿 Lawrence</h2>
<p>在许久之前自己就在精简自己的输入源和在各类媒体上的时间，关注数减少到了 100 以内，但是 B 站依然是我每天会打开的 App，而「<a href="https://space.bilibili.com/37029661">小鹿 Lawrence</a>」则是最主要的原因。</p>
<p><img src="https://image.pseudoyu.com/images/meet_lawrence_1.jpg" alt="meet_lawrence_1"></p>
<p>大概是三四年前关注的他，那时候鹿哥常常旅行追寻自我，留下了很多在日本的记忆，或是因为有一些相似的景，抑或是因为他孤独却又强烈地热爱这个世界的心境，一直觉得他的镜头与叙述有一种是枝裕和的美感，后面在某期 QA 的时候听到他最喜欢的导演也是是枝裕和，果然。</p>
<p><img src="https://image.pseudoyu.com/images/meet_lawrence_2.jpg" alt="meet_lawrence_2"></p>
<p>后来，他遇到了米老师。</p>
<p>他们的每一期视频都会第一时间看，看着他镜头中逐渐多了米老师的身影，有讲与他和他的猫的故事，有和十年前的自己对话，有年终总结的仪式感，直到，最近的求婚。我很难形容他们之间是一种什么样的美好，他们都有着自己的生活与追求，在自己的轨迹上前进着，却又互相吸引，彼此救赎，把对方从孤独中拉出来。</p>
<p>彼时的我也在追寻自己的轨迹 —— 「<a href="https://www.pseudoyu.com/en/2020/06/06/yearly_review_23/">23 岁的自白：去追寻意义</a>」，迷茫，不知所措，却又执拗地追求生活的意义本身。后来也经历了为自己想做的事去留学、亲人离世的痛苦、生活变动的迷茫等等，在难过到无以复加的时候就会开着鹿哥的视频反复地看，发现似乎总是能在他的叙述中找到共情的地方，并给予自己力量；后来也开始养猫，通过文字记录下这些生活点滴，用年终总结对自己说一些话，重新鼓起生活的勇气后用镜头记录下一些生活片段。后来也常常能收到一些读者从我的文字中找到共鸣或汲取力量的留言反馈，突然发现这似乎也是一种传火，将我获得的鼓舞传递给更多人。</p>
<p>这次刚好抢到了「Todat At Apple」鹿哥的分享会，讲了很多有关他的创作与生活本身的故事，对他提到的各个梗和视频细节都很熟悉，这才发现似乎这也成为了我生活的一部分了。</p>
<p>其中他提到说<a href="https://www.bilibili.com/video/BV1Gc411z7mu">下一个视频</a>也是笑中带泪的，并且用到了奥本海默里类似的消音手法，没想到是求婚！！！祝福！！！</p>
<h2 id="本周生活剪影">本周生活剪影</h2>
<p>今年确实感觉身体状况有所下滑了，四月有一次比较严重的急性肠胃炎，五月第一次阳了（不过两天就好了），这周又患了甲流发了几天烧，到现在还有不小的余波。也确实是难受，秋冬还是得多注意保暖了，计划也落下得越来越多，头疼。</p>
<p>然后也因为在家闷太久了，没做什么额外的事，也没太多心力做饭，希望一切早些回到正轨吧。这周末也会先回杭州呆一阵子，能见到一些同事，也可以去久违的良渚「疯狂星期四」了。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><a href="https://book.douban.com/subject/6764127/">Up At the Villa</a>，一本很小的书，算是没什么剧情的“悬疑小说”，对话与心理描写偏多，却还是挺吸引人一口气看完的。讲述的一种“desperate love”。年轻小提琴演奏者因 Mary 施舍的“爱”而重燃对生活的期望却又很快破灭而自杀；Edgar 只爱他记忆和想象中的纯洁无暇的 Mary；Rowley 是个富有的浪子，却爱得最纯粹、热烈而不计后果；Mary 则很矛盾，清晰地知道自己的心意，会因财富地位而迷茫，却又坚持着要将最完整的自己发生过的事坦白后再去接受 Edgar 的爱。爱背后有着挺多的功利、自以为是与自我满足，也许屏蔽掉这些后才能更加感受到纯粹的爱本身。</li>
<li><a href="https://book.douban.com/subject/26774193/">神经症与人的成长</a>，homura 推荐的，每天晚上读一些。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://justgoidea.com/posts/2023-063/">2023 年值得持续阅读的内容平台 · 槿呈 Goidea</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1yw411P7AB">vlog | 女程序员远程办公的一天｜remote 一年多带给我的变化？家中的工位长啥样</a></li>
<li><a href="https://www.bilibili.com/video/BV1Vc4119756">老师教我谈恋爱，我请他喝豆汁儿表示感谢！</a></li>
<li><a href="https://www.bilibili.com/video/BV1Gc411z7mu">我 求 婚 啦 ！！</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>间谍过家家 第二季</strong>，阿尼亚赛高！</li>
</ul>
]]></content:encoded></item><item><title>周报 #50 - 天坛漫步、重拾阅读和费曼学习法</title><link>https://www.pseudoyu.com/en/2023/11/21/weekly_review_20231122/</link><pubDate>Tue, 21 Nov 2023 09:41:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/11/21/weekly_review_20231122/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-11-13 到 2023-11-21 这一周生活的记录与思考。 这周工作也有挺多讨论和开发的部分，还算是在正常节奏；平日里工作、学习外加额外的阅读</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-11-13</code> 到 <code>2023-11-21</code> 这一周生活的记录与思考。</p>
<p>这周工作也有挺多讨论和开发的部分，还算是在正常节奏；平日里工作、学习外加额外的阅读也占据了大部分的时间，但也有着不错的充实感；因为想后面晚上更多还是看一些书，所以赶着把在看的几部剧和动漫追完了；周末去天坛公园散步了，晚上还解锁了好吃的菌菇火锅；给 OpenBuild 上了两节共计 4 小时的 Solidity Bootcamp，准备的过程也还挺有意思的；下周还有会参与一个播客录制，会参与到 2023 播客节，很期待；还有很多有意思的事。</p>
<h2 id="天坛漫步">天坛漫步</h2>
<p>北京的秋天很短暂，但大概是一年里唯一还算不错的时节了，微凉但不需要叠上一层层厚衣服，正适合散步。</p>
<p>出发前学姐突然说了句让我别带相机了，补充道“每次带着相机就没有那么自在地闲逛了”。愣了一下，确实是这样，似乎养成了记录的习惯后，在一些开心或是觉得有趣的瞬间会更多想着拍下来或是写下来，有时候反而会忽略了享受当下的美好。就像是去阿那亚的时候，在海边散步时，因为天色渐暗，想着能够快些出片，于是到了每一个景都会拍上许久，最后也如愿出了一些片，但是确实少了“漫步”的心境，相机的 55 焦段却无形增加了距离感。</p>
<p>这次去没带什么目的，只是散步，跟着公园里的游人打太极，比赛谁能把松果丢到一个由草堆组成的圆圈里，也会看着几只羽毛鲜艳似孔雀的小鸡在林子里乱窜/求偶。明明觉得自己其实是一个并不那么亲近自然风光的人，摄影上也更爱有些主题的街拍，但与人为伴闲逛惬意的时光却也带来了不少惊喜，让最近的一些紧绷和焦虑得到了很多缓解，时光也变得尤为缓慢。</p>
<p>后面还吃到了一家回味很久的云南菌菇锅「汤巴适」，强烈推荐！</p>
<h3 id="重拾阅读">重拾阅读</h3>
<p>前段时间的晚饭和饭后更多都是在追/重温一些剧，《请回答 1988》、《琅琊榜》和《机智的监狱生活》，轻松愉快却也让时间溜走得很快，于是努力集中追完后打算不再开启新的剧，而是重拾阅读。</p>
<p>去年读了很多书，通勤地铁上与 Kindle 为伴，环境恶劣但是却也乐在其中，一周有时能读 1-2 本，而这半年不再需要通勤，却少了一些读书的心境，也主要是在看一些工具书。这几天的晚上重新开始阅读，发现又能够享受其中了，要完成年初的阅读计划应该是不行了，但能找回阅读的享受也是更大的收获。</p>
<p>先看完的是《Building A Second Brain》和《PARA Method》，后者是前者的一个补充，都是关于个人知识管理的，前者更多是理念和方法论，后者则是更具体的实践方法，因为偏向于工具和实践，读起来也并不费力，不过对目前使用 Logseq + Readwise + Heptabase 的系统有一些补充。</p>
<p>群里同事提到了《未来简史》，想起来几年前看过这本以及《人类简史》，自己就兴趣而言比起文学作品来说其实并不那么喜欢这类宏大叙事的题材，不过他写的这个系列算是难得一直很吸引人去读的，有点想重温，不过刚好看到书架上有《今日简史》，想着先看完，读了前几个篇章。</p>
<h3 id="费曼学习法">费曼学习法</h3>
<p>最近又参与到了一门「<a href="https://openbuild.xyz/learn/courses/95">[OpenBuild Bootcamp] Solidity 入门到精通</a>」的授课中，负责其中两节，因为都是下班和周末的时间，用的也是之前在清迈 Workshop 培训材料的中文版。</p>
<p>自己似乎还是挺热衷于参与教育和分享这一类的事中的，也是费曼学习法的实践，其核心在：</p>
<blockquote>
<p>当你准备学习一门新知识时，必须站在传授者的立场，假设要向别人讲解这门知识。</p>
</blockquote>
<p>所以尤其在自己也还是学习阶段的时候，我会更珍惜能够去分享和授课的机会，去年五月给 Chainlink 做过一次技术分享，写了几篇博客，今年去清迈当了一次 Mentor，又参与了一次 Workshop，对于核心概念比起之前有了更扎实的掌握。</p>
<p>而谈到 Solidity 自己学习的路径，Patrick Collins 在 YouTube 上的三个 Solidity 教程我都看完了，每一个都是几十个小时。</p>
<p>第一个是 Brownie (Python) 版本的，是 2021 年 6 月刚从香港回深圳隔离时候看的，当时很多概念都不懂，也没什么实战经验，只是感觉 Python 写测试语法比较简单所以舍弃了毕设用过的 Truffle，大概一个月的时间粗略过了一下，应付了一下几个合约开发岗位的面试，后面因为去做了联盟链也没怎么用了。</p>
<p>第二个是 Hardhat (Javascript) 版本的，是 2022 年 5 月在家隔离的时候看的，当时已经对合约有了不少了解，也写过不少实战，所以更像是一种巩固，大概只花了半个月左右，还输出了几篇博客文章，还被 Patrick 本人关注到和联系了，有了很多后续的一些机会。</p>
<p>而最近刚看完的 Foundry （Solidity）版本的其实已经实战过不少项目，大部分概念已经熟悉了，然而却花了接近两三个月，很多还是跳着看的，感觉随着技术博客写少了后学习知识专注程度和状态还是有挺明显的下滑的，还是得重新捡起来 😢</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="播客节">播客节</h3>
<p>这周有机会录制一个播客，同时这个节目会参与到「2023 科技播客节」，同期的有「枫言枫语」、「代码之外」、「津津乐道」、「内核恐慌」等等自己很喜欢的播客，去年就有听这个活动的各种主题，没想到今年也能有参与的机会，很奇妙。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，其实文中提到的方法已经在别的博客了解并且实践了，更多只是想了解一下作者的思维模式和实践方法，发现还是更偏理论一些。</li>
<li><strong>The PARA Method</strong>，比起《Building a Second Brain》，这本更精简易读，很偏重实践方法，关于在多平台共用系统以及信息在 PARA 之间的流动原则对我目前的系统有挺大的参考的</li>
<li><strong>今日简史</strong>，三部曲的最后一本</li>
<li><strong>Uniswap V2 Book | RareSkills</strong>，一直想更详细了解 Uniswap</li>
<li><strong>ZK Book | RareSkills</strong>，了解一下 ZK</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://mp.weixin.qq.com/s/9rAhbG6lu-flNIGQEF5w0g">稳定性，难的不是技术，而是</a></li>
<li><a href="https://www.devas.life/effective-neovim-setup-for-web-development-towards-2024/">Effective Neovim setup for web development towards 2024</a></li>
<li><a href="https://vitalik.eth.limo/general/2023/11/14/neoplasma.html">Exit games for EVM validiums: the return of Plasma</a></li>
<li><a href="https://www.preethikasireddy.com/post/the-architecture-of-a-web-3-0-application">The Architecture of a Web 3.0 application</a></li>
<li><a href="https://www.rareskills.io/post/erc721">A comprehensive guide to the ERC721 standard and related security issues</a></li>
<li><a href="https://mp.weixin.qq.com/s/6jxnKYuunU1MuO1wfNyrPQ">大图书馆 #9 《流计算系统图解》书评</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.youtube.com/watch?v=wUjYK5gwNZs">Learn Solidity, Blockchain Development, &amp; Smart Contracts | Powered By AI - Full Course (12 - 15)</a></li>
<li><a href="https://www.bilibili.com/video/BV1NH4y127U2">study vlog #38｜享受晚间阅读所带来的平静与思考｜女程序员的学习日常｜TEDxTalks：内向性格的力量/关于睡眠｜未来简史｜英语学习</a></li>
<li><a href="https://www.youtube.com/watch?v=P6FORpg0KVo">How to Make Learning as Addictive as Social Media | Luis Von Ahn | TED</a></li>
<li><a href="https://www.youtube.com/watch?v=9iqn1HhFJ6c">Ilya: the AI scientist shaping the world</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>冥王 PLUTO</strong>，在奈飞上刷到的关于机器人和人类题材的一部动漫，一直对这个类型很感兴趣，平时的午休+周末看完了，关于仇恨与爱，仇恨方面比较宏大，贯穿着”仇恨是没有结果的“和英雄主义的主角团，让我更印象深刻的反倒是最开始的执法机器人和他的妻子、盖吉特与海伦娜之间的爱，仅仅是选择记住对于他们来说就已经是最艰难而伟大的选择了。</li>
<li><strong>间谍过家家 第二季</strong>，阿尼亚赛高！</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>机智的监狱生活</strong>，《请回答 1988》同个导演的作品，也是饭后休闲选择的剧，搞笑之余也很有风格，虽然也是大男主的剧本，但是呈现是我很喜欢的群像，里面的很多配角即使出场不多，也会留下很深的印象，还很喜欢的一点就是整部剧并没有刻意美化人性，像是出狱后马上重新吸毒的毒虫，同样也没有追求一种尽善尽美，比如首次复出赛并没能获胜的男主。更多可以说是展现了人的多样和成长。</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/6LpsABDodctW0sFs1U2qPq">Nidome no Hatsukoi by KO-SUKE</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #49 - 烧焦的键盘、庞贝神话展、健康调整与神奇的梦</title><link>https://www.pseudoyu.com/en/2023/11/12/weekly_review_20231112/</link><pubDate>Sun, 12 Nov 2023 21:23:29 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/11/12/weekly_review_20231112/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-11-08 到 2023-11-12 这几周生活的记录与思考。 这周回到了正常节奏，工作方面主要任务是在方案探讨和设计，没有太多代码的部分；另一个</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-11-08</code> 到 <code>2023-11-12</code> 这几周生活的记录与思考。</p>
<p>这周回到了正常节奏，工作方面主要任务是在方案探讨和设计，没有太多代码的部分；另一个 AI 相关的项目写了一些智能合约与调用链相关的后端 api 代码，其实虽然也写了不少合约，但是完整串整个流程的非 demo 项目机会还是不那么多的；运动方面上了两节私教课，状态还算不错；生活方面做了几餐饭，学姐弄了一个在线文档记录下了食谱和菜单，能感觉似乎厨艺有在进步；整理了一下之前拍的视频素材，打算努力剪出一版来，算是视频版的 review 了；重新布置了在北京的办公环境，舒服了很多；去逛街买了一些换季的衣服；还有很多有意思的事。</p>
<h2 id="烧焦的键盘">烧焦的键盘</h2>
<p><img src="https://image.pseudoyu.com/images/hanwen_keyboard_burnt.jpg" alt="hanwen_keyboard_burnt"></p>
<p>这周最有意思（？）的事应该就是一天晚上自己在加班工作的时候突然感觉到一阵什么东西烧焦了的味道，我跟学姐大喊了一声“好像有什么东西烧焦了”，接着写；过了一会儿感觉糊味好像离自己很近，又大喊“可能是我电脑或者键盘烧了”，然后接着写；又过了一会儿，键盘断触了，我拿起来闻了闻，一阵很浓厚的焦味，原来真的是键盘烧了。</p>
<p>当下还不觉得有什么，后来想想我的反应还是挺搞笑的，可能刚好在调试一个 bug，处在一个专注状态里，所以对于周遭的反应都像是一种程式化的输出了，大概我就是那种地震了第一反应是 <code>git commit</code> + <code>git push</code> 的人吧。</p>
<p><img src="https://image.pseudoyu.com/images/hanwen_chat_with_support.jpg" alt="hanwen_chat_with_support"></p>
<p>这个键盘用了也快一年了，是稚晖君设计的「<a href="https://www.bilibili.com/video/BV19V4y1J7Hx/">【自制】我做了一把 模 块 化 机 械 键 盘 !【软核】</a>」中的翰文 75，外观和手感都还挺不错的，跟客服联系了一下，说估计是排线烧了，还要联系售后检修，说这是他遇到的第一例。</p>
<p><del>我的代码功力大概是成了，都把键盘写烧了。</del></p>
<p>学姐：“要不要给你买个保险？程序员真是高危行业。” 🤣</p>
<h2 id="庞贝神话">庞贝神话</h2>
<p><img src="https://image.pseudoyu.com/images/pompeii_01.jpg" alt="pompeii_01"></p>
<p>学姐的公司有一些艺术展览的福利，可以带家属，想着周末不能总是宅家，于是挑选约了周六去了国家典籍馆参加一个「庞贝神话——意大利那不勒斯国家考古博物馆藏古希腊古罗马珍品文物展」，
包含“梦回盛世”“古希腊罗马时期的爱情神话”“快意人生：古罗马人对美好生活的热爱”“古代艺术中的美的概念”“神话再现”几个部分。</p>
<p><img src="https://image.pseudoyu.com/images/pompeii_02.jpg" alt="pompeii_02"></p>
<p>因为包含了导览讲解，一路听着奇幻的古希腊神话，又看着那个时代人们普通却又不朴素的日常，有一种很神奇的协调感。我想比起国内只有皇室才能有资格享有的古墓群，这种突然消失的城市似乎更能展现出一个城市本来的面貌，更加有真实感。</p>
<p><img src="https://image.pseudoyu.com/images/pompeii_03.jpg" alt="pompeii_03"></p>
<p>在我们的想象中，似乎 2000 年前是很遥远的世代，但其实就庞贝城所展现出来的状态来说，他们对与生活的追求甚至远超过现在的我们，美食、在餐具上的绘画、各类关于所信仰神的画作和雕塑，以及很有意思的，小小的庞贝城有二十多家妓院，还有很多展现性爱的壁画，他们对于性和欲望的开放程度甚至要远高过当下。</p>
<p><img src="https://image.pseudoyu.com/images/pompeii_06.jpg" alt="pompeii_06"></p>
<p>火山爆发让时光永久地停留在这一刻，而不用体验衰老和缓慢死亡，或许也恰恰符合了他们的生活态度，他们的日常生活也无不体现着“及时行乐”与“对美的极致追求”，他们对于爱情本身的憧憬与歌颂也无不体现在他们的艺术作品中，我想除了宗教外，他们同时笃信着美好生活与爱本身。</p>
<h2 id="神奇的梦">神奇的梦</h2>
<p>周日夜里还发生了一件很神奇的事。</p>
<p>因为想着夜里把周报写完，但刚健身和逛街完折腾了一整天又很困倦，想着把电脑放在床头，睡到三点左右起来写（<del>最后也没起来</del>）。深夜自己做了一个梦，大概是因为什么原因自己的 Macbook 不小心摔折成了两瓣，当时梦里的最后一瞬间应该是在后悔没有买 Apple Care，惊醒后手猛地一抓，刚好抓住了正要从枕头滑落到地上的笔记本。</p>
<p>大概是已经和电脑心意相通了，它察觉到了危险托梦给我来救它吧，很神奇的梦，再加上这周 Openai 的 GPTs 和一系列新特性的发布以及刚看了 PLUTO 这一讲人类与机器人的动漫，一时竟分不清我对此未来是期待还是畏惧了。</p>
<h2 id="健康调整">健康调整</h2>
<h3 id="健身">健身</h3>
<p>大约一个月前，开始了一周两次的健身房私教课。其实自己这么多年来对于身体是不那么关心的，也得益于还不错的体质，连小病小痛都很少有。高中大学时会在寝室做一些基础的仰卧起坐、俯卧撑之类的，也大概能保持不错的体能与体型。只是随着年纪渐长以及作息随着工作和生活的一些额外因素而越来越不可控，也逐渐开始想着能增加运动的频次和量。</p>
<p><img src="https://image.pseudoyu.com/images/yu_body_params.png" alt="yu_body_params"></p>
<p><img src="https://image.pseudoyu.com/images/yu_body_param_2.png" alt="yu_body_param_2"></p>
<p>综合考虑后，报了健身房私教课，一般一周两节，周三/周四的早 7-8 点以及周日的下午 2-3 点，基本上能覆盖到全身想锻炼的一些点，现在已经上了 7 节课，这是第一节课前测量的身体状况，应该再上一两节后会再测一下，看看有没有什么进步。</p>
<p>健身还真的是一件挺有趣的活动，前两次很新奇，每项都会想着能多做一点突破自己的极限，上了几节课后就会偶有倦怠和状态不好的时候，时常会在一些有些勉强的动作时瞥一下墙上的钟表，想着也太漫长了，而现在在已经能明显看到一些成效时，又稍微有些习惯甚至期待锻炼后的那种感觉。</p>
<h3 id="饮食">饮食</h3>
<p><img src="https://image.pseudoyu.com/images/food_weekly_review_20231113.png" alt="food_weekly_review_20231113"></p>
<p>随着健身和生活节奏的趋于稳定，我也开始更多自己做饭，虽然每天会多花点时间，但感觉还是挺有意思的体验，生活也似乎变得更具体了。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="逛街与情侣装">逛街与情侣装</h3>
<p>北京其实已经入冬了，这几天气温骤降，不过也还没准备什么厚实的衣服，周末健身完想着换季了，该去买一些了。</p>
<p>于是到了家附近的商场，和学姐逛了几个小时，买完后才突然意识到这似乎是我们真正意义上的第一次逛街买衣服，还挺神奇的，似乎已经相处了很久，但依然能发现很多没做过的新鲜的事，和关系亲密与否无关，可能更多还是相处模式上，两个人都没有很刻意要去打卡什么“一定要做的 x 件事”，一切自然而然地就发生了。</p>
<p>然后去支持了 Cali 的佐玩商城，买了一套「<a href="https://shop.zolplay.cn/products/404-not-found-hoodie-y23">404 Not Found</a>」的情侣衫，期待到货效果。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，正在阅读。</li>
<li><strong>Elon Mask</strong>，正在阅读。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.boyilu.com/a-normal-weekend">一个普通周末 - Boyi</a></li>
<li><a href="https://docs.rss3.io/docs/implementing-a-high-performance-arweave-bundle-parser">Implementing a High-Performance Arweave Bundle Parser</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1GC4y1U7qU">赚大了！0 基础也能学会用无人机拍大片【航拍教程】</a></li>
<li><a href="https://www.bilibili.com/video/BV12B4y1R7Fs">人生第一次 我跟一位杀人犯坐下谈心</a></li>
<li><a href="https://www.bilibili.com/video/BV1jC4y1E77p">study vlog #37｜女程序员下班后的学习日常｜本期🐱含量超标｜读未来简史 ｜TEDxTalks 共读：自控的秘诀/人格的难题/科技是救世主还是杀手</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>冥王 PLUTO</strong>，一个挺有意思的题材，关于机器人和人类的共生关系的，看了第一集觉得还不错。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>机智的监狱生活</strong>，和《请回答 1988》同个导演，也是吃饭的时候休闲看的，觉得是不同的风格，但也还挺有意思的。</li>
</ul>
]]></content:encoded></item><item><title>周报 #48 - 内蒙之行、清迈游民、重启的周报与生活</title><link>https://www.pseudoyu.com/en/2023/11/07/weekly_review_20231107/</link><pubDate>Tue, 07 Nov 2023 17:01:36 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/11/07/weekly_review_20231107/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-09-17 到 2023-11-07 这几周生活的记录与思考。 距离上一次提笔过了好久，接近一个半月了。前一两周发生的事很密集，有很多想记录的事，</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-09-17</code> 到 <code>2023-11-07</code> 这几周生活的记录与思考。</p>
<p>距离上一次提笔过了好久，接近一个半月了。前一两周发生的事很密集，有很多想记录的事，却总是没能抽出几小时的时间来完成周报。想着国庆总能有时间了，但去了趟内蒙，回来后又去了阿那亚度过了和学姐的 100 天纪念日；旅程很开心却也消耗心力，还未从行程中缓过来就赶着早班飞机前往了清迈参加活动，见到了许多网络上熟悉却素未谋面的朋友，也做了自己的第一次英文 workshop；再就是回到杭州见故友，参加朋友的婚礼，和高中同学聚会；期间夹杂着家里老人的身体出了一些意外，父母常常要往返于老家而逐渐无暇照顾捏捏，于是又托运带回了北京，幸好路途一切顺利，又能够朝夕相处了；同时，部分工作状态和重心依然有些不太满意，也花了将近一个月的时间逐步调整才回到正轨；还有很多很多的事。</p>
<p>这才深切地意识到培养一个习惯需要很久，但打破真的常常就在转瞬间。生活和爱逐渐变得具体了但表达欲却变得飘忽不定，所幸从这周起也会有比较稳定的生活状态和模式，一切又都重新回到正轨，于是以周报为界，重新捡起这空白的一个多月生活。</p>
<h2 id="朝阳啤酒节">朝阳啤酒节</h2>
<p><img src="https://image.pseudoyu.com/images/chaoyang_beer_01.jpg" alt="chaoyang_beer_01"></p>
<p>九月的很多时间都在北京，周末在常规 dating 之余，也会想着参加一些好玩的活动，在餐厅点餐时听到服务员在讨论朝阳公园在举办一个啤酒节，小红书上查了一下活动介绍，决定前往，还准备了自己做的三明治。</p>
<p><img src="https://image.pseudoyu.com/images/chaoyang_beer_03.jpg" alt="chaoyang_beer_03"></p>
<p>现场很 High，打碟的 DJ 装束很西北大汉，快乐感染到了现场的每一个人，纷纷在草坪上开始蹦野迪，有热情的外国小姐姐来跟我们打招呼，还见证了一个小哥搭讪和要到联系方式的全过程，前排吃瓜。</p>
<p>喝了两杯精酿倒不至于醉，但带着些微醺返程时却还是稍稍打开了话匣，聊了很多彼此生活中有意思的事，看到月亮会一起趴在桥上看上十几分钟，比赛谁能说出更多的相关的成语或是诗词，稀松平常，却享受着久违的松弛感和朴素的快乐。</p>
<h2 id="内蒙之行">内蒙之行</h2>
<p><img src="https://image.pseudoyu.com/images/neimeng_01.jpg" alt="neimeng_01"></p>
<p>倒不是什么刻意的安排，机缘巧合之下国庆的旅程定在了内蒙古鄂尔多斯，一方面想着去看看大沙漠（南方人没见过），另一方面，也是学姐的家乡，想着能待几天，看看她长大的地方，上篇提到了因故剪去了蓝色长发，这也是其中一“故”。</p>
<p>中午出发，北京过去三个多小时的高铁行程还算舒适，路途上却多少有些紧张和不知所措，这次刚好也都用新买的 Sony ZV1 Mark II 拍了很多视频，应该会有很多有意思的素材，但是都在 SD 卡里，还没来得及整理（<del>先恢复周报频率再考虑 vlog 的事吧</del>）。确实内蒙的气候与风貌和江浙挺不同的，干燥且风大，但是天阔云高，有一种很干净的美。</p>
<p>学姐的父母来接我们，一路上闲聊着，因为还不太听得懂达拉特旗的方言，有些词他们也不知道怎么用普通话来解释，且我们四个都是英语专业的（学姐的父母是英语老师，我和学姐虽后来都不务正业但也是英专出身），于是就出现了用英语解释方言的奇妙景象，留下了很有趣的记忆点。</p>
<p>因为知道我来自南方，想依着我的口味，当晚去了一个渔村吃了黄河鲤鱼；后续几天见一些亲朋，免不了几顿酒但也确实能感受到溢出言语的热情好客；赶早市，吃到了很多牛羊肉和当地特色的小吃，确实满足了我对大西北的想象。</p>
<p>几天后就返京了，开心但是也确实有些疲累，可能宅太久的自己一次见到那么多人做那么多事还是有些消耗心力，但是记录下了很多有意思的事和珍贵的记忆瞬间，也许可以浅浅期待一下 vlog。</p>
<p><del>直到最后也没去成大沙漠，我为什么去内蒙来着。</del></p>
<h2 id="阿那亚之行--100-天">阿那亚之行 &amp; 100 天</h2>
<p><img src="https://image.pseudoyu.com/images/boyi_anaya_01.png" alt="boyi_anaya_01"></p>
<p>回到北京后歇了一天，因为 10.7 刚好在一起 100 天，6 号驱车自驾去了秦皇岛的阿那亚，一个挺有意思的海边社区/度假村，我想比起大理、清迈这样的数字游民社区，这里人为打造的小资氛围更重，复式小楼，门口大大的草坪与在上嬉戏打闹的家人，偶尔有人骑着自行车穿过，也有跑步的外国人，很电影感。</p>
<p><img src="https://image.pseudoyu.com/images/boyi_anaya_02.png" alt="boyi_anaya_02"></p>
<p>酒店的阳台能直接看到海滩，走几步就是网红的「阿那亚礼堂」和「孤独的图书馆」，不过我和学姐都没去凑这个热闹，图书馆可能是挺孤独的，但围绕着排队打卡拍照的游客们，却还是有一种莫名的违和感，不过现今似乎“出片”就是它最大的价值。更吸引我们的反而是海滩中的一排秋千，前后摇晃着看着海浪拍打着岸边，很惬意。</p>
<p><img src="https://image.pseudoyu.com/images/boyi_anaya_03.png" alt="boyi_anaya_03"></p>
<p>恋爱至今，有一种又远又近的感觉，好像在一起的当下就在几天前，又好像在一起很久很久了，不过 100 天还是有一些仪式感，学姐偷偷提前买了气球，用拍立得合影纪念了。恋爱真的是一件挺奇妙的事，似乎微小的日常也会变得尤其珍贵。</p>
<h2 id="清迈游民">清迈游民</h2>
<p>很早之前就确认了要去 muChiangmai，一个 Web3 数字游民共居的活动当 mentor，活动相关可以看我的网上邻居 ivy 的这篇 「<a href="https://ivyheretochill.xlog.app/muchiangmai-memories">Coder 徙居古城墙：muChiangmai 回忆 - ivyheretochill</a>」，很细致讲了体验了一个多月的各类感受，而我只待了短短一周，且很多时间都在酒店处理工作，所以更多分享的是生活本身，这次尝试了在 Telegram 频道 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 持续更新了小作文，免得忘记，特此合订一下。</p>
<h3 id="来到清迈---20231008">来到清迈 - 20231008</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1008.jpg" alt="chiangmai_1008"></p>
<p>时隔三年多又来到了清迈，上次还是疫情期间送倪去澳洲，需要在第三国中转 14 天。而这次主要是为了参加一个开发者活动，再加上还有不少工作任务，所以也并没有什么游玩的安排，就简单收了行李，只背了一个大包出发了。</p>
<p>选了午夜的航班，到达后已经是早上，免签后很方便，就一本护照直接过关，没有什么额外的流程。出了机场用 Bolt 打了一辆出租车到了酒店，入住、洗漱，取出电脑开始工作，因为也不是很饿，到了临近晚上把手头上的任务收了尾才想着出去逛逛。住在塔佩门附近，还算热闹，随机选了一家不算太远的店去吃了这次的第一餐，很惊喜。</p>
<p>其实比起假期里大片时间刻意安排的旅行，自己更喜欢来清迈这种不会给人带来太多异乡感的地方，不需要像是度假那样去转换角色或是调整心境，白天依然像之前一样宅家工作，晚上偶尔有兴致了找找街边小店探索美食，在换一个环境能给生活增加一些亮色的同时也减少对生活的入侵感。</p>
<h3 id="藏在生活角落里的善意---20231009">藏在生活角落里的善意 - 20231009</h3>
<p><img src="https://image.pseudoyu.com/images/chaingmai_1009.jpg" alt="chaingmai_1009"></p>
<p>今天也没什么额外的安排，在酒店宅着工作了，中午的时候想着还是出门逛逛，于是选择了一家叫「Sailomjoy Restaurant」的本地小馆，凭着对泰国菜的印象点了炒空心菜和河粉，很美味，感觉自己在盲选美食上一直还是有点运气在的。</p>
<p>中午的餐馆人流挺大，选了一个角落的位置独自坐着吃，有一个很纯正英音的小哥端着盘子过来指着我桌上摆着的酱料说了句 &ldquo;May I?&quot;，加完后还笑着跟我说了句 &ldquo;Thank you! Enjoy!&quot;，心情一下子就 up 了。</p>
<p>之前刚入住香港窄小阴暗的租屋时也很压抑，每天在图书馆里很晚回家，房间灯坏了也没顾上修，跟房东阿姨提了下，晚上回家后发现修好了，桌面上留下了一个苹果和纸条，上面写着 &ldquo;Light fix&rdquo;，似乎一下子在这个租屋的时光连带着整个生活都随着修好的灯一同明媚了起来。</p>
<p>也还记得年初在北京看一次音乐会，在跨过人流找自己座位时有一个挺帅的小哥对着他的同伴说了句 &ldquo;I love his hair! It&rsquo;s cool&rdquo;。似乎外国人也更加不吝惜自己的语言去表达对他人和这个世界的善意。</p>
<p>感觉自己似乎一直挺喜欢和感激这样藏在生活角落里的小确幸的，在制定个人计划时也加了一条 &ldquo;random kindness&rdquo;，希望自己也或多或少能够给他人带来一些改变。</p>
<h3 id="记忆随意链接---20231010">记忆随意链接 - 20231010</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1010.jpg" alt="chiangmai_1010"></p>
<p>今天又是大半天没出门，四点多的时候实在有点饿，再加上晚上有组会，所以提前了点出门觅食。突然有点想吃西式，就也选了离酒店几百米的一家意大利餐厅「Pulcinella da Stefano」。</p>
<p>进去后随意选了一个靠边的位置，坐下后拿起菜单一瞥，一股莫名的熟悉感袭来。突然想起来三年前来塔佩门玩的时候好像也吃了这家，还找到了记忆中当时觉得很新奇的“米兰炖牛膝”，果然，甚至坐的刚好是今天同样的位置，很神奇。</p>
<p>总以为自己这几年辗转了很多地方，也变化了很多，但常常有一些随意将自己和过去的记忆链接的瞬间，有的可能是很不起眼的物件或是很微小的感受，却让自己有一种时间缓慢流淌的感觉。</p>
<p>但是人真的不能在很饿的时候点餐，一定会点多，明天还是努力中午出门吧。</p>
<h3 id="小作文与合订本---20231011">小作文与合订本 - 20231011</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1012.jpg" alt="chiangmai_1012"></p>
<p>国庆前由于忙一些工作任务而搁置了周报，然后经过了假期，再经过了来清迈等等一系列安排，再次提笔想写的时候已经丧失了当时记录的心情，但又由于一直不更新而带来了很大的心理压力，总像是一件事搁在心里，又不想敷衍草草了事。</p>
<p>其实分享的心情是有时效性的，就像是刚起床做了一个很有趣的梦一样，转瞬即逝。突然看到了 @strrlthedev 的「Gap Year Wrapped - Timeline」，突然想到其实可以每天/一段时间记录一些东西，写点小作文，然后周末做一个合订本周报外加一些整体的思考，既能够减少周报记录所带来的大块时间压力，又能够抓住了一些有趣的想法，频道里就当超前点播了哈哈。</p>
<p>顺便补一下昨天的记录，是出门&amp;正常吃饭尝试失败的一天，还是在酒店工作，还是只吃了一餐，不过也还是很好吃，叫「Kat&rsquo;s Kitchen」，泰餐。</p>
<h3 id="coworking---20231012">Coworking - 20231012</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1012_2.jpg" alt="chiangmai_1012_2"></p>
<p>虽然说这次主要目的是 muChiangmai，但是下午才是第一次去 PunSpace 会场，活动组织者和 OpenBuild 的小伙伴热情地来接我和给我讲一些活动事项，原来这是那种很大的一个大家一起工作的公共空间，网络和环境都不错，很浓的技术氛围，早知道前几天也过来一起玩了，感觉工作效率还挺高的，还见到了 ivyFanshao 和 CaptainZ 等网上邻居！快乐！</p>
<p>远程办公也半年多了，虽说时间安排很自由，但有时候自己呆久了会陷入一种低气压的状态，无关情绪，只是似乎对这个世界的感知少了，就像是午睡突然醒来发现外面的天已经黑了的孤独感。所以有时候也会去主动寻求一些改变，像是在杭州的时候坐一个小时的地铁每周四去良渚村和大家一起办公，像是这样换一个环境感受生活的流动。</p>
<p>晚上去吃了第一晚去过的一家店「Airniversary」，之前吃的是泰式，今天尝试了完全不同的菜式，牛排沾泰式甜辣酱以及超大的椰子（神奇的吃法），意外地好吃。</p>
<h3 id="一个小-bug-修一天----20231013">一个小 bug 修一天 🤡 - 20231013</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1013.jpg" alt="chiangmai_1013"></p>
<p>今天早上 5 点多噩梦醒了，想着干脆起来工作，刚好在美国的同事看我在线让我一起解决个 bug，因为对这个仓库不太熟悉，连上配环境和各种调试，期间开了季度会和做一些其他工作，拖着到现在才算真正解决，一个破 bug 修一天 🤣</p>
<p>中午抽空去吃了个芒果糯米饭，好吃！</p>
<p>漫长的一周结束了，不过因为下周有个项目比较赶周末会加一下班，补一下周报，再加上准备一下周一的 workshop，忙碌。</p>
<h3 id="the-lost-book-shop---20231014">The Lost Book Shop - 20231014</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1014.jpg" alt="chiangmai_1014"></p>
<p>去了街边一家旧书店「The Lost Book Shop」，店如其名地很 vintage，一楼很窄却有序，爬上一个楼梯后还有个豁然开朗的二层，作为毛姆粉太喜欢这个系列的封面设计和装帧了，有点后悔只背了个包没带行李箱了，带不了多少东西，纠结了许久，最后除了「刀锋」外，选了几本没读过的。</p>
<h3 id="今天也要好好吃饭---20231015">今天也要好好吃饭 - 20231015</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1014_2.jpg" alt="chiangmai_1014_2"></p>
<p>周末还是决定多出门。果然作为一个南方人还是抵御不了海鲜的诱惑，从 TripAdvisor 找到的一家很本地的店「Maadae Slow Fish Kitchen」，食材很新鲜，酱料也很独特。吃完后散步还去了一个旧书店「The Lost Book Shop」，买了一些毛姆的书。晚上又去了一家本地菜「Nun&rsquo;s Restaurant」吃了咖喱面。吃完后有点暴雨，在 711 躲雨的时候还在小吃摊点了一个饼，有点甜但是味道还不错。</p>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1014_3.jpg" alt="chiangmai_1014_3"></p>
<p>大概是从好久之前看到的竹棘大大的一个日剧混剪「今天也要好好吃饭」开始的，感觉因为作息习惯原因自己算不上规律吃饭，但是对待美食都有一种特别的仪式感，会记录和感受。</p>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1014_4.jpg" alt="chiangmai_1014_4"></p>
<p>「无论健康、病痛、满足、寂寞的时刻，请好好吃个饭吧。身心都会获得治愈的。」 ——《食べる女》</p>
<h3 id="记一次英文-workshop--清迈再见---20231016">记一次英文 workshop | 清迈再见 - 20231016</h3>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1016.jpg" alt="chiangmai_1016"></p>
<p>感觉从香港毕业后就没有很大段地讲英语了，这次为了挑战自己（白嫖住宿）来 muChiangmai 活动申请当了一个 mentor，主要是需要 host 一个两个小时的 solidity workshop，但是上周又很忙导致差不多从周日晚上才开始准备，出去吃饱后回来睡到了凌晨一点，起来改 ppt + 写 demo 弄到六点多，睡了一会儿后继续改，一直到下午。</p>
<p><img src="https://image.pseudoyu.com/images/chiangmai_1016_2.jpg" alt="chiangmai_1016_2"></p>
<p>workshop 在一个小小的会议室里，人不算多但是坐得满满的，氛围很好，还是很紧张的，感觉英语讲还是磕磕绊绊的，但好在至少没卡住，想要讲解表达的都有覆盖到，也算是一个小小的挑战了。结束后和网上邻居们一起去清迈大学夜市逛了一下，大概是吃了这次在清迈的最后一餐了，就匆匆 Bolt 回酒店开组会了。</p>
<p>明天早上 6 点多的飞机，打算夜里过去在机场补一下白天落下的工作和周报了，清迈再见。</p>
<h2 id="杭州生活剪影">杭州生活剪影</h2>
<h3 id="故友重逢">故友重逢</h3>
<p>原本也许会在清迈待更久，但晓瑜从日本回来了，但只待几天，上次见面甚至疫情都还没开始，时间真的好快。12 年高中认识，到现在也已经是十几年的好友。随着慢慢长大，朋友越来越少，但留下的却都弥足珍贵，甚至几年不见也几乎感受不到疏离感。一起吃了饭，回家看了捏捏，聊了很多想法，也提及了许多过去的小事，真好。</p>
<h3 id="同学的婚礼">同学的婚礼</h3>
<p>大概是第二次参加婚礼了，同时也是第二次因为长/蓝发没当成伴郎哈哈。是我高中的同桌，本就是一个沉稳而万事周全的人，婚礼这样的人生大事当然安排得很周到。刚好借此机会和高中的男生同学们一起聚餐，因为文科班男生很少，8 个男生 40 个女生，所以反倒是结下了比较深的情谊，毕业后直到疫情前每年都能聚上两次。后面即使是四散漂泊，也都还能保持了一些联系，婚礼结束后还去了下一场。</p>
<h2 id="生活变动与捏捏">生活变动与捏捏</h2>
<p>这周家里发生了一些事，已经 80 岁的奶奶在老家散步时被车撞到，在 ICU 里待了八天，所幸并没有危及性命，但断了十几根肋骨，肺部也有一些波及，据医生说，恐怕再也很难站起来了。从小在老家度过了童年，也在他们身边长大，这两年也陆续经历了外婆离世，以及爷爷奶奶身上的各种大小意外或是病症，原来自己也到了这样的时候了，难过却也无能为力。</p>
<p>父母和亲人也都为此在杭州和江苏老家之间来回奔波，轮流去医院照料，也在商量之后的安排。之前因为自己总是两个城市来回，捏捏在家里由父母和我妹妹照料，但因此变故也不想再徒增他们的思虑，于是找了之前熟识的托运公司，让捏捏坐着小车跨越 1200 多公里又回到了北京，刚好天气转凉，再晚也会更担心路途的奔波。</p>
<p><img src="https://image.pseudoyu.com/images/two_cats_in_beijing.jpg" alt="two_cats_in_beijing"></p>
<p>一切顺利地抵达北京，去接了回家，因为之前也在学姐家寄养过一阵子，倒是没有什么应激，和学姐家的小猫饭饭经过一两天的磨合也渐渐熟络起来。倒是没想到能这样间断性地过上两人两猫的生活。</p>
<p>后面又能够和捏捏朝夕相处了，也拍了更多日常会分享出来。</p>
<h2 id="生活调整与心境">生活调整与心境</h2>
<p>其实从 9 月下旬开始，对于自己的各个方面都有些不太满意，甚至到了有些沮丧的地步，工作上常常觉得有些状态不好，不论是工作效率还是重心，经过了几次和组长沟通才渐渐回到正轨。</p>
<p>输入这一块有所停滞，自己想要看的很多书、文章和电影清单越来越长，却常常很难找回之前那样专注的状态，有时甚至会发呆着就过了许久；周报其实也都不乏要写的内容，只是每当打开文档就有些焦虑，自己似乎都没能读什么，学习进度也不尽如人意，分享出来的东西总觉得有些虚浮。</p>
<p>还有很多很多由焦虑、消沉和不安所带来的负面情绪，而自己似乎又是一个没什么情绪出口的人，没法从运动、游戏这些身体和大脑的瞬时刺激中得到释放，只能强迫着自己继续看一些东西，循环往复。去清迈与其说是参加活动，更多是给自己的生活状态一个调整的契机，虽说寄托于环境似乎是个挺取巧的选项，但确实行之有效。</p>
<p><img src="https://image.pseudoyu.com/images/daily_cook_1107.png" alt="daily_cook_1107"></p>
<p>回来之后的自己似乎重拾了一些动力，开始和学姐一周两次（周中的早 7 点和周末的下午）的健身房私教，能感受到健康的身体所带来的精神状态好转；平时也开始自己做饭，发现倒也还是挺享受于按照美食视频的指引一步步做成形的过程的，似乎成为了一种特殊的解压方式。</p>
<p>感谢 <a href="https://twitter.com/gxgexiao">Xiao</a> 友情提供的阳澄湖大闸蟹，加餐了！</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，继续阅读。</li>
<li><strong>Elon Mask</strong>，还是挺期待的传记，刚翻阅了一点点。</li>
<li><strong>Don Fernando</strong>，期待毛姆的毒舌点评。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://guangzhengli.com/blog/zh/gpt-embeddings/">ChatGPT 应用开发和思考</a></li>
<li><a href="https://platform.openai.com/docs/guides/gpt-best-practices">GPT best practices - OpenAI API</a></li>
<li><a href="https://www.owenyoung.com/blog/hongkong-bank-account/">香港银行账户开通笔记（包括实体银行和虚拟银行）</a></li>
<li><a href="https://github.blog/2023-08-30-why-rust-is-the-most-admired-language-among-developers/">Why Rust is the most admired language among developers - The GitHub Blog</a></li>
<li><a href="https://pinchlime.com/heptabase-introduction/">Heptabase 完整功能介紹 - 以卡片和白板為基礎，最能讓你進入心流的視覺化學習軟體 - Pin 起來！</a></li>
<li><a href="https://tonsky.me/blog/unicode/">The Absolute Minimum Every Software Developer Must Know About Unicode in 2023 (Still No Excuses!) @ tonsky.me</a></li>
<li><a href="https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/">How to optimize garbage collection in Go</a></li>
<li><a href="https://strrl.dev/post/2023/gap-year-wrapped-timeline/">Gap Year Wrapped - Timeline</a></li>
<li><a href="https://yach.me/2023/10/14/ccn-and-ecn/">什么是拥塞控制算法，ECN 又是什么？ – Yachen&rsquo;s Blog</a></li>
<li><a href="https://sspai.com/post/83412">告别电影荒：日本电影观看全指南 - 少数派</a></li>
<li><a href="https://ivyheretochill.xlog.app/muchiangmai-memories">Coder 徙居古城墙：muChiangmai 回忆 - ivyheretochill</a></li>
<li><a href="https://www.wired.co.uk/article/yuval-noah-harari-dataism">Yuval Noah Harari will release his new book, Homo Deus: A Brief History of Tomorrow, on September 8 | WIRED UK</a></li>
<li><a href="https://blog.xinshijiededa.men/unicode/">（译）2023 年每个软件开发者都必须知道的关于 Unicode 的基本知识 | 新世界的大门</a></li>
<li><a href="https://www.epicweb.dev/why-i-wont-use-nextjs">Why I Won&rsquo;t Use Next.js | Epic Web Dev by Kent C. Dodds</a></li>
<li><a href="https://notes.eatonphil.com/2023-11-01-postgres-table-access-methods.html">Writing a storage engine for Postgres: an in-memory Table Access Method | notes.eatonphil.com</a></li>
<li><a href="https://www.eaimty.com/2023/opensource-project-based-on-hormone/">基于荷尔蒙开发的开源项目 - EAimTY&rsquo;s Blog</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1iK4y1w7m5">iPhone 首发影像评测 ｜ 看完样片再决定买不买！</a></li>
<li><a href="https://www.bilibili.com/video/BV1KF411S7X5">主观对比 8 类热门显示设备，你用过几种？</a></li>
<li><a href="https://www.bilibili.com/video/BV1DH4y1m7oJ">英国旅游 VLOG | 爱丁堡圣诞节</a></li>
<li><a href="https://www.youtube.com/watch?v=1ING-LVW7wM">被坑了！花¥3000 买了个黑白掌机，还是手摇的！</a></li>
<li><a href="https://www.youtube.com/watch?v=5pAo-V0ymTU">Infuse+阿里云盘教程，苹果用户最佳影视库</a></li>
<li><a href="https://www.youtube.com/watch?v=ejIixcznawg">专访多邻国创始人：从技术天才到全球第一语言 APP，他真的很不一样～</a></li>
<li><a href="https://www.bilibili.com/video/BV17N411E7ry">征集两万份问卷！全站最受欢迎的 UP 主居然是..?</a></li>
<li><a href="https://www.youtube.com/watch?v=9aCg7jH4S1w">Mark Zuckerberg on Threads, Elon Musk, AI, the Quest 3, and more</a></li>
<li><a href="https://www.bilibili.com/video/BV1f8411r7n3">云南旅行 vlog 上篇｜不仅是美景，追逐美景的过程同样治愈｜旅行碎碎念｜旅途、雪山、森林、湖水、动物</a></li>
<li><a href="https://www.bilibili.com/video/BV1Yu411M776">到底什么才是人生最重要的事啊？！</a></li>
<li><a href="https://www.bilibili.com/video/BV1Rj411s7D4">9 月互联网热门话题鉴定</a></li>
<li><a href="https://www.bilibili.com/video/BV1Dm4y1g74f">你幻想的世界尽头，是这样的吗？｜4K 新西兰旅拍</a></li>
<li><a href="https://www.bilibili.com/video/BV1AE411a7Nw">【日剧混剪/治愈】今天也要好好吃饭</a></li>
<li><a href="https://www.bilibili.com/video/BV1x841167gZ">study vlog #32 | 重启学习计划｜工作是干不完的，记得 work-life-balance｜TEDTalk 小分享｜复习 Kafka</a></li>
<li><a href="https://www.bilibili.com/video/BV1Fu4y1s79N">当对象嫉妒小心眼的时候，问题出在哪里</a></li>
<li><a href="https://www.youtube.com/watch?v=WoPwVT9Nrdw">【精彩】微软收购动视暴雪 | 世纪收购战争</a></li>
<li><a href="https://www.bilibili.com/video/BV168411r7by">遇 到 了 猫 世 界 的 自 己</a></li>
<li><a href="https://www.bilibili.com/video/BV1jG41127kk">study vlog #33 | 和拖延症逐渐和解｜长这么大第一次了解自己的生物钟｜希望世界和平</a></li>
<li><a href="https://www.bilibili.com/video/BV1cM411R7rT">犹太人、阿拉伯人、基督徒的千年恩怨</a></li>
<li><a href="https://www.bilibili.com/video/BV1yG411y7z8">study vlog #34｜女程序员宅家学习周记｜超喜欢在秋天学习｜沉迷刷 TEDxTalks 脑科学的分享｜原来大脑每天都在变化，希望它往聪明变</a></li>
<li><a href="https://www.bilibili.com/video/BV1tc411o7VB">取代微单？能放进口袋的 4K 相机｜大疆 Pocket3 首发评测</a></li>
<li><a href="https://www.bilibili.com/video/BV1bu4y1J7Wp">study vlog #35 | 或许完不成目标是常有的事｜1024 程序员节快乐｜TEDx 如何激励自己改变行为｜solidity｜research | 山形瑞秋</a></li>
<li><a href="https://www.youtube.com/watch?v=CRe_oDtfRLw">Introduction to libp2p - David Dias</a></li>
<li><a href="https://www.youtube.com/watch?v=RcHER-3gFXI">WebAssembly: A new development paradigm for the web</a></li>
<li><a href="https://www.youtube.com/watch?v=3sU557ZKjUs">An introduction to WebAssembly</a></li>
<li><a href="https://www.bilibili.com/video/BV1ec411d7Av">10 月网络热门话题鉴定 | 冷知识：除夕从来都不是法定节假日</a></li>
<li><a href="https://www.bilibili.com/video/BV1cN4y1r7YS">在上帝的后花园，却要把盘子都添干净！？｜新西兰基督城 4K</a></li>
<li><a href="https://www.bilibili.com/video/BV1c94y1L75T">横版马力欧居然还能进化？任天堂：这就叫做惊奇！【就知道玩游戏】</a></li>
<li><a href="https://www.bilibili.com/video/BV19w411M7Ut">study vlog #36 | 学习使我快乐，记录使我充满动力｜状态很棒的一周｜利用零碎时间背单词｜TEDxTalks：如何与大脑沟通/如何做到内心强大</a></li>
<li><a href="https://www.youtube.com/watch?v=U9mJuUkhUzk">OpenAI DevDay, Opening Keynote</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>3 年 A 班：从现在起，大家都是人质</strong>，也是在奈飞首页上刷到，下载到手机 app 里路途上打发时间看的，有点高智商犯罪的起点，但是后续逻辑感觉很站不住脚，也是真的中二。</li>
<li><strong>西部世界 第一季</strong>，飞机上提前下载看了一个开头。</li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/7v6Xw1GwTb1m9y7xyXwLhf">Sick Enough to Die (Feat. Mellow) by MC MONG</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #47 - 采访、拳击与工作状态</title><link>https://www.pseudoyu.com/en/2023/09/17/weekly_review_20230917/</link><pubDate>Sun, 17 Sep 2023 18:42:36 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/09/17/weekly_review_20230917/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-09-13 到 2023-09-17 这几周生活的记录与思考。 周一去看了期待已久的「奥本海默」很久没去影院看电影了；周六去圆明园写生，完整现充的</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-09-13</code> 到 <code>2023-09-17</code> 这几周生活的记录与思考。</p>
<p>周一去看了期待已久的「奥本海默」很久没去影院看电影了；周六去圆明园写生，完整现充的一天；周日第一次去拳馆上了一节拳击课，很新奇的体验；周中终于见到了 Atlas，聊到了不少关于工作和生活的话题；生活状态逐渐回到正轨，工作状态却有些问题，进行了一些调整；在 polebug 的频道客串了一次采访，聊了很多关于 Web3 与合约开发相关的话题；还有很多有意思的事。</p>
<h2 id="采访">采访</h2>
<p>在 <a href="https://twitter.com/polebug">polebug</a> 的 <a href="https://space.bilibili.com/58078997">B 站频道</a>里聊了一下之前的学习经历、Web3 与智能合约相关的话题，不知不觉竟然也接近 30 分钟了，很有意思的聊天体验，也算是对自己一些学习的小小总结了。</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1wV411N7eQ">和 web3 从业者聊聊天 #4｜从英语专业到智能合约开发的 pseudoyu 🐙｜为什么选择去港大学习区块链｜智能合约相关的学习资料分享｜对于跨考计算机的建议</a></li>
</ul>
<h2 id="拳击">拳击</h2>
<p>很久之前在学姐的「<a href="https://www.boyilu.com/boxing-beginner">运动 | 有哪些事是学拳击以后才知道的？</a>」这篇文章中看到这这项运动，不过自己作为资深死宅也是连西洋拳击、泰拳、巴西柔术这些都不太分得清，更别说去尝试了。直到最近想找一些一起的运动，想着先从拳击开始试试。于是约了一个周末的下午，换上运动装就去拳馆了。</p>
<p>自己之前玩了很多年的轮滑，也玩过一段时间的滑板，对于其他运动算是少有接触，上课前还是带着一些畏难心理的。果然在步法和出拳的配合上因为没怎么接触过这类运动而有些不一致，协调性也不太好，发现可能在自己的思维定势里太久了，一开始恨不得做个导图把各个动作的先后排列出来，也有因为肢体和思维不太一致而有些小沮丧，但是在经过一小阵子的练习后勉强能跟得上练习节奏了。</p>
<p>学姐还拍了一小段我练习出拳的视频，放在了<a href="https://t.me/pseudoyulife/">频道</a>里：<a href="https://t.me/pseudoyulife/2360">https://t.me/pseudoyulife/2360</a></p>
<p>第一节课就能体验出拳的快感还是很正反馈的，整体来说还是一个很有趣和解压的运动，也没有想象得那么困难，很多步法和细节动作还是需要继续练习，也想继续坚持下去训练。</p>
<h2 id="工作状态调整">工作状态调整</h2>
<p>其实这几周的生活状态逐渐回到正轨，从周报的更新频率也能稍稍看出来，开始恢复看一些书和电影，终于也踏出了运动的第一步，周末也会慢慢地去参与一些户外的活动，情绪似乎一直在不错的状态。</p>
<p>但是却察觉到工作状态有些问题，倒不是工作方向或是内容，只是想做的事太多，又似乎都想去探索，但自己的时间精力终究还是有限的，反而失了重心，效率也受到不少影响，和组长/同事聊了后，开始做一些调整。</p>
<p>似乎又到了自我的调整的周期了。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="奥本海默">奥本海默</h3>
<p>因为订阅了国内外各个流媒体服务，也基本上不追什么热点，就很少去影院了，周一下班后久违地去看了电影，期待已久的「奥本海默」。上一次印象比较深的还是三个小时的蝙蝠侠，同样地长，也同样地喜欢。</p>
<p>诺兰的「星际穿越」和蝙蝠侠三部曲算是自己最喜欢的几部电影了，他对于临场感的追求和情绪的把控是很适合深沉一些的传记、历史和英雄题材的，主角抢眼却也真实，配角也各自有自己的故事感。印象最深的还是刻意打乱的时空叙事，黑白与彩色的交织画面以及长长的对话。作为一个传记很难指望能有一个鲜明的故事线与发展节奏的，略带混乱和复杂度的画面构成了很“诺兰”的剪辑风格，也因此 get 到了好几个埋藏的剧情转折和伏笔。</p>
<h3 id="圆明园写生">圆明园写生</h3>
<p><img src="https://image.pseudoyu.com/images/boyi_yuanmingyuan_draw.jpg" alt="boyi_yuanmingyuan_draw"></p>
<p>周末另外好玩的还是周六陪学姐去参加了圆明园写生，算起来也是第一次去圆明园，虽然带了相机但也没怎么四处拍照，简单拍了一些，不过倒是试用了新买的想用来一起记录生活的 Sony ZV1 Mark II，很小巧的卡片机，比之前用过的 ZV1 在焦段和易用性上还是提升了不少的，调了 HLG3，和相机的参数一致，之后可以配合着拍一些视频了，或许会定期记录一些 vlog 什么的。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，正在基于他的理论构建自己的知识管理系统，继续阅读。</li>
<li><strong>Elon Mask</strong>，还是挺期待的传记，刚翻阅了一点点。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://techcrunch.com/2023/09/14/wordpress-blogs-can-now-be-followed-in-the-fediverse-including-mastodon/">WordPress blogs can now be followed in the fediverse, including Mastodon | TechCrunch</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1wj411y7pq">350w 粉 UP 主每月要花多少钱？时隔 5 年的读评论！</a></li>
<li><a href="https://www.bilibili.com/video/BV1wV411N7eQ">和 web3 从业者聊聊天 #4｜从英语专业到智能合约开发的 pseudoyu 🐙｜为什么选择去港大学习区块链｜智能合约相关的学习资料分享｜对于跨考计算机的建议</a></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>奥本海默</strong>，见上文主题部分。</li>
</ul>
]]></content:encoded></item><item><title>周报 #46 - 告别长发、周报初心与合约开发</title><link>https://www.pseudoyu.com/en/2023/09/13/weekly_review_20230913/</link><pubDate>Wed, 13 Sep 2023 00:58:36 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/09/13/weekly_review_20230913/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-09-05 到 2023-09-13 这几周生活的记录与思考。集中地写了一个并算不上复杂的合约项目，也因接受一位 up 主朋友采访而重新梳理了自己的学</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-09-05</code> 到 <code>2023-09-13</code> 这几周生活的记录与思考。集中地写了一个并算不上复杂的合约项目，也因接受一位 up 主朋友采访而重新梳理了自己的学习经历和合约开发相关的心得，继续出自己的系列教程；有出版社联系，可能会着手开始写一本技术书籍，期待却也忐忑；由于发质和一些个人原因暂剪去了长发，重新开始养，也算是近期最大的变化了；写了一篇自己很喜欢的关于知识系统搭建的文章，重拾了写作中最最本源的快乐，也在越来越多的博客文章里看到我的周报被提及，欣喜之余也有些惭愧，也重新思考了自己写周报的初心；还有很多有意思的事。</p>
<h2 id="告别长发">告别长发</h2>
<p>虽然说剪个头发都要专门写个主题未免有些矫情，但依然有些感触。</p>
<p>留长&amp;蓝发已经一年之久了，从最开始的些许不适应到后来似乎渐渐成为了自己的某种意义上的符号，它也陪着我走了很久，历经了几种截然不同的生活状态。去年年末刚因为想换个风格而染了蓝色，满足了自己二次元的小小心愿，又恰巧没过两个月北京就疫情居家，一直没出去剪头发，等真正放开后已经积攒了不错的长度，买了几个还挺酷的发带，想着干脆就留着了，一留就是一年。</p>
<p>很神奇，当自己的外在会给人留下一些惹眼的印象后，自己的内心似乎也少了一些束缚和顾虑，会在香港的 Web3 Festival 上和一个对我发带还挺感兴趣的中东投资人走了一路闲聊；会有被别的展位的小伙伴搭话说“注意到你很久了，很显眼”；会被接近十年没联系的同样在做 Web3 的高中同学认出，讶异却也惊喜。也许自己本就有去分享和交流的欲望，只是因为有些社恐外加担心他人的反应而有些迟疑，发型发色给我带来了一些暴露在人群中的勇气，也像是一种保护色。</p>
<p>而由于颜色掉得差不多了，且漂了几次因发质受损而有些毛糙，也因为月底有比较重要的场合需要，于是下定决心先剪掉长发，重新再养一段时间，萌生想法的第二天就剪去了。剪完后没有自己想象得那么不适应，反而有些轻松，也许这一年带来的不仅仅是头发长度的变化，自己的心境也在慢慢变化着，也已经有了更多面对这个世界的勇气。</p>
<p>很巧的是 STRRL 也差不多时间剪掉了留了两年的长发，<del>良渚村痛失两个长发小哥哥</del>。</p>
<h2 id="周报初心">周报初心</h2>
<p>周中发了一篇「<a href="https://www.pseudoyu.com/en/2023/09/05/my_personal_pkm_input_output_system/">个人信息获取与知识管理系统（Heptabase + Logseq + Readwise）</a>」，几个小时的写作，从一篇周报中一个衍生的想法到一篇结构尚可的文章，很久没有这样一气呵成而又自得其乐地创作了。</p>
<p>积攒了越来越多想写的主题，其实大多也有了不少素材足以下笔，但总是常常有些迟疑觉得自己”不够格“去传达和评价，就像这次的这篇知识系统，其实 Heptabase 我付费才两周左右，Readwise 甚至更短，就功能上来说自己其实算不上多熟悉所有的模块，但下笔时似乎之前几年对于这套系统的思考与实践都化为了一段段文字，不知不觉写了那么多，很奇妙的感觉。所以重要的可能依然还是独立思考和写下来，而不是需要去媲美教材/文档的大而全。</p>
<p>唯有周报是与未来自己的对话，每次写也都会很放松，毕竟自己也是最有资格去记录和审视自己的人。</p>
<p><img src="https://image.pseudoyu.com/images/weekly_review_hu_mention.jpg" alt="weekly_review_hu_mention"></p>
<p><img src="https://image.pseudoyu.com/images/weekly_review_hu_comment.jpg" alt="weekly_review_hu_comment"></p>
<p>这周在几位朋友的周报中都有看到说我周报的形式对他们产生的一些影响，开心之余也有些惭愧，自己似乎确实很久没有准时发布了（<del>甚至这篇也是</del>），甚至拖延了许久后完稿的也依然匆匆，发布完后才想起遗漏了一些有趣的事，又想着，下次再提吧，如此往复。</p>
<p>生活有许多点滴日常，就像自己喜欢用相机记录下一些街边的小小风景一样，文字是我面对这个世界的取景框，也希望自己能留下的更多一些，更生动一些，似乎这样那些记忆和美好才会更多保留下来。</p>
<h2 id="阅读与读书笔记">阅读与读书笔记</h2>
<p><img src="https://image.pseudoyu.com/images/notes_about_how_to_writing.png" alt="notes_about_how_to_writing"></p>
<p>这周看到一篇有意思的文章「<a href="https://hanyang.wtf/p/c7a">写作入门</a>」，是前段时间写出一篇爆款的关于币安的研报作者分享的关于写作的一些原则，其实自己摄影和写作常常有些不那么注重“术”的部分，常常是因循着自己的感觉和所谓审美，但常常也会担心自己因表达力而没法记录下自己的内心想法和想要表达的内容，所以这篇也是挺有意思的，读的时候稍稍做了些笔记，同步到了 Logseq 上。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="学习">学习</h3>
<h4 id="arbitrum-stylus">Arbitrum Stylus</h4>
<p>一个可以在 EVM 架构链上运行 Rust 合约的框架 <a href="https://arbitrum.io/stylus">Stylus</a>，还挺有想象空间的，想着可能带着目的再入门一下 Rust 了。</p>
<h4 id="投资入门">投资入门</h4>
<p>孟岩的这个「<a href="https://www.bilibili.com/video/BV1e8411B7w7">投资是怎样赚钱的？</a>」视频真好啊，像是之前的「<a href="https://www.youtube.com/watch?v=rFV7wdEX-Mo">经济机器是怎样运行的</a>」一样的叙述模式，了解了很多之前有些模糊的关于股票、基金、指数的概念，也对投资原则和策略有了一些了解，一边看一边在 <a href="https://app.heptabase.com/w/2dee654ba9e5a73e11df473bb420c877f5f00c7a1998545981d07da1bb6fe942">Heptabase 做笔记</a>，分享一下。</p>
<p><del>顺便也才真正稍微了解到学姐是做什么的。</del></p>
<h3 id="其他">其他</h3>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，正在基于他的理论构建自己的知识管理系统，继续阅读。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://news.ycombinator.com/item?id=37405171">Show HN: I made a browser extension to track the time I spend on websites | Hacker News</a></li>
<li><a href="https://hanyang.wtf/p/c7a">写作入门</a></li>
<li><a href="https://yinji.org/5111.html">周报 #01 – 开学、番茄工作法和新的域名 | 印记</a></li>
<li><a href="https://niracler.com/2309-1">2309-1-信息流规划草案-风神殿-情报弱者-葬送的芙莉莲 - niracler</a></li>
<li><a href="https://darmau.design/article/now-what-stage-are-house-prices-at">现在房价进行到哪一步了？</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1rj41117TU">破大防了！教 71 岁老妈剪辑是一种怎样的体验</a></li>
<li><a href="https://www.youtube.com/watch?v=Mfrn6uexfdU">【封神】年度游戏预定！历史最佳 RPG《博德之门 3》不止日熊！</a></li>
<li><a href="https://www.bilibili.com/video/BV1e8411B7w7">投资是怎样赚钱的？</a></li>
<li><a href="https://www.youtube.com/watch?v=rFV7wdEX-Mo">经济机器是怎样运行的</a></li>
<li><a href="https://www.bilibili.com/video/BV1mu4y1k7yN">大豆田竹子的失业生活</a></li>
<li><a href="https://www.bilibili.com/video/BV1Eh4y1Y7FJ">【4K】我们用 9000 万个光点，还原了他的房间</a></li>
<li><a href="https://www.bilibili.com/video/BV1tu411A7jj">去看花火大会，女友说不如橘子洲头的烟花！</a></li>
<li><a href="https://www.youtube.com/watch?v=CYH04BJzamo">Prisma Crash Course</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>街头绝味 第一季</strong>，下饭的时候看的，种草了很多美食。</li>
<li><strong>假面女郎</strong>，也是在奈飞上随手打开的，剧情一般，整体节奏也算不上紧凑。</li>
</ul>
]]></content:encoded></item><item><title>个人信息获取与知识管理系统（Heptabase + Logseq + Readwise）</title><link>https://www.pseudoyu.com/en/2023/09/05/my_personal_pkm_input_output_system/</link><pubDate>Tue, 05 Sep 2023 02:38:39 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/09/05/my_personal_pkm_input_output_system/</guid><description>前言 我似乎一直有一种把自己作为一个机器来看待的倾向，常常会以置身事外的视角来观察自己，集成各个模组，并不断折腾和优化。当自己搭建的某种行为模</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/yu_blog_my_pkm_system.png" alt="yu_blog_my_pkm_system"></p>
<p>我似乎一直有一种把自己作为一个机器来看待的倾向，常常会以置身事外的视角来观察自己，集成各个模组，并不断折腾和优化。当自己搭建的某种行为模式或是习惯在某个时刻突然发挥了作用就会有一种欣喜感，而当受到外界或是自身状态影响而停止运转时则会有一种秩序感被打破的重度不适。</p>
<p>作为一个效率工具控，我的个人知识管理与信息管理则可以说是自己最重要的一部分。其实本没有想要写这篇文章，有太多的先例实践在前，而自己也只是一种前人基础上的微调优化，常常没有什么信心去分享，而这周重新搭建和优化了一下自己的知识管理系统，很开心，有一种想要记录下来的冲动，本来只是想在周报里稍稍提及，却发现越写越收不住，于是就有了这篇文章。</p>
<p>其实之前对于信息输出在周报中时常有提及，所以本文也会覆盖一些之前的内容，并且终于补上了信息获取和知识管理的部分，就作为一个总集篇了。其中，理论的部分，如“费曼学习法”、“卢曼卡片盒笔记法”已经有很多很好的介绍文章，不再花篇幅介绍了，而更多的是阐述我使用的软件工具实践，希望能够对大家有所帮助。</p>
<h2 id="信息获取与管理">信息获取与管理</h2>
<p>不知道从什么时候起，其实能很明显感受到自己对网络世界信息的依赖。可能有别于游戏瘾或是经常被诟病的短视频算法鸦片，我的这种依赖并不是机械性地刷刷刷，或是面对焦虑时的逃避，而是一种对于信息获取的渴求，甚至内化为了一种生活方式。因为我对自己的信息筛选和消化能力颇有信心，所以其实一直以来没有在输入源和整理上花太多的心思。</p>
<p>而随着自己接触和感兴趣的领域越来越多，信息不断积累，有时候仅仅是浏览和通读都已经有些超过了记忆负荷，并且这些信息常常也零散地留在我的笔记或是脑海的某个角落中，并没有成为内化的一部分，以后也很难记起或是检索，于是重新对自己的信息获取方式进行了梳理。</p>
<h3 id="信息源分类">信息源分类</h3>
<p>我的信息来源按照大类可以分为以下几类：</p>
<ol>
<li>随机想法</li>
<li>信息流</li>
<li>聚焦阅读</li>
</ol>
<h4 id="随机想法">随机想法</h4>
<p><img src="https://image.pseudoyu.com/images/logseq_random_thoughts.png" alt="logseq_random_thoughts"></p>
<p>在日常生活、工作、学习或是什么任意的时刻，我有时候会萌生一些随机的想法，这些想法和当前所做的事并不相关或是天马行空，但也许会在未来的某个时刻被用到。因为我大部分时间都不会离开电脑太远，我通常会记录 Logseq 的 Journal 中，有时可能会临时发在一个只有自己一个人的微信群中或是 Telegram 的 Saved Message 中，后续再补充上去。</p>
<h4 id="信息流">信息流</h4>
<p>我每天从起床开始就会被来自各个平台的信息流所裹挟，依赖于网络世界其实最难免的是与社交媒体与算法的抗争，一方面是要避免自己被过载的贩卖焦虑的信息或是熟人社交圈的“Peer Pressure”所困扰，另一方面也需要警惕算法所构造的信息茧房。实话说这一点挺难做到，即使自己多少算是具备一些克制和过滤信息的能力并有意识在这样做，但依然难以避免被其所扰乱思绪或是引导。</p>
<p>我最后采取了一种简单却也行之有效的方式 —— 关闭微信朋友圈入口与大部分软件通知提醒，并且把大部分不带社交属性而仅仅是用于信息获取的平台（如 B 站、微博等）的关注数量控制在 100 以内，如果新增则筛选优化之前的关注，减少无关内容的干扰。在完成上述行为的基础上，我使用 RSS 订阅这一似乎有些古早的方式，但是仅订阅了不到 50 个网站，其中大部分是博客或是个人网站，且会定期筛选，减少自己每天的 feeds，但几乎在这一 feeds list 中的文章都会扫一下标题或初步浏览一下。</p>
<p><img src="https://image.pseudoyu.com/images/readwise_reader_feeds.png" alt="readwise_reader_feeds"></p>
<p>这一点我最开始是自己搭建了 Miniflux 服务来抓取，并且用一个 <a href="https://github.com/Rongronggg9/RSS-to-Telegram-Bot">RSS-to-Telegram-Bot</a> 来推送提醒的，而最近开始使用 <a href="https://read.readwise.io/">Readwise Reader</a> 后，由于体验很好，便把这一部分迁移过来了。我使用的是 Readwise Reader 内置的一种管理模式，分为三类：</p>
<ol>
<li>Later</li>
<li>Shortlist</li>
<li>Archive</li>
</ol>
<p>我会每天扫描一下 Feeds 面板，扫到感兴趣的文章会加入到 Later 中，作为一个稍后读，当然，就以前的经验来说，稍后读放久了常常会变成“稍后也不读”，所以我在筛选时非常克制，仅将很感兴趣且有时间后马上会读的文章加入，并要求自己在晚上的时候清理 Later 列表。</p>
<p>而我们也会在社交媒体互联网的各个角落被推送到一些信息，其中我尤其在意的是这几类：</p>
<ol>
<li>感兴趣的一些观点/推文 threads</li>
<li>感兴趣的文章</li>
<li>有用的资源</li>
</ol>
<p>如果是一些比较有意思的观点或是评论，我通常并不会加入软件的对应 List、收藏夹等，而是会复制其内容到 Logseq 的 Journal 中并打上对应 tag，其实这一步很多软件（包括 Readwise Reader）提供了推特 threads 保留或是其他的一些更方便保存推文的方式，但我倾向于自己复制和整理，以几句话的方式记录下来而不是仅仅存一个链接，这样似乎刻意增加的步骤会让我多一步审视这些观点，避免被强引导性或是情绪化的观点所影响，也更有益于自己消化信息并内化为自己的想法。</p>
<p><img src="https://image.pseudoyu.com/images/readwise_chrome_extension.png" alt="readwise_chrome_extension"></p>
<p>如果是自己感兴趣的一些文章，则会通过 Readwise 的 Chrome 插件进行阅读或保存。这部分我给自己的要求是每篇文章都要打上标签和 notes，notes 中主要描述为什么要读这篇文章。</p>
<p><img src="https://image.pseudoyu.com/images/readwise_chrome_extension_highlight.png" alt="readwise_chrome_extension_highlight"></p>
<p>其中如果仅仅是需要泛读或是获取信息的一些文章，我会加入 Later 列表，而精读的我则是会加入 Shortlist，并且必须要对其中一些有意义的话加 highlights，也尽量对 highlights 加上自己的一些评价和想法，这些都可以在插件中直接操作，很方便。</p>
<p><img src="https://image.pseudoyu.com/images/pinboard_bookmark.png" alt="pinboard_bookmark"></p>
<p>而如果是一些有用的网站、文档、代码、软件或是其他资源类的信息，我会使用 <a href="https://pinboard.in/">Pinboard</a>，一个很古早但是很好用的书签管理工具来保存，同样是用浏览器插件进行保存，也会打上标签和简单的描述，大概一年左右了我积累了 455 个书签，其中大部分我都能够通过 tag 和名称在需要用的时候快速检索到。</p>
<p>而像是视频网站等我更多还是使用点赞或是收藏的方式，一方面对创作者表示支持，另一方面也通过一些自动化工具同步到我的 Telegram 个人频道「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」，并标记上对应 tag，但大多视频的信息效率并不高，所以更多是一些有趣的或是探索向的。</p>
<h4 id="聚焦阅读">聚焦阅读</h4>
<p>除了上述这些被动推送的一些信息流外，其实我们也还会有很多特定主题或是与自己的领域强相关的一些信息需求，这需要我们去主动阅读一些书籍、报告等。</p>
<p><img src="https://image.pseudoyu.com/images/wechat_reader_sync_readwise.png" alt="wechat_reader_sync_readwise"></p>
<p>这一部分我原本更多是使用 kindle 或阅读纸质书，并手动在 Logseq 进行一些记录。但是在 <a href="https://lutaonan.com/">Randy</a> 推出 <a href="https://notepal.randynamic.org/">Notepal</a> 工具后，我开始使用微信读书，它本身有很多可阅读的书籍资源，并且我也用它导入 mobi 或是 epub 格式的一些书籍，阅读体验感还不错。</p>
<p><img src="https://image.pseudoyu.com/images/wechat_reader_to_readwise.png" alt="wechat_reader_to_readwise"></p>
<p>并且也很方便做一些笔记和标注，由于全平台同步，可以很方便地定期通过 Notepal 浏览器插件同步到 Readwise 中，效果也很好（上图就是同步过来的），这样也更有动力在碎片的一些时间里阅读一些书籍。</p>
<h3 id="信息管理">信息管理</h3>
<p>上一节我对信息获取的渠道和系统进行了一些梳理，但这些依然还是零散的信息，如果要让它们成为自己知识和思考的一部分，依然需要更多整理、消化与沉淀的过程。但涉及那么多平台，搜索和整理并不方便，也比较难建立起信息之间的关联，受正在读的这本「Building a Second Brain」 启发，我主要做了如下两点：</p>
<ol>
<li>借鉴和改造了 P.A.R.A 作为自己的全局 Tag 分类系统</li>
<li>使用 Logseq 和 Heptabase 构建 Second Brain</li>
</ol>
<h4 id="全局-tag-系统">全局 Tag 系统</h4>
<p><img src="https://image.pseudoyu.com/images/pama_framework.jpg" alt="pama_framework"></p>
<p>其中 P.A.R.A 是作者所提出的一个框架，分别是：</p>
<ul>
<li>Projects，正在做的项目相关</li>
<li>Areas，特定领域</li>
<li>Resources，未来可能会用到的资源</li>
<li>Archives，已完成的项目</li>
</ul>
<p>我在这四个的类型的基础上增加了一个「Thoughts」，用于归类我的一些随机的想法。</p>
<p><img src="https://image.pseudoyu.com/images/logseq_tag_system.png" alt="logseq_tag_system"></p>
<p>我的实现思路是把这五个类型作为我的全局一级 Tag，而更具体的一些项目、领域、行业可作为二级、三级 Tag，例如 <code>Projects/writing/pkm</code>，<code>Areas/blockchain</code>，<code>Thoughts/weekly-review</code> 等，Logseq 提供了很强大的多层 Tag 系统，会自动根据 <code>/</code> 进行分层，便于检索，分类也一目了然，我把之前现有的一些 Tag 修改后效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/para_logseq_graph.png" alt="para_logseq_graph"></p>
<h4 id="基于-heptabase--logseq-的-second-brain">基于 Heptabase + Logseq 的 Second Brain</h4>
<p>我之前一直都是使用 Logseq 作为自己的知识管理系统的，最近看到了 <a href="https://twitter.com/WuPingJu">P.J. Wu 吳秉儒</a> 入职 Heptabase，对这一平台有了更多了解，于是将其纳入自己的知识管理系统，和 Logseq 双刀流共同构建自己的第二大脑。只要因循上文所说的 Tag 系统，两个平台之间并不需要额外的关联便可以各司其职地进行信息管理。</p>
<p><img src="https://image.pseudoyu.com/images/logseq_sync_readwise_sample_page.png" alt="logseq_sync_readwise_sample_page"></p>
<p>其中，Logseq 作为兼具简单任务管理和双向链接的笔记系统，非常适合沉淀我上述的这些信息流和一些自己阅读后产出的初步想法，如高亮、评论 notes 等，由于 Logseq 有 Readwise 官方插件，可以很方便地将我在微信读书和网络文章中的高亮和笔记自动同步为 Logseq 的 pages，并通过时间与 Journal 关联，这样我在每天/每周写一些回顾时能很直观地看到我过去的阅读和想法，如上文就是我在阅读 <a href="https://twitter.com/MapleShadow">枫影 Justin Yan</a> 的这篇「<a href="https://justinyan.me/post/5790">每个人每天都只有 24 小时，希望我的选择真的是我的选择</a>」时在他的网站上使用 Readwise Chrome 插件做的一些高亮和笔记，自动同步到了 Logseq 中，并根据我的配置打上了一些 tag 与属性。</p>
<p>Logseq 很适合做一些信息整理和回顾，但当我要对某个领域/概念进行调研、阅读书籍整理脉络或是输出一篇博客文章时就显得稍稍有些单薄，它的信息以 block 为单位散落在每一天的 Journal 中，通过双向链接或是 tag 进行关联跳转，不方便进行一些直接的可视化关联，也需要自己对在前期就对关键词和 tag 做到足够清晰，依然有一些心智负担，所以这一部分我使用 Heptabase 来进行管理。</p>
<p>Heptabase 可以看作是一个功能完善的白板笔记工具， <a href="https://twitter.com/WuPingJu">P.J. Wu 吳秉儒</a> 有很多关于 Heptabase 的<a href="https://pinchlime.com/tags/heptabase/">高质量介绍文章</a>，可以阅读了解一下。简单来说，它主要分为以下三个层级：</p>
<ul>
<li>Map</li>
<li>Whiteboard</li>
<li>Card</li>
</ul>
<p><img src="https://image.pseudoyu.com/images/heptabase_map_overview.png" alt="heptabase_map_overview"></p>
<p>其中 Map 可以看作是我们 Second Brain 的整个空间，里面可以装各种白板，我建立了五个白板来作为第一层级 Tag。</p>
<p><img src="https://image.pseudoyu.com/images/heptabase_whiteboard_overview.png" alt="heptabase_whiteboard_overview"></p>
<p>卡片代表的是我们脑中的一个个想法或是一些独立的信息点，我们可以通过卡片与卡片的关联，白板与卡片之间的层级来组织我们知识。</p>
<p>当我在写 Foundry 智能合约开发框架的教程时，我首先把一些零散的知识点或是实践中遇到的一些经验、教训以一个个白板平铺在 Foundy 的白板上（其为 <code>Projects</code> - <code>Blockchain</code> - <code>Smart Contract</code> 下的第四级子白板），当某个知识点已经足够多时，我会把白板之间再作一些 Section 分组、画线关联等。</p>
<p>其中它还提供了原生与 Readwise 的集成，可以在右侧边栏直接选择 Readwise 中我们对某些文章、书籍的一些 highlights 与 notes 作为卡片直接引入到白板中，为它们建立一些关联，很像我们人脑整理零散信息或是头脑风暴的过程，完美符合了我的需求。</p>
<p><img src="https://image.pseudoyu.com/images/heptabase_chiangmai_trip.png" alt="heptabase_chiangmai_trip"></p>
<p>我目前还会用它做一些旅行攻略，把从小红书和其他人的攻略帖中的信息点作为一个个 card 放在旅行规划的白板中，然后再通过关联和分组进行整理，很规整。</p>
<h2 id="信息输出">信息输出</h2>
<p>而我的输出则主要包含以下几个部分：</p>
<ol>
<li>笔记/观点/日常</li>
<li>长文</li>
<li>主题研究</li>
<li>信息流</li>
</ol>
<h3 id="笔记观点日常">笔记/观点/日常</h3>
<p><img src="https://image.pseudoyu.com/images/yu_twitter_profile.png" alt="yu_twitter_profile"></p>
<p>其中 Twitter 「<a href="https://twitter.com/pseudo_yu">pseudo_yu</a>」是我最主要的无结构化的信息输出渠道，有时候是一些关于新技术的想法、关于工作的感受、与朋友相见的心情或是一张可爱的猫猫图，都构成了我输出，也对应着我输入中那些随机想法的快速产出。</p>
<p>其中，Twitter 上认识的朋友也给我带来了很多温暖。</p>
<h3 id="长文">长文</h3>
<p><img src="https://image.pseudoyu.com/images/yu_blog_homepage.png" alt="yu_blog_homepage"></p>
<p>而我最重要的输出平台是个人博客「<a href="https://www.pseudoyu.com/">Pseudoyu</a>」，目前周报是我的主要出口，偶尔也会有一些主题或专题性的关于技术或是效率工具的博文。</p>
<h3 id="主题研究">主题研究</h3>
<p>输出一篇博文由于要考虑到受众、言辞表述与完整性等，其实有一定的心智负担，且周期较长，而我在进行特定领域的主题研究过程中大多把学习资料和一些 Demo 放在 GitHub 仓库中或是 Logseq 的某个笔记角落，有时候时间久了就得要重新学习了。而我现在更多放在 Heptabase 的一个白板里，能够存放很多小的知识点并且在后续的创作中再进一步归纳和精炼，所以其实可以在初具框架后把这个白板共享出来，可以与更多人进行交流，也能对同样在学习的朋友有所帮助。</p>
<h3 id="信息流输出">信息流输出</h3>
<p><img src="https://image.pseudoyu.com/images/yu_telegram_channel_screenshot.png" alt="yu_telegram_channel_screenshot"></p>
<p>我搭建了一个自己的 n8n 同步服务，采集我零散在各个平台的信息输入输出，并且还会将我对电影、书籍的观后感以及自己其他一些所思所想发在自己的 Telegram 频道「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」里。也关注了一些频道和群组获取一些资讯或是认识一些志同道合的人，偶尔会手动转发，主要同步以下几个平台：</p>
<ul>
<li>Blog，现在更像是一种生活日志。</li>
<li>YouTube，也是重度用户了，看技术相关教程和数码资讯比较多，偶尔也有很多好玩的内容。</li>
<li>Bilibili，主要保留了自己这么多年一直在关注的一些博主，看旅拍比较多，只看动态不看首页和热门。</li>
<li>Pinboard，书签和网站保存管理工具，重度依赖了。</li>
<li>Instapaper，管理稍后读，主要是一些精品或是长文的保存。</li>
<li>GitHub，也是日常刷了，看一些好的项目，也用列表在管理 Star。</li>
<li>Spotify，好听的歌会标注一下。</li>
<li>豆瓣，记录自己的书籍、剧集、电影、动漫和游戏，也是重度使用了，也在尝试每一个看过/玩过的作品都写一下自己的评价。</li>
</ul>
<h2 id="数据备份">数据备份</h2>
<p>虽然像是 Twitter、Telegram 已经是比较大的平台，但毕竟是中心化的产物，再加上最近的各种风波，对于自己这些信息源的归集总是不放心 Telegram 作为最终站，尤其是我常常在删消息时差点误点删除全部（奇怪的交互体验），所以信息的同步导出部分也是很重要一环，我使用 Crossbell 生态下的 <a href="https://xlog.app/">xLog</a> 与 <a href="https://xsync.app/">xSync</a> 服务进行我的博客与各平台信息的链上备份。</p>
<h3 id="xlog">xLog</h3>
<p><img src="https://image.pseudoyu.com/images/yu_xlog_profilea6f9af1d5482abc7.png" alt="yu_xlog_profile"></p>
<p>视觉效果和体验感都不错，且基于 Crossbell 地址能够很方便地进行 follow 和评论，包含了 NFT 展示柜、个人作品集等功能，这是我的 <a href="https://xlog.pseudoyu.com/">xLog 访问地址</a>，有兴趣的朋友们也可以关注一下，不过目前出于定制化程度、各种历史文章迁移路由问题、自己各项数据统计服务变动等考虑，还是更多作为一个同步分发渠道。</p>
<h3 id="xsync">xSync</h3>
<p><img src="https://image.pseudoyu.com/images/yu_sync_profile.png" alt="yu_sync_profile"></p>
<p>xSync 能够同步 Twitter、Telegram Channel 等平台，不需要做任何侵入式改造就能把我的聚合频道作再一次备份与存档，后续可以通过 xChar 来查看自己的各项消息了，很完美的解决方案，这是我的 xChar 个人主页: <a href="https://xchar.app/pseudoyu">xChar</a>，也可以通过 <a href="https://xfeed.app/u/pseudoyu">xFeed</a> 查看我的信息流。</p>
<h2 id="总结">总结</h2>
<blockquote>
<p>it is probably a mistake, in the end, to ask software to improve our thinking.</p>
</blockquote>
<p><a href="https://www.theverge.com/authors/casey-newton">Casey Newton</a> 在最近的一篇「<a href="https://www.theverge.com/2023/8/25/23845590/note-taking-apps-ai-chat-distractions-notion-roam-mem-obsidian">Why note-taking apps don’t make us smarter</a>」中如是说。确实，这些系统或是工具软件其实终究只能辅助我们进行信息管理和输出，并不能代替我们思考，但构建知识管理系统在取悦自己的同时，也能够让思考变得更加高效，悦己才能达人，从而产出更有价值的输出。</p>
<p>希望这篇文章能够对大家有所帮助。</p>
]]></content:encoded></item><item><title>周报 #45 - 读书笔记、知识管理与双城生活</title><link>https://www.pseudoyu.com/en/2023/09/04/weekly_review_20230904/</link><pubDate>Mon, 04 Sep 2023 00:58:36 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/09/04/weekly_review_20230904/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-08-16 到 2023-09-04 这几周生活的记录与思考。 不知不觉竟又是两三周过去了，于是只好安慰自己说每篇向前平移一周很快就能恢复周更了。</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-08-16</code> 到 <code>2023-09-04</code> 这几周生活的记录与思考。</p>
<p>不知不觉竟又是两三周过去了，于是只好安慰自己说每篇向前平移一周很快就能恢复周更了。不过这几周倒也不是在摆烂，读了一些书，看了几篇对我影响很大的文章；参加了一些有趣的活动，折腾了很多有意思的事；重新搭建好了自己的一套知识管理系统，本职与额外兴趣部分的工作也都有序进行中；还有很多有意思的事。</p>
<h2 id="个人信息获取与知识管理系统">个人信息获取与知识管理系统</h2>
<p>继「<a href="https://www.pseudoyu.com/en/2023/01/09/weekly_review_20230109/">周报 #25 - 基于 Crossbell 的个人信息输出与同步系统（重构）</a>」这篇之后，我对自己的信息输出同步系统一直都还挺满意的，能够从输出反向推动输入，从而增加了更多信息筛选和思考的过程。但就像是那篇里也提到过的，自己对信息源只是做了精简和筛选，配合了一些简单的 tag 系统和有限的双向链接，其实并没有对输入的一些信息做太多消化和思考的沉淀，而在每次写周报或是文章的时候，常常是对着标题进行回忆，不过由于看的时候也大多做了一些思考，一直以来也算不上太费劲的事。</p>
<p>然而随着自己重新捡起了很多之前感兴趣的方向和目标，用于处理和消化这些信息的时间和精力成本也越来越高，又恰逢看到了 <a href="https://twitter.com/WuPingJu">P.J. Wu 吳秉儒</a> 入职 Heptabase，于是重温了数月前他的这篇「<a href="https://pinchlime.com/blog/my-personal-knowledge-management-system-2023/">我的個人知識管理系統</a>」和 Indigo 的这篇「<a href="https://www.indigox.me/feynman-technique-in-practice/">费曼学习法实践 / INDIGO 的信息获取与知识输出方法论</a>」，于是想着再重构一下自己的知识管理系统，尤其是输入端。</p>
<p><del>这个人怎么天天不好好学习就知道搭各种系统。</del></p>
<p>最后的效果很令人满意，本来想在这里写一下一些具体细节，没想到却越写越收不住，所以独立在了另一篇「<a href="https://www.pseudoyu.com/en/2023/09/05/my_personal_pkm_input_output_system/">个人信息获取与知识管理系统（Heptabase + Logseq + Readwise）</a>」中。</p>
<h2 id="选择的意义">选择的意义</h2>
<p>这两天读了「<a href="https://twitter.com/MapleShadow">枫影 Justin Yan</a>」的一篇「<a href="https://justinyan.me/post/5790">每个人每天都只有 24 小时，希望我的选择真的是我的选择</a>」，其中好几次提到了“向内探索、找到想要的东西”这一概念。想到我之前我思考过的“内观与外求”的概念：</p>
<blockquote>
<p>我们作为人的关注点往往都分为内在与外在两个方面，相较而言，对外的关注点由于更具刺激性与正反馈而占了绝大部分，而对内在的关注则往往容易被忽略。</p>
</blockquote>
<p>外求似乎总能有一些答案，而内观则没有终点。但内求一定是伴随着对自我的剖析与伤害，是更违背自我保护本能和人性的一种行为，曾经很畏惧这一点，也担心永远找不到意义而一直陷入深渊中。但现在看来，其实只要仍然在质疑和思考，那依然一切都是有意义的。反之，如果失去了自己的内核，失去了对自我的好奇与探索的动力，才是最值得恐惧和难以忍受的事。</p>
<blockquote>
<p>这种透过社交网络的小孔窥视别人的人生的方式，很容易放大别人的真实经历。</p>
</blockquote>
<p>还看到一段对于放大他人的描述，很真实，其实不仅仅网络如此。在大学以及之后很长的一段时间我都很倾向于选择一个当时的崇拜的人去赶超，总觉得他们拥有着自己梦寐以求的东西，而真正所谓的“超过”后却又知道这一切毫无意义，自己所追赶的不过是放大后的影子，而为了填补这种无意义而再不得不再次选择，成为别人终究是一种取巧偷懒的行径，也常常会离真正自己像成为的样子更远。</p>
<h2 id="阅读与读书笔记">阅读与读书笔记</h2>
<p>这周开始更多地阅读写作，主要在读的书是 Tiago Forte 的 <em>Building a Second Brain</em>，也读了很多文章。其实之前自己不是很注重读书笔记，大多是靠自己在读的时候去更多消化信息，形成自己的内在的想法，这种方式的好处是让自己读的时候会更专注、吸收效率更高，然而其实一直有点忽略了回顾和内化这一部分，随着时间更久地过去其实就不那么容易记忆了。我现在是用微信读书 + Notepal + Readwise 记录自己的标注和对应想法，于此同时，在 Heptabase 和 Logseq 中每本书都会有一个对应页面，用于写一些更 general 或是零散的一些相关的想法，由于是卡片机制，也可以很方便地把那些笔记碎片进行检索和关联。</p>
<blockquote>
<p>“当你准备学习一门新知识时，必须站在传授者的立场，假设要向别人讲解这门知识。”</p>
</blockquote>
<blockquote>
<p>学会输出，激励我们的大脑更多地使用第二种模式：“在不同的概念之间强行建立联系，也是大脑的特长。”</p>
</blockquote>
<p>有集中读一些关于信息获取与知识管理的，也再次强化了费曼学习法的概念，这个和自己用输出倒逼输入的思路很接近，确实是一直很受用的一种方式，也是看了概念之后才比较深切地意识到原来自己也算是在实践这个概念。</p>
<p>目前的时代下我们信息早就到了过载的程度，Logseq 的双向链接、P.A.R.A. 理论、包括 Heptabase 的白板其实都是在因循人脑的一些思维逻辑来做到这一点。自己的实践其实是把不同的概念和信息点创建为零散的卡片信息，积累足够多后从这些信息点中分模块和整理框架，等框架足够清晰后开始创作文章，而在创作文章的过程中也重新梳理这些知识与它们之间的联系，不仅为了当下的记忆，也益于未来的回溯。正如一句我很喜欢的关于笔记的描述：</p>
<blockquote>
<p>Note taking is building a relationship with a future version of yourself.</p>
</blockquote>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/love_and_food_in_beijing.jpg" alt="love_and_food_in_beijing"></p>
<p>去北京过了一个七夕节，由于有些忙碌，就没出去吃了，学姐做了简餐，生活小小的仪式感了，然后给学姐配了 Apple TV + Surge tvOS 客户端，可以直接在电视上看 YouTube 和 Netflix，很开心了！</p>
<p><img src="https://image.pseudoyu.com/images/hangzhou_rust_meetup.jpg" alt="hangzhou_rust_meetup"></p>
<p>待了一周后因为去杭州参加一个朋友主办的 Rust 的活动而匆匆赶回了杭州，也似乎稍稍习惯了往返北京，也过上了“双城记”的生活，心情上也放松了许多，会更乐意参加各种好玩的活动，尝试一些新的事物。</p>
<p>周中还去良渚找大家远程办公，见到了 STRRL、图拉鼎、智子等，都有点小后悔当时没有把房子租在那边了，也太快乐了！</p>
<p><img src="https://image.pseudoyu.com/images/love_charge_base.jpg" alt="love_charge_base"></p>
<p>到了杭州才收到学姐送的七夕礼物，一个超级酷的透明充电宝，去远程办公的时候还带去给大家围观（<del>炫耀</del>）了哈哈，感觉像是小时候终于收到自己心爱的玩具的心情。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_hide_behind_chair.jpg" alt="nie_nie_hide_behind_chair"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_with_food.jpg" alt="nie_nie_with_food"></p>
<p>正在放暑假的妹妹想跟捏捏一起玩，所以就没那么早接回家，回来后依然很黏人。写的时候才突然想到，捏捏陪着我也已经 10 个多月了，时间过的真快，不知不觉也已经一岁多，脱去了一些稚气；但时间过得也慢，似乎接回家时偷偷躲在柜子里不敢出来还是在昨天，一起度过的日子缓慢、静谧而美好。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="muchiangmai">MuChiangMai</h3>
<p><img src="https://image.pseudoyu.com/images/muchiangmai_offer.jpg" alt="muchiangmai_offer"></p>
<p>申请了 MuChiangMai 活动的 mentor，去活动讲三节 workshop 可以换免费住宿！大概 10 月会去清迈当几周游民了，期待的同时还是对全英讲课有些紧张，还是需要提前准备一下，也是一个新的挑战了。</p>
<h3 id="其他">其他</h3>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>Building a Second Brain</strong>，正在基于他的理论构建自己的知识管理系统。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://tianxianzi.me/2023/08/16/experiment_1/">一个月不使用社交网络/视频网站 | 报告 · 天仙子</a></li>
<li><a href="https://diygod.cc/rsshub-with-warp">优雅使用 Cloudflare WARP 应对 RSSHub 反爬难题 - DIYgod</a></li>
<li><a href="https://research.mintventures.fund/2023/08/13/zh-op-vs-arb-which-is-the-better-inverstment-target-for-cancun-upgrade/">布局坎昆升级，OP 和 ARB 谁是更佳选择？ - Mint Ventures</a></li>
<li><a href="https://www.robertmao.com/comments/blog/wo-de-ge-ren-zhan-dian-jiu-shi-wo-de-she-jiao-wang-luo">我的个人站点就是我的社交网络</a></li>
<li><a href="https://www.theverge.com/23830432/imac-twenty-five-years-ago-saved-apple">How the iMac saved Apple - The Verge</a></li>
<li><a href="https://mp.weixin.qq.com/s/d9xVuvJ0Dos9T8cBbSOfog">《黑神话：悟空》上手前瞻｜IGN 中国</a></li>
<li><a href="https://lepture.com/zh/2023/free-email-provider">個人域名郵箱免費方案 - Just lepture</a></li>
<li><a href="https://pinchlime.com/2022/02/27/heptabase-introduction/">Heptabase 介紹 - 以卡片為基礎的強大知識管理工具 - Pin 起來！</a></li>
<li><a href="https://pinchlime.com/blog/my-personal-knowledge-management-system-2023/">我的個人知識管理系統 - Pin 起來！</a></li>
<li><a href="https://thiscute.world/posts/a-quarter-of-the-way-through-life/">两岸猿声啼不住，轻舟已过万重山——我的四分之一人生 - This Cute World</a></li>
<li><a href="https://homura.live/2023/08/23/Life/25/index.html">25 | Homura&rsquo;s Blog</a></li>
<li><a href="https://hyuanverse.com/how-to-capture-ideas-with-heptabase/">我如何使用 Heptabase 記錄想法和靈感？ – 元宇宙</a></li>
<li><a href="https://wiki.heptabase.com/how-Heptabases-founder-use-Heptabase-for-learning">How Heptabase’s founder use Heptabase for learning, research, planning, and writing | Heptabase Public Wiki</a></li>
<li><a href="https://fortelabs.com/blog/the-4-levels-of-personal-knowledge-management/">The 4 Levels of Personal Knowledge Management - Forte Labs</a></li>
<li><a href="https://www.kawabangga.com/posts/5330">有关 TLS/SSL 证书的一切 | 卡瓦邦噶！</a></li>
<li><a href="https://www.theverge.com/2023/8/25/23845590/note-taking-apps-ai-chat-distractions-notion-roam-mem-obsidian">Why note-taking apps don’t make us smarter - The Verge</a></li>
<li><a href="https://www.indigox.me/make-machine-understand-the-world/">让机器理解世界 / GPT 时代人类再腾飞·译者序</a></li>
<li><a href="https://justinyan.me/post/5790">每个人每天都只有 24 小时，希望我的选择真的是我的选择 | 枫言枫语</a></li>
<li><a href="https://www.indigox.me/feynman-technique-in-practice/">费曼学习法实践 / INDIGO 的信息获取与知识输出方法论</a></li>
</ul>
<h4 id="视频">视频</h4>
<ul>
<li><a href="https://www.bilibili.com/video/BV1fh4y1Q7j8">一个叫猫岛的地方，以后再也没有猫了｜盛夏关西</a></li>
<li><a href="https://www.youtube.com/watch?v=umepbfKp5rI">Learn Solidity, Blockchain Development, &amp; Smart Contracts | Powered By AI - Full Course (0 - 6)</a></li>
<li><a href="https://www.youtube.com/watch?v=sas02qSFZ74">Learn Solidity, Blockchain Development, &amp; Smart Contracts | Powered By AI - Full Course (7 - 11)</a></li>
<li><a href="https://www.bilibili.com/video/BV1gF41117fN">300 天 4 万公里传遍中国，漂流相机终于回来了！</a></li>
<li><a href="https://www.bilibili.com/video/BV1T84y1Z7k2">和 web3 从业者聊聊天#1 | 算法开发在 web3 行业的现状｜web3 中有哪些需要算法的业务｜chatgpt 带来的影响</a></li>
<li><a href="https://www.bilibili.com/video/BV1Wr4y1R785">为了开发完游戏，我们开发了一款游戏？还开业了游戏博物馆？— 这是 Gamker 至今最重要的视频</a></li>
<li><a href="https://www.bilibili.com/video/BV17u411E7UK">【2023】一个百大 UP 主的创业故事（2）</a></li>
<li><a href="https://www.bilibili.com/video/BV1uu4y1X7FX">俄罗斯黑客的激荡三十年</a></li>
<li><a href="https://www.bilibili.com/video/BV1A8411z79x">轻便又好看的复古相机再次杀出，背刺 A7M4？｜A7C2 首发评测</a></li>
<li><a href="https://www.bilibili.com/video/BV1o34y1K7n3">对话诺兰！导演亲自揭开《奥本海默》的 6 个秘密</a></li>
<li><a href="https://www.youtube.com/watch?v=Oc2S8Rs1_P8">黑神话悟空的聊天漫谈：媒体对它的看法</a></li>
<li><a href="https://www.bilibili.com/video/BV1hu4y1C7hP">讨好型人格、对抗型人格、孤僻型人格，你是哪一种？</a></li>
<li><a href="https://www.bilibili.com/video/BV14w411D7qk">理解商业的十个问题【学会快速调研(下)】</a></li>
<li><a href="https://www.bilibili.com/video/BV1Eu4y1y74i">《博德之门 3》为什么得是回合制？它热卖有什么意义？【就知道玩游戏 2023】</a></li>
<li><a href="https://www.bilibili.com/video/BV1oN4y1X73H">和 web3 从业者聊聊天 #3 | 和巨佬聊天贼有意思｜快来围观巨佬长啥样</a></li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://web3-with-a16z.simplecast.com/episodes/ai-crypto-centralization-decentralization">AI &amp; Crypto</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>我推的孩子</strong>，补标。新番的时候追番看完的，看了两集就停不下来，很喜欢的节奏和走向，在中间一集模仿爱的那一段的时候整个情绪就起来了，期待下一季了。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>漫长的季节</strong>，补标，好久之前看的，国产剧常常也有超出我预期的时候，剧情节奏和情绪张力都很足够，一口气看完后还意犹未尽。</li>
<li><strong>伪装者</strong>，偶尔会在 B 站刷到一些混剪，因为太喜欢琅琊榜那拨演员，几个周末本想当作 BGM 放着了，还被剧情深深吸引了，其实还挺喜欢那个年代和这个题材的，有点很久之前玩的《隐形守护者》的感觉，但明显自己还是喜欢游戏里庄晓曼和剧里于曼丽这样的设定和性格，所以看到后面还挺痛心和惋惜的。</li>
<li><strong>绝世网红</strong>，最近折腾了 Apple TV 上直接看奈飞，试验和下饭的时候随手点开的热播，女主风格和穿搭真不错，其他都挺烂的。</li>
<li><strong>走进比尔：解码比尔·盖茨</strong>，恢复了中午吃饭的时候看纪录片的习惯，随手打开的，原以为会是讲述他的辉煌历史和微软帝国，然而讲到了很多关于贫穷、慈善、破碎的友情、日常生活，看到这一面还是挺意外的，整体还挺值得一看的。</li>
</ul>
]]></content:encoded></item><item><title>周报 #44 - 静寂工人、xLog 与日常</title><link>https://www.pseudoyu.com/en/2023/08/15/weekly_review_20230815/</link><pubDate>Tue, 15 Aug 2023 10:01:24 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/08/15/weekly_review_20230815/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-07-11 到 2023-08-15 这几周生活的记录与思考。 停滞了将近一个月，再打开周报文档的时候也有了些许陌生感。其实积攒了很多想写的主题，</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-07-11</code> 到 <code>2023-08-15</code> 这几周生活的记录与思考。</p>
<p>停滞了将近一个月，再打开周报文档的时候也有了些许陌生感。其实积攒了很多想写的主题，也有很多想说的话，尽管输出变少了，分享欲并未因为生活状态的改变消减，却蔓延在静水流深的日常中。在渐渐习惯了新的生活节奏后，也逐渐开始调整（填补）年初制定的一些计划，周报和博客文章也开始继续更新。</p>
<h2 id="静寂工人">静寂工人</h2>
<p><img src="https://image.pseudoyu.com/images/yixi_ticket.jpg" alt="yixi_ticket"></p>
<p>一个周末去听了一席的演讲，有点像是 Ted 的本地化版本，有不少有趣的人，有为了拯救濒危猫头鹰在俄罗斯森林里生活了数年的可爱学者，有探寻山河褶皱残留荒庙的艺术家，自己做书的建筑师&hellip;</p>
<p><img src="https://image.pseudoyu.com/images/yixi_speech.jpg" alt="yixi_speech"></p>
<p>印象最深也最喜欢的是一位专注于“寻短”的心理咨询师魏明毅老师，现场买了书也找作者签了名，这周挺集中地看完了。很喜欢她“人类学学徒”的自称，深入被台湾基隆码头辉煌年代所驱逐与禁锢的一群工人，与他们同行，理解他们的内心世界与生活的视角。全书其实没有多少去渲染什么苦难，他们辉煌过也经历了被时代抛弃的没落，比起很多真正的难以温饱的群体来说还相距甚远。</p>
<p><img src="https://image.pseudoyu.com/images/book_with_sig.jpg" alt="book_with_sig"></p>
<p>但震撼的是这一群人似乎仅仅在几年间就因为政治/经济方向的一些变动而迅速被遗忘，似乎那段“不夜城”的岁月从未属于过他们，而他们却要花上大半辈子的时间去让社会重新接受自己，同时，也要重新认识自己，对外界而言，他们似乎只是“不够努力”而被抛弃的一群“没用”的人，没有人认真倾听过他们的声音，他们也渐渐学会了沉默。</p>
<p>历史总是在以自己（或是某些政治用意）的标准来决定哪些应该被记录下来，他们就是被略过的笔墨，然而真正的历史感往往在史料之外，那些被掩埋的记忆。我们现今的时代也如是，有了太多不可说不可议的东西，那些反而才是真正的时代的声音。</p>
<p>笔触让我想到之前看过的一部台湾电影《阳光普照》，许多对话、独白和长镜头，就像是像把很多生活的痕迹原样地展现出来，大概也是台湾特有的风格，娓娓道来。对台湾的一些生活方式和时代特色有了很多兴趣，接下来想去看一部之前很早就想看的剧《做工的人》。</p>
<p>会对这一点尤其感兴趣也是因为在我初高中的时光里因为我爸的工作原因，有过跟他的几个学徒住过员工宿舍的经历。那时的室友哥哥们大多没念/没念完高中就到异乡拼搏，想学一门技术在异乡谋求一席之地。</p>
<p>在智能手机和短视频还并不流行的那个时代，也许是因为晚上的时间太过漫长，下班后的他们总是需要找一个地方消磨时光，我也曾有几次被带入他们的生活圈子，有时会去室内轮滑场玩上几个小时，有时会在某个热闹广场的一角聊聊天，也有时候仅仅是在房间里用着老式 DVD 一起看一晚上奥特曼。那时候的我还很小，跟他们的相处和交流自然算不上深入，后续随着各种变动也不再有联系。</p>
<p>十几年后的现在想想，他们当时也只是十八九岁，却似乎有着超过他们年龄的成熟感，他们在很小的年纪就需要在这个热闹城市里找到自己的位置，却又不得不面临着奔波的生活、孤独感以及和这个社会的疏离感，也许只有夜晚的自由时光才能让他们真正感受到一些属于自己的东西。后来有稍微打听了下他们后来各自的生活，有的回老家了，做一些小小的事业；有的继续在杭州打拼，换了一个又一个地方，似乎也还是没能实现自己想要的生活。就像书中描述的那样，他们并不会去指责这个时代，而是更多将生活中不满的部分归咎于自己，仅此而已。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/boyi_universal.png" alt="boyi_universal"></p>
<p>妹妹放暑假了，于是来北京玩了，和学姐一起去了环球影城，尽管是暑假的周末，但也没想象得那么拥挤。</p>
<p>几个热门的项目都有玩到，在「哈利·波特禁忌之旅」项目时眼镜飞了，至今还没找回来，于是去眼镜城配了一副，大概来到魔法世界总得留下些什么吧。</p>
<p>其他的就是静水流深的日常，缓慢却也美好。有一起见了赴京考察的亮亮和其他老师，聊到了挺多之前的事；会偶尔去探索一些街头巷尾的馆子，也会在工作日的晚上去雍和宫听民谣，热闹中找到片刻歇息；还会在远程办公的间隙接送学姐上下班，等候的间隙跟门口的保安小哥聊聊天&hellip;</p>
<p>大约是心境有了些变化，生活状态和看待生活的心情也有了许多改变，很难确切形容，大体是充满了更多美好和善意了吧。</p>
<p>也好久没晒过捏捏的日常了，现在毛越来越厚重，可能下周会带去洗个澡梳理一下毛。</p>
<p><img src="https://image.pseudoyu.com/images/nienie_2023_0816_01.jpg" alt="nienie_2023_0816_01"></p>
<p><img src="https://image.pseudoyu.com/images/nienie_2023_0816_02.jpg" alt="nienie_2023_0816_02"></p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="xlog">xLog</h3>
<p><img src="https://image.pseudoyu.com/images/yu_xlog_profile.png" alt="yu_xlog_profile"></p>
<p>xLog 目前是我自己博客的主要同步和备份平台，由于舍不得之前的数据统计和 Cusdis 积累的评论，一直还没办法整个迁移过去，最新推出了「作品集」功能后，配合着 xSync, xFeed 和 xChar 倒是很好地成为了我的个人 Profile 页面，也是越来越依赖了。</p>
<p>这是我的作品集页面：<a href="https://xlog.pseudoyu.com/portfolios">xlog.pseudoyu.com/portfolios</a></p>
<p><img src="https://image.pseudoyu.com/images/boyi_xlog.png" alt="boyi_xlog"></p>
<p>之前学姐的博客一直使用的是 Hashnode 平台，也算是简易好用的平台，但随着 xLog 功能的更迭和给予创作者的自由度，我还是把它迁移了过来，除了领取 CSB Token 以外，onboarding 体验已经很好了，绑定域名和 umami 解析这些也很方便，建议想拥有自己博客的朋友可以尝试一下。</p>
<p>这是学姐的博客：<a href="https://www.boyilu.com">boyilu.com</a></p>
<p>迁移和编辑过程中也都再重新读了一遍，依然觉得文字是我所能想到的了解和慢慢靠近一个人最舒适也最温暖的方式了。</p>
<h3 id="个人信息流同步系统">个人信息流同步系统</h3>
<p>由于 Railway 在 8.1 正式关闭了 Free Plan，n8n 同步系统停了两天，调研了一番后来还是在自己的 vps 上用 docker 运行了（一台搬瓦工的 ThePlan，2c2g，配合 NginxProxyManager 进行反向代理，跑了我大部分需要数据持久化的服务），顺便更新了一下版本，继续进行同步啦。</p>
<p>截至写周报的时候 Telegram 频道已经有了 536 subscribers，渐渐地也形成了自己输入输出的习惯模式，Twitter（现在可能得叫 X 了）虽然渐渐用得少了，也到了 2000+ fo，也算是个小里程碑了。</p>
<h3 id="开源预算">开源预算</h3>
<p>在之前的一篇周报「<a href="https://www.pseudoyu.com/en/2023/02/12/weekly_review_20230212/">周报 #30 - 开源预算、写作初心与对技术的谦卑</a>」中提到过这样一段：</p>
<blockquote>
<p>在 Randy 的一篇文章『<a href="https://lutaonan.com/blog/my-oss-donation-budget/">我给自己设立了每月 $20 的开源捐赠预算</a>』中看到他对于开源项目的理念与态度，觉得很有意思，也引发了我想为自己也设立一个同样的开源预算的想法。目前的设定是每月至少 $20（约 130 元人民币）或等价值的预算，根据自己的日常使用与技术栈灵活选择，我会选择以下项目进行捐赠：</p>
<ul>
<li>对我有启发的独立博客作者与开发者</li>
<li>我在做 side projects 时常用且解决了很切实问题的项目</li>
<li>我高频使用的一些有趣的开源工具与服务</li>
</ul>
</blockquote>
<p>之前固定给 <a href="https://github.com/reorx">reorx</a> 在 GitHub Sponsor 赞助，这个月在 Randy 发布了 <a href="https://blog.cusdis.com/announcing-cusdis-pro/">Cusdis Pro</a> 和 <a href="https://notepal.randynamic.org/">Notepal</a> 之后开始给 <a href="https://lutaonan.com/">Randy</a> 赞助。</p>
<p><img src="https://image.pseudoyu.com/images/sponsor_randy.png" alt="sponsor_randy"></p>
<blockquote>
<p>💖 I&rsquo;m sponsoring @randyloop for his passion and dedication to open-source. His products, blogs and podcasts really bring inspiration to my growth as a programmer and life learner.</p>
</blockquote>
<h3 id="nuphy">Nuphy</h3>
<p><img src="https://image.pseudoyu.com/images/nuphy_keyboard.png" alt="nuphy_keyboard"></p>
<p>自己偶尔会写一些效率工具类的文章，没想到因此被 Nuphy 官方联系送测了 Nuphy Air60 键盘，轻便且颜值高，打算外出都带它了。</p>
<h3 id="其他">其他</h3>
<p>感觉还发生了很多好玩的事，却因为堆积到月的维度而一时难以都想起来，开始集中冲刺学日语，在出一套教程以及很多想写的文章主题，希望后续能够慢慢补坑。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>世界尽头与冷酷仙境</strong>，描述得很美，主人公的视角有一种我很喜欢的与世界的疏离感，结局也冷静而不失意外。但是很可惜的是这本书分了好几个月且几乎都是在飞机或是高铁上读的，加上平行的两条世界线的设定，在剧情上断续感很强，也许有机会可以再好好读一遍。</li>
<li><strong>静寂工人</strong>，有挺多感想的，写在第一部分了。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.inkandswitch.com/local-first/">Local-first software: You own your data, in spite of the cloud</a></li>
<li><a href="https://mp.weixin.qq.com/s/x6PLSIMn_1qcKnXWPT-J-Q">一个独立创造者的五年</a></li>
<li><a href="https://queue.acm.org/detail.cfm?id=2898444">Borg, Omega, and Kubernetes - ACM Queue</a></li>
<li><a href="https://rainandcoffee.substack.com/p/the-modular-world">The Modular World</a></li>
<li><a href="https://diygod.cc/say-no-to-newsletter">对 Newsletter 说不 - DIYgod</a></li>
<li><a href="https://cali.so/blog/guide-for-cloning-my-site">如何复刻本网站，零氪快速建博客 | Cali Castle</a></li>
<li><a href="https://mp.weixin.qq.com/s/j7zKFgxLIsDz12SFxmmaBA">《平台工人》丨青山资本 2023 年中消费报告</a></li>
<li><a href="https://geekplux.com/newsletters/39">AI 正在杀死网络, 相对失败与成长, 纯文本 -#39</a></li>
<li><a href="https://mp.weixin.qq.com/s/4ALipJhxCLmRZGguDROyEw">让玄学可靠：构建复杂 LLM 应用</a></li>
<li><a href="https://mp.weixin.qq.com/s/pacNtxhtAByaGgLUr-BNGQ">穿透 Web3</a></li>
<li><a href="https://lailin.xyz/post/go-training-week4-project-layout.html">Go 工程化(二) 项目目录结构</a></li>
<li><a href="https://sive.rs/pnt">The past is not true | Derek Sivers</a></li>
<li><a href="https://houjoe.notion.site/Steam-Deck-69bd595650e141da94146521e5a3c10a">发布一年多，终于入手了 Steam Deck</a></li>
<li><a href="https://samwho.dev/hashing/">Hashing</a></li>
<li><a href="https://guangzhengli.com/blog/zh/vector-database/">向量数据库</a></li>
<li><a href="https://someonegao.com/fulfillment-of-platforms">到底是谁的成就感 - Fulfillment Of Platforms</a></li>
<li><a href="https://sive.rs/nice">Thinking something nice about someone? Tell them. | Derek Sivers</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/645811161">数据库碎碎念 - 知乎</a></li>
<li><a href="https://collabnix.com/a-beginners-guide-to-docker-networking/">A Beginner’s Guide to Docker Networking – Collabnix</a></li>
<li><a href="https://www.ilikejobs.com/posts/wireshark/">Wireshark 常用功能笔记 | NoPanic</a></li>
<li><a href="https://lutaonan.com/blog/my-extension-sold-1k-yuan/">开发一个浏览器插件在第三天卖出 1000 元 | Randy&rsquo;s Blog</a></li>
<li><a href="https://arstechnica.com/gadgets/2023/08/google-is-finally-separating-chrome-from-chromeos-for-easier-updates/">ChromeOS is splitting the browser from the OS, getting more Linux-y | Ars Technica</a></li>
<li><a href="https://pboyd.io/posts/securing-a-linux-vm/">The Reluctant Sysadmin&rsquo;s Guide to Securing a Linux Server</a></li>
<li><a href="https://juejin.cn/post/7261897250648932389">掘力计划第 20 期：Tw93 Pake —— 利用 Rust 轻松构建跨端轻量级应用 - 掘金</a></li>
<li><a href="https://mp.weixin.qq.com/s/lrFk0UWZg0LFq6HTke3YBA">账户抽象：链接 Web3 和 Web2</a></li>
<li><a href="https://tw93.fun/2023-08-03/pake.html">Pake - 利用 Rust 轻松构建轻量级应用 - Tw93</a></li>
<li><a href="https://zuofei.net/5091.html">使用 Zeabur 构建我的 n8n 赛博空间 | 今是昨非</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/367623333">创造了不起丨 TiKV Committer 的最快养成方法 - 知乎</a></li>
<li><a href="https://diygod.cc/xlog-portfolios">在博客融入一个跨平台作品集 - DIYgod</a></li>
<li><a href="https://mirror.xyz/shuo.eth/4bFNscq2EBxPTQRhxbyMhDmL6BwuE3eEksY7hkNvWm0">全链游戏-重新定义游戏服务端 — dashuo</a></li>
<li><a href="https://www.boyilu.com/boxing-beginner">运动 | 有哪些事是学拳击以后才知道的？</a></li>
<li><a href="https://www.boyilu.com/rock-climbing-record-01">运动 | 攀岩手记</a></li>
<li><a href="https://www.boyilu.com/tercett-review">观影｜Tercett – Zsigmond Móricz’s Women</a></li>
<li><a href="https://www.boyilu.com/love-grandfather">十斤糖炒栗子那么爱</a></li>
<li><a href="https://www.boyilu.com/happy-deck">快乐的甲板</a></li>
<li><a href="https://www.ycombinator.com/library/4D-yc-s-essential-startup-advice">YC&rsquo;s essential startup advice : YC Startup Library | Y Combinator</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=Yhtjd7yGGGA">ClippyGPT - How I Built Supabase’s OpenAI Doc Search (Embeddings)</a></li>
<li><a href="https://www.youtube.com/watch?v=RM-v7zoYQo0">How to create an OpenAI Q&amp;A bot with ChatGPT API + embeddings</a></li>
<li><a href="https://www.bilibili.com/video/BV1uM4y1x7Sv">入门到毕业，一台全搞定！拍照视频两不误｜a6700 全新评测</a></li>
<li><a href="https://www.bilibili.com/video/BV1W94y1B7Vd">月融资 1.6 亿美元！大模型带火的新风口，竟然是它？| 向量数据库爆火背后的逻辑</a></li>
<li><a href="https://www.youtube.com/watch?v=dQ2bjo07aNs">【硬核】苹果海外千亿税款如何避税 | 欧美政府税收反击战</a></li>
<li><a href="https://www.bilibili.com/video/BV1vV4y1b76v">对抗孤独需要肤浅朋友，不要什么精神之交</a></li>
<li><a href="https://www.bilibili.com/video/BV16x4y1R7MH">一个小时调研全新领域，能了解到什么程度？</a></li>
<li><a href="https://www.bilibili.com/video/BV1L94y1q7ft">北京 City walk：属于老北京的童年记忆，在城南找到了</a></li>
<li><a href="https://www.bilibili.com/video/BV1hV411L7M8">带没去过漫展的 UP 逛 BW，是怎样一种体验？</a></li>
<li><a href="https://www.youtube.com/watch?v=ydFvA29KtzE">有被卷到！剪映——更适合中国人体质的剪辑软件</a></li>
<li><a href="https://www.bilibili.com/video/BV1hk4y1V7oV">实录对比丨谁是影响听歌音质的最大因素？</a></li>
<li><a href="https://www.bilibili.com/video/BV1814y1B77t">致敬新海诚｜打开往门，奔赴三年之约【关西旅拍】</a></li>
<li><a href="https://www.youtube.com/watch?v=1WzhoxdwpeQ">离谱！Apple TV 也能当软路由？！</a></li>
<li><a href="https://www.bilibili.com/video/BV1pF411f7yD">面试必备！每个人都应该掌握的快速调研法</a></li>
<li><a href="https://www.bilibili.com/video/BV1Cr4y1C7Bz">90%的摄影师从来都没思考过的问题！每天发作品发了个寂寞！</a></li>
<li><a href="https://www.bilibili.com/video/BV1X94y1r7e3">都是演的？！旅拍 UP 主吐槽大会</a></li>
<li><a href="https://www.bilibili.com/video/BV1f841197c2">b 站千万播放的“三年动画”什么水平？大佬：有点东西</a></li>
<li><a href="https://www.youtube.com/watch?v=n5VE49MXWFs">博得之門 Baldur&rsquo;s Gate》為何被稱為傳奇？它復活的意義？【就知道玩遊戲 65】</a></li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://www.listennotes.com/e/180f6b6ed2ee4b0e89f23db185f50462">ActivityPub is the next big thing in social</a></li>
<li><a href="https://www.listennotes.com/e/a08521d0a1024ed9a8d5b3f1cba5f444">Vol. 94 是光诗歌: 用诗歌发现大山孩子手里的光</a></li>
<li><a href="https://www.listennotes.com/e/676c51f85479449ea2503b446937883e">编码人声：面向 AI 的新编程范式</a></li>
<li><a href="https://www.listennotes.com/e/40d6d93c94ac4816ad1195f5479c702f">第 4 集 |「捕蛇者说」的起源、做公益、如何保存数字遗产、遇到过的名人，清华和二本</a></li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/2DLrgv7HhJanCuD8L9uJLR">Zenzenzense - movie ver. by RADWIMPS</a></li>
<li><a href="https://open.spotify.com/track/7vgvfXICUyLXzgtGBP5Y6Z">ありがとう by Takuya Ohashi</a></li>
<li><a href="https://open.spotify.com/track/3rysOpH29UDtPpv5W2pzWZ">小さな恋のうた by 高木さん</a></li>
<li><a href="https://open.spotify.com/track/64yrDBpcdwEdNY9loyEGbX">21 Guns by Green Day</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>东京爱情故事</strong>，重温。</li>
<li><strong>伪装者</strong>，因为还是挺喜欢琅琊榜的这一波人，mark 了很久，找了个周末集中看了下</li>
</ul>
]]></content:encoded></item><item><title>周报 #43 - In the Mood for Love</title><link>https://www.pseudoyu.com/en/2023/07/10/weekly_review_20230710/</link><pubDate>Mon, 10 Jul 2023 02:22:24 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/07/10/weekly_review_20230710/</guid><description>《Not Spring, Love, or Cherry Blossoms（除了春天、爱情和樱花） - HIGH4&amp;amp;IU》 前言 本篇是对 2023-06-22 到 2023-07-10 这几周生活的记录与思考。 过去的几周漫长</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/not_spring_love_or_cherry_blossoms.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Not Spring, Love, or Cherry Blossoms（除了春天、爱情和樱花） - HIGH4&amp;IU》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-06-22</code> 到 <code>2023-07-10</code> 这几周生活的记录与思考。</p>
<p>过去的几周漫长却也短暂，发生了很多事，有很多想说的话，屡屡想要下笔，似乎却总有一些心底的声音在阻止着自己，似乎一切都还没准备好，想要好好讲一个故事，却有些无从开口。</p>
<p>直到今天的深夜在 Spotify 的 Discover Weekly 推荐中听到了 HIGH4&amp;IU 的一首《<a href="https://www.youtube.com/watch?v=-4ylBOzDEnU">Not Spring, Love, or Cherry Blossoms（除了春天、爱情和樱花）</a>》，心绪就像是之前听到五月天的《温柔》中的那句“<em>走在风中 今天阳光 突然好温柔</em>”一样，被轻轻触碰到了。</p>
<p>季节不算应景，歌词也难说有太贴切的部分，只是总有这样的几首歌能够在某个时刻与自己的心绪紧紧地相连，即使只是前奏也让我的心情随之律动。于是匆匆打开早已建好却空白着的博客文档，写下了这个标题，想在这个承载了我太多太多经历和情感的地方，悄悄地写下：</p>
<blockquote>
<p>“我恋爱了。”</p>
</blockquote>
<h2 id="in-the-mood-for-love">In the Mood for Love</h2>
<p>就像上一篇《<a href="https://www.pseudoyu.com/en/2023/06/21/weekly_review_20230621/">周报 #42 - 感情观、生活状态与自我</a>》中所提到的那样，我很难觉得自己对于感情是做了万全的准备的，许多情绪或许已经缓解却尚未沉淀，许多感情观的部分虽有意识到却依然没能好好整理，自我还有非常多的部分需要去了解和克服。</p>
<p>然而，有时候生活就像是《命运石之门》中世界线的交错和收束那样错综复杂却也有迹可循。</p>
<p>月中去了一趟北京参加 Gopher China 2023 会议，因为算是忙里偷闲，并未安排什么特别的行程，只是想着难得返京，多逗留了几日，选择了靠近 boyi 学姐家附近的一家酒店住下了。下班后的生活也现充了许多，会去门口的日料店吃饭聊天，会步行着几公里去听音乐会，也偶尔去清吧小酌&amp;画画。</p>
<p>也许是因为习惯甚至眷恋上了这几天的日常，当离开的行程将近而学姐说突然有工作安排要去上海出差时，我几乎是毫不犹豫（甚至像是抓住了救命稻草一样）说出了那句：</p>
<blockquote>
<p>“那我陪你去吧。”</p>
</blockquote>
<p>我大抵是算不上一个宿命论的人的，经历了一些事后也有些难以再笃信什么缘分天定，也许没有这次选择、这句话，世界线会照着原有的轨迹运行着，也许会在未来的某个时刻再次收束，也许不会。所幸如此。</p>
<p>尽管上海之行仅有短短两天，变化却悄然在发生，情愫在心中肆意生长、蔓延。我们在外滩走走停停，猜着对面高楼或是游船上的字；明明有伞却在骤雨中淋着、笑着，像是长不大的两个人。</p>
<p>从虹桥各自离开的时候其实都明白再也没办法维持着原本那样的心照不宣，然而我却还是害怕了、退缩了、逃避了。</p>
<blockquote>
<p>“害怕自己萌生的情感，既怕糟糕的自己没办法承载这样复杂的关系，又怕自己贪恋一时欢喜的口是心非。”</p>
</blockquote>
<p>这大概就是我此前状态最真实的写照。</p>
<p><img src="https://image.pseudoyu.com/images/beautiful_cloud_in_beijing_boyi.png" alt="beautiful_cloud_in_beijing_boyi"></p>
<p>回去的第一周双方各自冷静，挣扎而痛苦。我和亲人挚友聊至拂晓，试图转移注意力不再被远方的存在所牵动心绪，却发现不过是徒劳与自欺欺人。每天似乎都还在原有的生活轨迹中，却早已乱了心绪，会因为学姐发了一片好看的云而欣喜一整晚，也会因为一句略带客气的语气而伤心一整天。</p>
<p>于是偷偷定了去北京的车票，踏着六月的尾巴带着花出现在了学姐的家门前，忐忑、胆怯却也期待着，因为紧张到说不出话而要了威士忌壮胆（不知不觉喝了大半瓶），由于担心已经半醉的自己没能好好确认心意，而当着面在微信上发出了那句“学姐，我喜欢你”。</p>
<p>然后，我恋爱了。</p>
<h2 id="除了春天爱情和樱花">除了春天、爱情和樱花</h2>
<p>恋爱对于自己又变为了一件很没有实感的事，快乐之余自己似乎才开始慢慢思考，我们之间是基于什么呢？</p>
<p>喜欢的情绪自不必多说，新鲜感、好奇心虽美好却常常也难长久，那还剩下什么呢？</p>
<p>因为一个混剪视频《<a href="https://www.bilibili.com/video/BV1Va4y1w7rh/">怀旧混剪｜漂流都市的我们，是否仰望同一片星空</a>》想到了《东京爱情故事》中的莉香所说的一段话：</p>
<blockquote>
<p>&ldquo;世界上一定有很多像我这样的人，孤单地独来独往。但大家仰望的都是同一片星空。&rdquo;</p>
</blockquote>
<p>我想，这大概就是我此刻的想法吧。</p>
<p><img src="https://image.pseudoyu.com/images/weibo_about_boyi_when_we_meet_new.png" alt="weibo_about_boyi_when_we_meet_new"></p>
<p>想起当初刚认识不久却要送别她离开时发的一条微博，明明自己不算是那么善于面对面跟他人表达自己心绪的这样一个人，却很真切地记得在那个暴雨的夜晚自己被学姐的话戳中而慌忙转头掩饰泪水的瞬间，这几句话也记了许多年。大概那一刻的自己感受到了共鸣的部分的，同样地四处漂泊，同样地故作坚强与洒脱，却又被一些小到不能再小的事而触动，不知所措。</p>
<p><img src="https://image.pseudoyu.com/images/tokyo_love_story_stars.png" alt="tokyo_love_story_stars"></p>
<p>每个人都是独立的个体，我很难成为也并不愿意把另一个人作为自己的星星/精神依靠，<strong>但也许，我们可以一起仰望同一片星空，在被熙攘的人群和蔓延的街灯虚晃了双眼时，静静牵住对方的手</strong>。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/yu_running_records.png" alt="yu_running_records"></p>
<p>这几周生活上最大的变动是开始每天跑步了，使用 <a href="https://twitter.com/yihong0618">yihong0618</a> 的「<a href="https://github.com/yihong0618/running_page">GitHub - running_page</a>」还在持续养成习惯，也坚持了每天 7 点多起来，确实感觉世界都不一样了。</p>
<p>其他还有挺多想说的事，之后吧。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>鲁迅杂文集</strong>，读者 &amp; 朋友 Junjie 寄给我的书，早上跑完步会慢慢翻阅一下。</li>
</ul>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://ld-capital.medium.com/uniswap%E8%BF%9B%E5%8C%96%E5%8F%B2-v4%E7%9A%84%E6%9C%BA%E4%BC%9A%E5%92%8C%E5%BD%B1%E5%93%8D-626fb76db713">Uniswap 进化史：V4 的机会和影响</a></li>
<li><a href="https://www.manjusaka.blog/posts/2023/06/25/love-and-hope-is-all-we-need/index.html">聊聊公益和助学 | Manjusaka</a></li>
<li><a href="https://quail.ink/lyric/p/our-ai-practice-exploring-trendy-technology-of-the-past-few-months">我们团队的 AI 实践：探索过去几个月的时髦科技 | 歌词经理</a></li>
<li><a href="https://www.gexiao.me/2023/07/01/lets-wander/">溜达后的一点回顾 | 默默小屋</a></li>
<li><a href="https://homura.live/2023/07/02/Other/dissuasive-self-presentation/index.html">令人劝退的自我介绍 | Homura&rsquo;s Blog</a></li>
<li><a href="https://www.gexiao.me/2016/11/01/love-and-marriage/">新鲜感，占有欲，喜欢，爱 | 默默小屋</a></li>
<li><a href="https://lutaonan.com/blog/7-days-meditation/">在清迈冥想学习 7 天后，我不再「追求」幸福</a></li>
<li><a href="https://cali.so/blog/react-or-vue-my-take-on-web-dev">React 还是 Vue？我对 Web 前端现状的看法 | Cali Castle</a></li>
<li><a href="https://blog.webp.se/golang-libvips-cgo-zh/">libvips, CGO 与 purego——如何让 Go 应用跨平台编译运行 - WebP Cloud Services Blog</a></li>
<li><a href="https://mirror.xyz/spacesailor.eth/LEe2yoLoqy97BWHyO6J65XhnG8t33Nmvz_Vsa3ve7rY">The Solidity Events Guide I Wish I Had — spacesailor</a></li>
<li><a href="https://matters.town/@amateurs/404541-%E5%9B%9E%E5%BD%A2%E9%92%88%E8%A7%A3%E6%95%A3%E4%B8%A4%E5%B9%B4%E4%BA%86-%E4%BB%96%E4%BB%AC%E6%80%8E%E4%B9%88%E6%A0%B7%E4%BA%86-bafybeifvvbkdcloazpuetjghzry7i2guljtqwnak6rfuiyas2v6uggr7gm">回形针解散两年了，他们怎么样了？ - 草台班子</a></li>
<li><a href="https://mp.weixin.qq.com/s/wDBgMvVDopIXsdNA4qi0Vg">专访|RSS3 创始人 Joshua 谈 AI&amp;Web3 创业启示： 趋势无法预测，坚持做正确的事</a></li>
<li><a href="https://mirror.xyz/xyyme.eth/t6vH9iMSbdM-9izoxRFyWCX5gvxs5rmNM8UkZFV4d5w">ERC-6551 详解 — xyyme.eth</a></li>
<li><a href="https://www.lennysnewsletter.com/p/how-to-pass-any-first-round-interview">How to pass any first-round interview (even in a terrible talent market)</a></li>
<li><a href="https://www.piglei.com/articles/the-answer-is-in-the-code-fulfill-requirements/">答案在代码中：“实现需求”的双重含义 | Piglei</a></li>
<li><a href="https://bartfokker.com/posts/identicon/">Tutorial: Identicon generator in Go - Bart Fokker</a></li>
<li><a href="https://quanru.github.io/2023/06/18/%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%94%A8%E6%96%B0%E5%9E%8B%20Obsidian%20%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%9E%84%E5%BB%BA%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91%20%F0%9F%A7%A0/">一种实用新型 Obsidian 实践之构建我的第二大脑 🧠 - 林宜丙的博客</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Lm4y1e7uc">26 岁的我，拯救了 8 年后的自己&hellip;</a></li>
<li><a href="https://www.bilibili.com/video/BV1MX4y1v7NP">用 30 分钟说清楚 B 站引入播放分钟数背后的心思</a></li>
<li><a href="https://www.bilibili.com/video/BV1gh411N737">以前收藏的老文艺片</a></li>
<li><a href="https://www.bilibili.com/video/BV1Va4y1w7rh">怀旧混剪｜漂流都市的我们，仰望同一片星空</a></li>
<li><a href="https://www.youtube.com/watch?v=vnciCz83t70">A New HOPE (2022): ActivityPub Four Years Later: The Good, the Bad, and the Fedi</a></li>
<li><a href="https://www.youtube.com/watch?v=H219s7oRs40">ActivityPub, the Fediverse and Decentralized IDs</a></li>
<li><a href="https://www.bilibili.com/video/BV1jg4y1P78T">UP 主转行，山顶开了家咖啡店，赚翻了！</a></li>
<li><a href="https://www.bilibili.com/video/BV15m4y1n7eK">官方开作弊“毁”游戏《王国之泪》游戏鉴赏【就知道玩游戏 2023】</a></li>
<li><a href="https://www.bilibili.com/video/BV1zj411U7j4">这些知名 UP 主今年最喜欢的歌竟然是..?</a></li>
<li><a href="https://www.bilibili.com/video/BV1qF411X7sH">《黑暗的心》那些教育我的最好的品质，却让我跟时代格格不入</a></li>
<li><a href="https://www.youtube.com/watch?v=CLkxRnRQtDE">Tailwind Connect 2023 — Keynote</a></li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://www.listennotes.com/e/40b7406a881442e8bd6c1023f516d57c">第 3 集 | 英语学习经验、泰国禅修体验 - 代码之外</a></li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/2HovXsvcdJur52BOcYGydz">カタオモイ by Aimer</a></li>
<li><a href="https://open.spotify.com/track/0TCgKnbqhh7kmlZGER6PNX">Ashita Harerukana [2022 Remaster] by Keisuke Kuwata</a></li>
<li><a href="https://open.spotify.com/track/3P2aSkjcbUYbcYr13EFE8n">空も飛べるはず by SPITZ</a></li>
<li><a href="https://open.spotify.com/track/1Rvh5RimhF3ndpclBmIdeJ">そばにいるね by Thelma Aoyama</a></li>
<li><a href="https://open.spotify.com/track/0VTzUEuHYD8s7CgQ15cDPo">特別的人 by Khalil Fong</a></li>
<li><a href="https://open.spotify.com/track/0L3oQdYUvVbsOOPJSkZ3C3">Would That I by Hozier</a></li>
<li><a href="https://open.spotify.com/track/1IdM9JrXYuMYiTdM983oH4">Not Spring, Love, or Cherry Blossoms by HIGH4</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>黑镜 第六季</strong>，失望。看之前还是抱有不少的期待，第一集觉得有些平但是创意尚可，没想到已经是巅峰了，莫名地感觉很商业。相比之下，第一二季的很多剧情即使放到多年后的现在依然不过时甚至前瞻。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>某个男人</strong>，其实还挺想为这部电影写个影评的，但似乎又看的不够深，还会重温一下吧。</li>
<li><strong>消失的她</strong>，感觉近一年里难得第一次影院看的电影，有点一言难尽，逻辑和节奏都有点剥离感。</li>
</ul>
]]></content:encoded></item><item><title>周报 #42 - 感情观、生活状态与自我</title><link>https://www.pseudoyu.com/en/2023/06/21/weekly_review_20230621/</link><pubDate>Wed, 21 Jun 2023 10:03:24 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/06/21/weekly_review_20230621/</guid><description>《温柔 - 五月天》 前言 本篇是对 2023-06-13 到 2023-06-21 这周生活的记录与思考。 这周奔波了很多地方，也有了一些心绪上的波动，回来后也有些琐碎的事在忙碌，以至于到了现</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/tenderness.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《温柔 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-06-13</code> 到 <code>2023-06-21</code> 这周生活的记录与思考。</p>
<p>这周奔波了很多地方，也有了一些心绪上的波动，回来后也有些琐碎的事在忙碌，以至于到了现在才真正下笔写下这篇周报。</p>
<p>回北京的前司见了下曾经的 leader 们，聊了很多，关于 web3、AI 和很多技术问题；和老同事们聚餐，把酒言欢，聊着不同轨迹的生活方式与心境；参加了一次 Drink &amp; Draw 活动，新奇而惬意；和恰巧出差的 Boyi 学姐又一起经历了一趟上海之旅，熟悉且珍贵；周六参加了 HZLUG，面基了很多推上仰慕已久的开发者们；还有很多有意思的事。</p>
<p>另外，换了首歌，是五月天的《温柔》。</p>
<h2 id="感情观">感情观</h2>
<p><img src="https://image.pseudoyu.com/images/wine_drink_and_draw.jpg" alt="wine_drink_and_draw"></p>
<p>其实在早些篇的周报里常常提到感情，像是一个情绪的宣泄之地，而随着自己的生活重心逐渐偏移，便走向了另一个极端，开始只字不提。</p>
<p>直到生日总结时，因为不得不去回忆过去一年中无法绕过的这段至暗时刻，才又重新捡起了一些记忆。前几天和倪聊到时，才开始意识到，其实自己走不出的只是记忆和自以为的无疾而终所造成的不解和所谓伤害，而并不是一个具象的人，甚至不是一段具体的感情。</p>
<p>其实明知道不论要走出还是重新整理自己的生活，是需要直面这些经历并梳理内化为自己的感情观的，但是自己取巧地选择了搁置，甚至像是沉浸在一种自我欺骗的状态中，不愿意去面对和思考，只是告诉自己，“才一年过去了而已，不急”，可能人终究还是爱自己多一些吧，情愿本能地自我保护。</p>
<p>一次算不上意料之外的对话，让我意识到了这种自欺欺人，也发觉自己已经逐渐在丧失面对感情的勇气了；感情思绪理不清，甚至乱到难以分辨；也在害怕自己萌生的情感，既怕糟糕的自己没办法承载这样复杂的关系，又怕自己贪恋一时欢喜的口是心非。</p>
<p>人不管在任何阶段需要克服的也许都是自我吧，大概真的是需要一段时间来重新整理自己的感情观了，重新认识自己，重新出发。</p>
<h2 id="生活状态">生活状态</h2>
<p>其实生活状态也一样，原以为远程办公多了很多时间的自己能够用多出来的时间去调整作息、去注重健康或是去做更多想做的事，但是很多的时候还是把心思和时间都放在了工作和一些学习上，倒不是自己在卷什么，只是好像对于自己生活的其他方面常常是持有一种不太在意的态度，对于自己的生活有一种置身事外的旁观。</p>
<p><img src="https://image.pseudoyu.com/images/morning_scene_run.jpg" alt="morning_scene_run"></p>
<p>随着想把自己的生活与周遭的一切回到正轨，也开始像是遵从一句“每天遛一下自己”的玩笑话一样，重新注重睡眠，早起跑步，重新整理了自己的书单、跑完回来后看上几页。</p>
<p>第二天的清晨走到河边的古镇街区，看着细碎的阳光透着枝叶缝隙浅浅洒在地面时，发觉拍下一张照片后难以抑制的分享欲时，似乎渐渐又重新抓住了一些早已陌生的对生活本身的期待，心之所向，素履以往。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/pic_drink_and_draw.jpg" alt="pic_drink_and_draw"></p>
<p><img src="https://image.pseudoyu.com/images/pic_boyi_drink_and_draw.jpg" alt="pic_boyi_drink_and_draw"></p>
<p>第一次去体验了一场 Drink &amp; Draw，虽然我在现场只会 Drink，挺有趣的体验，台上有模特在构筑各种场景，台下许多热爱画画的人在沉浸其中，有的寥寥几笔已经出了神韵，有的则是一笔一笔自己描摹，而我则是在一旁观察着，似乎也能找到一些平静。</p>
<p>上海已经去过挺多次，所以没留下什么照片，只是这次还算是挺少有的不赶行程而是随意探索的机会。</p>
<p><img src="https://image.pseudoyu.com/images/rust_china_conf_2023.jpg" alt="rust_china_conf_2023"></p>
<p>受到朋友邀请，周日一早又匆匆赶去上海参加 Rust China Conf 2023，作为一个 Gopher 混入其中，大部分没听懂但是周边是真不错，感觉这几个月从活动拿到的衣服、包、手提袋够我穿到明年了。</p>
<p>还因为朋友介绍很开心地认识了登链社区的「<a href="https://twitter.com/tinyxiong_eth">Tiny 熊</a>」老师，最早学链和合约的时候就在登链上看了很多教程，没想到现在能见到且在帮我筹备出一套 Solidity Foundry 框架的视频教程，有点不真实的次元壁打破的感觉。</p>
<p><img src="https://image.pseudoyu.com/images/cute_nie_nie.jpg" alt="cute_nie_nie"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_on_sofa.jpg" alt="nie_nie_on_sofa"></p>
<p>还有可爱的捏捏！</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://atlas-thinking.xlog.app/what-is-web3">回到故事的开始：所以什么是 Web3 - Atlas</a></li>
<li><a href="https://quail.ink/lyric/p/programming-for-ai">面向 AI 的编程：是时候该坐下来应对不确定性了 | 歌词经理</a></li>
<li><a href="https://www.hyafee.com/2023/06/no-limits.html">五郎的哲學：不受時間與社會的拘束 - 華華咖啡廳</a></li>
<li><a href="https://daringfireball.net/linked/2023/06/19/not-that-kind-of-open">Daring Fireball: Not That Kind of &lsquo;Open&rsquo;</a></li>
<li><a href="https://world.hey.com/dhh/you-can-t-trust-google-f7d64064">You can&rsquo;t trust Google</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Am4y1e7Bh">丧丧的生活要自救</a></li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><a href="https://www.listennotes.com/e/a82865600f64455e956aa110fc597a52">EP14 硬地访谈：对话 logseq 联合创始人，看硅谷大佬的传奇投资</a></li>
</ul>
<h4 id="音乐">音乐</h4>
<ul>
<li><a href="https://open.spotify.com/track/16FgjLvtKWzDpZxuh4wY9w">小さな恋のうた feat.七穂</a></li>
<li><a href="https://open.spotify.com/track/1rr2DJOxV0sHXeUXCAz1yf">春泥棒 by ヨルシカ</a></li>
<li><a href="https://open.spotify.com/track/5EsGKF1JoqSRNNUbdPzaMK">僕らの手には何もないけど、 by RAM WIRE</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>鬼灭之刃 锻刀村篇</strong>，啊啊啊啊啊！太好了，弥豆子！大家快去看！</li>
<li><strong>我推的孩子</strong>，继续追！</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>黑镜 第六季</strong>，第一集还是很不错的，但确实少了看前两季的惊艳</li>
</ul>
]]></content:encoded></item><item><title>周报 #41 - 生日的仪式感、时间管理与北京之行</title><link>https://www.pseudoyu.com/en/2023/06/12/weekly_review_20230612/</link><pubDate>Mon, 12 Jun 2023 09:50:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/06/12/weekly_review_20230612/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-05-30 到 2023-06-12 这周生活的记录与思考。 踏入 6 月第一天就跟朋友说，“我每逢五月一般都挺惨的，六月一定是我的 lucky month</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-05-30</code> 到 <code>2023-06-12</code> 这周生活的记录与思考。</p>
<p>踏入 6 月第一天就跟朋友说，“我每逢五月一般都挺惨的，六月一定是我的 lucky month”，不知道是心理作用还是愿力生效，步入六月后的这两周各个层面都有了不同程度的好转，工作任务中抽空重构了一些业务代码，减少了很多潜在问题；和 STRRL 参加了 Rokid 的线下体验活动，还见到了偶像开发者图拉鼎；虽然已经没那么在意生日的仪式感，但还是有一群朋友记得并且准备了一些小惊喜；似乎生日后开始逐渐走出自己的小世界，约见了大概已经七八年没见到的高中旧友，重拾一些心绪；周末闪现北京参加了 Gopher China 2023，和 Boyi 学姐吃喝玩乐，跟 Homura 吃饭闲聊，去 Noy 家撸猫；还有很多有意思的事。</p>
<h2 id="生日的仪式感">生日的仪式感</h2>
<p><img src="https://image.pseudoyu.com/images/comments_about_birthday.png" alt="comments_about_birthday"></p>
<p>前两天收到了一位读者朋友的评论，聊到了感觉关于生日的感知和工作后对事物的态度变化，其实还蛮能感同身受的。曾经的自己算是很在意生日的，不知道是在意这个节点本身还是想通过这种方式确认自己对于身边人的重要性，每年时间临近就开始期待，也常常会叫上一大帮人聚会庆祝。</p>
<p>随着逐渐离开熟悉的生活圈，与挚友也难得才能相聚，不再有执念，幸运的是还是有一些朋友会记住并祝福才有了一些生日的实感。</p>
<p>而今年也许是由于立下了 Flag 每年生日要梳理一下自己的情绪情感，早早开始翻阅着之前的周报，也思考过去这一年的所思所想，才意识到除了数字增长之外，原来还发生了那么多变化，当然这些变化有的积极，有的并不那么尽如人意，但有了审视自然也会有所期待，我想今年生日的意义和仪式感源于此。</p>
<p>以文字的方式自省真的带给我了太多，就像我回复这位朋友留言的一句话：“至少对于自己而言，我走出泥潭的方式就是文字，周报某种程度上也是我的自我救赎。”</p>
<p>另外很意外也很感谢许多素昧平生的朋友们在「<a href="https://www.pseudoyu.com/en/2023/06/06/yearly_review_26/">26 岁的自白：推石头的人</a>」这篇文章的留言和祝福，很温暖，你们共同陪我度过了一个有意义的一天，也希望能继续相伴走下去。</p>
<h3 id="输入输出和时间管理">输入输出和时间管理</h3>
<p><img src="https://image.pseudoyu.com/images/time_management_comments.png" alt="time_management_comments"></p>
<p>收到了有点遥远的周报下的一个留言，关于效率和时间管理的。说实话现在再回答这个问题是有些惭愧的，去年输入输出的质和量还算是比较满意，但其实也不是有什么太科学的方法，一开始的自己只是一心把时间都投入到自我提升中来逃避一些事，所以即使在忙碌的时候也依然抽出了很多时间做喜欢的事。</p>
<p>随着渐渐沉浸在一些技术学习和兴趣探索中，也开始有了一些输出和正向反馈，周报鸽一两周就会收到不少催更，自然也会有更多的动力继续坚持。我一直是享受于“Learn/Build in public”这样的方式的，博客和推文自不必说，用于同步的 Telegram 频道「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」大多同步我的点赞、收藏、转发等行为，其实就像朋友圈从不分组可见一样，我是完全没有区分 public/private 账号或是列表的，也就意味着我所有的行为都是完全透明的。</p>
<p>当结束了一天的工作或是有了一些空闲时，想到似乎今天还没有什么额外的输入，我会有一种算是动力去读几篇搁置在稍后读中的文章/教程、打开 Kindle 看一下自己的读了一半的书或是从豆瓣列表中翻出一部早已想补的电影，不知不觉也就养成了习惯，也常常会翻看自己的频道作为信息整理，看到输出比较零星的时候也会有一些小小的负罪感。</p>
<p>所以当我的频道连续几天没有什么更新时，<del>那十有八九是在摆烂</del>。</p>
<p>至于时间管理方面，自己也算不上有什么好的实践，主要就是用 Logseq 进行一些基本的任务项记录，并且用 Cron 进行日程管理（最近才开始高频使用，菜单栏的日程提醒还是很有用的），也很久没有刻意使用番茄钟这样的工具进行严格管理了，自己还是更习惯按照自己的沉浸状态来安排，而不是根据固定的时间块。</p>
<p>精力管理的话，唯一说的是可能自己对于吃喝玩乐睡几乎都是保持较低限度的需求吧，常常一天就随便吃一顿饭或是水果，也算不上有什么杀时间的爱好，所以时间略充分一些。当然，并不是说这些时间都过得很有意义，也常常有浪费的时候，但也不会对自己有什么严苛的标准，所以能保持着比较平衡的状态。</p>
<p><del>五点睡八点起就别学了</del>，上篇周报里「<a href="https://www.pseudoyu.com/en/2023/05/30/weekly_review_20230530/">流逝的睡眠</a>」这一 part 我自己刚反思过。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p>自之前出门去参加了开源之夏活动后，对于参加这些技术/科技/数码的活动也开始感兴趣，也更愿意出门见一些朋友们了。</p>
<p><img src="https://image.pseudoyu.com/images/nienie_space_at_home.jpg" alt="nienie_space_at_home"></p>
<p>邀请了两个从北京来杭州玩的朋友来家里找捏捏玩，疯狂给他们介绍小佩宠物家的一些宠物智能家居，果然对这种电子玩具完全没有抵御力，但自己又没有什么新鲜的可以折腾了，于是捏捏成为了“受害者”，基本上 App 里都能掌握她的一举一动了，吃东西都精确到克。</p>
<p><img src="https://image.pseudoyu.com/images/nienie_big_eye.jpg" alt="nienie_big_eye"></p>
<p><img src="https://image.pseudoyu.com/images/nienie_in_remote_camera_ebo.png" alt="nienie_in_remote_camera_ebo"></p>
<p><img src="https://image.pseudoyu.com/images/nienie_in_bag.png" alt="nienie_in_bag"></p>
<p>捏捏也被朋友称为玩具猫/摆件，就是随意往哪个角落一放就不动了，安心被 rua 或是等着我们摆拍，太乖了。</p>
<p>这次回北京也快乐地去 Noy 家撸猫，他们家的猫叫「贴贴」，是个很小只的可爱蓝猫，也很乖，一直在玩我带来的数据线。</p>
<p><img src="https://image.pseudoyu.com/images/tietie_of_noy.jpg" alt="tietie_of_noy"></p>
<p><img src="https://image.pseudoyu.com/images/tietie_lay.jpg" alt="tietie_lay"></p>
<p>快乐吸猫的一周！！！</p>
<p>这次回北京主要是来参加 Gopher China 2023 大会的，在 GoCN 里也待了两年之久了，第一次见到一些组员小伙伴和 Asta Xie。期间和一个外面帐篷摊位的小哥聊 Serverless 和 GPT 聊得很开心，正要加微信的时候发现是推特好友「<a href="https://twitter.com/CarsonYangk8s">Carson Yang（米开朗基杨）</a>」，还在 TG 有过一些小交流，果然推友人均大佬。</p>
<p><img src="https://image.pseudoyu.com/images/lunch_with_homura.jpg" alt="lunch_with_homura"></p>
<p>虽然时间有些匆忙，中午和 Homura 吃了一顿好吃的自助，聊得很开心！</p>
<p><img src="https://image.pseudoyu.com/images/candle_music.jpg" alt="candle_music"></p>
<p>剩下时间基本上是 Boyi 学姐带我四处玩，因为很日常就没怎么拍照了，记录了一下一个印象有点深刻的烛光音乐会，很有氛围感。</p>
<p><img src="https://image.pseudoyu.com/images/aniya_toy_from_boyi.jpg" alt="aniya_toy_from_boyi"></p>
<p>以及超神奇的，学姐有超能力，扭蛋一直能开出想要的，之前我还不信，结果一次就开出了我想要的阿尼亚（然后我一直超开心地攥着阿尼亚的扭蛋，感觉老板都笑了）。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.raycast.com/blog/how-raycast-api-extensions-work">How the Raycast API and extensions work - Raycast Blog</a></li>
<li><a href="https://moscledev.xlog.app/ethglobal-autonomous-worlds-can-sai-xin-de-fen-xiang">ETHGlobal Autonomous Worlds 參賽心得分享 - Moscle.dev</a></li>
<li><a href="https://tailscale.com/blog/how-nat-traversal-works/">How NAT traversal works</a></li>
<li><a href="https://tech-blog.cymetrics.io/posts/seadog007/dangers-in-cdn/">那些隱藏在 CDN 中的危險：為什麼 CDN 可能沒有你想的那麼安全</a></li>
<li><a href="https://medium.com/starbugs/utilize-go-fuzzing-to-write-better-unit-tests-80bd37cd4e38">善用 Go Fuzzing，幫助你寫出更完整的單元測試</a></li>
<li><a href="https://mp.weixin.qq.com/s/hMLIpdnbt94GlbR9lD1_lQ">对苹果 Vision Pro 和空间计算的思考</a></li>
<li><a href="https://xuanwo.io/reports/2023-24/">2023-24: 漩涡事件反思录</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=GHTA143_b-s">NestJs Course for Beginners - Create a REST API</a></li>
<li><a href="https://www.youtube.com/watch?v=8dRAd-Bzc_E">How to make a Stablecoin | Foundry Full Course Excerpt</a></li>
<li><a href="https://www.bilibili.com/video/BV1D8411o71k">跨平台开发该不该用 Flutter？2023 年版 Flutter 全面解析</a></li>
<li><a href="https://www.bilibili.com/video/BV1m8411o7K1">音乐人要失业了吗？ChatGPT 都可以写歌了！</a></li>
<li><a href="https://www.bilibili.com/video/BV1yz4y1q79f">极限 8 小时，我和橘子海拍了「夏日漱石」</a></li>
<li><a href="https://www.youtube.com/watch?v=rjOuCFrs584">How I take tech notes as a note app author</a></li>
<li><a href="https://www.youtube.com/watch?v=BpPEoZW5IiY">Learn Rust Programming - Complete Course</a></li>
<li><a href="https://www.youtube.com/watch?v=FPYl7nIKRbA">9-Year Hustle to Achieve a Single GoalㅣNotion&rsquo;s Cofounders</a></li>
<li><a href="https://www.bilibili.com/video/BV1Em4y117Ea">这次相亲没有发挥好,复盘总结经验</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>鬼灭之刃 锻刀村篇</strong>，继续追，喜欢！</li>
<li><strong>我推的孩子</strong>，后面剧情节奏越来越好，感觉期待值被拉得越来越高了！</li>
</ul>
]]></content:encoded></item><item><title>26 岁的自白：推石头的人</title><link>https://www.pseudoyu.com/en/2023/06/06/yearly_review_26/</link><pubDate>Tue, 06 Jun 2023 19:42:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/06/06/yearly_review_26/</guid><description>《后来的我们 - 五月天》 26 岁的自白：推石头的人 现在是 2023 年 6 月 6 日，我 26 岁了，其实随着年龄渐长，对于生日本身已经没有太多仪式感或是期待，只是依然</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="26-岁的自白推石头的人">26 岁的自白：推石头的人</h2>
<p>现在是 2023 年 6 月 6 日，我 26 岁了，其实随着年龄渐长，对于生日本身已经没有太多仪式感或是期待，只是依然像是个节点一样提醒着自己，一年又过去了。从去年开始决定每年生日和跨年都留下些文字，算是对过去这段时光的交代。</p>
<p>其实过去的一年里也陆续写了 40 篇周报，原以为已经习惯去分享自己的情绪，但下笔时依然有些恍惚，不知道从何说起。</p>
<p>2022 年后半段发生的事在「<a href="https://www.pseudoyu.com/en/2022/12/31/yearly_review_2022/">2022 年末回顾 - 迷茫、低谷与改变</a>」这一篇总结中有很详细的叙述，今年经历的一些改变在断断续续的周报中也或多或少有所提及，不想赘述、抑或是怯于回忆，我在这生日之际只想谈谈生活本身。</p>
<p>就像我每周都会试图给周报定几个关键词一样，我总是想给过去自己走过的痕迹定一个主题，想了良久，决定命名为「推石头的人」，源于西西弗斯的故事，一个不断将巨石推到山顶，又不得不经受巨石滚落，再将石头推到山顶，努力、荒诞却又周而复始的故事。</p>
<p>去年生日前经历了一场分手，当天收到生日祝福后才想起来原来生日已经到了，挣扎着起来回复了朋友们的祝福，回忆了一下自己究竟是一个月还是两个月没有踏出房门了，嚼了几片褪黑素又继续回到难眠之夜中。大概是由于太过可怜，白天的时候有朋友送了一束花和一个蛋糕，由于没什么胃口，赶在生日结束前的几分钟仪式感地尝了一口，很甜却无法下咽。</p>
<p>过去的一年里各个阶段都常常有人问“你走出来了么”，问题不难，我却其实一直不知道怎么回答。</p>
<p>大概是从 7 月回杭州散心、换发色、见朋友开始，自己算是决定继续生活了吧？闲置的时间都用来看各种课、学各种技术，无处安放的分享欲也倾泻到了博客文章和推特动态上，当时的我似乎觉得只要把自己的时间挤压到无暇回忆，就能够渐渐走出吧。几个月过去，当我自己都认为似乎也不是那么难以接受时，当我觉得似乎已经能够在新的生活轨迹上缓缓前行时，突然又因为想起一件过去相处的小事，小到我现在都不太能准确描述的事，一切都回到了原点。</p>
<p>我这才发现，原来自己一直像是在做和西西弗斯一样的事，在努力地推着巨石，又不得不看着一切崩塌。过去的一年里很多事都如是。</p>
<p>我在杭州的租屋里有一盆绿植，不了解但应该是很好养的品种吧，入住的时候送的，摆在很显眼的地方，因为是远程办公，我每天都能看见却似乎也不会刻意注意，直到前两天有朋友从北京来杭州玩，邀请来家里撸猫，想着稍稍收拾一下，才看到有很多叶子已经枯了，泥土也已经干得不行，正要浇水时还不小心打翻了，散落一地，联想起了之前写的一句随想。</p>
<p><img src="https://image.pseudoyu.com/images/random_thoughts_20220530.png" alt="random_thoughts_20220530"></p>
<p>突然间情绪到了谷底，烦躁，压抑，无法平复。“这一年失去的东西太多太多，任何一点细小的死亡与崩坏，都会变得不可承受”，年初在鹿哥的视频里看到这句话的时候，不由得哽咽了，这大概就是最恰如其分的形容了，我也才发现自己其实一直在“接受失去”这件事上没什么长进。</p>
<p>然而生活也还要继续，要说这一年自己真正学会的，大概就只有“真实地去面对生活本身”了吧。</p>
<p><img src="https://image.pseudoyu.com/images/nienie_painting.jpg" alt="nienie_painting"></p>
<p>我养了一只可爱的猫，叫捏捏。</p>
<p>独自养猫对我来说一直是需要勇气去做的一件事，毕竟我觉得我自己对于生活品质的要求可能还不如猫，但依然去选择了对一个新的生活伙伴负责。虽然在她生病时担心到吃不下饭，带去绝育时也连签手术单的手都在发抖，经历过一些烦恼的时刻，但她陪伴着我，常常会抚慰我的心绪，也教会我如何去爱。</p>
<p>捏捏给予了我继续生活的勇气。</p>
<p><img src="https://image.pseudoyu.com/images/yu_new_desk_setup.jpg" alt="yu_new_desk_setup"></p>
<p>去年在北京的这大半年工作时光里，有对我很好的朋友，有一些相熟的同事，有意气相投的 leader，给了我不错的自由度，然而自我的各个方面没有得到如预期的成长，对方向也日渐迷茫，却也始终忙碌到连生活都无暇顾及。随着这样的情绪积累越来越多，我决定离开。</p>
<p>回到杭州后的生活和工作平静、简单却又不乏乐趣，在租屋中和捏捏相依为命，各自沉浸在自己的世界里；远程办公的模式有了更多自由的时间去参加很多好玩的活动，去香港听五月天的演唱会，去西安跟许久未见的舍友喝酒畅聊；不错的技术氛围让我可以不断探索新的技术栈，也会久违地为一个需求或是技术问题通宵死磕。</p>
<p>然而，大概是由于距去年那段至暗时刻恰好一年过去了，这两个月又逐渐发现自己陷入到了过去循环往复的状态。睡眠被剥夺，四五点都已经是常态；社交封闭，常常一两周连门都不出；莫名焦虑，急于求成地想要改变，却又不知如何下手，频频受挫。</p>
<p>过去的一年就是很难啊，自己就还是常常脆弱、敏感地依然沉溺在感情结束的情绪中啊，自己就是还是没能学会如何重新捡起生活啊，年初立的很多 Flag 还是没什么进展啊，明明时间变多了看的书和电影却变少了啊，又是天天熬夜到身心俱疲却也无法改变啊，依然没能成为理想中的自己，依然没能找到生活的意义啊。</p>
<p>但这就是生活本身呀，它公平、残酷地面对每一个人。</p>
<p>我已经渐渐不会再去埋怨，而是真诚而热烈地拥抱它。</p>
<p>巨石总会滚落，而明天一早睁眼，我们依旧要推着巨石往上。</p>
<p><img src="https://image.pseudoyu.com/images/birthday_cake_26.jpg" alt="birthday_cake_26"></p>
<p>祝 26 岁的自己，快乐。</p>
]]></content:encoded></item><item><title>周报 #40 - 开源之夏、代码之外与流逝的睡眠</title><link>https://www.pseudoyu.com/en/2023/05/30/weekly_review_20230530/</link><pubDate>Tue, 30 May 2023 12:57:44 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/05/30/weekly_review_20230530/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-05-21 到 2023-05-29 这周生活的记录与思考。 到了周末才意识到这周完全没下过楼，似乎已经成为了生活的常态。不过效率还可以，工</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-05-21</code> 到 <code>2023-05-29</code> 这周生活的记录与思考。</p>
<p>到了周末才意识到这周完全没下过楼，似乎已经成为了生活的常态。不过效率还可以，工作中调研了解了一些新的东西，也继续在看链、合约相关的文档；学习上因为兴趣也稍微看了一下 Swift 和 SwiftUI 的教程，因为自己算是苹果生态的深度用户，对这些背后的东西一直很感兴趣，不过工作中很少用到，刚好趁着了解下；周末想着不能再那么自闭了，于是参加了之前报名的「开源之夏」线下活动，很好玩；还有很多有意思的事。</p>
<h2 id="代码之外">代码之外</h2>
<h3 id="开源之夏">开源之夏</h3>
<p><img src="https://image.pseudoyu.com/images/open_source_activities.jpg" alt="open_source_activities"></p>
<p>其实自己并不算是热衷于参加线下活动的，常常就是宅在自己的世界里，三四月回杭州后想迈出一步，于是频繁参加了香港的 Web3 Festival 和各种周边线下活动，但其实发现并不是那么热衷于认识很多新的人或是说对一个耗费精力的活动能有持续的热情，所以回来后就没怎么关注和参加了。</p>
<p>这次是看到 STRRL 在推上发了，也了解到智子和面包要演讲，觉得还挺感兴趣的，也不远所以就去了，到的还比较早，拿到了很多好玩的周边，感觉下次换电脑的时候贴纸是不愁了。</p>
<p>后面听到了很多开源大佬们的分享，也跟其中一些有了一些小交流，感觉好奇心和爱折腾还是挺共通的特质，当遇到一个自己感兴趣的东西或是遇到一些现实中的问题时，总是会追根溯源，即使发现不是自己的问题也并不止步，而是会继续向上游探究，不管是 Issue 还是 PR。</p>
<p>前段时间其实陷入了自己的一种内耗焦虑，其实工作比之前有意思很多，也有了一些自己的时间可以学习感兴趣的事，但是可能因为想做的事太多，而自己的自律性和执行力也常常并不能那么稳定地如预期，但是参加完这个活动后自己还是有了不少的好转，感觉不管是开源还是这个领域还是有很多好玩的事，且不管在什么阶段都还是都能够做好玩的事，这大概也是自己一直想做技术的初衷吧。</p>
<p>其实心态挺奇怪的，我的焦虑似乎不是来自于所谓的 Peer Pressure，可能在这个领域都不说同辈了，可能比自己小不少的人也有太多太多大佬，反而是参加这样的活动，看到这些更多的可能性和想成为的人的时候，会缓解不少自己的消极情绪。</p>
<h3 id="分享欲">分享欲</h3>
<p>这周听了 Geekplux 和 Randy 的播客频道「<a href="https://bento.me/beyondcode">代码之外</a>」，两位都是自己很喜欢的前辈，也都有一些接触，听他们聊天是一件很享受的事，没有在讲什么很具体的技术细节或是教学，但是能感受到即使节目名为「代码之外」，他们的生活也已经与自己所热爱的科技、代码密不可分了。</p>
<p>印象很深的也是 Randy 讲到分享欲的问题，说在最开始玩推特时他总是想分享自己的一些想法和感受，而到了现在总是会担心会不会 &ldquo;too much&rdquo;，我觉得虽然情境并不一样，我比起之前分享更少了也是有一些担心自己的输入、输出或是想法有些杂乱，没经过梳理和规整的信息，自己似乎也有些怯于分享。</p>
<p><img src="https://image.pseudoyu.com/images/tg_channel_survey.png" alt="tg_channel_survey"></p>
<p>Reorx 之前也在频道里发起过这样一个调查，因为我的频道起初就是他频道的一个 fork 版本，也在差不多的时间段中产生了同样的困惑。不过后来自己想了想，还是没给自己太多心智负担，只是在分享前多加了一层对自己的质问，需要是自己认真读过且有所收获的内容，而不是仅仅是看到被推荐或是一些“看起来”有用的资源整合，其他的还是自己先提升输入输出的价值和纯度吧。</p>
<p>还听他们聊到了很多话题，有关工作、成长、不同的生活环境、离职之后的规划、AI 等等，还听到说 Randy 可能会出一些教程和课程等，之前看他的那本小书「<a href="https://nextjs-in-action-cn.taonan.lu/">Next.js 应用开发实践</a>」就受益很多，后面有些项目就是完全按照这个实践进行的，陈述的方式和深度很适合想独立做一些小项目的人，期待。</p>
<h2 id="流逝的睡眠">流逝的睡眠</h2>
<p>不知道是不是因为远程在家有些时间模糊，最近的作息越来越离谱，有时候其实工作已经忙完了，依然会到凌晨三四点才睡，上午 9 点多会醒一次，但偶尔也直接按掉闹钟睡过去，差不多 11 点开始处理工作和各种事，直到半夜，周而复始。</p>
<p>其实自己身体的负载感觉还好，但愈发觉得其实睡眠还是容易影响精神状态，总感觉睡太晚第二天有些缺少实感，因为刚阳过早上也还没开始晨跑，但是买了瑜伽垫打算室内做一些基础的运动健身，也捡起进展才一半不到的健身环大冒险了。</p>
<p>现在可能由于要睡的时候都已经是疲劳的状态，很少有什么梦，但为数不多的几天似乎也总是会想起以前的一些事，思绪遥远却又真实，之前常常也会说，似乎每年五月总是挺糟糕的，现在也还有一天就要过去了，希望六月，自己很喜欢的这个月，能够一切有所好转吧。</p>
<h2 id="捏捏">捏捏</h2>
<p>捏捏终于恢复了精神，现在四处跑，我工作和加班的时候就在我腿上或者旁边地上躺着，可乖了。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_hangzhou_1.jpg" alt="nie_nie_in_hangzhou_1"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_hangzhou_3.jpg" alt="nie_nie_in_hangzhou_3"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_hangzhou_2.jpg" alt="nie_nie_in_hangzhou_2"></p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="mastodon">Mastodon</h3>
<p>这周由于工作上有一些相关，又开始详细看了下 Mastodon 的一些资料，比起之前那次了解又新看到两篇文章和几个项目：</p>
<ul>
<li><a href="https://checkfirst.network/mastodon-the-rise-of-fediverse/">Mastodon, the rise of the Fediverse</a></li>
<li><a href="https://tidbits.com/2023/01/27/mastodon-a-new-hope-for-social-networking/">Mastodon: A New Hope for Social Networking</a></li>
</ul>
<p>主要是由于公共的服务器一般都会设置一些限流等等，所以想着自己搭建一个，但由于自己其实只需要使用的是支持 Mastodon Api，而其实不需要负载那么多的连接或是复杂的交互界面，了解到了以下这几个项目，可能搭建着玩一下：</p>
<ul>
<li><a href="https://github.com/cloudflare/wildebeest">GitHub - cloudflare/wildebeest: Wildebeest is an ActivityPub and Mastodon-compatible server</a></li>
<li><a href="https://github.com/davecheney/pub">GitHub - davecheney/pub: pub, a tiny ActivityPub to Mastodon bridge</a></li>
<li><a href="https://github.com/superseriousbusiness/gotosocial">GitHub - superseriousbusiness/gotosocial: Fast, fun, ActivityPub server, powered by Go.</a></li>
<li><a href="https://github.com/mattn/go-mastodon">GitHub - mattn/go-mastodon: mastodon client for golang</a></li>
</ul>
<p>go-mastodon 是通过 go 去调用的 sdk。而 wildebeest 大部分基于 Cloudflare 的免费服务，搭建完成后会比较省心地不需要进行太多额外的运维管理；pub 是一个轻量级的 bridge 应用，支持最小化的 Api 访问但是又不需要实现复杂的功能；而 gotosocial 则是比较功能齐全但消耗资源也适中的一个应用了。</p>
<p>感觉 Fediverse 一阵一阵的，真正在上面发言的人还是挺少的，也就当作自己的一方净土吧。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://medium.com/@poporuii/should-we-bullish-on-account-abstraction-aa-and-how-to-evaluate-erc4337-5f15e30507e">Everything we care about Account Abstraction(AA) — ERC4337</a></li>
<li><a href="https://blog.brachiosoft.com/redis">Redis 與作者 antirez 的故事</a></li>
<li><a href="https://medium.com/@jasonlmcaffee/i-dont-want-your-bank-s-ui-i-want-chatgpt-integration-1489cc58a2e0">I Don’t Want Your Bank’s UI. I Want A ChatGPT-Like Natural Language Interface</a></li>
<li><a href="https://world.hey.com/jason/you-can-learn-ai-later-08fce896">You can learn AI later</a></li>
<li><a href="https://zu1k.com/posts/thinking/deception-tactics-in-deepl-api-design/">DeepL Api 设计中的欺骗战术 - zu1k</a></li>
<li><a href="https://checkfirst.network/mastodon-the-rise-of-fediverse/">Mastodon, the rise of the Fediverse</a></li>
<li><a href="https://tidbits.com/2023/01/27/mastodon-a-new-hope-for-social-networking/">Mastodon: A New Hope for Social Networking</a></li>
<li><a href="https://www.engineersneedart.com/blog/samestop/samestop.html">Same Stop</a></li>
<li><a href="https://xuanwo.io/reports/2023-21/">2023-21: 我的 1Password 密钥管理实践</a></li>
<li><a href="https://wzyboy.im/post/1524.html">Tailscale 组网工具 | wzyboy’s blog</a></li>
<li><a href="https://fs.blog/why-write/">Why Write?</a></li>
<li><a href="https://mp.weixin.qq.com/s/GdOunI1SMe427FkNYZsIpA">解读比特币 Oridinals 协议与 BRC20 标准 原理创新与局限</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=c_bBJriqGSA">PrivacyIN ZK Camp Week2: Basic Principles of the Classic ZK Protocols</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录一下看过的有意思的播客：</p>
<ul>
<li><a href="https://www.listennotes.com/e/ee4e1b122f424989866df0764c7f6829">第 0 集 | 离开微软、人生在于体验？阅读的意义、主动和被动的人生、GeekPlux 看 Randy 代码长大？</a></li>
<li><a href="https://www.listennotes.com/e/80e247a8046b4289a87b288e57f0c3e0">第 1 集 | 我们有片头曲啦！更快晋升的技巧、GeekPlux 的奇怪癖好、AI 孙燕姿、我们在用的 AI 工具、旅行的意义</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>鬼灭之刃 锻刀村篇</strong>，太燃了！</li>
<li><strong>我推的孩子</strong>，因为我是奈飞看的，可能滞后了几集，但看到模仿爱的那段时候有点感动到了</li>
<li><strong>漫长的季节</strong>，好久没看国产剧集了，前段时间比较火，这个周末看到并不长就缓缓补了一下，剧情质量还是很在线的</li>
</ul>
]]></content:encoded></item><item><title>周报 #39 - 初患新冠、过去的心绪与失而复得的分享欲</title><link>https://www.pseudoyu.com/en/2023/05/20/weekly_review_20230520/</link><pubDate>Sat, 20 May 2023 23:15:43 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/05/20/weekly_review_20230520/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-05-01 到 2023-05-20 这三周生活的记录与思考。 敲下上面这一行字的时候才发现居然已经拖延到了三周之久，期间其实发生了不少有意</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-05-01</code> 到 <code>2023-05-20</code> 这三周生活的记录与思考。</p>
<p>敲下上面这一行字的时候才发现居然已经拖延到了三周之久，期间其实发生了不少有意思的事，但是似乎自己的分享欲正在逐渐丧失，只是在 Logseq 中记下一些零碎的想法，几次提笔想要整理还是没什么思路，遂也没有勉强，停滞到了上周其实也已经渐渐恢复，却又由于一个即将上线的需求而变得有些忙碌，搁置到了这个周末，不知不觉就到了现在。</p>
<p>说来神奇，苟过了疫情三年，成为了身边罕见的没有阳过的人，却在这一波中招了。周末烧到了 39.5 度甚至还以为只是个小感冒，等周一康复差不多了才想着测试一下抗原，果然两条杠了，不过整体来说算是轻症，烧了一天，喉咙吞刀片也就一天，就慢慢康复了，也算是速通新冠了。</p>
<p>所以这个周末处于一个一切都有在好转的时刻。项目大部分的需求已经完成，算是暂得一些喘息的时间；新冠初愈，也算是给自己的身体一个警醒；绝育后的捏捏拆线了，恢复了活泼的性子；自己也开始恢复正常的输入输出频率。</p>
<p>五一去了趟成都参加活动，也见到了一些朋友；匆匆行程后去西安休闲旅游，见到了久违的大学舍友，几年之约终于达成，却差点被返工潮困在机场；还有很多有意思的事。</p>
<h2 id="故友与过去的心绪">故友与过去的心绪</h2>
<p>我有一个舍友，尽管只是大一一年同窗（后来他转专业走了），却一直联系到现在，自己能定义为朋友的人日渐稀少，也就尤其珍贵。大学时约定在他的家乡西宁见，几年过去了，我奔波了几个城市，他在西安工作定居了。几年未见，于是趁着五一去了一趟西安，算不上旅游，只是喝喝酒、聊聊天，一如往日。</p>
<p>印象里的他不羁、愤世嫉俗，由于常常聊天或是电话，久违后的相见依旧熟悉，在有些无聊的工作日常之外，依然坚持着跑步、弹吉他、看书，依然对世俗的东西不屑不满，却也在自己的轨迹下生活着，多了几分温和。</p>
<p><img src="https://image.pseudoyu.com/images/meet_with_ledi.jpg" alt="meet_with_ledi"></p>
<p>因为是第一次去西安，尽管是五一，还是踩着人流去了下大雁塔这样的旅游胜地，但只是匆匆一瞥。之前还很热衷于摄影的时候，走到哪总会带着相机多拍几张，旅程结束后修图、分享，但随着疫情几年，这样的热情已渐渐褪去，这两年的出行，即使一时兴起带了相机，常常也没能拍什么，似乎不论是自然还是人文景观都已经很难真正吸引到自己，留下更多的反而是随手拍的合照。</p>
<h2 id="失而复得的分享欲">失而复得的分享欲</h2>
<p><img src="https://image.pseudoyu.com/images/memories_in_t5.png" alt="memories_in_t5"></p>
<p>硬盘里也躺着不少未整理的照片视频素材，其中大部分已经被时间熬到不合时宜，只好当作记忆的一部分散落在某个文件夹里，还记得 2021 年的生日前，由于发生了很多很多事，拍了一些视频，想着把那些事分享记录下来，作为一种视频的生日总结，最后没再去梳理那些素材，后来甚至连文字都没留下什么。</p>
<p>直到 2022 年重新开始记录，一晃，一年也过去了，可能由于是相近的时刻，最近也常常有些失眠，又难免地去翻阅一些痕迹，或是在好友聊天时突然的一句“原来已经整整一年过去了”感慨。最近想要落笔写些东西的时候也常常担心会继续写那些有些丧丧的情绪，虽然真实，却也无力，让自己感到疲惫。</p>
<p>仔细想想，这一年里做了一些改变，或多或少更接近自己想要成为的人；如愿有了不论是工作还是日常的一些自由度，离生活本身更近了；尽管还是时常有拖延，但还是记录下了许多自己的想法和感悟，更多地去思考自我；学了一些自己想学的东西，也更多探索和实践自己的想法；也在朋友的陪伴下经历了一些有趣的事，不至于像是去年那样沉溺在自己的世界里。</p>
<p>一切似乎都有在慢慢变好，没法改变的事也总归是要下定决心走出。我如是安慰自己。</p>
<p>好在最近不论是工作还是生活上一些事的进展还不错，有了一些积极的信号，也渐渐发现分享欲与创作欲的回归，浅浅梳理了一下，才发现想做和要做的事有很多，因为种种原因搁置了许多，开始一件件捡起来。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="github-copilot-chat">GitHub Copilot Chat</h3>
<p><img src="https://image.pseudoyu.com/images/github_copilot_chat_use.png" alt="github_copilot_chat_use"></p>
<p>最近算是高度依赖上了 AI 辅助编程，大部分时间用的是 ChatGPT 和 GitHub Copilot 插件，而最近刚好 Copilot Chat 内测通过了，打算切换尝试一下。</p>
<p>ChatGPT Plus 感觉扣费好像除了一些问题，估计到期后要再想办法了，可能可以尝试一下通过美区礼品卡的方式续上，真折腾。</p>
<h3 id="vs-code">VS Code</h3>
<p><img src="https://image.pseudoyu.com/images/eva_vscode_theme.png" alt="eva_vscode_theme"></p>
<p>另外因为一直在用 VS Code（在团队被 Jetbrains 党鄙视至今依然坚守），通过了 <a href="https://twitter.com/DIYgod">DIYGod</a> 的一条推文发现了这个 <a href="https://marketplace.visualstudio.com/items?itemName=RuDevIO.evangelion-theme">EVA 主题</a>，有种莫名的 Coding 力加成，感觉 Bug 都少了，果然颜值才是第一生产力。</p>
<p>自己程序启动器这一块，一直在混用 Alfred 和 Raycast，Alfred 是因为用习惯了，且买了 Mega Supporter 的 License，但是又眼馋 Raycast 的插件生态。</p>
<p><img src="https://image.pseudoyu.com/images/raycast_vscode.png" alt="raycast_vscode"></p>
<p><img src="https://image.pseudoyu.com/images/raycast_vscode_recent_project.png" alt="raycast_vscode_recent_project"></p>
<p>最近发现 Raycast 可以把插件的很多功能通过全局快捷键的方式配置调用，由于经常需要打开不同的 VS Code 项目，于是把用 VS Code 打开和最近项目两个功能分别配置了 <code>Option</code> + <code>.</code> 和 <code>Option</code> + <code>,</code>，高度依赖上了。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://medium.com/1kxnetwork/application-specific-blockchains-9a36511c832">Application-Specific Blockchains: The Past, Present, and Future</a></li>
<li><a href="https://neon.tech/blog/building-an-ai-powered-chatbot-using-vercel-openai-and-postgres">Building an AI-powered ChatBot using Vercel, OpenAI, and Postgres - Neon</a></li>
<li><a href="https://medium.com/@poporuii/should-we-bullish-on-account-abstraction-aa-and-how-to-evaluate-erc4337-5f15e30507e">Everything we care about Account Abstraction(AA) — ERC4337</a></li>
<li><a href="https://geekplux.com/posts/internet-privacy">Enhance Your Internet Privacy in 2023 - GeekPlux</a></li>
<li><a href="https://manateelazycat.github.io/emacs/eaf/2023/05/06/the-principle-of-immersive-translation.html">网页沉浸式双语翻译的原理</a></li>
<li><a href="https://sixdegreelab.gitbook.io/mastering-chain-analytics/zhong-ji-jiao-cheng/11_dune_sql">#15 Dune SQL 查询引擎入门 - Mastering Chain Analytics</a></li>
<li><a href="https://lutaonan.com/blog/how-do-i-take-note/">我的笔记管理法 | Randy&rsquo;s Blog</a></li>
<li><a href="https://nova.moe/cloudflared-distributed/">分布式部署 cloudflared 让访客就近回源，进一步提升访问速度</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=8gd_WtBPxaw">我们做了个能对话的 AI 派蒙，免费给大家玩！</a></li>
<li><a href="https://www.youtube.com/watch?v=Y6KDk5iyrYE">Next.js 13 Crash Course | App Directory, React Server Components &amp; More</a></li>
<li><a href="https://www.bilibili.com/video/BV1cs4y1372B">社区自古以来就不好变现</a></li>
<li><a href="https://www.bilibili.com/video/BV18a4y1g7xc">50 元 vs 2000 元的剪辑，你能看出区别吗？</a></li>
<li><a href="https://www.bilibili.com/video/BV1Gg4y1L7ah">我为什么在 30 岁花 50w 去上学？</a></li>
<li><a href="https://www.bilibili.com/video/BV1zc411T7j7">两年后，我还在用 Linux 吗？</a></li>
<li><a href="https://www.bilibili.com/video/BV1FP411S7fo">这届年轻人忧伤的主题是什么？《那些忧伤的年轻人》菲茨杰拉德</a></li>
<li><a href="https://www.youtube.com/watch?v=kgmdIFNu0Qk">我如何做笔记</a></li>
<li><a href="https://www.youtube.com/watch?v=vw-KWfKwvTQ">GPT-4 - How does it work, and how do I build apps with it? - CS50 Tech Talk</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录一下看过的有意思的播客：</p>
<ul>
<li><a href="https://www.listennotes.com/e/7035b7b7f57f4413b016526bd4a72b2f">No.28 和 xlog.app 的作者 DIYGOD 聊区块链和博客平台、前端学习和生活感悟</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>鬼灭之刃 锻刀村篇</strong>，第三集开始燃起来了，追番中</li>
<li><strong>我推的孩子</strong>，确实是刀啊，追番中</li>
<li><strong>四叠半神话大系</strong>，早有耳闻却是断续着看完的番，就呈现方式和风格上很有一种物语系列的即视感。一事无成的主角，循环流的设定、对于未知可能性的诠释，即使到了现在依然新颖，也常常会想，自己其实也同样困于四叠半的空间里，却不知道什么时候才能有打破的勇气。</li>
<li><strong>异世界归来的舅舅</strong>，忘了是几月番了，感觉停更了好长一阵子，历时大半年，这两天才补完，娱乐日常向，设定挺有意思但是剧情没太多新颖的部分，基本做点别的事的时候放着。</li>
<li><strong>电锯人</strong>，补标一下，经典重温了算是，动画质量在线。</li>
</ul>
]]></content:encoded></item><item><title>周报 #38 - Foundry 合约测试、Logseq 任务管理与 Surge Ponte 远程开发</title><link>https://www.pseudoyu.com/en/2023/04/30/weekly_review_20230430/</link><pubDate>Sun, 30 Apr 2023 00:10:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/04/30/weekly_review_20230430/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-04-19 到 2023-04-30 这两周生活的记录与思考。 上篇周报提到进行了一场穿越多个城市的旅途，回到杭州后渐渐恢复了原本的生活节奏</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-04-19</code> 到 <code>2023-04-30</code> 这两周生活的记录与思考。</p>
<p>上篇周报提到进行了一场穿越多个城市的旅途，回到杭州后渐渐恢复了原本的生活节奏，独处时间多了许多，输入、思考和所做的有趣的事也有很多，但似乎整理、与自己对话的时间反而变少了，常常会在几天后才意识到时间的流逝。自诩是个不那么依赖社交和适应力比较强的人，想了想可能只是过多地把自己的生活状态寄托于虚拟世界，有一种与现实近乎脱节般的不适感。</p>
<p>现在在一个深夜航班上，小憩了一会儿后困意渐消，于是干脆拿出电脑写点什么，也许是因为没有网络和外部干扰，思绪似乎更加清晰。</p>
<h2 id="工作氛围与自由度">工作氛围与自由度</h2>
<p>加入新的团队不知不觉已经一个月有余了，大概是因为前两三周一直在四处奔波，常常没什么实感，现在才渐渐适应节奏与步入正轨，我所在组的氛围很好，即使是远程也不会感受到疏离感，一次会议常常从工作正事聊到外卖吃什么再聊到 Vlog 相机买什么（Sony 大法好），本来社恐的我也渐渐更多在群里话多了起来。</p>
<p>有趣的是因为密集参加了深圳团建、香港 Web3 Festival 和杭州的一波团建，细数自己已经见过公司的接近 20 位同事了，在一个 fully remote 工作模式的团队还是挺不容易的。还很幸运地赶上了线上年会，见到了很多只存在于 slack 对话框的有趣的同事们（各路神仙），表演个节目能发掘一个 rapper，玩个俄罗斯方块都能感觉到人与人之间的参差。</p>
<p>经过一些沟通，工作内容上做了一些调整，可以同步继续做一些智能合约开发和链相关的研发与探索，也能更深度参与自己喜欢的产品（看看还有谁还没在用 <a href="https://xlog.app/">xLog</a> 和 <a href="https://xsync.app/">xSync</a>，具体可以看看这篇「<a href="https://www.pseudoyu.com/en/2023/01/09/weekly_review_20230109/">周报 #25 - 基于 Crossbell 的个人信息输出与同步系统</a>」），虽然可能工作量和时间上需要多一些平衡，但还是有点小开心能有这样选择的自由度。</p>
<h2 id="foundry-与合约测试">Foundry 与合约测试</h2>
<p>由于工作上开始着手了解加入的另一个组的项目，还蛮明显地感觉到自己之前虽然也做过一些链研发和写了小半年合约，但复杂度和开发实践上都还差挺多的，打算从这一块再好好补补，所以这周看了很多合约和调研文档，打算从 Hardhat 转为 Foundry 了。</p>
<p>其实之前 <a href="https://twitter.com/Noy_eth">Noy</a> 和一些其他朋友已经向我疯狂推荐了 Foundry 框架，但是由于之前项目对于合约单元测试要求不那么高，自己也依赖于 js 写了很多工具脚本，就一直还在使用 Hardhat，直到这次真的跑了一些项目和写了一些 demo 单元测试，才感觉到它的巨大优势，瞬间叛变。都已经快吃灰的 Solidity 合约开发系列终于也要迎来新的更新了（<del>在写了，不信你看图</del></p>
<p><img src="https://image.pseudoyu.com/images/foundry_framework_outline.png" alt="foundry_framework_outline"></p>
<p>其实目前关于合约的企业级实践还是蛮少的，也由于后面所做一些合约是开源的，打算慢慢记录一些踩坑的经验和最佳实践吧（全职开源的优势了）。</p>
<h2 id="logseq-与任务管理">Logseq 与任务管理</h2>
<p>由于现在自己个人安排与工作任务更多也更复杂，重新启用了 Logseq 作为自己的个人任务管理工具。自己其实之前一直在用 Notion 做个人看板，但是使用的时候总觉得心智负担太重，重度强迫症的自己也总是不断去优化那些任务的类别和描述信息，反而给了自己很大的压力。也用过滴答清单和 Todoist 这样稍微常规型的应用，但是同样的还是需要自己每天去梳理各种任务和标签，回溯起来也不算方便。</p>
<p>我后来发现了 Logseq 这一笔记软件。一开始我其实也只是把它当作一个以 block 为粒度的 markdown 笔记软件，也顺便想尝鲜一下双向链接这一总感觉一直在被提到的概念，用得还挺适应的，所以逐渐把 Notion 上自己的 Knowledge Base 都迁移过来了，后来其实也折腾过使用简悦来同步自己的网页标注这些，但是不久后还是觉得有些麻烦所以舍弃了。</p>
<p>直到我发现了 <a href="https://twitter.com/randyloop">Randy</a> 的这个视频「<a href="https://www.bilibili.com/video/BV1X44y1K7X1/">我如何使用 Logseq 管理我的生活和笔记</a>」，他提到了使用 Logseq 的 Daily Journal 来做自己的各种笔记与 TODO 管理，这样不需要像 Notion 这类软件那样自己先形成一个规划再呈现出来。</p>
<p><img src="https://image.pseudoyu.com/images/logseq_daily_journal.png" alt="logseq_daily_journal"></p>
<p>因此当自己突然想起一件想要做的事情时，不需要单独在看板或是任务管理软件里建一条新的任务，只需要像是写一条笔记一样在自己的 Daily Journal 里面随意加上一个条目并且使用 TODO, LATER 这样的简单语法就能够进行简单的任务管理。</p>
<p>不过有些任务会跨越多天，我们的任务也会零散地散落在各个日期的 Journal 下，不是很利于统一管理，这就要使用到 Logseq 另外一个强大的功能了 —— Query，这个功能可以理解成以 block 为粒度的查询（就像是 sql 查询到一条记录那样），通过一些标签、语法等内在逻辑进行筛选，展示出我们想要的 block。</p>
<p>这个部分我参照了 Randy 的实践，创建了一个 Dashboard 页面，里面展示了自己的各种查询结果。我主要使用了如下几个 Query（括号中是其对应的 query 语句，需要的朋友可以自取并且根据需要修改）：</p>
<ol>
<li>In Progress (<code>{{query (todo now)}}</code>)</li>
<li>Todo (<code>{{query (todo later)}}</code>)</li>
<li>Writing Plan (<code>{{query (and (todo later) [[writing]] )}}</code>)</li>
<li>Reading (<code>{{query (and (todo now) [[books]] )}}</code>)</li>
<li>Read It Later (<code>{{query (and (todo later) [[books]])}}</code>)</li>
</ol>
<p>呈现结果如下：</p>
<p><img src="https://image.pseudoyu.com/images/logseq_dashboard_in_progress.png" alt="logseq_dashboard_in_progress"></p>
<p><img src="https://image.pseudoyu.com/images/logseq_dashboard_todo.png" alt="logseq_dashboard_todo"></p>
<p><img src="https://image.pseudoyu.com/images/logseq_dashboard_other_queries.png" alt="logseq_dashboard_other_queries"></p>
<p>因为这个是 Randy 的实践，我就不单独出博文介绍了，在周报中简单介绍了一下自己的使用方式，大家有兴趣的可以看看他的原视频。</p>
<h2 id="surge-ponte-与远程开发">Surge Ponte 与远程开发</h2>
<p>自己在网络、各种硬件设备和系统的折腾上属于又菜又爱玩的类型了，之前也探索过瘦客户端开发的一些最佳实践，详情可以看这篇文章：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/">基于 frp 内网穿透的瘦客户端开发工作流</a></li>
</ul>
<p>其中最核心也是最难的点就是怎么在外部网络环境下访问家里的设备，如服务器、Mac 主机等等。在我之前的方案中使用的是 frp 这一工具进行内网穿透，大半年过去了，很稳，依然是首选推荐的方案。</p>
<p>但是当看到 <a href="https://twitter.com/Blankwonder">Yachen Liu</a> 发的这篇「<a href="https://blankwonder.medium.com/surge-ponte-%E7%A0%94%E5%8F%91%E6%89%8B%E8%AE%B0-c145726fc07c">Surge Ponte 研发手记</a>」时，又心痒打算折腾了。</p>
<p>五一假期又要出门在外几天，想着日常开发都是在家里的主机进行的，在外也想要能访问，刚好因为重装了系统还没配置 frp 客户端，想着干脆直接上 Surge Ponte 试试了。</p>
<p>于是赶在出发前一天晚上升级了下 Surge 5 并配置折腾了 Surge Ponte，一番探索下来，比起 frp 或者其他类似的解决方案，我觉得 Surge Ponte 在配置易用性和拓展玩法上有着绝对优势。</p>
<p>Surge Ponte 的折腾绝对值得一篇详细的博文，因此本周报里就不详细讲解原理和配置细节了，只简单展示一下目前我使用到的部分功能效果呈现。</p>
<p>当我在自己的 16 寸 MBP 与家里的 Mac Studio 同时开启了 Surge Ponte 功能（我使用的是 NAT traversal via proxy 的模式，只需要用一个支持 UDP 的线路就可以了，如自建的 Trojan 协议的代理），在已注册设备中就能够看到了。</p>
<p><img src="https://image.pseudoyu.com/images/surge_ponte_config.png" alt="surge_ponte_config"></p>
<p>这个时候当设备开启了允许远程登录的权限时，就可以像访问云服务一样通过 <code>ssh [username]@[surgepontename].sgponte</code> 这样的命令直接远程登录主机，因此也可以支持 VS Code 远程开发等。</p>
<p><img src="https://image.pseudoyu.com/images/surge_ponte_ssh.png" alt="surge_ponte_ssh"></p>
<p>当然这一点像是 frp 这些也可以轻易做到，而更强大的一点是这时候我们在家里主机上启动的一些服务，也可以通过 <code>[surgepontename].sgponte:[port]</code> 这样的网址直接访问。例如我通过 ssh 远程连接到家里的 Mac Studio 后启动了一个本地的 Next.js 网页服务，在本机开发时通过 <code>localhost:3000</code> 来访问，现在我可以直接在 MBP 上通过 <code>http://yu-macstudio.sgponte:3000</code> 直接访问（虽然 frp 也是能够做到映射服务出来，但是需要在 frp client 端写端口映射规则）。</p>
<p><img src="https://image.pseudoyu.com/images/surge_ponte_servies.png" alt="surge_ponte_servies"></p>
<p>所以理论上通过 VS Code 直接远程连接主机修改代码文件并且使用 <code>[surgepontename].sgponte:[port]</code> 的方式能够获得完整版本地调试的体验，兼顾了便携性和性能（<del>好，这就把 MBP 卖了换 Air</del></p>
<p>还有一个很实用的场景就是我们常常会有一些只有在家里的局域网才能访问的服务，如软路由器配置、NAS、树莓派等，这时候如果使用 frp 则需要每个都单独配置，而 Surge Ponte 可以直接通过设定 DEVICE 规则来实现外部访问，如我现在在外地可以直接使用 <code>http://router.asus.com</code> 来访问我家里的路由器配置页，这对于远程管理家里的一些常驻服务很方便。</p>
<p><img src="https://image.pseudoyu.com/images/surge_ponte_router.png" alt="surge_ponte_router"></p>
<p>还有很多好玩的应用，如通过 smb 协议直接访问家里主机设备的文件等等，后面的博文会尽量涵盖一些好玩的应用场景，感兴趣的朋友可以关注（<del>催更</del>）一下博文。</p>
<h2 id="捏捏近况">捏捏近况</h2>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_painting.jpg" alt="nie_nie_in_painting"></p>
<p>博译学姐在给捏捏画油画！！！这个还只是一个初稿，还会再加亿点点细节，但是已经忍不住想展示出来了，太好看了！！！</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_and_new_toys_01.jpg" alt="nie_nie_and_new_toys_01"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_and_new_toys_02.jpg" alt="nie_nie_and_new_toys_02"></p>
<p>新的猫爬架，提前开启度假模式！</p>
<p>五一后准备带去绝育了还是有些紧张的，希望一切安好。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://pepcn.com/surge/warp-liu-liang-da-pei-surge">Warp+ 流量搭配 Surge</a></li>
<li><a href="https://medium.com/1kxnetwork/application-specific-blockchains-9a36511c832">Application-Specific Blockchains: The Past, Present, and Future</a></li>
<li><a href="https://mp.weixin.qq.com/s/ifldCMLTSb1Ir-qcyoa5rw">AI 来了，什么技能最值得我们学？</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1os4y1w78T">如何启动你的第一个开源项目</a></li>
<li><a href="https://www.bilibili.com/video/BV1wm4y127dG">又挨骂了！男友迪士尼求生指南</a></li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>鬼灭之刃 锻刀村篇</strong>，超级期待！！！希望别崩</li>
<li><strong>我推的孩子</strong>，看着讨论度还挺高的，但据说有点刀，看了开头一点点</li>
</ul>
]]></content:encoded></item><item><title>周报 #37 - 浮生半月闲（ 武汉 | 香港 | 五月天）</title><link>https://www.pseudoyu.com/en/2023/04/18/weekly_review_20230418/</link><pubDate>Tue, 18 Apr 2023 11:39:21 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/04/18/weekly_review_20230418/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-04-03 到 2023-04-18 这两周生活的记录与思考。 大约是因为刚换了一种生活状态，早在 3 月就给自己安排了很多行程，从 4 月初就四处</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-04-03</code> 到 <code>2023-04-18</code> 这两周生活的记录与思考。</p>
<p>大约是因为刚换了一种生活状态，早在 3 月就给自己安排了很多行程，从 4 月初就四处游荡，浮生半月闲。这次的路线像是一场回归之旅，从生养的杭州出发，到第一次长期离开家的武汉看望老师和故友，再到度过了奇妙岁月的香港参加展会和活动。</p>
<p>其实也远远算不上忙里偷闲，因为没有请假，好几天的工作日在学校边的酒店或是会展中心的某个角落度过，大多出行也是匆匆赶场。感觉其实也并没有做太多事，却直到现在才得以稍稍缓过来一些，整理这几天的见闻心绪。</p>
<p>半月的旅途算是有趣和值得，看望了许久未见的老师，补上了一节久违的「English Writing」 课；跟博译学姐逛了一下校园，感慨时间流逝之快；匆匆在上海逗留一晚，和小宇约上了一场饭，也给学姐过了一个简陋的生日；在深圳辗转，见到了很多仅存在工作群中的同事，大型网友见面了；在香港参加了 Web3 Festival，虽然没认识什么有趣的开发者，但见到了一些好玩的项目，也约见了一些新老朋友；回港大走了走曾经的一些记忆点，依然美好而珍贵；在上环和公园见了占，久别重逢；看了气氛超 high 的五月天演唱会；还有很多有意思的事。</p>
<p>回到原本的生活状态了，周报和其他输入输出频率即将恢复正常了（<del>但愿！</del></p>
<h2 id="武汉记事">武汉记事</h2>
<p>其实 2 月已经回过一趟武汉，但因故没见到亮亮老师，所以在隔了短短一个月又重返了。上一次的路途上还在因面试而有些焦虑，这次已经一切落定，多了些闲适的心情，连步伐也都放缓了。</p>
<p>总觉得外国语学院在我的人生或是记忆中是一个神奇的存在，有过一段时间因为职业方向上的限制，我总是特别不愿意提起，似乎在后悔自己为什么没有读一个更“有用”的专业；也有过一段时间，似乎别人问起我文科转码的经历时总是会带上一些惊诧，诚实来讲那个阶段的自己是有些享受于这个标签的；而到了现在，见到了很多有趣的奇怪经历的人，工作也步入正轨，渐渐后面的职业不再受阻于学业，自己对于曾在外院度过的四年大学时光多了一些珍惜。</p>
<p>随着步履踏过校园的很多角落，看过自己所待过的一个个学生组织、教室和工作室的痕迹，才真正感受到时间的流逝，原来一些熟悉的事已经需要用五年、七年为尺度来回忆，一些人也已经许久许久未曾相见了，但自己多多少少还是个念旧的人，明明知道遗忘是自然规律却也常常还是想留住一些，不知道是眷恋那段时光还是羡慕身处那段时间中的自己 —— 虽然依然难免有所忧虑，却不乏探索的好奇与改变的信心。</p>
<p><img src="https://image.pseudoyu.com/images/whut_english_writing.jpg" alt="whut_english_writing"></p>
<p>亮亮老师是在我的不论是学生生涯还是人生中都尤其重要的一个存在。</p>
<p>学业上，她对于教学的理念方法才真正让我感受到 University 和 High School 的差异，也完成了自己学习思维与态度上的转变；私交上，会支持我各个方向的探索，会在我只身前往一个陌生地方的时候委托以前的学生照顾我，也会跟我八卦各种有趣的事。</p>
<p>她也是我这次回武汉的主要念想，约了一次上课时间去旁听了一节写作课，似乎又回到了那段时光。那时的自己忙碌、奔波于各种事，迷茫却也不曾畏惧。惭愧地说当时的很多课我都觉得于自己无益而逃了或是没听，从现在的角度来看还是挺后悔的，英国文学、美国文学、诗歌这些反而是到了毕业之后才慢慢开始吸引我，却再也没有了那样大把的时间来细细品读。</p>
<h2 id="香港记事">香港记事</h2>
<p>另一个主要的行程则是香港了，自 21 年离开后，总想着回去看看，却总是各种拖延，再加上很多生活的变动，计划已经渐渐搁置了。而这次恰逢香港的 Web3 Festival，就迅速决定前往了。</p>
<p>刚刚安顿好就决定去港大逛一圈。这是一年奇妙的时光，自己的各个方面都改变了很多，明明很久不用朋友圈的自己也渐渐开始发一些日常。看了一下当时发的一些动态，虽然总共也就寥寥数条，却似乎将这段生活划分成了好几个阶段，即使也已经过去近两年了，回忆依旧澄澈。</p>
<h3 id="初来乍到">初来乍到</h3>
<p><img src="https://image.pseudoyu.com/images/just_went_to_hk_2020.png" alt="just_went_to_hk_2020"></p>
<p>初到香港的时光充满了忐忑与期待，对这个城市的一切都充满了好奇与探索欲。常常会沿着维港走走停停，拍下这个城市的活力；会在自己的小屋子里做饭、学习、写作，安然自得。</p>
<p>说实话香港算不上是一个很温暖的城市，所有人似乎总是步履匆匆，忙于自己的生活与工作，给予他人礼貌却极其克制的关心，狭小逼仄的空间也很难让人感觉到多舒适。</p>
<p><img src="https://image.pseudoyu.com/images/note_from_hk_landlord.png" alt="note_from_hk_landlord"></p>
<p>不过那个时候的我似乎还是一个积极的人，总是会在日常中找到一些有意思的点，让生活中的光亮驱散阴影。尤其印象深的是房东的一张字条，记了很多年。</p>
<h3 id="花样年华">花样年华</h3>
<p><img src="https://image.pseudoyu.com/images/happy_life_in_hku.png" alt="happy_life_in_hku"></p>
<p>经过了一小段时间的适应，自己逐渐开始享受香港的新生活，也度过了很长的一段快乐时光。</p>
<p>惊叹于深夜的港大校园风光，对铜锣湾好吃的韩国烤肉念念不忘，在港大的星巴克中集各种周边，去中环吃 Shake Shack 和看电影，会去兰桂坊的 Quinary Bar 小酌，也会在某个极限赶完的 due 后带着很多零食和酒在维港喝到天亮看日出。</p>
<p>常常还是庆幸于自己 Gap 了一年才重返校园，会更珍惜这样来之不易的节奏与校园生活，也成为了自己人生中特殊而美好的一段经历。</p>
<p>记忆尤其深的是学校旁边的一家「周记点心」，吃过很多次，这次回来再吃的时候似乎又尝到了旧时香港味道。</p>
<p><img src="https://image.pseudoyu.com/images/zhouji_food_02.jpg" alt="zhouji_food_01"></p>
<p><img src="https://image.pseudoyu.com/images/zhouji_food_03.jpg" alt="zhouji_food_02"></p>
<p><img src="https://image.pseudoyu.com/images/zhouji_food_01.jpg" alt="zhouji_food_03"></p>
<h3 id="长夜将近">长夜将近</h3>
<p>当然，生活总是有些起起伏伏伏伏的。</p>
<p>快乐的时光并没有持续太久的，生活也总会倾向于在我们自以为步入正轨的时候悄然崩塌。</p>
<p><img src="https://image.pseudoyu.com/images/struggle_in_hk.png" alt="struggle_in_hk"></p>
<p>20 年末结束了一段四年的感情，21 年初失去了至亲外婆，年中失去了一起长大的表哥，同时也经历了一些其他情感和情绪上的至暗时刻。生活总是这样，当你觉得已经很糟糕的时候，意外总会接踵而至。那段时间常常想到的就是一句话：</p>
<blockquote>
<p>「永远不知道意外和明天哪个会先来临」。</p>
</blockquote>
<p>之后的日子其实过得有些模糊，一部分是繁重的课业与求职压力，一部分是各种情绪积压给自己带来的负面影响，现在回想依然觉得那段时间很不像自己，脆弱、敏感却又冷漠。</p>
<p>因此香港的后半期时光过得很快，也很虚渺，没留下太多视频和照片，几个月没有发布什么动态，以至于到了现在回忆也在渐渐消散，这也是自己之后的一年多里常常遗憾的事。</p>
<h3 id="久别重逢">久别重逢</h3>
<h4 id="港大">港大</h4>
<p><img src="https://image.pseudoyu.com/images/hku_zhihua_gate.jpg" alt="hku_zhihua_gate"></p>
<p>要说整个香港时期记忆最深刻的当属清晨的智华馆了，在这两点一线直接度过了无数时光。每天早上为了占座，会早早赶在智华馆开门前到达，常常会和看管入口的大爷说一句“zousen（早上好）”，因为只说这句，以至于学期过了一半多他还以为我是个 local。</p>
<p><img src="https://image.pseudoyu.com/images/hku_starbucks.jpg" alt="hku_starbucks"></p>
<p>学校里面的咖啡厅也是承载了很多记忆点的地方，每天早上或是午后都会去点一杯，这次去的时候依然拿出了学生证享受了折扣。当时也常常会因为一些香港限定的周边而疯狂充值卡，可惜的是像是马克杯这种有些最终离开的时候没能带回。</p>
<p>想起来当时离开香港的时候不论是八达通还是星巴克卡中都剩余了一些，但是想着香港会是一个自己时常眷念与回忆的地方，有机会也都会常回来玩，所以就任凭留着了，没想到再一次回来就已经是接近两年后的现在，早已一切不复。所以，这次也像是什么执念一样把星巴克卡里的余额清零了，像是一次道别，对过去的那段时光与记忆。</p>
<h4 id="五月天好好好想见到你">五月天好好好想见到你</h4>
<p>这次回香港其实主要的原因是五月天的一场「好好好想见到你」的演唱会，他们的歌在我的各个阶段都对不论是情感还是生活都有着特殊的意义，陪伴着我度过了几个难熬的阶段，而有了疫情三年的各种限制，似乎这样的现场显得尤其珍贵，直到抵达现场都还有一种不真实感。</p>
<p>其实感觉这段时间的状态也并不好，处于一种情绪积压后的放纵中，没能沉下心好好做自己想做的事，却也不想再陷入恶性循环，于是干脆把这次历时半个月的“旅行”当作是一场自我疗愈。但其实结果不尽人意，在武汉的时光很享受，但是是一种回到过去时光的慢，也像是一种家园似的安心，美好却短暂，离开后也不得不再去面对人生海海。</p>
<p>经过一阵子的劳顿后，其实发现自己也并不能那么享受于这样的“自由”，也很难从中得到什么纯粹的快乐，甚至开始有些期盼着回家，回到那种专注在自己世界的状态中。可能时隔那么久才有这样的出行，我才意识到自己原来也已经常常在逃避这种生活的变动与不安感，人也总是有自己的舒适区。</p>
<p>旅程的终点是五月天的演唱会，带了相机，在即将进场时却被告知不能带入，需要到很远的一个地方寄存，在飞奔着赶着的时候自己突然感受到了这趟旅行中自己一直在追寻的那种放松和快乐。在后面几个小时的演出中，也一直处于这种有些奇妙的状态，似乎一条曲线从谷底渐渐回升了。</p>
<p>在挥着应援棒、跟着五月天一起唱一起蹦的时候突然意识到其实生活本身也没有那么多答案，许多意义潜藏在体验和感受之中，有时候更多需要的是放下心防去融入、去探索。</p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_01.jpg" alt="mayday_in_hk_01"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_02.jpg" alt="mayday_in_hk_02"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_03.jpg" alt="mayday_in_hk_03"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_04.jpg" alt="mayday_in_hk_04"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_05.jpg" alt="mayday_in_hk_05"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_06.jpg" alt="mayday_in_hk_06"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_07.jpg" alt="mayday_in_hk_07"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_08.jpg" alt="mayday_in_hk_08"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_09.jpg" alt="mayday_in_hk_09"></p>
<p><img src="https://image.pseudoyu.com/images/mayday_in_hk_10.jpg" alt="mayday_in_hk_10"></p>
<p>回到家后才开始动笔写下这两周的见闻，自己在周报中总是希望能够出自内心感受而不是仅仅记录一些生活碎片与痕迹，旅途中几次想动笔却总是有些不顺，于是干脆搁置了。</p>
<h4 id="web3-festival">Web3 Festival</h4>
<p>另外还去参加了 Web3 Festival。换工作后出门的欲望尤其强烈，想认识一些新的人，也更想通过这次机会看看这个行业更多的可能性。</p>
<p>见到了很多同事，由于一直是远程办公所以大多都是“网友”，这次刚好有这样的机会可以见面，是很有趣的体验。参展的项目很多，也跟很多团队聊了聊，真正好玩的并不多，也没认识到什么新的有趣的开发者，算是有些遗憾的点。</p>
<p>倒是有意思的是在会场闲逛的时候，被一位万万没想到的朋友叫住了，文理分班前的同学，大概也得有 10 年没怎么联系了，说看着有点眼熟所以翻了下朋友圈看到是蓝色头发所以就来打招呼了。聊了一下发现还是我司最亲近合作伙伴的前员工，奇妙的缘分。</p>
<h2 id="捏捏近况">捏捏近况</h2>
<p><img src="https://image.pseudoyu.com/images/nie_nie_with_friend.jpg" alt="nie_nie_with_friend"></p>
<p>半个月没见了，很想念。所幸家人把两只小猫照顾得都很好，两只小猫（同事寄养的）也成为了好朋友，回来开始继续多多更新和捏捏的日常了。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="玩具">玩具</h3>
<p>自己大概也多少有些松鼠的属性，已经很久没有打开各种主机掌机玩了却总还是会收藏一些卡带和周边。要说 Switch 里面玩得最入迷的除了宝可梦系列就是火焰纹章了，正逢新作发售，于是入了「火焰纹章：Engage」和「歧路旅人 2」典藏版。</p>
<p><img src="https://image.pseudoyu.com/images/octopath_2_collector_edition.jpg" alt="octopath_2_collector_edition"></p>
<p><img src="https://image.pseudoyu.com/images/fire_emble_engage.jpg" alt="fire_emble_engage"></p>
<p>由于是从日本寄回来，等待了很久，但周边确实很精致，歧路旅人的包很快这次旅途就用上了，超级方便。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 「<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>」 Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://xuanwo.io/2023/01-beyond-storage-why-we-failed/">BeyondStorage: why we failed</a></li>
<li><a href="https://catcoding.me/p/redis-antriez/">不想当作家的程序员写不出 Redis | 程序员的喵</a></li>
<li><a href="https://www.anthropic.com/index/introducing-claude">Anthropic | Introducing Claude</a></li>
<li><a href="https://www.joshwcomeau.com/blog/the-end-of-frontend-development/">The End of Front-End Development</a></li>
<li><a href="https://diygod.me/dystopian-anime">令我痛心的三部反乌托邦动漫 - DIYgod</a></li>
<li><a href="https://medium.com/@ABCDE.com/cn-abcde-%E9%A6%99%E6%B8%AF%E5%A4%A7%E4%BC%9A-%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%833%E4%B8%AA%E7%83%AD%E9%97%A8%E8%B5%9B%E9%81%93-14a3f996f10f">「CN」ABCDE：香港大会，重新思考 3 个热门赛道</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=h376W93gQq4">I made a FULL-BODY keyboard!</a></li>
<li><a href="https://www.bilibili.com/video/BV1vv4y1J7vW">好巧，我也喜欢你｜西双版纳旅拍</a></li>
<li><a href="https://www.bilibili.com/video/BV1jT411W7XF">我们对这个世界知道的越多就越不理解它</a></li>
<li><a href="https://www.bilibili.com/video/BV1na4y1T732">ChatGPT 爆火，为什么英伟达又赢麻了？</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #36 - 肠胃炎、捏捏近况与新的旅途</title><link>https://www.pseudoyu.com/en/2023/04/02/weekly_review_20230402/</link><pubDate>Sun, 02 Apr 2023 12:01:26 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/04/02/weekly_review_20230402/</guid><description>《Don&amp;#39;t Stop the Clocks - King Gnu》 前言 本篇是对 2023-03-25 到 2023-04-02 这周生活的记录与思考。 万万没想到作为一个在杭州生活了十几年的南方人，居然会在重新回到</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/dont_stop_the_clocks.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Don&#39;t Stop the Clocks - King Gnu》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-03-25</code> 到 <code>2023-04-02</code> 这周生活的记录与思考。</p>
<p>万万没想到作为一个在杭州生活了十几年的南方人，居然会在重新回到杭州生活的时候经受严重的水土不服。</p>
<p>上篇提到经过路途的颠簸等等影响，捏捏有些生病，不过好在经过了一阵子的适应，昨天去进行了一个详细的体检，已经没什么问题了，开了些营养剂进行调养。</p>
<p>然而，在处理好搬家和各种安顿事宜的第一周我的身体就有了各种反应，但由于自己属于几百年不生病的那种体质，也没太在意，到了松懈下来的时候终于集中爆发。</p>
<p>其他就是在适应新的工作模式和节奏了，感觉由于身体和精神上的一些疲惫，没有给自己留太多缓冲时间，因而在工作和自己其他安排的一些状态上都不算太理想，不过也在自我调整过程中了。</p>
<p>另外再矫情一句吧：</p>
<blockquote>
<p>没有你的四月就要来了。 —— 《四月是你的谎言》</p>
</blockquote>
<h2 id="生病">生病</h2>
<p>在脱离了高中住校后日渐不规律的作息和饮食习惯后，自己对于健康这件事一直处于一种既随缘又有些害怕的状态，在大学最忙最多线程的一段时间甚至有“只要我不知道自己身体状况怎么样就可以心安理得地继续作”这样离奇的想法，因此在很长的一段时间都没有体检过。</p>
<p>反而是 Gap 在家的一些时间里，才尤其关注到，把体检、牙和各种大小问题都稍微处理了一下，之后或多或少都有稍微惜命一点，说来有趣，自己大概一直算是经常作自己的身体但是有些奇迹般地还算健康的那种体质，每天十几个小时高强度看着电脑视力几乎也没变差，没做太多防范也躲过了好几波疫情至今未阳，因此也似乎有了一种我似乎不会生病的错觉。</p>
<p>或是之前两周高强度的聚餐，或是回来第一周的周末就和友人连喝两天酒，又或是不知道为什么深夜的时候喝了杯冰的鲜奶，从周一就开始有些肠胃不适，但也没怎么在意，既没去医院又没吃药，就这样熬了两天，终于在周三周四的时候有了报应，下午的时候已经疼到需要躺着缩成一团才略有缓解，原本晚睡早起不午睡的习惯硬是被纠正到健康作息了（睡着了就不痛了），也终于在周四乖乖下单了一些药开始吃，第二天才开始略有好转，直到今天挂号去检查的时候才知道应该是急性肠胃炎，硬是被我拖到一切指标都正常了。</p>
<p>虽然倒不至于入职第一周就请 sick leave，但这周除了完成了一些基础的没太多难度的工作任务外，其他各个方面都没什么额外的进展，甚至都有些不好意思写周报了。算是临近初愈的当下才真切地觉得健康真好，之后还是好好体检和注意身体吧，各方面状态影响也都还挺大的。</p>
<h2 id="工作">工作</h2>
<p>工作上由于之前已经熟悉了部分人和项目的一些情况，更多的是根据现有的一些资料和代码自己探索，也通过了一两个小的需求略微熟悉了下开发流程，后续更多是自己选择感兴趣的需求来开发，也算是一种不错的模式。</p>
<p>但原定的好好读代码上手一个新模块的计划被病情打乱了，整体来说还是不太满意，总感觉还是有些没回到专注写代码的状态，所幸周末已经康复差不多了，下一周得多补一些了。</p>
<p>可能由于之前也有不少远程的经验，对于远程办公的工作模式倒是适应得很快，算不上新的体验但是需要更加完善自己的任务管理系统了。</p>
<h2 id="捏捏近况">捏捏近况</h2>
<p>上篇有讲过捏捏生病了，经过了两周的治疗，终于算是康复了，因为不放心所以还是去邻近的宠物医院做了完整的体检，一切安好，精神和食欲也恢复正常了。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_new_home_01.jpg" alt="nie_nie_in_new_home_01"></p>
<p>在新家的捏捏刚开始还有些拘谨和闷闷不乐。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_new_home_02.jpg" alt="nie_nie_in_new_home_02"></p>
<p>熟悉后整体感觉状态比北京时还要松弛一些，现在甚至会直接趴在我的肩膀上睡一晚，或者就在我旁边的被子上趴着，觉得适应得比想象得要快，完成了北方猫到南方喵的身份转换。</p>
<p>直到&hellip;</p>
<p>一位友人因为最近要出远门一段时间，所以把小猫先送到我家熟悉一下环境照料一下，这样即使我出门的时候我家人也可以帮忙来投喂和收拾。原本以为这样捏捏也会很开心，多了一个玩伴，但是似乎莫名地不合，两只猫在一起的时候总是互相示威、吵架甚至打起来，持续了两天了。</p>
<p>最开始捏捏作为家里的主人却似乎怂到丢失了地盘，常常在角落里躲着或者默默趴着，但是不知怎的从今晚开始，互相都 A 起来了，打到现在了。</p>
<p><img src="https://image.pseudoyu.com/images/two_cats_fighting_01.png" alt="two_cats_fighting_01"></p>
<p><img src="https://image.pseudoyu.com/images/two_cats_fighting_02.png" alt="two_cats_fighting_02"></p>
<p>目前双方主人内心毫无波动甚至在观战押注。其实主要是因为他们打到现在甚至没有一下打到对方，全是虚张声势的佯攻，我内心如下：</p>
<p><img src="https://image.pseudoyu.com/images/two_cats_fighting_03.gif" alt="two_cats_fighting_03"></p>
<p>下周再报告新的战况，或者希望一觉醒来她们就是好朋友了。</p>
<h2 id="新的旅程与计划">新的旅程与计划</h2>
<p><img src="https://image.pseudoyu.com/images/meet_with_xiao.png" alt="meet_with_xiao"></p>
<p>这周末在杭州见了一位新朋友 <a href="https://twitter.com/gxgexiao">Xiao</a>，之前互相看过博客但一直没见过面，就约了个饭，聊了很多很多，从技术到生活，从工作到人生，从理想到现实，从情感到自由，还挺神奇的。</p>
<p>之前另一位友人也说这个月要努力认识更多有趣的人，自闭了好多年的自己直到最近才意识到这件事的魅力，和不同经历的人交流常常会得到一些很新的视角和想法，可能这也是求同存异的价值所在。</p>
<p>所以从这个月开始也打算多出去走走，认识更多有意思的人，也算是新阶段的一些计划吧。不过还是需要在意远程办公的一些时间平衡，还在努力尝试中。</p>
<p>后面一个月依次会在武汉、上海、深圳、香港、成都和西安，行程很满但是充满期待，有兴趣的朋友可以随缘碰面。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://lutaonan.com/blog/say-in-28/">28 岁，我还想生猛下去 | Randy&rsquo;s Blog</a></li>
<li><a href="https://www.instapaper.com/read/1593056407">如何高效地协作开发：一些 Google 的实践</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Rk4y1x7m7">一万首歌里选出前 10，图一乐音乐大赛获奖作品公布！</a></li>
<li><a href="https://www.bilibili.com/video/BV1MX4y1R7w3">【把 ChatGPT 做成智能音箱】发短信 发邮件 控制程序 执行指令 任意输出 交互演示 AI 助手</a></li>
<li><a href="https://www.youtube.com/watch?v=a6qna-ZCbxA">The Legend of Zelda: Tears of the Kingdom – Mr. Aonuma Gameplay Demonstration</a></li>
<li><a href="https://www.bilibili.com/video/BV1Z24y177MP">一期杀疯了的吐槽大文豪的脱口秀</a></li>
<li><a href="https://www.youtube.com/watch?v=fNMfMxGxeag">Intro to Foundry | The FASTEST Smart Contract Framework</a></li>
<li><a href="https://www.bilibili.com/video/BV1vk4y1i7NC">她不再需要我了！AI 又又又让人失业？【全新 ZV-E1 测评】</a></li>
<li><a href="https://www.bilibili.com/video/BV1984y1g7uV">为了保护非遗，我把万元瓷器砸成碎片</a></li>
<li><a href="https://www.bilibili.com/video/BV1Mg4y1g71v">把 9 年日记分享给 ChatGPT 后，它到底有多离谱？</a></li>
<li><a href="https://www.bilibili.com/video/BV1v84y1g7jG">孔乙己脱不下的长衫，我给他脱明白了</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #35 - 登报、搬家和生病的捏捏</title><link>https://www.pseudoyu.com/en/2023/03/24/weekly_review_20230324/</link><pubDate>Fri, 24 Mar 2023 11:21:15 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/03/24/weekly_review_20230324/</guid><description>《Don&amp;#39;t Stop the Clocks - King Gnu》 前言 本篇是对 2023-03-14 到 2023-03-23 这周生活的记录与思考。 要不是因为 xLog 的激励差点就打算鸽了这篇周报了。 过去的一周多里，捏</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/dont_stop_the_clocks.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Don&#39;t Stop the Clocks - King Gnu》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-03-14</code> 到 <code>2023-03-23</code> 这周生活的记录与思考。</p>
<p><del>要不是因为 xLog 的激励差点就打算鸽了这篇周报了。</del></p>
<p>过去的一周多里，捏捏生病、父母开车来北京接猫（顺便接我）、陪同旅游（虽然所有景点我也是第一次去）、和即将离别的朋友相聚、15 小时车程的跨城长途、找房子（虽然只花了 1 个小时就签约了）、搬家和布置家里、新工作入职等等一系列事，似乎所有事都在接连着发生，没有什么喘息的时间。</p>
<p>大概是由于常常是沉迷在不管是工作还是生活中自己在意的部分，自己其实对于很多事物感知都不那么明显，即使短短的一周不到的时间似乎自己生活的方方面面和状态都改变了，却也只有在敲下上面那段话的时候才有些实感。</p>
<p>不过接近三周没敲代码是真的会生疏（且看着空白提交记录有点心绪），需要捡起来状态了。还有很多有意思的事。</p>
<h2 id="上报纸啦">上报纸啦</h2>
<p><img src="https://image.pseudoyu.com/images/yu_china_daily_report.png" alt="yu_china_daily_report"></p>
<p>这周最有意义的事大概就是自己被『中国日报 · 21 世纪英文报』采访的报道出刊了，本身倒不是什么多大的成就，毕竟不是什么技术的贡献，自己各个方面也还差得远。但于我而言还是有着独特的意义，或者说是感觉是一种奇妙的缘分际遇。</p>
<p>18 年初，英专大三的自己处于极度迷茫期，转专业和辅修申请碰壁，而由于自己的专业背景差异太大，去极小的创业公司应聘前端面试时也屡屡被劝退说“你能力挺不错的，但是技术岗要相关背景，要不要考虑还是做产品/运营方向，可以加面”，自学上似乎也遇到了瓶颈，总觉得没方向地学了很多东西却不知道未来该怎么走。</p>
<p>鼓起勇气加了好友向一位计算机专业的英语学习博主（？）『<a href="https://weibo.com/learnandrecord">LearnAndRecord</a>』咨询他对我选择的看法和建议，原本其实也没抱太大的希望，而他很耐心地回了我很多，包括具体的方向等，可以说在那个阶段成为了我继续走下去最大的动力。</p>
<p><img src="https://image.pseudoyu.com/images/my_chat_with_lr_2023.png" alt="my_chat_with_lr_2023"></p>
<p><img src="https://image.pseudoyu.com/images/my_chat_with_lr_2018.png" alt="my_chat_with_lr_2018"></p>
<p>后来一步步申请学校、拿 offer、转码学习、从事了自己喜欢的工作，当然，期间挫折与喜悦都很多，不甚感慨。恰好发表的时机又是自己如愿加入 RSS3，能够更尽情探索未来可能性和生活方式的时候，就像是一个 milestone，告诉了自己似乎之前的一切都是有意义的，自己真的做到了，原来也真的值得。</p>
<p>借用某友人的一篇博客标题『吾将远航』，未来还有很有意思的事值得自己去追寻，自己似乎也处在这个节点，不早不晚。</p>
<p>另外，跟『LR 君』认识那么多年了终于能约上饭了，也算追星成功了！！！</p>
<h2 id="搬家啦">搬家啦</h2>
<p>自己这两年待得最久的地方就是自己的书桌前了，所以对书桌的收纳和布置都比较在意，因为前司定的的 last day 和入职 onboarding 间隔只有一周不到，回到杭州就只有两天时间处理各种事务，所以就迅速选定了一个离家不远的租屋，签约、办网、搬家、布置，两天内火速完成了，虽然还缺一些家居用品，但总算也是初步成果了。</p>
<p><img src="https://image.pseudoyu.com/images/yu_new_desk_setup.jpg" alt="yu_new_desk_setup"></p>
<p>桌椅是物业留下的，等各种安顿好打算换一下，其他的慢慢调整了！朝南的落地窗真的好赞！</p>
<p>顺便纪念一下之前在北京的桌面 Setup。</p>
<p><img src="https://image.pseudoyu.com/images/yu_beijing_setup.jpg" alt="yu_beijing_setup"></p>
<p>搬家是一件挺耗费心力的事，这次也是多亏爸妈来搬运了，整体还算顺利，新家各方面也还挺满意的。</p>
<p>也算是正式离开北京，离开这个自己曾留下挺多记忆点和经历的地方了，前前后后辗转了挺多城市，似乎总该习惯离别了，却依然还是会难过。祝好。</p>
<h2 id="捏捏生病了">捏捏生病了</h2>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_beijing_1.jpg" alt="nie_nie_in_beijing_1"></p>
<p>从周六开始，捏捏突然有些呕吐，观察了一阵子后马上送去宠物医院检查了，是幽门螺杆菌感染，医生说不算什么大碍，但是需要一段时间的治疗，也还是挺担心的，因为也还要坐十几个小时的车回杭州。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_camera_1.jpg" alt="nie_nie_in_camera_1"></p>
<p>出去玩的路上还一直在看家里的摄像头，但是她活跃到把移动监控机器人揍到没电了，看起来没事。</p>
<p>幸好吃了药一天后症状就好了，后面食欲和各种也都恢复了，一路上也很乖巧。</p>
<p>还有一周左右的疗程，希望早些痊愈！</p>
<p>正式从北方猫变成南方喵啦！</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_cute_1.jpg" alt="nie_nie_in_cute_1"></p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://medium.com/infinitism/erc-4337-account-abstraction-without-ethereum-protocol-changes-d75c9d94dc4a">ERC 4337: account abstraction without Ethereum protocol changes | by Vitalik Buterin</a></li>
<li><a href="https://blog.openacid.com/algo/paxos/">可靠分布式系统-paxos 的直观解释 - OpenACID Blog</a></li>
<li><a href="https://blog.codingnow.com/2007/12/history.html">云风的 BLOG: 学习从历史开始</a></li>
<li><a href="https://blankwonder.medium.com/surge-ponte-%E7%A0%94%E5%8F%91%E6%89%8B%E8%AE%B0-c145726fc07c">Surge Ponte 研发手记 | by Yachen Liu</a></li>
<li><a href="https://tianxianzi.me/2023/03/19/relife/">ReLIFE | 重返十七岁 · 天仙子</a></li>
<li><a href="https://github.com/yihong0618/gitblog/issues/259">开源四年的一些记录</a></li>
<li><a href="https://github.blog/2023-03-22-github-copilot-x-the-ai-powered-developer-experience/">GitHub Copilot X: The AI-powered developer experience | The GitHub Blog</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1a84y1N7AT">BAT 早就过时了，看懂 2023 年互联网大厂新战况</a></li>
<li><a href="https://www.youtube.com/watch?v=outcGtbnMuQ">GPT-4 Developer Livestream</a></li>
<li><a href="https://www.youtube.com/watch?v=Bf-dbS9CcRU">The Future of Work With AI - Microsoft March 2023 Event</a></li>
<li><a href="https://www.youtube.com/watch?v=vP45wBOQLS8">一口气了解硅谷银行倒闭危机</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录了一些自己在听的播客：</p>
<ul>
<li><a href="https://www.listennotes.com/e/d3330b70a874476f9853489b74f4f635">云时代的 CDN 乱局</a></li>
</ul>
]]></content:encoded></item><item><title>周报 #34 - Don't Stop the Clocks</title><link>https://www.pseudoyu.com/en/2023/03/13/weekly_review_20230313/</link><pubDate>Mon, 13 Mar 2023 17:29:49 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/03/13/weekly_review_20230313/</guid><description>《Don&amp;#39;t Stop the Clocks - King Gnu》 前言 本篇是对 2023-03-08 到 2023-03-13 这周生活的记录与思考。 本周主要是工作的一些交接，相比起之前算不上忙碌，但紧迫的时间和</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/dont_stop_the_clocks.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Don&#39;t Stop the Clocks - King Gnu》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-03-08</code> 到 <code>2023-03-13</code> 这周生活的记录与思考。</p>
<p>本周主要是工作的一些交接，相比起之前算不上忙碌，但紧迫的时间和后续要处理的事务依然带来了不少压力。毕竟还是即将离开一个生活了近两年的城市，更多的时间留给了一些聊天和聚餐，倒也是久违的放松时刻，然而就好像一直在走动的时钟在这两周突然停摆，觉得自己也还挺有意思的，忙碌的时候很想休息放松，而真正能卸下一些包袱的时候却又有些无所适从。</p>
<p>上篇刚写完就没长记性，又经历了一次喝断片，不过倒是是上演了同事们集中从各种线索里找我家地址最后虚惊一场的经历，也是一个有些奇妙的记忆点了；眼镜断了，但是因为本来度数不高，所以干脆几天没戴，有些不适应变得略模糊的世界但也还好；晓瑜打了电话，讲了很多近况；见了一些新老朋友，家里还当作猫咖迎接了两波朋友；还有很多有意思的事。</p>
<h2 id="dont-stop-the-clocks">Don&rsquo;t Stop the Clocks</h2>
<p><img src="https://image.pseudoyu.com/images/steve-johnson-clock.jpg" alt="steve-johnson-clock"></p>
<p>跟晓瑜电话时，因为有提到说后面可能计划去日本一边远程办公一边重返学校学个摄影这样自己喜欢的专业，她突然提到一句，从高一认识以来，也许是因为想做或是想做到的事太多，似乎我一直在向前走着，一直都不愿意停下。</p>
<p>回想了一下，确实。即使在 19 年本科毕业时所谓的 gap year 也忙忙碌碌做了不少事，攒够了学费。其实也不是什么压力所迫，家人一直以来也很支持我的选择，只是自己似乎大概在大二大三开始真正思考自己想做什么，想成为什么的时候，就不自觉地一直处于向前走的状态，想自由且独立地决定自己的人生，经历过一些否认和挫折因此也更想做到，或者说更不愿意输，太过习惯这样的节奏以至于不知道怎么样停下来。</p>
<p>想起常听的一首歌的歌名，『Don&rsquo;t Stop the Clocks』。之前自己的生活似乎像是一座时钟，似乎只有在转动时才能感受到意义。</p>
<p>中学时代没想那么多，基础不算太好的自己似乎只有不断努力去追寻更好的成绩；本科时知道明明不是喜欢的专业，其实也有大把的时间，却没有过多花在方向探索上，反而是过于努力地去参与各种学生组织来追求那个环境下的“最优解”，最多的时候四个社团，一周五六个会；在即将迈入大四，似乎可以闲下来的时候开始了自己的视频工作室创业，重新回到了忙碌的状态；毕业的时候才发现自己其实依然不愿意草草地从事一个自己并不喜欢的岗位，所以开启了 gap year，筹备留学申请，即使早早拿到了 offer 却也总是患得患失；去香港前反复告诫自己，可能是自己最后的学生生活了，要好好享受其中，其实也没能做好，从 1 月开启第二个学期后，就不断地开始焦虑实习、工作；工作后由于是自己的第一份正式的技术工作，从未敢松懈，似乎为了向他人和自己证明自己是能够好好走这条路的。</p>
<p>其实就结果论而言似乎这些前进都是有意义的，带来了还不错的高考成绩让我进入了一个还可以的大学环境，带来了不错的本科绩点和履历让我申请留学时至少不那么制约，带来了还不错的技术积累让自己也还有机会去追求自己喜欢的方向，也带来了很多很多其他的。但代价就像晓瑜说的，“感觉你一直好累哦”。是啊，其实挺累的，也不想很鸡汤地说什么一切都值得之类的，一路有得有失罢了。</p>
<p>现在身处在两份工作之间有些难的可贵的 gap week 中，却才真正愿意放缓自己的时间，不带那么多得失心去做、去思考一些事。会熬夜刷剧，第二天早上和试图叫我起床换粮的捏捏僵持；会把自己的租屋当成猫咖，一个周末接待了两波访客；会打开几个月都没动过的 Switch，和朋友打一下午的双人成行（真好玩！）。</p>
<blockquote>
<p>時計の針を進めて。
时钟的指针继续向前走吧。</p>
</blockquote>
<p>即使到了现在，我依然会跟自己说，“Don&rsquo;t Stop the Clocks”，因为未来依然有很多有意思的事值得自己去追寻，只是也会常常告诫自己，也别总是看向前方，偶尔也多体会身边的人事物，他们才是自己生活流动、让生命有意义的刻度，一切时光都值得被珍惜，即使是“虚度”的。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://fs.blog/why-write/">Why Write?</a></li>
<li><a href="https://atlas-thinking.xlog.app/when-stablecoin-is-not-stable">当稳定币不再稳定 - Atlas</a></li>
<li><a href="https://github.com/noobnooc/noobnooc/discussions/9">使用 Cloudflare Workers 解决 OpenAI 和 ChatGPT 的 API 无法访问的问题</a></li>
<li><a href="https://www.bmpi.dev/self/okr-gtd-note-logseq/">OKR + GTD + Note =&gt; Logseq · BMPI</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=u72H_zZzkcw">Web Development In 2023 - A Practical Guide</a></li>
<li><a href="https://www.bilibili.com/video/BV1e24y1G7ri">和家人一起旅行，有多崩溃？！【西双版纳摆烂游】</a></li>
<li><a href="https://www.bilibili.com/video/BV1q24y1g7AJ">人只有一个使命：走向自我｜德米安【推书】</a></li>
<li><a href="https://www.bilibili.com/video/BV19g4y1t7gg">像我们这种怪人，会有朋友吗？</a></li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>黑暗荣耀</strong>，可能因为看韩剧算少，感觉制作还挺精良的。一次性看完觉得剧情呈现还算完整但有些老套，只是周汝正人设有点喜欢诶，不逾矩的爱，还挺配的，基本上只想看他们谈恋爱。</li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/tweet_about_chatgpt_and_chunge.png" alt="tweet_about_chatgpt_and_chunge"></p>
<blockquote>
<p>初中班主任想给学生演示 ChatGPT，但是国内访问和各种登录限制是挺大的问题，折腾了一圈，最后采用了 Vercel 自部署 + GPT-3.5 Turbo API</p>
<p><a href="https://github.com/ddiu8081/chatgpt-demo">https://github.com/ddiu8081/chatgpt-demo</a></p>
<p>并且根据这篇教程使用 Cloudflare Workers 配置 openai 代理</p>
<p><a href="https://github.com/noobnooc/noobnooc/discussions/9">https://github.com/noobnooc/noobnooc/discussions/9</a></p>
<p>终于有了不错的体验，有点小开心。</p>
</blockquote>
<p>初中班主任春哥因为想给学生演示 ChatGPT（也可能想偷懒让 ChatGPT 帮忙备课），所以我就搭建了一个服务供国内网络环境下直接访问使用，花了半个上午，真正用上的时候还挺开心的。</p>
<p>自己之前还挺常被戏称是小叮当，或者最近还多了个称号，被怀疑是人工 ChatGPT，似乎总是能用奇奇怪怪的方式实现朋友们的一些需求，还挺有趣的，也很享受其中。</p>
<p>然后就是希望下一周一切顺利了。</p>
]]></content:encoded></item><item><title>周报 #33 - 北京 x 故事 x 离别</title><link>https://www.pseudoyu.com/en/2023/03/07/weekly_review_20230307/</link><pubDate>Tue, 07 Mar 2023 21:30:42 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/03/07/weekly_review_20230307/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2023-02-27 到 2023-03-07 这周生活的记录与思考。 这一周生活发生了挺大的变动，也出于一些原因即将离开北京，有很多事需</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-27</code> 到 <code>2023-03-07</code> 这周生活的记录与思考。</p>
<p>这一周生活发生了挺大的变动，也出于一些原因即将离开北京，有很多事需要额外处理所以不管是 Twitter 还是 Telegram 频道都很少更新，连 GitHub 都久违地出现了大段的空白格。</p>
<p>但总体来说是一个不错的趋势，把自己从一种生活的惯性中拯救出来，也发现这大半年自己的心态还是有了不少变化的。原本的自己大概几周才会出去一次，来北京快两年了哪都没去过，朋友依然只有那几个，也曾有过从杭州返京时，仅仅下了高铁就感受到一种精神不适，然而真正要离开这个城市时，却也发现还是有不少值得挂念的人事物。</p>
<p>看了一次展，喝了两趟酒，聚了几次餐，见了一些人，还有很多有意思的事。</p>
<h2 id="北京-x-故事-x-离别">北京 x 故事 x 离别</h2>
<p><img src="https://image.pseudoyu.com/images/tokyo_love_story.png" alt="tokyo_love_story"></p>
<p>最喜欢的日剧叫『东京爱情故事』，91 还是 92 年的，很老的一部了，很喜欢这种几个人就能勾画出一座城市所有印象的感觉，当然，更主要是太喜欢莉香了，也总是在完治身上看到自己影子。</p>
<p>二十多年的人生里也浅浅接触过一些城市，哪怕是对于生活了十余载的杭州，我也从未觉得城市本身给我带来了多少印象或是归属，依然是人。上篇写到了武汉，这次就来聊聊北京吧，虽算不上喜欢，毕竟也经历了许多，依然值得一篇主题。它于我来说的意义可能远远不止爱情，所以就取名为『北京 x 故事 x 离别』。</p>
<p>曾经其实从未想过自己会和北京这座城市有多少交集，此前的唯一印象就是 2018 年的 11 月去北京展览馆参加一次展会时候因为是从武汉出发，错误评估了气温，在出站时被风吹到瑟瑟发抖，着实算不上一个好的印象。</p>
<p>再下一次就是 2021 年了，临近毕业，或多或少因为感情的因素开始考虑北京的工作，倒也没经过太多深思熟虑，再加上一个不错的机会，几天就决定了过去这两年的暂留之地。</p>
<p>我似乎一直以来对于城市是没有那么多执念的，常常觉得四海为家也没什么不好，只是从北京西站出来的破败感和夏天的燥热也并没有让自己的印象有多少改观。紧接着找房子、入职、两点一线地工作，一切似乎都发生得自然而然。</p>
<p>似乎自己多少还是带着些幸运体质，房东人很好，同意养猫，除了收房租外从来不多事，但是家里出现问题却总是随叫随到；公司原本有一小时的车程，却半年后搬到了三里屯，吃喝玩乐多且上班仅需 40 分钟；leader 给了我很高的自由度，在这一年多里尽情探索；经验多的同事在工作上很照顾我，会一起加班也常常聚餐，让占据了自己生活大部分时间的工作环境少了很多束缚感；会议室里的产品和测试同事也很有意思，总是说“别皱眉，有什么烦心事跟姐姐们说说”，还会在我生日的时候送我大黄蜂玩具；项目虽然常常做得很艰难，但每一个项目都能认识一些志同道合的人，度过了甲乙方的艰难时期也还能有不少私交。</p>
<p>幸运总是有限的，或者说总是平衡的，又或许曾经的自己透支了一部分未来的运气。</p>
<p>经历过因失恋+一些原因在家两个月不出门爆瘦 10 斤、每天也只能依靠着褪黑素睡上两三个小时的时候；有因对自己工作生活状态不满意，每天焦虑到深夜才缓缓睡去，没多久后又失眠发呆的时候；也有因公司项目聚餐喝了很多酒，打车回家的半夜躺在小区里不知道哪个角落睡了几个小时才苏醒，强撑着回到房间收拾残局，醒来后甚至还花了几百块向小区的大爷赎回丢在路上的手机这样的时候。</p>
<p>在这些多少有些不幸的时刻也难免会觉得，自己何必呢，待着一个似乎总会被勾起往事的地方，待在一个似乎连出门都没有动力的地方，待在一个可能自己哪天出了什么意外都不知道该向谁拨号求助的地方。何必呢。</p>
<p>后面的一段时间也一直窝在家里，似乎自己身处哪个城市也无所谓了，连季节更迭都有些模糊了。即使到了现在，故宫、圆明园、环球影城这些依然没去过，过得就像是一个在这个城市长期借宿的人。直到要离开这个城市，依然没有过多地对这个城市有所眷恋，只是渐渐还是多了一些珍惜的人和回忆，可能依然没能太习惯离别，越靠近定好的时间心情也容易更加沉重。</p>
<p>生活常常就像是随意涂抹的线条，时而稀疏时而密集，有的纵横交错，有的却背道而驰，但也许这些才共同构成了生活原本的模样吧。人越是长大，生活才渐渐展现其真实的一面，真实、残酷却不得不去面对。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://reorx.com/makers-daily/004-prompts-and-parameters-transparancy/">谈谈我对 ChatGPT 应用的 prompt 的看法 | Reorx’s Forge</a></li>
<li><a href="https://pinchlime.com/newsletters/my-six-chatgpt-assistants/">我的六個專屬 ChatGPT 助手 - Pin 起來！</a></li>
<li><a href="https://tedium.co/2023/03/04/self-hosted-saas-app-alternatives/">Self-Hosted SaaS Alternatives: Replacing Paid Tools With FOSS Tools</a></li>
<li><a href="https://mp.weixin.qq.com/s/HISBmicZ-6szM6RY4ZWZyw">Buidler DAO x SevenX：Lens Protocol 万字深研报告</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录了一些自己在听的播客：</p>
<ul>
<li><a href="https://www.listennotes.com/e/d16868cff59a4e86b20867f6d54910bf">Vol. 85 科技快乐星球 15: 全世界都在玩 ChatGPT</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1284y1E7my/">当公司变成网吧，员工竟集体背着老板【工作室 Roomtour】</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ag4y1n75Y/">时隔 9 年重回特斯拉上班，比做 UP 主还卷?</a></li>
<li><a href="https://www.bilibili.com/video/BV1oX4y1S7ru/">面对越来越多的网络暴力，普通人能做些什么？</a></li>
<li><a href="https://www.bilibili.com/video/BV1vA411y7qi/">我们生活在四个世界里面</a></li>
<li><a href="https://www.youtube.com/watch?v=LGOd1w02i2Y">Bing&rsquo;s AI Chatbot is Alive | tech news</a></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>千寻小姐</strong>，太喜欢有村架纯了。海边小镇、平凡的日常，很难不联想到一种是枝裕和式的悲伤。千寻救赎和温暖了周遭的人，对自己的生活却永远都像是加缪的《局外人》一样置身事外，永远带着一种孤独的氛围。</li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p><img src="https://image.pseudoyu.com/images/yu_pressure_and_song.png" alt="yu_pressure_and_song"></p>
<blockquote>
<p>之前其实一直觉得自己的心态还挺稳的，但原来当生活里久违地出现一件那么想成功的事时，真的还是会焦虑到需要不停地听歌来缓解。</p>
</blockquote>
<p>也许是由于工作后的生活渐渐趋于稳定，自己并没有太大的情绪波动，甚至因为自己已经习惯将自己置于高压之下，反倒好久没有体会过心慌的感觉了。最近却真真切切体会到了这样极度的焦虑感，也许由于是自己太想实现的事，很难以平常心相待。</p>
<p><img src="https://image.pseudoyu.com/images/bar_with_rain.jpg" alt="bar_with_rain"></p>
<p>所幸最后是个好结果，真正心里的石头落下的那一刻，才发现自己竟然积累了那么重的压力，和朋友去清吧喝酒，一杯接着一杯，似乎想让所有的压力都随着酒精散去。</p>
<p><img src="https://image.pseudoyu.com/images/meal_with_homura.png" alt="meal_with_homura"></p>
<blockquote>
<p>和 <a href="https://twitter.com/RealAkemiHomura">@RealAkemiHomura</a> 面基吃饭 * 2，压马路聊了很多。虽然一直觉得自己很不 social，但真正快要离开北京前才发现还是有些想见的人的。</p>
</blockquote>
<p><img src="https://image.pseudoyu.com/images/tiao_hai_exhibition.jpg" alt="tiao_hai_exhibition"></p>
<p>周末也异常丰富，和之前项目的甲方朋友出去吃烤肉，临走时却被楼下偶然瞥见的漫展所吸引，算是一次不期而遇的有趣活动，然后看了一下午小姐姐跳舞；作为社恐晚期，晚上和博译学姐的两个朋友见面，觉得似乎还是有点好转的，很开心；吃完饭还去跳海酒馆看了学姐在画室的朋友的个人画展，抽奖还抽中了一张画的微印版本，也是很有趣的体验了。</p>
<p>借着这次个人画展的主题里的前几个词，『杀出生活』，最近的状态似乎就是通过这样的方式重新找回对一切的期待。生活也许本身带着诸多不顺，终究需要去打破的勇气。</p>
<p>又联想起了『时间之书』里的一句话：</p>
<blockquote>
<p>年轻人，你的职责是平整土地而非焦虑时光，你做三四月的事，在八九月自有答案。</p>
</blockquote>
<p>记得原本是讲节气相关，现在刚巧三四月，却也十分应景。</p>
<p>综上，这周虽然没做什么正经事，吃喝玩乐倒是一样不落。</p>
]]></content:encoded></item><item><title>周报 #32 - 武汉、久别重逢与流动的心绪</title><link>https://www.pseudoyu.com/en/2023/02/26/weekly_review_20230226/</link><pubDate>Sun, 26 Feb 2023 15:24:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/26/weekly_review_20230226/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2023-02-21 到 2023-02-26 这周生活的记录与思考。 这一周工作上比较日常，并没有太紧急的任务，由于一些自己的事而处于有</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-21</code> 到 <code>2023-02-26</code> 这周生活的记录与思考。</p>
<p>这一周工作上比较日常，并没有太紧急的任务，由于一些自己的事而处于有些紧绷的状态，但焦虑感和低迷的情绪却少了很多，大概有一种一切都在正轨上的感觉了吧。</p>
<p>前两周静茹突然发消息说 23-25 这个周末能不能来武汉，刚好和屈都在，想着能一起见一面，没什么犹豫，又有了一场随心的“旅行”，也重新回到学校、学院见了一些老师朋友。因为有了失去的疫情三年，似乎现在盘点和一些朋友的上一次见面都会恍惚良久，原来都是三四年前的事了。</p>
<p>这次在武汉也仅仅度过了周五周六两天，时间很短，却是自己这两年里第一次纯粹的旅行，有种很奇妙的感觉，似乎重新感受到了生活和自己心绪的流动，也从另一面映射出了自己的变化。</p>
<h2 id="武汉">武汉</h2>
<p>15 年的 6 月，自己填志愿时翻阅了学校发的一本小册子，里面有所有学校的介绍与历年分数线，带着些草率地选择着未来几年要朝夕相处的城市。其实没花多久就决定了武汉，大概多少源于自己曾向往武大的人文气息（分数差点，没去成，所以选择的学校多了两个字），进而觉得这个城市也带上了一些别样的吸引力。</p>
<p>虽然我会觉得学业上自己有些惭愧地并没有付出太多，也没有什么记忆深刻的成就，但在武汉度过的时光却不知不觉成为了我生命中很重要的一段时光。毕业时因为身边大多人也离开了武汉四散各方，我也曾想过说即使之后与这个城市再无交集似乎也没什么，重要的是这些记忆与关系。</p>
<p>而这次回武汉，从武汉站下车，到换乘地铁途经一个个熟悉的站名，再到那条走过几千遍的工大路与学院教室，才发现原来这个城市和里面的一草一木原来也已经刻入了自己的生活中，久违地感受到了一种“回归”的感觉。</p>
<p>也许算不上归属感，从独自拖着行李箱来到这个城市的那一刻，我就明白我终究是客居于此，甚至都没对这个城市抱有太多期望，直到离开时其实难过的也只是与这些熟悉的人分别本身。但不久后，疫情爆发了，封城、方舱、许多令人悲痛的消息甚至就发生在认识的人身边，这个城市似乎渐渐蒙上了一层灰色。</p>
<p>当时我人在杭州，看着网络上铺天盖地的负面消息，以及更多对武汉的谩骂与隐性歧视，切实地感受到了一种心疼与无奈，一个原本充满那么多色彩的城市现今却以这样的方式展示在所有人的面前。提到武汉明明有那么多值得说的，粮道街的“过早”文化、热干面与周黑鸭、自带气场的武汉话，暴躁却直爽的武汉公交司机（虽然真的有被一个刹车从最后一排差点飞到了中间）、传说走过就能携手白头的长江大桥（走过几次，风挺大、挺锻炼身体的，其他并没什么用）、江汉路的繁华与江边的惬意时光，光谷的热闹与成谜的交通状况。还有很多有趣或是会拿来的调侃的点，会跟朋友说这个城市很值得自己去体验一下，多面而别具魅力。却因为这一场疫情，武汉似乎已经渐渐失去了这种神秘感，甚至让一些人有了些固有印象，心情还是挺复杂的。</p>
<p>武汉并不会成为我第二个家，却始终会是我归途的栖息之所，累了，也许就会回去看看，重新捡起自己的生活。</p>
<h2 id="久别重逢与流动的心绪">久别重逢与流动的心绪</h2>
<p>曾经在『<a href="https://www.pseudoyu.com/en/2022/08/29/weekly_review_20220829/">周报 #09 - 没有色彩的 Yu 和他的巡礼之年</a>』这一篇文章中有提到过这样一群人：</p>
<p><img src="https://image.pseudoyu.com/images/four_people_relationship.png" alt="four_people_relationship"></p>
<blockquote>
<p>人在各个阶段似乎总是会有抱团的倾向，而一旦依赖于一个群体又不免遭受来自关系的压力与挫折。大学时我曾有这样一个四人小团体，两男两女，总是形影不离，到辅导员或是同学发现缺人都会很自然地询问其余的人。</p>
<p>但我在一段时间后感受到了明显的压力，剩下三位似乎是更风云一点的人物，总是在人群中耀眼的那一个，而我却似乎总是缺乏存在感，而内心又不想成为这样出于习惯而依附其中的多余之人。于是我开始刻意回避和逃离，当然，表现拙劣的我并不懂如何隐藏，很快就被察觉。</p>
<p>可以说比起多崎作我是幸运的，没有被抛弃，也没有什么误会，另外三位在一个夜晚把我堵在男生宿舍楼下让我讲出心结，并逐一进行排解，关于个性和存在感的回应我可能依旧觉得是安慰，但有感受到自己有被这段关系和模式所需要，自己的情绪有被他们所认真看待，我们的关系有被珍惜。即使后续因为城市和很多原因已经少有共同行动的机会了，但是依然有着不错的联系，以及到了任一成员所在的城市所首先会想到的人。</p>
</blockquote>
<p>这次回武汉见的就是他们。</p>
<p><img src="https://image.pseudoyu.com/images/photo_with_ru_qu_and_lei.jpg" alt="photo_with_ru_qu_and_lei"></p>
<p>自己其实一直都很珍惜这种自然惬意的关系，似乎是谁一句“想你了”就能见面的那种，不需要太多刻意的陈词铺垫或是安排，倪、占、晓瑜和他们都是，即使由于疫情其实已经都三四年没能见面了。</p>
<p>在香港时也有在一晚接到一个突然的视频电话，他们三个在武汉相聚，我在微信视频中远程合影，而这次，终于我也能够在现场了。吃吃喝喝，闲散地逛着校园，讲着过去和现在的事，一切如旧。行程匆忙，周日就回了北京，希望也能再多相见。</p>
<p>除了见面外，在这次短暂出行中似乎发现自己有了一些变化，会更愿意去感受身边的事物，会更频繁地因为一些不起眼的小事或者甚至是在走过某条路时恰好听到的一首歌而愉悦，明明目前被一些很值得焦虑的事包围着，但心绪却似乎渐渐随着旅程流动了起来。</p>
<p>也后面也希望能有更多旅行的机会，</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="赛博搬家">赛博搬家</h3>
<p>大概多少是对国内的互联网公司以及一些面向国内的服务有些心存疑虑，这半年陆续在把自己所依赖的服务都尽可能搬到了国外，虽然大多还是中心化的，至少能少一些审查及隐私保护方面的担心吧。</p>
<p>而在武汉的这一周终于把依赖最重且搬家最麻烦的 iCloud 从云上贵州搬到了港区，还经过了不少波折，不得不说 Apple 在帐号管理和云服务同步这一块做的实在是不太行。</p>
<p>因为我的帐号买了很多软件（包括 Final Cut Pro X 等全家桶），所以其实并不想开一个新的号来专门迁移，幸好 Apple 的换区是能够保留已购买项目的，且我所有在国区买的 App 在港区也都有，这一点上其实还是比较无缝的。</p>
<p>但 Apple 的家庭共享就没有那么方便了，之前是我的帐号开了一个 Family，共享了 iCloud 200G 给倪和占共同使用，并且还监护了我妹妹的帐号（因为未满 14 岁），在我想换区时，则是需要先把我妹妹的帐号迁移到另一个家庭，以及我订阅的 Apple Music 到期（甚至不能提前，只能等到当月订阅周期结束，有点离谱），然后再用港区的支付方式与各类信息来更换区域，再启用港区的家庭共享 iCloud。</p>
<p>不仅是过程有些麻烦，而且在重新登录帐号时 iPhone 还出现了验证错误的情况，查了很多资料，都说只能恢复出厂设置，于是只能折腾了一晚上软件，幸好之前在<a href="https://github.com/pseudoyu/yu-tools">工具箱项目</a>中有过记录，但所有权限/应用都要重新设置也很痛苦，幸好最终还是解决了，总觉得这也是一件迟早要做的事。</p>
<p>另一部手机是 OnePlus 7 Pro，好几年前买的了，也是一到手就折腾刷了海外版氧 OS 来使用 Google 全家桶，可能国内厂商和一些服务已经让我到了有些精神洁癖的地步了。</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://hackmd.io/@zV4fWkDaSii_Wz7rS5R5SQ/S1sjKhKUi">Dapp 状态去哪了 - HackMD</a></li>
<li><a href="https://tieshunroquerre.com/blog/douyin">How Douyin Bootstrapped Its Flywheel</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=FcZIdh-MRNQ">对话 RSS3 创始人 Joshua：从 ChatGPT、AI 与 Web3、Web3 Social、Open Web 概念到 RSS3 发展思路【Rex Talk】</a></li>
<li><a href="https://www.youtube.com/watch?v=BdHaeczStRA">Microsoft vs Google: AI War Explained | tech news</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ls4y1b7UE">我们是倦怠的一代人，对内剥削自我，对外孤立自我</a></li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p>因为要去武汉，所以把捏捏寄养到了学姐家，自己就没拍什么照片，倒是因为她待得有点乐不思蜀了，我还拍了张在武汉的咖啡馆抱别的小猫的照片给她看：</p>
<p><img src="https://image.pseudoyu.com/images/yu_hug_other_cat.jpg" alt="yu_hug_other_cat"></p>
<p>然后她惬意躺在新家沙发上，一副 Who Cares 的样子：</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_with_boyi.jpg" alt="nie_nie_with_boyi"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_and_other_cat.png" alt="nie_nie_and_other_cat"></p>
<p>这只没良心的小猫。</p>
]]></content:encoded></item><item><title>周报 #31 - 开源、前端开发与 ChatGPT 实践</title><link>https://www.pseudoyu.com/en/2023/02/20/weekly_review_20230220/</link><pubDate>Mon, 20 Feb 2023 21:51:11 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/20/weekly_review_20230220/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2023-02-13 到 2023-02-20 这周生活的记录与思考。 这一周工作和各种自己的项目安排异常满，虽然其实也不是真的忙到一点睡</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-13</code> 到 <code>2023-02-20</code> 这周生活的记录与思考。</p>
<p>这一周工作和各种自己的项目安排异常满，虽然其实也不是真的忙到一点睡觉的时间都没有，但是因为有了很多莫名的焦虑感和低迷情绪，导致常常有些报复性熬夜的倾向，看了看手机给我记录的每天平均睡眠不足 3 小时。</p>
<p>这周情人节被豆瓣电影日历触发了一些心绪，想到了一些过去的事；下定决心折腾了一下买了 ChatGPT Plus，配合上 GitHub Copilot，节省了很多重复性的工作；因为最近一直在折腾这个，还去博译学姐的财经直播间里科普了一个小时 AIGC 和 ChatGPT，直播首秀，很新奇的体验；周末因为实在太压抑，和朋友去跳海酒馆喝了点酒，是难得的放松时刻；之前的 Side Project 疯狂拖延，到了周末几乎通宵两天，疯狂写前端；参加了 Cusdis v2 的开发团队，也写了第一个功能，作为一个后端给第一个比较大的开源项目提的 PR 居然是 Next.js 的，有点离奇；还有很多有意思的事。</p>
<h2 id="开源与前端学习">开源与前端学习</h2>
<p>虽然自己好像还是挺活跃在 GitHub、推特和博客的，但是因为其实工作年限比较短，而且当前工作也还并不是开源性质的，所以其实并没有怎么以代码贡献的方式参与过什么大型的开源项目，倒是几个 Markdown 和课程作业项目拿了不少 star，让我常常有些不太好意思。</p>
<p>所以今年年初也还是立了一些 Flag，多多以各种形式参与一些自己感兴趣的开源项目，包括在上周自己还给自己定了一个开源预算（详见『<a href="https://www.pseudoyu.com/en/2023/02/12/weekly_review_20230212/">周报 #30 - 开源预算、写作初心与对技术的谦卑</a>』），也给 RSS3 提了一些 Issues，算是一个好的开始了。</p>
<p>有一个挺有意思的事是看到 <a href="https://lutaonan.com/">Randy</a> 在推特上找一起开发 Cusdis v2 版本的伙伴，我用 <a href="https://cusdis.com/">Cusdis</a> 已经接近两年了（即本博客的评论系统），非常喜欢这样简约且强大的系统，也帮一些朋友创建或是解决了一些部署和使用的问题，也差不多是移动的广告牌了。</p>
<p>虽然我不是前端，但因为太感兴趣了还是加了 TG 聊了一下，Randy 真的是个很纯粹的技术人，也很友好，我简单陈述了自己的情况和想法后，他让我先拉一下最新代码，能跑起来再聊（顿时有点面试的感觉）。</p>
<p>我粗略看了一下代码结构与命令，因为之前写 Solidity 一直用的是基于 JavaScript 的 Hardhat 框架，而后面学前端的时候也了解了 TypeScript，所以对包安装管理、一些基础命令还是比较熟悉的，只是从 yarn 换成了 pnpm，折腾了一下环境，在服务器上用 Docker 启动了一个 PostgreSQL 实例，就运行起来了（后来发现其实本地 sqlite 就可以了，不用绕那么大一圈）。</p>
<p>然后就是让我看了一下现在的基础功能，看看对哪一块比较感兴趣，于是我开始慢慢看代码，并且还提了一些 v1 版本的 Bug 给他（迅速都修复了，强大的执行力），接着工作项目很忙，就没开始写，但是期间看了一本 Randy 写的 Next.js 开发的小书:</p>
<ul>
<li><a href="https://nextjs-in-action-cn.taonan.lu/">Next.js 应用开发实践</a></li>
</ul>
<p>这本书真的超级好，是我写 Next.js 以来在代码实践上讲得最清楚的资料了，其中有 Query、Mutation 和通过 Query Invalidation 来强制刷新数据等最佳实践，也推荐了 Prisma 这个超好用的 ORM 库，前面的理论讲解很清晰易懂，后面还附了两个实例项目，非常值得一看。</p>
<p><img src="https://image.pseudoyu.com/images/side_project_api_structure.png" alt="side_project_api_structure"></p>
<p>看完这本书后，我废弃了做了一半的 Side Project 的 Go 后端，花了一整个周末把后端逻辑实现部分在 Next.js 的 api 模块用 Prisma 连接 PostgreSQL 数据库的方式重构了，刚开始写的时候有些不太习惯，在用户管理和鉴权这一块一边看着那本小书的代码一边照着修改，后面的其他功能就比较顺手了，也算是一个比较完整的实践了，称赞一下 Next.js + TailwindCSS + Prisma 的组合带来了非常好的开发体验，很适合独立开发一些项目。</p>
<p>而经过了周末两天的狂写代码，对前端这一块实现上的信心也增长了不少，于是找 Randy 去领了开发任务，功能不复杂，就是使用 Mutation 实现用户保存评论提醒所需要的 Webhook 连接配置的逻辑，并且加上一些加载中状态、toast 提示等效果，但也是一个还不错的开端。</p>
<p><img src="https://image.pseudoyu.com/images/chat_with_randy_01.png" alt="chat_with_randy_01"></p>
<p>实现过程还遇到一些问题请教了他，也给了很耐心的解答。最后终于在晚上完成了这个 PR。</p>
<ul>
<li><a href="https://github.com/djyde/cusdis/pull/241/commits/914888031bc69628f061fd55a76d8c07402173a5">feat: save webhook settings logic (with loading and toast) by pseudoyu · Pull Request #241 · djyde/cusdis</a></li>
</ul>
<p><img src="https://image.pseudoyu.com/images/chat_with_randy_02.png" alt="chat_with_randy_02"></p>
<p>其实这种体验还蛮有意思的，自己在几乎没写过前端项目的时候去尝试参与开源，得到了很敬佩的开发者的帮助和引导，可能有时候主动一些也会有意料之外的收获。不过想到自己作为一个区块链后端开发，加入的第一个比较大的开源项目和提的第一个功能性 PR 居然是前端的，也是奇妙的体验了。</p>
<p>大家有兴趣可以尝试一下 <a href="https://cusdis.co">Cusdis</a>，之前也写过一篇部署介绍的文章可以参考：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway） · Pseudoyu</a></li>
</ul>
<h2 id="chatgpt">ChatGPT</h2>
<p>自己最早就是 GitHub Copilot 内测玩家，第一次用上就惊叹不已，原来 AI 在代码这一块就已经能做到这样的程度了，后面也持续在使用，大概也有一年多了；后来也同样高频用到的是 DeepL 的机器翻译，质量感觉比 Google 翻译好很多，也辅助我完成了很多开源的翻译项目；再之后就是 Notion AI 了，不过因为后来完全从 Notion 转移到了 Logseq，所以尝了个鲜就搁置一旁了；同类的还有之前黑五买的 Craft，一个在线笔记软件，也内置了小助手来优化文本；而最最重磅级的当属去年年末推出的 ChatGPT 了。</p>
<p>我记得约 11 月底推出，我在 12 月初找在澳洲的倪接了个手机验证码开始体验了。当时就常常用来问一些代码问题，基本上都能给出比较准确的回答，但由于自己其实还是更偏向于 GitHub Copilot 这种比较无感的方式，而并不想每次都组织一堆语言去问问题，再粘贴代码回来编辑，所以玩了一阵子其实也就搁置了，只是在学一些新技术的时候偶尔打开看看。</p>
<p><img src="https://image.pseudoyu.com/images/chatgpt_assistant_usage.png" alt="chatgpt_assistant_usage"></p>
<p>而上周偶然看到<a href="https://twitter.com/hzlzh">自力</a>使用 ChatGPT 作为小助手的用法，很心动，经过一番虚拟信用卡之类的折腾终于搞定了 Plus 会员，20 美元一个月的的不菲开销让我开始梳理自己的日常使用需求，最后把编程代码问题、日语学习、中英翻译、搜索引擎、文案优化等需求分成了多个对话框进行使用，每天像是有一堆小助手一样，可热闹。</p>
<p>最近有不少写前端的事，之前虽然也看过课学习过，但是还是有很多细节不算很清楚，这时候面向 ChatGPT 提问和从它的回答中过滤正解以及消化为自己的知识其实也还蛮有效的，而且很偏实战，也会提出不少新颖的实现思路，语言学习应该也是同理，但还没来得及好好测试日语学习的效果，后面如果有意思可以记录一下对话。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://nextjs-in-action-cn.taonan.lu/">Next.js 应用开发实践</a></li>
<li><a href="https://www.piglei.com/articles/programming-is-still-hard-after-14-years/">入行 14 年，我还是觉得编程很难 | Piglei</a></li>
<li><a href="https://hayami.typlog.io/bullshitjobs">马桶里的大厂病 - hayami&rsquo;s blog</a></li>
<li><a href="https://newsletter.replay.cafe/re-play-25-lang-man-zhi-si/">Re:Play Issue 25 - 浪漫至死</a></li>
<li><a href="https://fortelabs.com/blog/the-4-levels-of-personal-knowledge-management/">The 4 Levels of Personal Knowledge Management - Forte Labs</a></li>
<li><a href="https://newsletter.pragmaticengineer.com/p/real-world-eng-8">Real-world Engineering Challenges #8: Breaking up a Monolith</a></li>
<li><a href="https://tom.preston-werner.com/2010/08/23/readme-driven-development.html">Readme Driven Development</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录了一些自己在听的播客：</p>
<ul>
<li><a href="https://www.xiaoyuzhoufm.com/episode/63146f53e50e37575adb1cbe">ep.2 跳海酒馆：世界在下沉，我们要建造 - 牌牌坐 | 小宇宙</a></li>
<li><a href="https://www.listennotes.com/zh-hans/podcasts/%E6%9E%AB%E8%A8%80%E6%9E%AB%E8%AF%AD/vol-84-%E6%95%B0%E7%A0%81%E8%8D%94%E6%9E%9D-%E6%AD%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E7%94%9F%E6%80%81%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E4%B8%8E%E8%BF%9C%E7%A8%8B%E5%8A%9E%E5%85%AC-Y-Uq0g5CrZM/">Vol. 84 数码荔枝: 正版软件生态、独立开发与远程办公 - 枫言枫语 (播客) | Listen Notes</a></li>
<li><a href="https://www.listennotes.com/zh-hans/podcasts/%E7%A7%91%E6%8A%80%E4%B9%B1%E7%82%96/chatgpt%E7%9A%84%E5%87%BA%E5%9C%88%E4%B8%8E%E5%A4%A7%E4%BD%AC%E4%BB%AC%E7%9A%84%E7%84%A6%E8%99%91-WgOpJNm435Z/">ChatGPT 的出圈与大佬们的焦虑 - 科技乱炖 (播客) | Listen Notes</a></li>
<li><a href="https://www.listennotes.com/podcasts/%E4%BA%8C%E5%88%86%E7%94%B5%E5%8F%B0/20-%E4%B8%80%E5%B9%B4%E4%B8%80%E5%BA%A6%E8%B4%A5%E5%AE%B6%E8%8A%82%E7%9B%AE-2022-Wz84cHdvN-u/">#20 一年一度败家节目 2022 - 二分电台 (podcast) | Listen Notes</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1PG4y1P7vm/">情人节 8.0｜音乐，是世界上最通用的情书</a></li>
<li><a href="https://www.bilibili.com/video/BV1JA411z7KM/">你离爱情只差一句骚话，教你正确使用爱情骚话</a></li>
<li><a href="https://www.youtube.com/watch?v=ng438SIXyW4">How I Coded An Entire Website Using ChatGPT - YouTube</a></li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="跳海酒馆">跳海酒馆</h3>
<p><img src="https://image.pseudoyu.com/images/sea_bar_outside.jpg" alt="sea_bar_outside"></p>
<p><img src="https://image.pseudoyu.com/images/sea_bar_wine.jpg" alt="sea_bar_wine"></p>
<p>周末和朋友去了跳海酒馆，一个在胡同里的小小的酒吧，拥挤但算不上嘈杂，却别有一番热闹，里面写着大大的“有人跳海”四个字。和恰巧来北京出差的朋友畅聊了很久，连这周带着些阴霾的情绪也缓解了不少，新的一周也要好好调整。</p>
<h3 id="捏捏">捏捏</h3>
<p><img src="https://image.pseudoyu.com/images/my_lovely_nie_nie_01.png" alt="my_lovely_nie_nie_01"></p>
<blockquote>
<p>去『跳海酒馆』喝了点酒，到家已经大概 1 点，没多久就昏睡过去。刚迷迷糊糊睁眼发现捏捏似乎凑在我的脸上努力闻着什么，时不时还用小爪子试探性地碰一下，脑子（重启后）转了好一会儿才反应过来她是在担心我是不是还活着。黑暗中慌忙打开手机抓拍了一张，顿时感受到了些许久违的温暖和依靠。</p>
</blockquote>
<p><img src="https://image.pseudoyu.com/images/my_lovely_nie_nie_02.png" alt="my_lovely_nie_nie_02"></p>
<blockquote>
<p>她一定知道自己很可爱！</p>
</blockquote>
<h3 id="情人节">情人节</h3>
<p><img src="https://image.pseudoyu.com/images/valentine_douban.png" alt="valentine_douban"></p>
<p>不得不说豆瓣电影日历的选片人还是有点心思的，情人节放花束般的恋爱，然后配上一句：</p>
<blockquote>
<p>恋爱就像派对，总有一天会结束。</p>
</blockquote>
]]></content:encoded></item><item><title>周报 #30 - 开源预算、写作初心与对技术的谦卑</title><link>https://www.pseudoyu.com/en/2023/02/12/weekly_review_20230212/</link><pubDate>Sun, 12 Feb 2023 19:41:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/12/weekly_review_20230212/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2023-02-07 到 2023-02-12 这周生活的记录与思考。 这一周工作上不算有太多进展，却感觉年后的时间感觉过得尤其快，明明好</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-07</code> 到 <code>2023-02-12</code> 这周生活的记录与思考。</p>
<p>这一周工作上不算有太多进展，却感觉年后的时间感觉过得尤其快，明明好像也没做什么有价值的事，却处于一种忙碌之中。但额外的项目部分终于开始投入不小的时间在处理了，离原本的预期有些偏差，也带来了一些焦虑，算是在慢慢排解。</p>
<p>这周受公司运营之托写了一篇关于 Cosmos 的文章，在写作和发布过程中倒是有些心态上的警醒，也引发了自己对于写作初心与对技术的谦卑的一些思考。</p>
<p>周末去了国家大剧院听了场音乐会，之前一直想听交响乐不过少有机会，终于解锁了周末新去处；周末和我目前评论系统 <a href="https://cusdis.com/">Cusdis</a> 的作者 <a href="https://lutaonan.com/">Randy</a> 聊了一下（顺便报了几个 bug），感觉是个很纯粹的技术人，希望在 Cusdis v2 版本的开发中自己也能有所贡献；还有很多有意思的事。</p>
<h2 id="开源预算">开源预算</h2>
<p>在 <a href="https://lutaonan.com/">Randy</a> 的一篇文章『<a href="https://lutaonan.com/blog/my-oss-donation-budget/">我给自己设立了每月 $20 的开源捐赠预算</a>』中看到他对于开源项目的理念与态度，觉得很有意思，也引发了我想为自己也设立一个同样的开源预算的想法。</p>
<p>目前的设定是每月至少 $20（约 130 元人民币）或等价值的预算，根据自己的日常使用与技术栈灵活选择，我会选择以下项目进行捐赠：</p>
<ul>
<li>对我有启发的独立博客作者与开发者</li>
<li>我在做 side projects 时常用且解决了很切实问题的项目</li>
<li>我高频使用的一些有趣的开源工具与服务</li>
</ul>
<p>目前我捐赠的项目为：</p>
<ul>
<li><a href="https://github.com/reorx">Reorx</a>，一个我很欣赏的开发者，他的独立博客、对于工具的态度与探索以及开发的一些项目都让我获益良多，我的『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』频道就是 fork 于他的『<a href="https://t.me/reorx_share">Reorx’s Footprints</a>』，在大半年的时间里重塑了我的信息输入输出流，最近刚发布的『<a href="https://github.com/reorx/jsoncv">GitHub - jsoncv</a>』也恰好在我重构简历时帮了大忙。</li>
<li><a href="https://github.com/immersive-translate/immersive-translate">immersive-translate</a>，是 <a href="https://www.owenyoung.com/">owen</a> 主导开发的一款沉浸式翻译插件，是一个很有趣的工具，且 owen 在非常勤劳地开发 v2 版本，我早早加入了团队，目前也在认领一些需求进行开发，在团队讨论得知需要一些服务器时，提供了两台。</li>
</ul>
<p>可以在 <a href="https://github.com/pseudoyu?tab=sponsoring">GitHub Sponsor</a> 看到我对哪些项目和个人进行了捐赠。</p>
<h2 id="写作初心">写作初心</h2>
<p>自己其实一直以来还算喜欢写作，尤其是这大半年的输出达到了还不错的频率和质量，因为长期写博客也认识了不少朋友，甚至偶尔也能得到一些不错的机会。但随着自己的文字功底随着积累增长，也常常得到一些挺正向的反馈，却似乎有时候会陷入一种写作的陷阱。最近发生的一件事让我有些警醒。</p>
<p>公司的媒体运营在年前跟我约了一篇稿件，主题并不限制，大致方向是有关公司业务技术的就可以，因为当时时间还多，就先应承了，但过年期间也就搁置了。回北京返工后被催稿时才记起，但又不想很敷衍了事，所以选择了一个 Cosmos 底层链和共识分析的大主题，花了一晚上写完了。</p>
<p>其实交稿时还没什么，因为大部分知识点也是出自于对一本书籍的梳理总结，想着可能只会是一些细节微调，然而交到一位精于底层链的 leader 手上审核时，却有了如下对话。</p>
<p><img src="https://image.pseudoyu.com/images/zgtech_cosmos_article_review_kai.png" alt="zgtech_cosmos_article_review_kai"></p>
<p>查看了用于审稿的分享链接，发现他在我的文章一些存疑的细节中做了十分详尽的标注，很多部分还带论文与引用。</p>
<p><img src="https://image.pseudoyu.com/images/zgtech_cosmos_article_review_3.png" alt="zgtech_cosmos_article_review_3"></p>
<p>起初只是觉得，自己是不是有些过于盲目相信所读的书籍与知识点了，而少了一些应有的怀疑与求证精神。</p>
<p>又深思了一下整件事发生的全过程，发现是自己的心态产生一些微妙的改变。自己似乎一直以来是挺擅长驾驭文字的，有时候是梳理总结一些知识点并以一种易读有趣的方式呈现，有时候是通过文字表达和呈现自己的一些想法与思考。</p>
<p>文字似乎成为了自己习惯的表达方式，也因为有了不少正向反馈，所以似乎有一些失了本心。写作本身源于对生活与一些事物、技术的探究与呈现，其次才是分享与为他人创造价值，自己似乎慢慢有些把分享这件事作为了一种目的。</p>
<p>论语中有一句话：</p>
<blockquote>
<p>“质胜文则野，文胜质则史。文质彬彬，然后君子。” —— 《论语·雍也篇》</p>
</blockquote>
<p>其实蛮适用于写作的。当质（写作中的干货）太多而文（文采/技巧）太少，则少了一些吸引人看下去的乐趣，也失去了写作的魅力；而文胜过质则容易虚浮，缺乏实质性的内容，则失去了写作的意义。只有文和质兼具，才可以说是一篇好的文章。</p>
<p>我想我或多或少会担心自己向文胜过质的方向倾斜，好在有这次的事及时警醒，后面也会更加谨慎对待自己的文字。</p>
<h2 id="对技术的谦卑">对技术的谦卑</h2>
<p>这其实又关联到一个挺值得探讨的话题，即对技术的谦卑之心。</p>
<p>我想处于这个行业的人或多或少都能意识到技术的无止境，编程入门或是以之为业其实只是一个开始，有太多值得敬佩的人，也有太多有趣的技术。</p>
<p>我其实是带着滤镜进入这个行业的，在还是一个英语专业本科生的时候对这个行业和职业充满了太多幻想与期待，因此如愿从事了开发工作后，就时常提醒自己一定要对技术有着谦卑之心。</p>
<p>因为看到了太多前后端都很强的开源大佬称自己为“会写一点后端的前端”或是“做点大家喜欢的小玩意”，很喜欢这样的态度，技术本身是乐趣与实现自己想法的一些手段，而不是需要拿出来炫耀的工具，对技术需要抱有这样的一种理念，才能不断学习成长。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="软件">软件</h3>
<p>之前自己其实一直用 Apple Music 居多，但是有些操作逻辑实在是有点无语，歌单功能形同虚设，而且由于接口的一些封闭性，很难获取自己的数据。因此，即使我的 Telegram 频道其实原本就配置了 Spotify 点赞歌曲的自动同步，每次都是在 Apple Music 听到好听的歌后，去 Spotify 搜索，且由于免费版本的广告和试听切歌限制等很麻烦，所以其实很少同步自己的一些歌。</p>
<p><img src="https://image.pseudoyu.com/images/spotfiy_service_family.png" alt="spotfiy_service_family"></p>
<p><img src="https://image.pseudoyu.com/images/spotfiy_service_family_mail.png" alt="spotfiy_service_family_mail"></p>
<p>最近和倪、占的 iCloud Family 正在迁移逃离云上贵州，停掉了原本的服务，对比了一下港区价格发现还不如直接迁移到 Spotify 了，于是快乐地拥有了 Spotify Premium 了，体验起来舒服很多了，再加上之前看了『<a href="https://movie.douban.com/subject/35500137/">串流先锋</a>』剧集，总有一种奇妙的参与感！</p>
<p>再加上占在香港办宽带送的 Netflix 家庭会员，影音娱乐这一块现在有了很无缝的体验！</p>
<h3 id="输入">输入</h3>
<p>虽然大部分有意思的输入会在 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』Telegram 频道里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<h4 id="文章">文章</h4>
<ul>
<li><a href="https://www.tisonkun.org/2023/02/05/hackers-and-customers/index.html">黑客与顾客：开源软件能商业化吗？ | 夜天之书</a></li>
<li><a href="https://foxhsiao.medium.com/chatgpt-%E6%98%AF%E7%B6%B2%E8%B7%AF%E4%B8%8A%E7%9A%84%E4%B8%80%E5%80%8B%E6%A8%A1%E7%B3%8A%E7%9A%84jpeg%E6%96%87%E4%BB%B6-aaee3723db1f">ChatGPT 是網路上的一個模糊 JPEG 文件</a></li>
<li><a href="https://coolshell.cn/articles/22398.html">我看 ChatGPT: 为啥谷歌掉了千亿美金 | 酷 壳 - CoolShell</a></li>
<li><a href="https://fortelabs.com/blog/the-4-levels-of-personal-knowledge-management/">The 4 Levels of Personal Knowledge Management - Forte Labs</a></li>
<li><a href="https://arxiv.org/pdf/1807.04938.pdf">The latest gossip on BFT consensus - Tendermint</a></li>
<li><a href="https://arxiv.org/pdf/1803.05069.pdf">HotStuff: BFT Consensus in the Lens of Blockchain</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>记录了一些自己在听的播客：</p>
<ul>
<li><a href="https://www.listennotes.com/podcasts/%E8%BE%B9%E8%A7%92%E8%81%8A/10-%E6%83%85%E4%BA%BA%E8%8A%82%E5%89%8D%E8%AE%A9%E6%88%91%E4%BB%AC%E5%9B%9E%E9%A1%BE%E6%81%8B%E7%88%B1%E6%97%A5%E5%89%A7%E7%9A%84%E9%BB%84%E9%87%91%E6%97%B6%E4%BB%A3-mCUhvzVsEi7/">10. 情人节前，让我们回顾恋爱日剧的黄金时代 - | Listen Notes</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV14s4y1Y7nu">你对 AI 的理解可能从根儿上就错了【关于 AI 的一些元问题】</a></li>
<li><a href="https://www.bilibili.com/video/BV1WM411Y7Jk">功绩社会生产抑郁症患者和厌世者？</a></li>
<li><a href="https://www.bilibili.com/video/BV1WD4y1N7jJ/">公开呼吁取关？！一条视频席卷全国，衣戈猜想走红真的是偶然吗？</a></li>
<li><a href="https://www.bilibili.com/video/BV15Y411B7Jt">我办的音乐比赛炸出了这么多大佬? [图一乐作品 PICK]</a></li>
<li><a href="https://www.bilibili.com/video/BV1i8411T7cn">重启 20 年前的索尼监视器和游戏主机，需要几步？</a></li>
</ul>
<h3 id="输出">输出</h3>
<h4 id="博客">博客</h4>
<ul>
<li><a href="https://www.pseudoyu.com/en/2023/02/10/cosmos_introduction_and_explaination/">Cosmos 区块链架构与 Tendermint 共识机制 · Pseudoyu</a></li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="生活">生活</h3>
<p>这周大部分时间在公司，所以格外期待周末的到来。</p>
<p>周六的时候和博译学姐去国家大剧院听了一场贝多芬的音乐会，之前我总是会去三里屯那边的爱乐汇轻音乐团去听一些小型的主题演出，像是宫崎骏、爱乐之城与百年经典等专题，小小的空间气氛很好，不过当时就也想着感受一下交响乐的震撼，终于得偿所愿！</p>
<p><img src="https://image.pseudoyu.com/images/beethoven_symphony_concert_ticket.jpg" alt="beethoven_symphony_concert_ticket"></p>
<p><img src="https://image.pseudoyu.com/images/beethoven_symphony_concert_live.jpg" alt="beethoven_symphony_concert_live"></p>
<p>很有意思的是看完音乐会出来后就买了莫扎特的胸针（谁让他更可爱），还发表了如下茶言茶语。</p>
<p><img src="https://image.pseudoyu.com/images/beethoven_symphony_concert_tweet.png" alt="beethoven_symphony_concert_tweet"></p>
<blockquote>
<p>今日份茶言茶语。“刚听完贝多芬专场音乐会转头就买了莫扎特的胸针，他会不会伤心啊？”</p>
</blockquote>
<p>在发完推后还很巧合地认识了相同时空同在国家大剧院的推友 <a href="https://twitter.com/Noy_eth">Noy</a>，发现也是做 web3 开发相关的，周末也爱去看一些剧和音乐会，约了面基，之后可以一起去看了！</p>
<p>还有一个小惊喜就是我们在大剧院落座路过一个外国帅哥时，他说了一句“I love his hair”，来自陌生人的友好就很开心。现在顶着一头蓝色长发真的越来越二次元了，回头率 300%。</p>
<h3 id="捏捏">捏捏</h3>
<h4 id="叫我起床的捏捏">叫我起床的捏捏</h4>
<p>因为我不起床开罐头而直接爬上被子给我一拳的捏捏。</p>
<p><img src="https://image.pseudoyu.com/images/my_very_cute_nie_nie_on_bed_01.jpg" alt="my_very_cute_nie_nie_on_bed_01"></p>
<p><img src="https://image.pseudoyu.com/images/my_very_cute_nie_nie_on_bed_02.jpg" alt="my_very_cute_nie_nie_on_bed_02"></p>
<h4 id="撒娇的捏捏">撒娇的捏捏</h4>
<p>最近捏捏又特别会撒娇，经常在桌子上歪头杀。</p>
<p><img src="https://image.pseudoyu.com/images/my_very_cute_nie_nie_on_mac_01.jpg" alt="my_very_cute_nie_nie_on_mac_01"></p>
<p><img src="https://image.pseudoyu.com/images/my_very_cute_nie_nie_on_mac_02.jpg" alt="my_very_cute_nie_nie_on_mac_02"></p>
<p>跟朋友分享后，捏捏以一猫之力拉高了别人家的小猫吃猫粮的标准，哈哈。</p>
<p><img src="https://image.pseudoyu.com/images/my_very_cute_nie_nie_on_mac_tg_chat.png" alt="my_very_cute_nie_nie_on_mac_tg_chat"></p>
]]></content:encoded></item><item><title>Cosmos 区块链架构与 Tendermint 共识机制</title><link>https://www.pseudoyu.com/en/2023/02/10/cosmos_introduction_and_explaination/</link><pubDate>Fri, 10 Feb 2023 20:00:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/10/cosmos_introduction_and_explaination/</guid><description>前言 工作中我主要参与的是跨链项目的方案架构设计与实现，因为公司既有方案是基于 Cosmos 区块链的，我在一年多的项目中基于 Cosmos SDK 作了一些底层链开发改造，对</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/cosmos_introduction_and_explaination_photo.png" alt="cosmos_introduction_and_explaination_photo"></p>
<p>工作中我主要参与的是跨链项目的方案架构设计与实现，因为公司既有方案是基于 Cosmos 区块链的，我在一年多的项目中基于 Cosmos SDK 作了一些底层链开发改造，对其技术实现有了一些了解，但由于开发周期比较赶，一直没能对 Cosmos 的架构设计与 Tendermint 共识机制有一个系统的了解。</p>
<p>项目结束后，终于得闲读了一下《区块链架构与实现：Cosmos 详解》，本文则是我自己对 Cosmos、Tendermint 的理解和总结。</p>
<h2 id="区块链技术发展">区块链技术发展</h2>
<p>在讲具体的 Cosmos 区块链之前，我们先梳理一下区块链发展的历程，以及目前业界主流的区块链技术。</p>
<h3 id="技术限制">技术限制</h3>
<p>区块链发展至今已经有十几年的历程，从最开始的比特币，到红极一时的 EOS，再到后来渐渐成为主流的以太坊，各有特色却也都有其限制之处。</p>
<ul>
<li>基于比特币或以太坊的方式由于需要实现 p2p 网络、密码学、共识算法等，需要相对比较高的技术门槛；</li>
<li>基于 PoW（工作量证明）机制的底层链对于算力（电力）消耗也越来越大，对于资源与环境并不友好；</li>
<li>随着链上应用数量与规模的不断增加，链的性能瓶颈越来越明显；</li>
<li>随着业务场景复杂度提升与需求不断增加，链的共识算法也需要根据具体场景而变化；</li>
<li>不同链的底层架构差异较大，不同链之间也是孤岛，难以互相通信，跨链技术方案落地也是一个难题。</li>
</ul>
<h3 id="技术发展">技术发展</h3>
<p>为了解决上述问题，业界也有不少的技术方案。</p>
<ul>
<li>由于 PoW 对于资源的大量消耗，许多链采用了 PoS（权益证明）机制，如 EOS 的 DPoS 与以太坊刚升级不久的 PoS，发展也日益成熟；</li>
<li>为了解决底层链限制问题，从类似比特币这样为单个应用构建单独链的模式也渐渐发展到了利用智能合约构建 ÐApp；</li>
<li>对于性能限制问题，比特现金采用了增加区块容量的方案，EOS 采用提升 TPS 的方案（号称百万 TPS），而以太坊则通过分片（Sharding）的方式对链上交易进行并行处理；</li>
<li>跨链技术方面，哈希锁定（散列锁）的方式在比特币与 Algorand 项目中有应用，除此之外还有公证人、中继链等方案。</li>
</ul>
<h2 id="cosmos-区块链框架">Cosmos 区块链框架</h2>
<h3 id="概述">概述</h3>
<p>Cosmos 是一个由 Tendermint 公司开发构建的开源区块链底层框架项目，其目标是为了解决区块链技术发展过程中遇到的各类问题，提供一个高性能、高可扩展、易于开发的区块链框架，其开源地址如下：</p>
<ul>
<li><a href="https://github.com/cosmos/cosmos">GitHub - cosmos/cosmos: Internet of Blockchains</a></li>
</ul>
<p>Cosmos 可以看作一种多链网络，旨在实现“互链网”远景，而 Tendermint 和 Cosmos SDK 则是其技术手段与实现路径。</p>
<p>对于资源消耗与交易问题，Cosmos 采用了 BFT（拜占庭容错） + PoS（权益证明）的方式来解决；同时，为了降低区块链搭建与基于区块链的应用开发门槛，Cosmos 采用了较为通用的项目构建方式，使基于 Cosmos 进行链开发更加模块化与工程化，其主要由 Tendermint Core、IBC、Cosmos SDK 三部分组成。</p>
<h3 id="cosmos-sdk-组件">Cosmos SDK 组件</h3>
<p>虽然名称叫作“SDK”，容易引起一些误解，认为其仅仅是与链交互的一个库/组件，但其实 Cosmos SDK 可以说是一个完整的架构，开发者可以通过其来快速搭建自己的区块链，是 Cosmos 生态体系中的重要组成部分的。其开源地址如下：</p>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk">GitHub - cosmos/cosmos-sdk: A Framework for Building High Value Public Blockchains</a></li>
</ul>
<p>Cosmos SDK 主要实现了区块链中的一些通用模块，如账户体系、交易、链上治理等，开发者又可以便捷地基于其快速构建新的功能模块。</p>
<p>其主要模块如下：</p>
<ul>
<li>账户与交易相关模块
<ul>
<li>auth：系统账户管理</li>
<li>bank：链上资产转移</li>
</ul>
</li>
<li>辅助功能模块
<ul>
<li>genutil：创世区块</li>
<li>supply：资产总量管理</li>
<li>crisis：所有模块不变量管理</li>
<li>params：所有模块的参数管理</li>
</ul>
</li>
<li>链上治理模块
<ul>
<li>gov：链上治理机制</li>
<li>upgrade：链升级</li>
</ul>
</li>
<li>PoS 模块
<ul>
<li>staking：链上资产抵押</li>
<li>slashing：对验证者的被动作恶进行惩罚</li>
<li>evidence：对验证者的主动作恶进行惩罚</li>
<li>mint：链上资产铸造</li>
<li>distribution：区块奖励管理</li>
<li>IBC 协议模块</li>
<li>ibc/core：跨链通信功能</li>
</ul>
</li>
</ul>
<p>可以看到，Cosmos SDK 框架设计出于 Object-Capability Model 安全理念的考量，设计高度模块化，每个模块都有自己的存储空间且对外仅暴露必要接口。</p>
<p>Cosmos SDK 中有一个特定的 Keeper 角色，用于维护更新状态。通过这种管理方式，模块之间彼此隐藏了具体实现细节，而仅仅通过 keeper 来互相调用，且每个模块内部也都只会被 keeper 进行更新，有效保障了链上状态的一致性。</p>
<h3 id="tendermint-组件">Tendermint 组件</h3>
<p>Tendermint 是 Cosmos 的核心组件，是一个高性能的区块链底层共识引擎，从架构上来说，其主要分为对等网络通讯层、共识协议层与上层应用层三大部分，其中共识协议层是其关键部分。</p>
<p>Tendermint 在共识时并不关心具体交易细节，而只是将交易当作字节打包成区块，然后通过各节点之间的的机制达成共识。其要求上层应用状态更新为确定性过程，即从相同初始状态开始，在全网环境下交易顺序达成一致（即对于一个序列的消息所有的正常节点都会以相同的顺序进行处理），上层应用的状态在全网之间也应保持一致，区块链会包含上层应用的数字指纹来进行验证。</p>
<p>Tendermint 共识可以支持在上百个节点规模的区块链网络中实现秒级出块，其提供了逐块最终化（Finality）的特性，即一个块确认后可以保障其之前的所有块都不会被修改，保障了区块链网络安全性。</p>
<p>区块提交后，Tendermint 共识协议层通过 ABCI（应用层与共识层交互所抽象出来的接口）与上层进行互动，完成交易处理并返回结果。其将区块执行过程划分为多个步骤，上层应用拥有自主权来定义业务交互逻辑，通过特定接口进行开发与实现（如可以实现筛选验证者逻辑或复用 Tendermint Core 的共识协议与对等网络通信来实现链业务需求）。</p>
<p>关于 Tendermint 共识算法具体机制可以阅读以下论文进行了解：</p>
<ul>
<li><a href="https://arxiv.org/pdf/1807.04938.pdf">The latest gossip on BFT consensus - Tendermint</a></li>
</ul>
<p>其特有的一些机制带来了区块链共识过程中的显著优势。</p>
<p>首先，Tendermint 源于 PBFT SMR（State Machine Replication）算法，但对其机制进行了简化，其共识主要基于区块而不是用户请求，并且在机制上将 PBFT 常规流程与视图切换流程进行了统一，使其更容易理解与实现。</p>
<p>它提供了坚实的基础设施与良好的用户体验，是较早能够支持在上百个节点规模的区块链网络中支持秒级出块的底层，同时也通过逐块最终化（Finality）的方式确保之前的所有块都不会被修改，保障区块链网络安全性。</p>
<p>其节点之间通过 Gossip 协议进行通讯交互，不要求节点之间的全连接，而是通过 gossip 对等网络进行通信，这样可以有效降低节点之间的通讯成本，同时也可以有效提高网络的容错性。</p>
<p>Tendermint 算法实现细节与机制将在之后的系列文章中具体讲解。</p>
<h3 id="ibc-协议组件">IBC 协议组件</h3>
<p>IBC 协议属于 Cosmos SDK 中一个特殊的模块，其主要为 Cosmos 提供了区块链之间的跨链能力，其主要原理是通过密码学技术来向其他链证明自己的链上事件，可以理解为跨链双方彼此为对方的一个轻节点（轻客户端），而两条链的通讯则是通过 relayer 实现，从而实现跨链通讯/交易。</p>
<p>这一部分细节较多，且与跨链较为相关，会单独出文章进行详细讲解。</p>
<h2 id="总结">总结</h2>
<p>本文为 Cosmos 及 Tendermint 共识系列第一篇，主要介绍了区块链的技术发展、Cosmos 区块链框架中的 Tendermint 和 Cosmos SDK 等核心组件，并对 Tendermint 共识协议的原理和各机制进行了一些概述。受限于篇幅，主要以概念讲解与流程梳理为主，未涉及具体的技术实现细节与代码讲解，将会在后续的系列文章中对 Tendermint 共识算法/机制及 Cosmos SDK 代码实现进行补充。</p>
<h2 id="参考资料">参考资料</h2>
<ol>
<li>
<blockquote>
<p>《<a href="https://book.douban.com/subject/35571980/">区块链架构与实现：Cosmos 详解 - 温隆/贾音</a>》</p>
</blockquote>
</li>
<li>
<blockquote>
<p><a href="https://cosmos.network/">Cosmos: The Internet of Blockchains</a></p>
</blockquote>
</li>
<li>
<blockquote>
<p><a href="https://v1.cosmos.network/resources/whitepaper">Whitepaper - Resources - Cosmos Network</a></p>
</blockquote>
</li>
<li>
<blockquote>
<p><a href="https://www.pseudoyu.com/en/2021/09/08/blockchain_consensus/">分布式系统与区块链共识机制 · Pseudoyu</a></p>
</blockquote>
</li>
<li>
<blockquote>
<p><a href="https://tech.hyperchain.cn/cosmos-5/">走进 Cosmos 之 Tendermint</a></p>
</blockquote>
</li>
<li>
<blockquote>
<p><a href="https://tech.hyperchain.cn/cosmos-4/">走进 Cosmos 之 Cosmos SDK</a></p>
</blockquote>
</li>
</ol>
]]></content:encoded></item><item><title>周报 #29 - 日语学习经验、Steam Deck 与居酒屋</title><link>https://www.pseudoyu.com/en/2023/02/06/weekly_review_20230206/</link><pubDate>Mon, 06 Feb 2023 21:56:49 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/02/06/weekly_review_20230206/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2023-02-01 到 2023-02-06 这周生活的记录与思考。 是上班的第一周，因为过年期间也有在做一些工作，所以倒不是不适应工作</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-02-01</code> 到 <code>2023-02-06</code> 这周生活的记录与思考。</p>
<p>是上班的第一周，因为过年期间也有在做一些工作，所以倒不是不适应工作节奏，只是常常没办法自由地做自己的事，顿时觉得时间紧迫了起来。</p>
<p>开始重温日语，发现居然还记得很多，惊喜；周末追了些新剧，时隔一年第一次去电影院看了电影；拿到了期盼已久的 Steam Deck，一番配置；周一开始尝试给捏捏喂翅中（据说对毛发好），感觉胃口还不错，不挑食；时隔大半年重新整理了厨房，开始自炊生活，已经坚持到了第三天；周一出门吃了心心念的大阪烧；还有很多有意思的事。</p>
<h2 id="日语学习">日语学习</h2>
<p>因为有去日本的打算，年初立下了 flag 重温日语。上次学大概已经是六七年前了，所幸五十音和一些基础的语法还没忘记，捡起来也不算太久，不过因为这次有了考证的压力，还是重新认真学习了。</p>
<h3 id="课程资源">课程资源</h3>
<p>之前一直看的是沪江网校葉子先生的新标日初级，算是比较经典的教材了，在 B 站上有官方的录播课</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1es41127PE/">【日语课程】标日初级精讲 BY 萌萌哒葉子先生</a></li>
</ul>
<p>而最近在 Twitter 上看到了一名博主 <a href="https://twitter.com/yellow532486">Yellow</a> 的一个日语学习的 <a href="https://twitter.com/yellow532486/status/1619895028201189377">thread</a>，使用的是『大家的日语』，也提到了配套的 YouTube 教程，是一名在台湾教日语的老师，感觉很有趣，想尝试一下</p>
<ul>
<li><a href="https://www.youtube.com/@deguchi">出口日語 - YouTube</a></li>
</ul>
<h3 id="辅助资料">辅助资料</h3>
<p>关于一些单词语法学习方面，记起了当时大一的时候每天上课路上都听一个播客频道来记忆一些语法点，很有效（<del>主要是声音太好听了</del>）</p>
<ul>
<li><a href="https://podcasts.apple.com/cn/podcast/myrcella%E7%9A%84%E6%97%A5%E8%AF%AD%E8%A7%92/id875790959">《myrcella 的日语角》- Apple 播客</a></li>
</ul>
<p>因为也习惯了书 + 课程这样的学习模式，所以前期也没再找其他的辅助资源了，打算先好好打基础。</p>
<h3 id="输入法">输入法</h3>
<p>解决了学习资料的问题，接着就是输入法了，iOS 使用的就是原生输入法，不折腾了。</p>
<p>而我日常 macOS 端因为有双拼需求，使用的是 <a href="https://rime.im/">Rime 输入法</a>，并且根据通过这篇文章配置删除了系统原生的 Abc 输入法：</p>
<ul>
<li><a href="https://ssnhd.com/2022/01/01/mac-inputdel/">Mac 删除原生英文 ABC</a></li>
</ul>
<p>所以也不想因为日语输入法而新增一个系统原生，于是找了一个 Rime 适用的日语调教方案，目前体验下来很棒：</p>
<ul>
<li><a href="https://github.com/gkovacs/rime-japanese">GitHub - gkovacs/rime-japanese: 日语输入法</a></li>
</ul>
<p>使用效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/japanese_rime_input.png" alt="japanese_rime_input"></p>
<p>不过有个问题就是双拼用久了后，有时候用罗马音打字的时候也会手快打双拼，还在勉强适应中&hellip;</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="steam-deck">Steam Deck</h3>
<p>这周最开心的就是收到了挚友送的 Steam Deck 了，虽然其实 12 月就已经到货了，但是香港邮寄什么的不算方便，直到年后才拿到手，比想象得大很多，但是并不重，手感超级舒服。</p>
<p><img src="https://image.pseudoyu.com/images/yu_steam_deck_1.jpg" alt="yu_steam_deck_1"></p>
<p><img src="https://image.pseudoyu.com/images/yu_steam_deck_2.jpg" alt="yu_steam_deck_2"></p>
<p>虽然像是松鼠一样买了很多 Switch 游戏，但是自己其实一直很少玩，总是很难把游戏作为一种真正放松下来的娱乐方式，倪这么多年一直督促我玩游戏，也没什么成效，再加上后面换成 mac 后，连 steam 都已经很少打开了，这次终于让我连没有设备这个借口都没了哈哈，后面还是会有一些定期体验一些经典游戏的计划。</p>
<p>话说 Steam Deck 送的专属皮肤好酷。</p>
<p><img src="https://image.pseudoyu.com/images/steam_deck_special_frame.png" alt="steam_deck_special_frame"></p>
<h3 id="输入">输入</h3>
<h4 id="文章">文章</h4>
<p>虽然一些有意思的文章会在 <a href="https://t.me/pseudoyulife">Telegram 频道</a>里自动同步，不过还是挑选一部分在这里列举一下，感觉更像一个 newsletter 了。</p>
<ul>
<li><a href="https://tianxianzi.me/2023/01/30/good_article_2023_01/">2023-01 网络阅读总结 · 天仙子</a></li>
<li><a href="https://blog.gasolin.idv.tw/service/nostr-c4/">Nostr 介紹 | 蓋索林 Gasolin</a></li>
<li><a href="https://coolshell.cn/articles/22367.html">聊聊 nostr 和 审查 | 酷 壳 - CoolShell</a></li>
<li><a href="https://caos.xlog.app/dapp--02">DApp 构建指南 —— 02 需求业务分析 - Caos</a></li>
<li><a href="https://easonyang.com/2021/01/30/create-a-image-server/">图床服务的搭建思路</a></li>
<li><a href="https://www.unswecosoc.com/interesting-articles/1501-2/">Video Game Economies</a></li>
<li><a href="https://www.swyx.io/learn-in-public">Learn In Public</a></li>
<li><a href="https://pengx17.vercel.app/posts/my-logseq-contributions">My Story as a Logseq Contributor | pengx17</a></li>
</ul>
<h4 id="播客">播客</h4>
<p>因为这周通勤少了，所以播客听得不算多，印象比较深的是这个：</p>
<ul>
<li><a href="https://hodlong-hou-lang.simplecast.com/episodes/ep22-cn-solana-OtNe4Ybk?utm_source=listennotes.com&amp;utm_campaign=Listen%20Notes&amp;utm_medium=website">Ep.22 [CN]: Solana 沉浮录：很多的偶然与少许的必然 | HODLong 后浪</a></li>
</ul>
<h4 id="视频">视频</h4>
<p>同样的，也有记录一下看过的有意思的视频：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1rT411o71x/">人类不会感谢罗辑</a></li>
<li><a href="https://www.bilibili.com/video/BV1NT411Z7C9/">包工头米开朗基罗的痛苦一生</a></li>
<li><a href="https://www.bilibili.com/video/BV1cG4y1X7AC/">【提高审美】导演私用的 10 个 APP&amp;网站！建议收藏</a></li>
<li><a href="https://www.bilibili.com/video/BV1uG4y1U7jX/">如果你看完这个视频还想裸辞创业追梦</a></li>
</ul>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>世界尽头与冷酷仙境</strong>，在读。其实好久没有从小说中得到这样的期待感了，也许是因为叙事方式，或是因为每次都是路途中读几个小篇章而有些断续，总是想知道后面会发生些什么，却也不想太过囫囵而错过了这样优美的笔触。另外这种“另一个空间”的设定让我想到了一个古老但同样很有意思的游戏《废都物语》。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>最后生还者</strong>，之前一直耳闻过游戏，最近出了剧集，看了前两集，还不错，会继续追一下。</li>
<li><strong>三体</strong>，因为对动画太失望而开始追的剧集，意外地很不错，很喜欢于和伟。剧集的节奏有些缓慢，三体游戏的部分有时候看着也有些难熬，但整体来说还是很值得一追的，也期待奈飞版的。</li>
<li><strong>狂飙</strong>，近几年好像除了迷雾剧场以外，蛮少追这种题材的新剧了，但因为热议太多，所以还是看了一下的，没想到还是挺惊喜的。即使难免有些政治正确的妥协，也还算大胆，就是是小人物也塑造得很好，但是结局确实抽象了点。同类型更推荐的其实还是《沉默的真相》。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>深海</strong>，听说了一些并不好的评价，但可能由于是这大半年第一次进影院看的电影，有些心情的加成，觉得还挺不错的。一个小女孩的梦境，一个千与千寻般的童话世界，略带些浮夸的演绎，还算应景的 bgm（除了小白船一下让我出戏到《隐秘的角落》）。至少能看到国漫电影也尝试去探索更小更细腻的视角去呈现，而不仅仅是各种奇闻神话。</li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="生活">生活</h3>
<p>这周感觉很魔幻就过去了。年后请假了三天，返工第一天因为担心捏捏所以提前回来了，还买了一个移动摄像头；第三天因为公司楼下着火了，也提前回去了；第四天则因为项目经理和测试一起去滑雪&amp;泡温泉去了，所以我也居家了；满打满算上了两天班，不过工作也还是完成了。</p>
<p>火灾虽然没有人员伤亡，但是发生在市中心也还是挺后怕的，不过就是这种时候发现身边从家人到朋友都多少有点喜剧人了。</p>
<p><img src="https://image.pseudoyu.com/images/thursday_fire_tweet.png" alt="thursday_fire_tweet"></p>
<blockquote>
<p>我司所在大厦中午起火🔥了，到处都是浓烟，来了九辆消防车。</p>
<p>项目经理姐姐：冒着生命危险把电脑给你拿下来了（记得回去加班）。
我家人：还好电脑拿下来了。</p>
<p>电脑才是我本体吧🙃</p>
</blockquote>
<p>周末本来安排了算是不少工作量，但是因为刷《狂飙》和《三体》，效率挺高但是完成量不够，这周周中要补不少了。</p>
<p>而周日晚上因为朋友刚好在我家附近看电影，就约我一起去，没有选比较热门的《流浪地球 2》或是《满江红》，而是看了这一部《深海》，进入影院才发现已经好久没有线下看电影了，确实还是别有一些心情的加成，后面会尝试自己多去看看。</p>
<p>周一晚上去吃了我心心念了好几个月的大阪烧。</p>
<p><img src="https://image.pseudoyu.com/images/screenshot_from_silent.jpg" alt="screenshot_from_silent"></p>
<p>其实起因就是在看《静雪》时候看到他们就是爱吃各种，尤其是铁板烧大阪烧这样一看就很有食欲的，之前还跟朋友吐槽过：</p>
<p><img src="https://image.pseudoyu.com/images/some_thoughts_about_silent.png" alt="some_thoughts_about_silent"></p>
<p>但是因为天选打工人体质，一直都没阳（直到现在），年前还是不敢出门，现在已经佛了，四处吃喝玩乐。</p>
<p><img src="https://image.pseudoyu.com/images/beer_and_monday.png" alt="beer_and_monday"></p>
<blockquote>
<p>“诶 大阪烧？”</p>
<p>终于吃上了因为日剧一个画面馋了好久的大阪烧，果然打工人的周一和扎啤绝配！</p>
</blockquote>
<p>感谢博译学姐作为日常饭搭让我避免了一个人喝两杯扎啤的惨兮兮时刻，在北京的快乐玩耍时间又增加了。</p>
<p><img src="https://image.pseudoyu.com/images/osaka_yaki.jpg" alt="osaka_yaki"></p>
<p><img src="https://image.pseudoyu.com/images/osaka_yakiand_beer.jpg" alt="osaka_yakiand_beer"></p>
<h3 id="捏捏">捏捏</h3>
<h4 id="镜头下">镜头下</h4>
<p>而因为在摄像头里找不到捏捏而担心，所以后来买了一个移动监控机器人，在调试的时候偶然拍下了好几张照片，觉得好可爱，后面有摄像头也放心很多了。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_ebo_01.jpg" alt="nie_nie_in_ebo_01"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_in_ebo_02.jpg" alt="nie_nie_in_ebo_02"></p>
<h4 id="论捏捏的-mbti">论捏捏的 MBTI</h4>
<p>这周和友人有一个很有意思的话题讨论，被问到说我觉得捏捏是什么性格的，一个我从没想过但是很有意思的问题。</p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_personality_01.png" alt="nie_nie_personality_01"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_personality_02.png" alt="nie_nie_personality_02"></p>
<p><img src="https://image.pseudoyu.com/images/nie_nie_personality_03.png" alt="nie_nie_personality_03"></p>
<p>这是一个还挺有意思的命题，因为猫猫不会自己做测试，而我们眼中的她的性格也往往是日常相处下来的观察与自己的一些私心希望所塑造的，某种程度上也会是自己的各种观念的映射，很新奇的角度，其实也很久没有跟朋友有这样惬意而带着些有趣思考的聊天了，挺珍惜的。</p>
]]></content:encoded></item><item><title>周报 #28 - Mastodon、故乡与捉迷藏的猫</title><link>https://www.pseudoyu.com/en/2023/01/31/weekly_review_20230131/</link><pubDate>Tue, 31 Jan 2023 11:43:38 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/31/weekly_review_20230131/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-01-23 到 2023-01-31 这周生活的记录与思考。 这周的大部分时间是在老家度过的，弥补了一些遗憾，平淡却又珍贵。回杭后因与友人相</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-23</code> 到 <code>2023-01-31</code> 这周生活的记录与思考。</p>
<p>这周的大部分时间是在老家度过的，弥补了一些遗憾，平淡却又珍贵。回杭后因与友人相见而暂留了一天，又从杭州匆匆回到北京。到北京的家后稍放下行李就迫不及待地去同事家接回捏捏，等都差不多收拾好已经神情恍惚，简单洗漱了一下打算小睡一会儿写个周报，再一次睁眼就已经是早上 7 点了，再加上白天要通勤去公司，所以也就搁置到现在才写。</p>
<p>回来第一天就被捏捏气到，给上班第一天增加了些许惊吓，但想到又回到了这样有趣的日常便也是心安多过责备（<del>我哪敢啊</del>）；然后火速下单了一个移动摄像头，难怪朋友说我是以养女儿的方式在养捏捏了，各种不放心；还有很多其他有意思的事。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="mastodon">Mastodon</h3>
<p>这周没写什么博客，年前想折腾的几个事也没做完，但是倒是研究了一下 fediverse，觉得很有意思。</p>
<p><img src="https://image.pseudoyu.com/images/elk_zone_mastodon_yu.png" alt="elk_zone_mastodon_yu"></p>
<p>本想着把一些英文内容放到 Mastodon 上进行发布，后来想着还是把自己的输出平台收窄了，还是会在 Twitter 发布，通过 IFTTT 自动同步过去，依然聚合在 Telegram 频道和 Crossbell 链上，有兴趣的朋友可以一起来玩，我在 <a href="https://mas.to/">mas.to</a> 域的 <a href="https://mas.to/@pseudoyu">@pseudoyu@mas.to</a>。</p>
<p>有几篇关于这些很有意思的文章，读了后理解了挺多的：</p>
<ul>
<li><a href="https://zu1k.com/posts/tutorials/p2p/fediverse/">谈谈 Mastodon、Fediverse 和 ActivityPub - zu1k</a></li>
<li><a href="https://limboy.me/posts/mastodon/">什么是 Mastodon（长毛象），应该怎么玩</a></li>
<li><a href="https://wzyboy.im/post/1513.html">写给 Twitter 用户的 Fediverse 指南 | wzyboy’s blog</a></li>
<li><a href="https://research.web3caff.com/zh/archives/6024">去中心化社交网络 Mastodon 研究报告：平台与协议之争背后，它会是最终赢家吗？ – Web3Caff Research</a></li>
<li><a href="https://medium.com/@PeiLun/%E8%A8%AD%E5%AE%9A-ifttt-%E5%90%8C%E6%AD%A5-twitter-%E5%88%B0-mastodon-1010ee3798bb">設定 IFTTT 同步 Twitter 到 Mastodon. 事前準備 | by Pei-lun | Medium</a></li>
</ul>
<h3 id="crossbell">Crossbell</h3>
<p>另外，之前在这篇『<a href="https://www.pseudoyu.com/en/2023/01/09/weekly_review_20230109/">周报 #25 - 基于 Crossbell 的个人信息输出与同步系统（重构）</a>』中提到过把 Twitter 和 Telegram 历史消息同步到链的方式问题，后续也都从他们这里得到了对应方案：</p>
<ul>
<li><a href="https://lc499.xlog.app/twitter-to-crossbell">How to import tweets to Crossbell - Lemon 🍋</a></li>
<li><a href="https://lc499.xlog.app/telegram-to-crossbell">How to import telegram messages to Crossbell - Lemon 🍋</a></li>
</ul>
<p>用的时候顺便还提了几个 bug，后面再深度体验一点会整理一下再写一篇详细的文章，以及提一些 issue，挺有意思的。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>我的职业是小说家</strong>，其实村上的随笔或是文集算是很好读的那种，言辞带些犀利却也同样带着些娓娓道来的真诚与别样韵味，像是对话，却也时常被埋在其中似乎带着些雕琢的幽默感逗得不禁莞尔。总共大概花了三个月才真正看完，作为手头上为数不多的纸质书，更多的是想起时随便翻翻。第一次去猫舍的时候虽然心动，却也本没有太下定决心那么快承担这样的责任，而路上随手翻起的一页里写道“当时我们过着非常节俭的斯巴达式的生活。家里既没有电视也没有收音机，甚至连一只闹钟都没有。也几乎没有取暖设备，寒夜里只好紧紧搂着家里养的几只猫咪睡觉。猫咪们也使劲往我们身上贴过来。“短短几句，却构成了我当下把猫带回家的最大动力。也谈到了许多，关于爱好、写作目的、创作思路与平衡，都是近两个月慢慢沉静下来才真正能够稍理解些的。</li>
<li><strong>世界尽头与冷酷仙境</strong>，其实好久没有从小说中得到这样的期待感了，也许是因为叙事方式，或是因为每次都是路途中读几个小篇章而有些断续，总是想知道后面会发生些什么，却也不想太过囫囵而错过了这样优美的笔触。另外这种“另一个空间”的设定让我想到了一个古老但同样很有意思的游戏《废都物语》。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>静雪</strong>，前几集是真的很喜欢，spitz 的歌、各个角色的性格、很舒适的日常。也许是因为太过于代入男二凑斗的情感，一种岩井俊二所描述的“我爱你，与你无关”的温柔和坚定，后来对于故事情节的发展有止不住的失望，直至最后也没能太过了解到青羽和想感情的基点，确实美好，却有些直白与单薄。</li>
<li><strong>三体 剧集版</strong>，倒是成为了自己每天会持续追的一部，剧情节奏有些缓慢但是目前看下来还是有些期待的。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>文豪野犬</strong>，过年的时候缓缓在补，对于这种以作家与文学作品为任务和技能的设定感觉还挺有意思的，侦探社蛮多角色的性格人设都很喜欢。不过感觉不是会想着会马上追下一季的那种，可能之后想起来会继续看吧。</li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="生活">生活</h3>
<p>承接上周周报中对家的描述，今年过年在老家呆了接近 10 天，算是这几年少有的时间了。老家的人越来越少，整个氛围也显得冷清而少了些烟火气，但是却可以放实打实的烟花，也算是一种别样的记忆了。</p>
<p>因为我自小也就离开了，儿时玩伴连记忆都早已模糊，更别说什么发小了。所以这十天里，去看了外婆，陪伴了爷爷奶奶和外公等家人，倒也是难得的闲散时光。</p>
<p>温情有余，只是日常零下的温度让我不由得想念起了有暖气和捏捏的时光（<del>逐渐丧失南方人的骨气屈服于暖气，太香了</del>），不过也还好带的是老 Intel MBP，跑个 IDE 加几个网页就热起来了。</p>
<p>今年带了相机，虽然因为手冷而没拿出来拍几次，却拍了很多全家福。老人都不太爱拍照，好在现在也有手机这些能够随时记录些日常的工具，不至于有太多遗憾，但总还是怀念一大家人去照相馆拍的时候，虽然已经是多年前的记忆了。这次充当了那个摄影师，给全家人和各自小家都拍了很多，索尼的自动对焦和连拍还是很值得夸一下的。</p>
<p>到了我家的时候，我妹抱了只狗狗过来作“占位符”，说我以后把自己 p 上就行，她多少也是有点只坑自己哥哥的喜剧人成分在的。最后确实拍了和狗狗的合影，四口整整齐齐，没有我哈哈，大概这就是那种“听起来很离谱，但在我家，似乎也很正常”的有意思的事了。</p>
<p>当然，大家庭的全家福还是用了脚架定时连拍的，打算最近修一下洗一些片子出来。</p>
<h3 id="捏捏">捏捏</h3>
<p><img src="https://image.pseudoyu.com/images/nie_nie_on_the_bed.jpg" alt="nie_nie_on_the_bed"></p>
<p>这次离开了捏捏接近半个月，虽然同事很细心且经常给我发视频，但终究还是不太放心，回到北京后第一件事就是去了同事家，回程一路也是在各种抚慰她，好在没把我忘了，还算有点良心；回家后也没太多陌生感，马上就去自己最喜欢的角落舒适地躺着了，真好。</p>
<p>第二天因为有些事要和项目组的同事讨论，再加上很久没去了，于是还是收拾了下去公司，感觉习惯了远程办公后，再回公司上班有些不适应，感觉就是到公司 10 点半了，和久违的同事寒暄了几句，刚打开电脑没一会儿就被叫去吃中饭了，吃完就开始午休了，感觉时间被刻意划分得“劳逸结合”反而更容易打乱节奏，我可能还是更喜欢那种不吃不喝搞完，然后余下时间安排自己的事这样的模式。</p>
<p>另外还有一件又好气又好玩的事。</p>
<p><img src="https://image.pseudoyu.com/images/dispear_nie_nie.png" alt="dispear_nie_nie"></p>
<blockquote>
<p>时隔三个月第一次去公司，午休打开摄像头，经历了十分钟看不到猫、开麦克风喊了五分钟没反应、仔细回想自己的门窗有没关好、无比烦躁焦急、火速请假、一路狂奔冲回家，最后到家了发现就躲在盲区椅子后面懒得探头。大概自己下一份想换一个 fully remote 工作排名第一的理由就是这只不省心的捏捏了吧🙃。</p>
</blockquote>
<p>以及还有后续。</p>
<p><img src="https://image.pseudoyu.com/images/dispear_nie_nie_2.png" alt="dispear_nie_nie_2"></p>
<blockquote>
<p>接上条后续。回来后本来想好好教育她，迅速跳上来趴在腿上睡着了，醒来后一脸迷迷糊糊，可无辜，不太忍心，于是冷战了一个小时作罢。另外，下单了 <a href="https://twitter.com/mr_easonyang">@mr_easonyang</a> 推荐的 ebo 移动摄像头，感谢！后面外出也能放心点了！</p>
</blockquote>
<p><del>以后摸鱼的时候可以操纵监控机器人来逗猫了。</del></p>
<h3 id="其他">其他</h3>
<p>两位挚友有了一些现阶段比较难调和的矛盾，作为持续了很多年的完全是家人一样的三个人的小团体，总还是不免有些自责自己在其中所能做的是不是太少。</p>
<p>希望一切安好吧。</p>
]]></content:encoded></item><item><title>周报 #27 - 何以为家</title><link>https://www.pseudoyu.com/en/2023/01/22/weekly_review_20230122/</link><pubDate>Sun, 22 Jan 2023 21:39:12 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/22/weekly_review_20230122/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-01-16 到 2023-01-22 这周生活的记录与思考。 这周的时间三等分了，在北京、杭州和江苏老家三地奔波周折。作为已经几乎三个月没出</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-16</code> 到 <code>2023-01-22</code> 这周生活的记录与思考。</p>
<p>这周的时间三等分了，在北京、杭州和江苏老家三地奔波周折。作为已经几乎三个月没出门的自己来说，路途还是带来了不少疲劳感，但却发现自己其实对于这种很长一段时间固有生活节奏的变化其实并不抵触，甚至有些新奇与期待。</p>
<p>把捏捏送到了同事家寄养，很担心；回了杭州，陪伴了父母和妹妹，见了一些朋友；又急匆匆地回了江苏老家过春节，可能因为心境有所好转，今年对待新年和春节跨年态度积极了许多，给朋友发了一些跨年祝福，捡回了一些仪式感；也发现了我的朋友们讲话都还挺有意思的，最近倒是更多把这些日常 po 到推上，大概也是之前提到过的分享欲的恢复吧；还有很多其他有意思的事。</p>
<h2 id="何以为家">何以为家</h2>
<p><img src="https://image.pseudoyu.com/images/sunset_and_trees_in_jiangsu.jpg" alt="sunset_and_trees_in_jiangsu"></p>
<blockquote>
<p>回家第一天偶然拍到的夕阳，拍完感觉田野的天还是别有一番感觉的，这个意境有些联想到《Flipped》的封面图。</p>
</blockquote>
<p>其实提到回家或是回老家这件事，多少是带有些复杂心情的。或者更抽象一点说，对于『家』和『家人』的归属感，自己也经历了很多思考与改变。</p>
<p>自己虽在杭州出生，但童年大部分的时光是在江苏老家度过的，父母都在杭州发展事业，也许对于那个年代的年轻人来说，也还算是一个比较合理的选择吧。在我已经有些淡忘的幼时记忆里，其实父母的形象并不那么清晰。直到小学二年级，我 9 岁的时候，才到杭州和父母一起生活。</p>
<p>或多或少有一些亲近感的影响，自己一直以来算是比较独立地生活的，从大概初中开始，不论是中考志愿、高中自主招生、高考志愿、城市选择这些重要节点选择，还是日常的什么琐碎事宜，似乎都是需要自己去独立做决定，父母极少会给我建议，更别说是帮做决定了，当然，好处就是同样也不会因为成绩或者早恋这样的事来干涉我（<del>甚至帮我掩护</del>）。</p>
<p>记得最清晰的一次是在高三，自己的成绩排名刚好可以选择去『南方科技大学』，一个当时刚建校不久但挺有意思的学校的自主招生机会，其实还是挺心动的，但对于当时甚至极少离开江浙的我来说，要在有着不小高三课业压力的情况下去这样一个陌生的城市面试，还是有些难以果断地作出什么决定的，于是还是拨通了我爸的电话，跟他简单陈述了情况，想问问他的建议，换来的只有一句“你自己决定就好”，然后挂断了。</p>
<p>说没有一丝难过与埋怨是假的，尤其是看着周遭电话亭同学与父母在热烈地对备选的几所学校机会进行了各种权衡和商讨，自己似乎第一次感受到那么无助。回到候选教室后，没再说一句话，签署放弃了所有机会。</p>
<p>高考结束后的志愿也是，当时自己因为一些情感上的问题避开了浙江和上海的所有选项，大概只花了下午两三个小时对着那本粉色的历届招生手册选了几所省外从未了解过但是分数差不多够的学校，父母知道缘由，但也同样没有给予什么干涉。也许还是带着一些赌气的成分吧，当时的自己还是挺幼稚的。</p>
<p>可能直到大三，当时自己忙于创业和一些实习差旅，有一次刚巧到杭州出差，赶着一个晚上回家住了。已经临近一点了，到家后发现妈妈仍然在等我，而我爸刚好因为有些应酬而喝醉先睡了。当时不知道出于什么缘由，坐在床边和妈妈聊起了各种过去，才发现自己似乎没有真正去了解过父母的内心或是去试图沟通。</p>
<p>我爸妈都是 75 后，与我的同龄朋友相比算是比较年轻的了。妈妈说他们也是第一次做父母，并没有什么经验，而又心怀愧疚地因为自己的工作而没能陪伴我度过童年时光，等我到了杭州后，他们也有些不知所措该以怎样的态度来面对这样一个熟悉却又有些陌生的个体，最后，他们选择了『尊重』，也讲了很多很多这些年来相处的细节。</p>
<p>说实话我第一次听到这句话的时候，有些意外。我之前有过不少很自我的猜测，总觉得也许是因为没有从小在身边长大，感情没那么深，因而似乎少了些父母与子女之间的情感纽带，也许是很难弥补的。</p>
<p>也有些恍然，其实父母在潜移默化间带给了我非常多。从我记事以来的十几年里，我从未见父母吵架过，甚至到了现在恩爱也并未随着年月而消减，让我对家庭仍保留着许多美好幻想；爸爸性格十分宽容，从小到大都未对我进行任何打骂，但对时间观念与承诺尤其严格，当我违背时总会反复强调，直至我将之刻入本能；妈妈虽大多事交由爸爸决定，她性格中的善良与温和极大地影响了我，让我在面临各种选择时至少善恶为先，对他人也真诚以待；而之前我有些埋怨的关于我需要一直自己独立做决定的方面，其实在大三大四后的许多人生选择里，让我得以坚定地独自前行，可以说我后来的创业、跨专业申请、去香港读研、来北京工作，以及后面会作出的各种或许会被称之为勇敢的决定，也都缘于此。</p>
<p>在这次长谈之后，似乎已经习惯了这样的方式，每次回家总会畅聊到深夜，或关于我在各个地方的见闻，或家长里短，就像是朋友一样相处，也会互相调侃（<del>比如我妈一直觉得我是个渣男</del>）。我依然作为一个个体浪迹在各个城市过着自己的生活，只是家对于我来说不再是一个暂时的栖息之所，而是有了一种归属的寄托，独立却又并不疏离。</p>
<p>而对于老家，其实可以说是幸运眷顾吧，截至 2021 年初，在我已经度过的二十多年里，并未经历过任何刻骨铭心的离别，也就认为这是一件非常理所应当的事。而在一个清晨收到爸爸的一句『外婆走了』的简短却又刺痛的四个字时，才真正感受到一种精神与情绪的撕裂感。</p>
<p>甚至当时因为在香港读研，没办法赶上最后一面，而之后的一年也因故无法返回，一拖，甚至就已经是第三年。以至于越到临近回家的时候，自己越是愧疚与害怕。从小也在外婆身边长大，我的情感自是无需多言，但也更难想象到妈妈的心情之痛，回老家也因此带上了一些不一样的意义。</p>
<p><img src="https://image.pseudoyu.com/images/yu_tweet_about_camera.png" alt="yu_tweet_about_camera"></p>
<p>有部电影叫『何以为家』，故事本身倒没什么相似之处，只是对这个标题有些印象深刻，每个人的家都不同，却总是需要不断寻找这样一个存在，或谓之为起源，或谓之为归属。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="捏捏近况">捏捏近况</h3>
<p><img src="https://image.pseudoyu.com/images/leave_my_cute_cat_nienie.jpg" alt="leave_my_cute_cat_nienie"></p>
<p>捏捏寄养到我项目的小 leader 家了，17 号的时候他还很贴心地开车过来接了，我装了好多好多东西，各种嘱咐，完全舍不得，即使只是短途的分离。不过好在适应得还算可以，虽然白天不那么活跃，但是晚上还是会出来探索，饮食也很正常，算了稍稍放心了一些。</p>
<p>完全是一种老父亲的心态了，既担心不那么适应而受苦，又觉得如果太过适应会有些怅然若失（<del>不会那么没良心吧，不会吧</del>）。朋友们表示我以后可别养女儿了，得心疼死。</p>
<p>倒是在他家似乎看上了他们家养在鸟笼里的鸟，他总觉得捏捏想吃掉她，我花了好久解释捏捏那么可爱友善，可能就是喜欢她想跟她玩，<del>我也不知道他信了没</del>。</p>
<p>想回去接她了。</p>
<h3 id="见朋友">见朋友</h3>
<p>回杭州第一天去见了一起做 side project 的学弟。大概六七月份因为我写周报发在即刻上而结识，聊了几句惊奇地发现是本科的学弟，不得不说世界还是蛮小的，后来聊了不少想法，也作为主程深度参与了一个创业项目，其实自己之前虽然有过一些各个岗位的粗浅经验，也做过一些创业，但实在是对那些繁琐的部分有些厌倦，而他又恰恰十分擅长这些，可以让我只需要专注在工程实现上，且最早项目的想法也源于我个人信息管理的一些需求，也是一种莫名的契合了。这次终于线下见到了，交流了些想法，过年也有不少任务量和安排，不过年三十和初一还算是摆过去了（<del>主要是太冷了</del>）。</p>
<p>终于见到了 <a href="https://twitter.com/strrlthedev">STRRL</a>，算起来自己刚开始玩推的时候还是一个小小透明，是和 STRRL 一次交换友链结识，还带我进了 <a href="https://twitter.com/RealAkemiHomura">Homura</a> 组建的一个周报群，和大家有了更多交流，逐渐才成为自己表达欲的出口。</p>
<p>自己作为一个深度社恐，虽然也有（且仅有）之前在北京面基 Homura 的经历在先，但在见面前其实多少还是有些害怕。约在了杭州一个小商圈吃中饭，见面后发现他很酷很有意思，聊了不少之前的有趣经历和一些规划，没有太多拘谨的感觉，反倒是有蛮多方面的共同点，很成功的一次面基交流！（<del>感觉其实真正见面了我话还是不少的</del>）</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>我的职业是小说家</strong>，在读，但是进度缓慢。</li>
<li><strong>世界尽头与冷酷仙境</strong>，回程的高铁上在读，读的篇章不算很多，但对被这种交错的叙事方式以及其中很多描述方式所吸引，这几天会读完。</li>
<li><strong>始于极限</strong>，其实自己还是蛮少直接看女性主义相关的书籍的，毛姆的《面纱》算是印象里比较相关的，这本被朋友强烈推荐，且是书简的形式，看了个开头觉得还不错，也并行在读了。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>文豪野犬</strong>，在追番，对于这种以作家与文学作品为任务和技能的设定感觉还挺有意思的，晚上会稍看几集。</li>
<li><strong>三体 动画版</strong>，动画版真的是随缘看了。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>三体</strong>，电视剧版的感觉确实还可以，可能主要是还挺喜欢于和伟的（对《觉醒年代》里演绎的陈独秀先生印象深刻），所以反而是晚上抽空就看看更新，但是节奏太慢了倒是，希望至少能稳定发挥一下，别像动画版那样不知所云。</li>
</ul>
]]></content:encoded></item><item><title>周报 #26 - 博客、客制化键盘和新服务器</title><link>https://www.pseudoyu.com/en/2023/01/15/weekly_review_20230115/</link><pubDate>Sun, 15 Jan 2023 19:57:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/15/weekly_review_20230115/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-01-10 到 2023-01-15 这周生活的记录与思考。 已经临近假期，虽然也算不上对过年有着多少仪式感。去年的那段时间花了一周多的时间</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-10</code> 到 <code>2023-01-15</code> 这周生活的记录与思考。</p>
<p>已经临近假期，虽然也算不上对过年有着多少仪式感。去年的那段时间花了一周多的时间通了『宝可梦 阿尔宙斯』和重温了『火焰之纹章 风花雪月』，过年当天煮了火锅并跟家里人视频通话了，似乎年就这样过去了。但由于今年决定了要回家，有寄养捏捏以及过年期间各种安排的事，倒是没能多放松，想把很多事提前做完，能匀出一些时间好好陪家人了。</p>
<p>工作上这周状态一般般，写完已经上线的需求出了几个细节小问题，不得不拖着 leader 和我一起加班处理，还有一部分年前要上线的新功能还没测完，还剩下两三天时间；和朋友做的项目也遇到了一些问题，原本负责前端的朋友因故离开了，不得不再去负责他的部分，上线也会有一些拖延，过年也没法真正清闲下来，也算是一个不小的调整吧。</p>
<p>因为要寄养在同事家，保险起见今天去了趟宠物医院检查，顺便剪个指甲。医生说状态很健康，之前的一些小病症已经基本康复了，也夸我照顾得好，开心。不过想到寄养还是有些舍不得和不放心，年后也会早些回来了，毕竟有了牵挂。</p>
<p>接受了一个有点神奇的采访，收到了一个巨可爱的键盘，继续优化了一下自己的博客（<del>不写文章就知道优化主题了</del>），还有很多有意思的事。</p>
<h2 id="有趣的事与物">有趣的事与物</h2>
<h3 id="博客折腾">博客折腾</h3>
<p>我目前版本的个人博客大概已经运行了接近三年了，之前也用过服务器自己搭建 <a href="https://wordpress.com/">WordPress</a> 等方案，后来因为不够稳定性且数据迁移很麻烦，我转向了 Hugo 静态博客 + GitHub 自动部署 + Cloudflare 托管这种一劳永逸的方案，详细可以看『<a href="https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/">2022 年了，聊聊我为什么还在写博客</a>』和『<a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/">Hugo + GitHub Action，搭建你的博客自动发布系统</a>』。</p>
<p>而我选择用 Hugo 除了因为我主业是 Go 开发导致的有点莫名但并没有什么用的亲切感外，还有一个最主要的原因就是目前在用的主题『<a href="https://github.com/shaform/hugo-theme-den">den</a>』，这是一个台湾的开发者自己写的主题，当时他因为构建速度等因素考虑打算从 <a href="https://github.com/getpelican/pelican">Pelican</a> 转向 <a href="https://gohugo.io/">Hugo</a>，但又喜欢自己原来的主题，所以自己复刻实现了一个，具体可以看他的这篇『<a href="https://city.shaform.com/zh/2018/07/22/migrate-from-pelican-and-wordpress-to-hugo/">從 Pelican 及 WordPress 轉移到 Hugo</a>』。</p>
<p>我大概是 18 年关注到他的技术和个人想法输出的博客，可以说很大程度上我后来的文章风格与思维模式都受到了他很大的影响。而这种带着些老式互联网遗风的主题又刚好完美在我的审美上，于是一番折腾搭建上了，沿用到现在。</p>
<p>由于是个人使用为主，这个主题虽然很美观简约，但还是有一些功能缺失的地方，于是在使用的这三年里也不断根据自己的使用需求修修补补，去年也把自己对 RSS Feeds、相关文章、友链这一块的改动提了 pr，有一些经过了一些沟通后合并到了主分支里，还有几个还没改动（<del>太偷懒了</del>）。</p>
<p>最近刚好在 <a href="https://twitter.com/WuPingJu">P.J. Wu 吳秉儒</a> 的博客里发现了 <a href="https://pagefind.app/">Pagefind</a> 这一网页搜索方案，研究了一下集成到了我的博客里，效果很不错。</p>
<p><img src="https://image.pseudoyu.com/images/pagefind_and_hugo_2.png" alt="pagefind_and_hugo_2"></p>
<p>它采用了将文章索引文件预先生成而不是实时检索的方案，速度很快，也不需要额外的后端服务，很适合静态博客的部署方案。关于 Pagefind 的介绍和使用可以看看 <a href="https://twitter.com/WuPingJu">P.J. Wu 吳秉儒</a> 的这一篇『<a href="https://pinchlime.com/blog/how-to-add-a-search-function-to-zola-generated-static-websites-via-pagefind/">如何透過 Pagefind 在 Zola 產生的靜態網站裡加入搜尋功能</a>』，但是是集成进 Zola 博客框架并通过 Netlify 发布的，原理差不多。关于 Hugo 的集成方式我折腾配置一下再出一篇文章吧，可以预先通过<a href="https://www.pseudoyu.com/en/search">这个网址</a>体验一下，或者点击导航栏的『搜索』（加上了回到顶部功能，可以直接点击返回）。</p>
<p>我将它结合进了我原本的 GitHub CI 自动发布流，体验很无缝，并且通过 Hugo 的 shortcode 的方式集成一个搜索页面 UI 来供使用，很强大，也会向主题仓库提一下 pr 支持，看看这一块有没有需求。</p>
<p>但其实使用下来对中文支持有一些问题，没法很好的分词，比如『区块链』这个词直接搜索会无法匹配，改为『区块 链』，自己主动分词后才能得到想要的效果，也在页面注明了搜索方式了，<del>又不是不能用</del>，看看后续有没有更好的方案了。</p>
<p><img src="https://image.pseudoyu.com/images/pagefind_and_hugo_1.png" alt="pagefind_and_hugo_1"></p>
<p>有意思的是，本来这周的博客折腾已经到此为止了，但是突然 GitHub 发邮件提醒我有 pr 和评论，有一个陌生的朋友 fork 了我的博客并且做了一些样式调整和改动，增加了一些功能，后来还直接把自己改好的 css 文件发我参照了。</p>
<p><img src="https://image.pseudoyu.com/images/github_blog_pr.png" alt="github_blog_pr"></p>
<p>其实原本只是自用的一些方案，也常常陷入折腾了一下午主题没写一个字却自得其乐的状态，没想到也会有一些人关注到、认可并且采用，还能反过来解决不少我的一些问题，感觉很奇妙，有点慢慢感受到像是开源或是 work in public 的乐趣，总能有一些意想不到的收获。于是昨天晚上一通折腾，修改了好几个一直有点问题但是没改/没当回事的样式问题，还增加了回到顶部的按钮效果，还挺开心的。</p>
<h3 id="服务器">服务器</h3>
<p>之前周报提到过自己研究清楚通过 <a href="https://nginxproxymanager.com/">Nginx Proxy Manager</a> 给自己的服务器进行反向代理后，上线了几个常用的服务和站点，比如之前的 <a href="https://zlib.pseudoyu.com/">zlib.pseudoyu.com</a> 图书检索服务，因为得到了一些关注，也被一些群组和频道收录了，所以还是想着得持续维护下去保持服务稳定性和访问速度，但之前都是一些低性能的机子，几个服务就跑满了，于是趁着搬瓦工推出了一个新的还不错的 Plan，入了几台，2C2G + 40G 硬盘 + CN2GIA DC6 的线路，完全够一些服务的长期稳定运行了。</p>
<p><img src="https://image.pseudoyu.com/images/yu_services_vps.png" alt="yu_services_vps"></p>
<p>之前也还有一些机子，跑一些自己的基础服务，有些也搭载一些小应用给朋友用，这次也好好整理了一下，把所有服务都迁移到了一台机子，这里就得赞美一下 Docker 和 docker-compose 的管理方式了，数据迁移也太无缝了。全部迁移完，居然也才占用了一半的样子，幸福。</p>
<p>因为机器也多了（幸福的烦恼），所以也找了一个开源的监控服务进行管理，有一种赛博资本家的感觉，监督着这些机子好好工作不许偷懒。</p>
<p><img src="https://image.pseudoyu.com/images/yu_server_status.png" alt="yu_server_status"></p>
<h3 id="桌面-setup-与键盘">桌面 Setup 与键盘</h3>
<p>可能因为不打游戏，其实自己并不是一个资深的键盘爱好者，对于不同轴体、键帽的差异也很难说得清楚，之前也大多用的 Mac 自带的剪刀脚键盘，并没有觉得什么不适。</p>
<p>大概是在 20 年底，被她问到说有什么一直很想要但自己可能又不太下定决心买的东西，当时想了半天，说了 HHKB，其实比起实际需求更多只是好奇，而老式电池仓的这种复古设计也完全在我的审美上。</p>
<p>几天后收到了，是 HHKB Professional Hybrid Type-S 静音版，老式 IBM 风格的配色，静电容的手感，再加上小巧的体积，很喜欢，在桌面上也非常协调。</p>
<p><img src="https://image.pseudoyu.com/images/keyboard_hhkb_type_s_1.jpg" alt="keyboard_hhkb_type_s_1"></p>
<p>每天早上开始学习、工作前总是先会简单布置一下环境，小心翼翼地放上键盘，而这把键盘陪伴着我从香港到北京，甚至每次外出去咖啡馆也都会带上，刚开始可能只是习惯，慢慢竟变成了一种仪式感，似乎这样让写码和写作都带上了一些乐趣。</p>
<p><img src="https://image.pseudoyu.com/images/keyboard_hhkb_type_s_2.jpg" alt="keyboard_hhkb_type_s_2"></p>
<p>用了一年多后，因为很喜欢静电容的手感，不由得想尝试一下剩下几把经典，于是同样作为礼物，我收到了一把 RealForce PFU 联名版 87 键，这把的颜值也很不错，暗光环境下有种金属感，不过可能是由于习惯了 HHKB 的特殊键位，突然转换到 87 常常有些不适应，所以反倒是给她用来打游戏更多一些，反正键盘也拯救不了我的游戏操作手残。</p>
<p><img src="https://image.pseudoyu.com/images/realforce_pfu_87.jpg" alt="realforce_pfu_87"></p>
<p>RealForce 后来也就闲置了。而自己也确实有些用不习惯大尺寸键盘了，于是寄给了远在澳洲的倪（这么一想我的第一把机械键盘也是他送我的，一把 Cherry 的，但是轴体倒是忘了，当时还在用 Win 的时候在家用了快一年，也很不错）。</p>
<p>虽然 HHKB 和 RealForce 这两把知名度感觉更高一些，但我个人体验下来在誉为静电容三大经典中作工最精致、质感最好的反而是我去年年中才入手的 Leopold FC660C，配色和敲击感都更舒服，真正让人有些享受其中，后续成为了我家里桌面的主力键盘。</p>
<p><img src="https://image.pseudoyu.com/images/keyboard_leopold_fc660c.jpg" alt="keyboard_leopold_fc660c"></p>
<p>其实至此，自己键盘使用的需求已经完全满足了，也没太多心力去追求极致去玩客制化。然而，一个深夜刷到了稚晖君的『<a href="https://www.bilibili.com/video/BV19V4y1J7Hx">【自制】我做了一把 模 块 化 机 械 键 盘 !【软核】</a>』，一把从电路硬件到固件代码都重新设计定义、自己做的键盘，这谁忍得住啊。</p>
<p>而在国庆的时候，刚好看到和 B 站出了联名款键盘，毫不犹豫下单了，果然猛男粉还是很有吸引力的，这也是我某种意义上的第一把客制化。</p>
<p><img src="https://image.pseudoyu.com/images/keyboard_hello_word_75.jpg" alt="keyboard_hello_word_75"></p>
<p>接着就是几个月的漫长等待，终于在这一周到了我手上，不得不说颜值和手感都很绝，迅速更换了我的桌面布局，快乐地敲了一周。可能颜值才是第一生产力吧，感觉这周写文章和代码量都上去了，晓瑜表示“怎么换了把键盘你人设都变了喂”。</p>
<p><img src="https://image.pseudoyu.com/images/chat_with_xiaoyu_about_keyboard.png" alt="chat_with_xiaoyu_about_keyboard"></p>
<p>我没有什么收藏癖，也没有想追求极致的手感或是客制化方案，只是我一直对桌面陈设、电脑、键盘和工具软件等会和我朝夕相处的事物有着极大的折腾欲望，哪怕只是几秒速度提升或是一点点心情体验的改善，于我来说也是一件何乐而不为的事。</p>
<h2 id="个人生活剪影">个人生活剪影</h2>
<h3 id="学习">学习</h3>
<p>日语没学&hellip;第一周打卡失败！</p>
<h3 id="输出">输出</h3>
<p>输出这一块，给 GoCN 翻译了一篇『<a href="https://www.pseudoyu.com/en/2023/01/12/golang_120_language_changes/">[译] Go 1.20 新变化！第一部分：语言特性</a>』；上一篇周报发完认识了不少新朋友，这周也发了不少推讲博客搭建相关的；和少数派约了一篇稿，不过还不知道什么时候写。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>我的职业是小说家</strong>，这本书从 10 月就开始读了，中间各种事反而落下了一些读书的进度，最近在空余时间慢慢在读，太喜欢村上的讲话风格了，想把他的每本书都补一遍。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>灵能百分百</strong>，几年前看过一次，觉得设定有点意思但是并不算太细细品味，最近想着再补一下，第一季有很多主要角色的缘起、羁绊与改变，搞笑日常之余带给人很多想法与思考。第二第三季一口气刷完了，如果说第一季只是描述一些羁绊，第二第三季就给我带来了太多的感动，角色的成长，身边人的变化，尽管是超能力者的设定，却在点滴日常里不断自我否认以及在身边人的影响下自我接纳，最喜欢记者会后 mob 和灵幻的侧身对话场景，情感已经在不言中。</li>
<li><strong>文豪野犬</strong>，早有听说，刚开始追。</li>
<li><strong>三体</strong>，大概追番剧的心态就是看你还能有什么迷幻操作。</li>
</ul>
]]></content:encoded></item><item><title>[译] Go 1.20 新变化！第一部分：语言特性</title><link>https://www.pseudoyu.com/en/2023/01/12/golang_120_language_changes/</link><pubDate>Thu, 12 Jan 2023 11:06:04 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/12/golang_120_language_changes/</guid><description>前言 又到了 Go 发布新版本的时刻了！2022 年第一季度的 Go 1.18 是一个主版本，它在语言中增加了期待已久的泛型，同时还有许多微小功能更新与优化。202</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>又到了 Go 发布新版本的时刻了！2022 年第一季度的 Go 1.18 是一个主版本，它在语言中增加了期待已久的泛型，同时还有<a href="https://blog.carlmjohnson.net/post/2021/golang-118-minor-features/">许多微小功能更新</a>与<a href="https://blog.carlmjohnson.net/post/2022/golang-118-even-more-minor-features/">优化</a>。2022 年第三季度的 Go 1.19 是一个<a href="https://blog.carlmjohnson.net/post/2022/golang-119-new-features/">比较低调的</a>版本。现在是 2023 年，Go 1.20 <a href="https://groups.google.com/g/golang-nuts/c/HMUAm5j5raw/m/va3dxBFyAgAJ">RC 版本</a>已经发布，而正式版本也即将到来，Go 团队已经发布了<a href="https://tip.golang.org/doc/go1.20">版本说明草案</a>。</p>
<p>在我看来，Go 1.20 的影响介于 1.18 和 1.19 之间，比 1.19 有更多的功能更新并解决了一些长期存在的问题，但没有达到 1.18 中为语言增加泛型这样的重磅规模。尽管如此，我还是要把我对“Go 1.20 的新变化”的看法分成系列三篇博文。首先，我写了 Go 1.20 中的语言变化（如下），在下一篇文章中，我将写标准库的重要变化，最后一篇将讲解 Go 1.20 中我最喜欢的对标准库的小改动。</p>
<h2 id="语言特性">语言特性</h2>
<p>那么，让我们来看看语言方面的变化。首先，对泛型的规则做了一个小小的修改。有了 Go 泛型，你可以通过一个函数获取任何 <code>map</code> 的键：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">func</span> <span class="nx">keys</span><span class="p">[</span><span class="nx">K</span> <span class="nx">comparable</span><span class="p">,</span> <span class="nx">V</span> <span class="nx">any</span><span class="p">](</span><span class="nx">m</span> <span class="kd">map</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="nx">V</span><span class="p">)</span> <span class="p">[]</span><span class="nx">K</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">keys</span> <span class="p">[]</span><span class="nx">K</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="nx">k</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">m</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">keys</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">keys</span><span class="p">,</span> <span class="nx">k</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">keys</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>在这段代码中，<code>K comparable, V any</code>为“类型约束”。这意味着 K 可以是任何 comparable 的类型，而 V 则没有类型限制。comparable 类型为数字、布尔、字符串和由 comparable 元素组成的固定大小的复合类型等。因此，K 为 int，V 为一个 bytes 切片是合法的，但 K 是一个 bytes 切片是非法的。</p>
<p>我说过上面的代码会给你任何 <code>map</code> 的键，但在 Go 1.18 和 1.19 中，这并不是完全正确的。如果你试图把它用在一个键值为接口类型的 <code>map</code> 上，它将不会被编译。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="nx">any</span><span class="p">]</span><span class="nx">any</span><span class="p">)</span> <span class="c1">// ok
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">keys</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 编译器错误（Go 1.19）：any 没有实现 comparable
</span></span></span></code></pre></div><p>这个问题归结为围绕 <code>K comparable</code> 含义的解读。要作为 <code>map</code> 键使用，类型必须被 Go 编译器认为是 comparable 的。例如，这是无效的：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kd">func</span><span class="p">()]</span><span class="nx">any</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 编译器错误：无效的 map 键类型 func()
</span></span></span></code></pre></div><p>然而，你可以通过使用接口来得到一个运行时错误而不是编译器错误：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">m</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="nx">any</span><span class="p">]</span><span class="nx">any</span><span class="p">)</span> <span class="c1">// 正确
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">k</span> <span class="o">:=</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="nx">m</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span> <span class="p">=</span> <span class="mi">1</span> <span class="c1">// panic：运行时错误：哈希值为不可哈希的类型 func()
</span></span></span></code></pre></div><p>所以，像 <code>any</code> 这样的接口类型是 map 的有效键类型，但如果你试图把一个缺少有效类型定义的键放到 map 中，就会在运行时出现 panic 错误。显然，没有人希望他们的代码在运行时出现 panic 错误，但这是在 map 中允许动态类型键的唯一方法。</p>
<p>下面是一个从不同角度看同一问题的例子。假设我有一个这样的错误类型：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">myerr</span> <span class="kd">func</span><span class="p">()</span> <span class="kt">string</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="p">(</span><span class="nx">m</span> <span class="nx">myerr</span><span class="p">)</span> <span class="nf">Error</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nf">m</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>而现在我想使用自定义的错误类型进行比较：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">err1</span> <span class="kt">error</span> <span class="p">=</span> <span class="nf">myerr</span><span class="p">(</span><span class="kd">func</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span> <span class="k">return</span> <span class="s">&#34;err1&#34;</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">err2</span> <span class="kt">error</span> <span class="p">=</span> <span class="nf">myerr</span><span class="p">(</span><span class="kd">func</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span> <span class="k">return</span> <span class="s">&#34;err2&#34;</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">err1</span> <span class="o">!=</span> <span class="kc">nil</span><span class="p">,</span> <span class="nx">err2</span> <span class="o">!=</span> <span class="kc">nil</span><span class="p">)</span>  <span class="c1">// true true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">err1</span> <span class="o">==</span> <span class="nx">err2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// panic：运行时错误：对 main.myerr 不可比类型进行比较
</span></span></span></code></pre></div><p>正如你所看到的，一个接口值在编译时被认为是 <code>comparable</code> 类型，但是如果它被赋的值是一个“不可比类型”，则在运行时就会出现 panic。如果你试图比较两个 <code>http.Handler</code>，而它们恰好都是 <code>http.HandlerFuncs</code>，你同样可以看到这个问题。</p>
<p>当 Go 1.18 支持了泛型后，<a href="https://github.com/golang/go/issues/49587">大家发现</a>，由于接口在编译时被认为是 ，但可能会包含不可比较的具体类型。如果你写的泛型代码的类型约束是<code>comparable</code>，但错误的值被存储在一个接口中，就有可能出现运行时 panic。保守起见，<a href="https://github.com/golang/go/issues/50646">Go 团队决定</a>在评估（此特性）的全部影响阶段，Go 1.18 限制使用接口作为<code>comparable</code> 类型。</p>
<p>现在已经过了一年了，也发布了两个版本，经过大量在 <a href="https://github.com/golang/go/issues/51338">Github 上进行的冗长讨论</a>，Go 团队认为在通用代码中使用接口作为 <code>comparable</code> 类型应该是足够安全的。如果你在 Go 1.20 中运行<code>keys(map[any]any{})</code>，它可以正常运行，你不必考虑上面的任何说明。</p>
<hr>
<p>Go 1.20 中的另一个语言变化更容易解释。如果你有一个切片，现在你可以很容易地将其转换为一个固定长度的数组：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">s</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;a&#34;</span><span class="p">,</span> <span class="s">&#34;b&#34;</span><span class="p">,</span> <span class="s">&#34;c&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">a</span> <span class="o">:=</span> <span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="nb">string</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
</span></span></code></pre></div><p>如果切片比数组短，你会因越界而产生 panic：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">s</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">a</span> <span class="o">:=</span> <span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="nb">int</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// panic: 运行时错误: 不能将长度为 3 的切片转换成长度为 4 的数组或数组指针
</span></span></span></code></pre></div><p>这源于 Go 1.17 中增加的数组指针转换特性：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">s</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;a&#34;</span><span class="p">,</span> <span class="s">&#34;b&#34;</span><span class="p">,</span> <span class="s">&#34;c&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">p</span> <span class="o">:=</span> <span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="kt">string</span><span class="p">)(</span><span class="nx">s</span><span class="p">)</span>
</span></span></code></pre></div><p>在这种情况下，p 指向 s 定义的数组，因此修改一个就会修改另一个：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">s</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;a&#34;</span><span class="p">,</span> <span class="s">&#34;b&#34;</span><span class="p">,</span> <span class="s">&#34;c&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">p</span> <span class="o">:=</span> <span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="kt">string</span><span class="p">)(</span><span class="nx">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;d&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;e&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="nx">p</span><span class="p">)</span> <span class="c1">// [d e c] &amp;[d e c]
</span></span></span></code></pre></div><p>另一方面，随着 Go 1.20 中新增的切片转换为数组特性，数组是 切片内容的副本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">s</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;a&#34;</span><span class="p">,</span> <span class="s">&#34;b&#34;</span><span class="p">,</span> <span class="s">&#34;c&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">a</span> <span class="o">:=</span> <span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="nb">string</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;d&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="s">&#34;e&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="nx">a</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// [d b c] [a e c]
</span></span></span></code></pre></div><hr>
<p>除了将切片转换为数组的语法外，Go 1.20 还为处理切片数据的 <code>unsafe</code> 包带来了一些新增内容。<code>reflect</code> 包一直有<a href="https://pkg.go.dev/reflect#SliceHeader">reflect.SliceHeader</a>和<a href="https://pkg.go.dev/reflect#StringHeader">reflect.StringHeader</a>，它们是 Go 中切片和字符串的运行时表示:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">SliceHeader</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Data</span> <span class="kt">uintptr</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Len</span>  <span class="kt">int</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Cap</span>  <span class="kt">int</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">StringHeader</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Data</span> <span class="kt">uintptr</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Len</span>  <span class="kt">int</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><code>reflect.SliceHeader</code> 和 <code>reflect.StringHeader</code>都有一个 Warning 提示：“它的表示方法可能在以后的版本中改变，因此不能确保障安全或可移植”，并且在<a href="https://go-review.googlesource.com/c/go/+/401434">试图废除它们</a>。误用这些类型可能会<a href="https://github.com/golang/go/issues/40701">导致代码崩溃</a>，但是在实践中，很多程序都依赖于类似这样的切片布局，很难想象 Go 团队会在没有大量警告的情况下改变它，因为很多程序会崩溃。</p>
<p>为了给 Gopher 们提供一种官方支持的编写不安全代码的方式，Go 1.17 增加了<a href="https://pkg.go.dev/unsafe#Slice">unsafe.Slice</a>，它允许你把任何指针变成一个切片（不管是否是个好主意）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="nx">obj</span> <span class="o">:=</span> <span class="kd">struct</span><span class="p">{</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">,</span> <span class="nx">z</span> <span class="kt">int</span> <span class="p">}{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">slice</span> <span class="o">:=</span> <span class="nx">unsafe</span><span class="p">.</span><span class="nf">Slice</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">obj</span><span class="p">.</span><span class="nx">x</span> <span class="p">=</span> <span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="nx">slice</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span> <span class="nx">slice</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">// {4 5 3} [4 5 3]
</span></span></span></code></pre></div><p>在 Go 1.20 中，还有 <a href="https://pkg.go.dev/unsafe@go1.20rc2#SliceData">unsafe.SliceData</a>（它返回一个指向切片数据的指针），<a href="https://pkg.go.dev/unsafe@go1.20rc2#String">unsafe.String</a>（它以不安全的方式通过一个 byte 指针创建字符串），以及 <a href="https://pkg.go.dev/unsafe@go1.20rc2#StringData">unsafe.StringData</a>（它以不安全的方式返回一个指向字符串数据的指针）。</p>
<p>这些字符串函数是额外增加的不安全方式，因为它们允许你违反 Go 的字符串不可变规则，但它也给了你很大的控制权，可以在不分配新内存的前提下转换 byte 切片。</p>
<p>这些工具像利刃一样，好用却很容易割伤自己。在语言中直接支持这些工具可能更好，而不是仅仅让大家使用 <code>unsafe.Pointer</code> 来祈祷它奏效。</p>
<p>用 Hank Hill 的话来形容，<a href="https://www.getyarn.io/yarn-clip/08e52ddd-63ee-429b-b40c-b12c8ff6670b">“无论你做什么，你都应该以正确的方式去做，即使是错误的事情。”</a></p>
<h2 id="文章信息">文章信息</h2>
<blockquote>
<ol>
<li><a href="https://blog.carlmjohnson.net/post/2023/golang-120-language-changes/">原文地址</a></li>
<li><a href="https://carlmjohnson.net/">原文作者：Carl M. Johnson</a></li>
<li><a href="https://github.com/gocn/translator/blob/master/2023/w02_golang_120_language_changes.md">本文永久链接</a></li>
<li><a href="https://github.com/gocn/translator">GoCN &lt;每周译 Go&gt;</a></li>
<li><a href="https://github.com/pseudoyu">译者：pseudoyu</a></li>
<li><a href="https://github.com/focozz">校对：小超人</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>周报 #25 - 基于 Crossbell 的个人信息输出与同步系统（重构）</title><link>https://www.pseudoyu.com/en/2023/01/09/weekly_review_20230109/</link><pubDate>Mon, 09 Jan 2023 19:12:56 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/09/weekly_review_20230109/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2023-01-01 到 2023-01-09 这周生活的记录与思考。 这是 2023 年的第一篇周报，明明感觉跨年似乎还在昨天，一月上旬却已然结束，大概是心理</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2023-01-01</code> 到 <code>2023-01-09</code> 这周生活的记录与思考。</p>
<p>这是 2023 年的第一篇周报，明明感觉跨年似乎还在昨天，一月上旬却已然结束，大概是心理上对于时间的感知愈加迟钝了吧。</p>
<p>跨年时写了一篇还算详尽的年度总结，将这过去的一年中的发生的种种悉数道来，写完后发现篇幅已经超过预计，再加上新年计划与期待这一块当时也还没有理清思绪，所以略过了，所以也就趁着新年伊始的这篇周报，浅立一下 Flag 了，有些是小小的习惯养成，有些是长远的充满不确定性的规划，也不知道未来的这一年是否能如愿，但列出来了就会更有一些动力，也当作是一种监督了。</p>
<p>宅了快两个月，周末终于决定出门去朋友家蹭饭，度过了快乐的一天（不然感觉自己都已经不知道怎么跟人面对面讲话了）；虽然出片率堪忧，但可算是把照片修出来了，发了两篇摄影集；整理自己的各种软硬件服务（每年的仪式感了，总觉得整理后就会更有动力重新开始）；整理的时候想起之前的一些小计划，搭建了一个网站运行了 <a href="https://zlib.pseudoyu.com/">IPFS 版 ZLibrary</a>，却得到了意料之外的关注，吓得我连夜优化服务器和线路；以及很多有意思的事。</p>
<h2 id="个人服务重构">个人服务重构</h2>
<h3 id="服务管理">服务管理</h3>
<p>跟往年一样。开年就整理了自己的各种服务，发现居然已经有 20 个之多，且半数是 serverless，这一年白嫖功力见长。为了方便管理，用开源的 Uptime Kuma 为搭建了一个监控服务，并且绑定了 Telegram Bot 提醒，放心了许多。</p>
<p><img src="https://image.pseudoyu.com/images/uptime_kuma_yu_services.png" alt="uptime_kuma_yu_services"></p>
<p>说来有趣，其实自己之前一直觉得用服务器管理网站很麻烦，每次迁移或是服务变动总是很头疼，所以把大部分的服务都托管到了 Railway、Vercel、Supabase 这几个 Serverless 平台，因为大多是一些个人的服务，没什么太高配置需求，安全稳定就够了，就一直没折腾 Nginx 反向代理、https 证书这些。</p>
<p>而之前有提到过最近帮一个二次元同学做 B 站直播的房管和技术支持，就想着用一台白嫖的甲骨文日本机器来专门做直播监控和自动录制。因为有时候朋友也需要能够直接查看和下载，那自然一个好记的域名、国内网络环境下的访问速度、下载带宽等都要考虑在内，Serverless 服务就已经远远不够（也并不太划算了），于是探索了一些方案，选择了 <a href="https://nginxproxymanager.com/">Nginx Proxy Manager</a> 这一便捷的反向代理工具。</p>
<p><img src="https://image.pseudoyu.com/images/npm_yu_dashboard.png" alt="npm_yu_dashboard"></p>
<p>我在一台线路比较好（CN2 GIA）的搬瓦工机器上进行部署，托管自己的各项服务，能够保障还不错的访问体验。因为也可以通过通配符匹配的方式直接为自己的 <code>*.pseudoyu.com</code> 子域名统一签发 https 证书和自动续期，很省心。配合上述的监控，目前使用了一周，还挺舒服的。</p>
<p>官方文档很清晰详细，配合 docker-compose 这样人性化的容器服务管理方式，操作起来上手很快，不过可能还是会考虑后面出一个教程，让想托管一些像是博客这些小服务的朋友们有所参考。</p>
<h3 id="rss-输入">RSS 输入</h3>
<p>2022 年其实大多都还是专注在博客输出以及自己的 Telegram 频道上，对于输入和各个平台同步这一块其实没花太多心思，导致自己的 RSS 订阅堆积，newsletter 也有些过载，反倒是没能好好过滤输入信息源，于是删除了用了很久的 NetNewsWire，通过 Railway + Supabase 的方式搭建了一个更轻量级的 Miniflux，作为自己的主要阅读器，并且对 RSS 信息源作了筛选，控制在了 52 个，几乎都是个人博客，后续也会继续优化调整。</p>
<p><img src="https://image.pseudoyu.com/images/miniflux_yu_page.png" alt="miniflux_yu_page"></p>
<p>虽然有了 Miniflux 提供了还不错的阅读体验，但我其实更习惯于点进原文，我总是觉得对于个人博客来说，不仅仅是内容，网站的风格设计、一些相关的文章和主题也都是属于博主不可或缺的一部分，才能带来阅读更完整的享受。</p>
<p>RSS 阅读器对于我更多是作为第一步聚合工具，而由于 Miniflux 是一个基于网站的服务，并没办法做好很即时的提醒，而我每天又高度依赖 Telegram，所以基于 <a href="https://github.com/Rongronggg9/RSS-to-Telegram-Bot">RSS to Telegram Bot</a> 搭建了自己的 Telegram 提醒，将这些信息源更新推送给我，看到一些感兴趣的标题会留个印象，空闲时统一到 Miniflux 去阅读查看。</p>
<p><img src="https://image.pseudoyu.com/images/yu_rss_to_tg_bot.png" alt="yu_rss_to_tg_bot"></p>
<p>这样下来也比较不容易错过想看的文章，也不至于造成太多信息堆积，目前这套方案使用下来感觉很不错，顺便每次周末看到各种周报的时候也催更效果显著（<del>这周日出去玩了，合理拖更</del>）。</p>
<h3 id="telegram-输出">Telegram 输出</h3>
<p>我同样基于 Railway + Supabase 方式搭建了一个自己的 n8n 同步服务，将自己的各平台输入同步到频道，详细描述可以看这篇『<a href="https://www.pseudoyu.com/en/2022/09/19/weekly_review_20220919/">周报 #12 - 赛博空间、自我定义与界限</a>』。</p>
<p>之前平台基于 <a href="https://github.com/reorx">Reorx</a> 的方案进行了一些自己的调整，但一直没添加更多信息源，国内源较少。</p>
<p>虽然自己自己目前国内的各个平台以及极少进行分享，但也总共是自己的一部分，再加上新增了少数派作为自己的一些工作效率类文章发表渠道，所以在朋友<a href="https://blog.tujunjie.com/">涂俊杰 JunJie</a> 推荐了 RSSHub 与 n8n 集成这种形式后，我在服务器上部署了一套 <a href="https://github.com/DIYgod/RSSHub">RSSHub</a> 服务体验了一下，顿时感觉是很惊艳的解决方案，火速给自己的 Telegram 信息流频道加上了网易云、微博、B 站和少数派的同步支持，内容更加丰富了。</p>
<h3 id="crossbell-同步">Crossbell 同步</h3>
<p>虽然像是 Twitter、Telegram 已经是比较大的平台，但毕竟是中心化的产物，再加上最近的各种风波，对于自己这些信息源的归集总是不放心 Telegram 作为最终站，尤其是我常常在删消息时差点误点删除全部（奇怪的交互体验），所以信息的同步导出部分也是很重要一环。</p>
<p>自己之前提到过的 Side Project 也算是在做这样的事，不过作为一个 Web3 从业者，自然也是眼馋基于区块链的解决方案很久了。其实毕业设计也是做的<a href="https://github.com/pseudoyu/uright">基于 Ethereum 和 IPFS 的数据所有权保护 ÐApp</a> 项目，不过我那个纸糊的 Demo 项目自然是没法满足自己的各种需求，而当时的代码写得实在太乱也没有去重构的欲望了，于是开始找寻链上解决方案。</p>
<p>好久之前关注了 <a href="https://crossbell.io/">Crossbell</a>，也莫名机缘巧合结识了不少 <a href="https://rss3.io/">RSS3</a> 的朋友，但对 Crossbell 之前的印象还停留在 <a href="https://diygod.me/">Diygod</a> 在推特上发的 <a href="https://crosssync.app/">CrossSync</a> 浏览器插件是基于这个链的，当时手机打开的链接，关联钱包并不方便，所以搁置了。</p>
<p>所以想着去官网逛一下，结果发现居然已经有了 <a href="https://xlog.app/">xLog</a>、<a href="https://xsync.app/">xSync</a>、<a href="https://xchar.app/">xChar</a>、<a href="https://crossbell.io/feed">xFeed</a> 等好几项应用，而最关注的 xSync 居然还刚好支持 Telegram Channel，完美匹配了我的需求。</p>
<h4 id="xlog-同步发布博文">xLog 同步发布博文</h4>
<p>于是开始一番配置和装修，首先是将自己个人思考相关的博文同步到了 xLog 上，视觉效果和体验感都不错，且基于 Crossbell 地址能够很方便地进行 follow 和评论。</p>
<p>这是我的 xLog 访问地址：<a href="https://xlog.pseudoyu.com/">xlog.pseudoyu.com</a>，有兴趣的朋友们也可以关注一下，不过目前出于定制化程度、各种历史文章迁移路由问题、自己各项数据统计服务变动等考虑，还是更多作为一个同步分发渠道，暂不打算把博客彻底迁移过去。</p>
<p><img src="https://image.pseudoyu.com/images/yu_xlog_homepage.png" alt="yu_xlog_homepage"></p>
<p>自带的 <a href="https://xlog.pseudoyu.com/nft">NFT 展示柜</a>很不错，应该是集成的 <a href="https://unidata.app/">Unidata</a>，之前就想集成到我的 Hugo 博客里，但一直没来得及动工（<del>有现成的就更懒了</del>）。</p>
<p><img src="https://image.pseudoyu.com/images/yu_xlog_nft.png" alt="yu_xlog_nft"></p>
<h4 id="xsync-自动同步-telegram-和-twitter">xSync 自动同步 Telegram 和 Twitter</h4>
<p>看到 xSync 能够同步 Teleram Channel 数据的时候真的很惊喜，完全不需要再做任何改造就能把我的聚合频道作再一次备份与存档，也很快配置上了，<del>瞬间有点想舍弃自己 Side Project 的冲动</del>。</p>
<p><img src="https://image.pseudoyu.com/images/yu_xsync_homepage.png" alt="yu_xsync_homepage"></p>
<p>不过有些遗憾的就是历史数据只同步了一部分，之前没接入时的数据似乎也没有手动备份同步的选项，不知道有没有配置项或者后续功能可以解决，或者有 RSS3 的朋友知道解决方案的可以说一下，感谢！</p>
<p>都配置好后就可以通过 xChar 来查看自己的各项消息了，很完美的解决方案，这是我的 xCharacter 个人主页: <a href="https://xchar.app/pseudoyu">xchar.app/pseudoyu</a>，也可以查看我的信息流。</p>
<p><img src="https://image.pseudoyu.com/images/yu_xchar_profile.png" alt="yu_xchar_profile"></p>
<p>另外的一个小插曲就是看到要把 <code>pseudoyu@crossbell</code> 放到简介时会心一笑，我当时毕业设计做版权保护 ÐApp 的时候是在 Solidity 合约里使用了 Oraclize API 来访问链下数据，也是抓取的 Youtube 的简介里的唯一标识来作为帐号所有权凭证，有种奇妙的熟悉感哈哈，后面有机会研究一下代码。</p>
<p>这套基于 Crossbell 的信息输入输出解决方案可以说是重构了我原本的个人管理系统，也希望能够结合这个系统做一些自己的尝试。</p>
<h2 id="新年计划">新年计划</h2>
<p>似乎每年列一些年度计划已经是不成文的习惯，但是自己过去的那么多年里也少有照做实现的。今年增加了更多的公开表达渠道，似乎能够更加有动力去做践行。</p>
<p>之前看过 <a href="https://xuanwo.io/">Xuanwo</a> 的一篇『<a href="https://xuanwo.io/reports/2022-37/">2022-37: 基于 Github 的公开工作流程</a>』，稍微研究了一下 GitHub Projects，觉得简洁却也够用，虽然平时也基于 Logseq 做一些基础的 GTD，但依然很难作为看板来使用，今年会试试，也给自己一些对应的压力。</p>
<p>新年计划的粒度很难把控，就随心所欲了，不写那么大而空的了，更多是一些指标吧，有的是自由探索的想法，有的是一些长期的目标，也有一些短期要完成的事，采取了勾选框这样的形式，也许后面想起来会继续添加，期间完成或新的一年年终总结的时候会来回顾 check 一下。</p>
<ul>
<li><input disabled="" type="checkbox"> 好好照顾捏捏，保护好她</li>
<li><input disabled="" type="checkbox"> 去日本 or 回香港工作/一份享受其中的远程工作/自由度满意的工作模式，按照优先级三选一吧</li>
<li><input disabled="" type="checkbox"> 至少去 6 个没去过的城市旅游，最好能见见久违的朋友，虽然不多</li>
<li><input disabled="" type="checkbox"> 坚持每周写周报，完成 48 篇</li>
<li><input disabled="" type="checkbox"> 除了周报外，至少再更新 48 篇原创博文，技术为主</li>
<li><input disabled="" type="checkbox"> 多外出拍照，新开的摄影集栏目至少更新 12 篇（元旦已经冲 kpi 发了两篇了），并且深入学习一下构图、色彩与后期</li>
<li><input disabled="" type="checkbox"> 为 GoCN 贡献至少 12 篇译文</li>
<li><input disabled="" type="checkbox"> 少数派发布 10 篇文章，赚猫罐头钱</li>
<li><input disabled="" type="checkbox"> 开始做 B 站 up 与 Youtuber，至少发 10 个视频，不能太水</li>
<li><input disabled="" type="checkbox"> 坚持每周锻炼/跑步至少四天（健身环或 Keep 也算），也同样会在周报中记录打卡</li>
<li><input disabled="" type="checkbox"> 坚持练吉他，录至少 3 首歌并发布</li>
<li><input disabled="" type="checkbox"> 捡回滑板技能，每周至少练习滑两次</li>
<li><input disabled="" type="checkbox"> 读至少 24 本有意义的书，但不能囫囵吞枣，需要在豆瓣等平台发布自己的感想</li>
<li><input disabled="" type="checkbox"> 日语 N2 证书，为了之后日本的一些计划做的筹备，学习进度会在周报里单开一个模块打卡，可能会突击一下选择 7 月的考试，<del>实在不行 12 月再来一次</del></li>
<li><input disabled="" type="checkbox"> CKAD 证书，去年就准备了一半，不过后来忘记报名购买考试了，没有了压力果然会偷懒</li>
<li><input disabled="" type="checkbox"> 为更多开源项目贡献代码，不要求量，但希望有更多有意义的提交</li>
<li><input disabled="" type="checkbox"> 为自己的开源工具箱项目『<a href="https://github.com/pseudoyu/yu-tools">Yu Tools</a>』写一个展示网站，以及为其中的软硬件条目都写使用体验（大工程了），不断优化迭代</li>
<li><input disabled="" type="checkbox"> 完善『<a href="https://guide.pseudoyu.com/">Blockchain Guide</a>』这一开源指南项目，把过去这一年工作学习的区块链底层与 Web3 相关的项目经验工程经验都多涵盖一点，惭愧的是大部分文章还是在香港读研的时候写的</li>
<li><input disabled="" type="checkbox"> 和朋友一起做的 Side Project 创业项目顺利上线并且不断优化</li>
<li><input disabled="" type="checkbox"> 探索更多有意思的技术，继续享受其中</li>
<li><input disabled="" type="checkbox"> 认识更多有趣的人</li>
<li><input disabled="" type="checkbox"> 好好生活下去</li>
</ul>
<h2 id="个人生活剪影">个人生活剪影</h2>
<p>从 11 月北京疫情严重开始，我就开始了长达两个月的宅家生活，大概多少是有着不错的物理防御属性（指把当时手头上唯一的一点药寄给了朋友，纯靠不出门来隔绝病毒）和幸运点数（每天照常点外卖，中途还有物业来家里处理漏水问题一下午），自己到现在还保持着阴性，已经在决赛圈了。</p>
<p>但随之而来的后果就是已经康复转阴的朋友已经在四处旅游，而我依然连倒个垃圾都全副武装，更不敢出远门了，就这样和猫猫度过了两个月。</p>
<p>虽然确实是宅，但随着疫情放开也确实没个头，所以心态也佛了，这周末应邀（<del>并不，只是以携猫拜访的名义去玩</del>）去了博译学姐家蹭饭，呼吸到了外面并不那么新鲜的空气（<del>毕竟北京</del>），也吃上了久违的家常菜，摆了一天，却心安理得且快乐。</p>
<p><img src="https://image.pseudoyu.com/images/wonderful_meal_with_boyi.jpg" alt="wonderful_meal_with_boyi"></p>
<p>打算 1.18 回杭州了。其实 2022 年回家时间在近几年里已经不算短了，各种调休和假期回家前后加起来可能有 1 个月，只是常常疫情反复，也没来得及回老家一趟。两年前的 1 月外婆离世，困于香港疫情没能回家，去年春节又因为突然的疫情而滞留在京，是该回去看看了，越长大，去的地方越来越多，家却也离我愈发遥远了。</p>
<p>其实前段时间就一直在犹豫回家的事，担心再有什么变故，但还是想回去看看，但这种局势下又不放心给猫舍或者不熟悉的人看管。后来一次开会闲聊时偶然提到，有了解决方案，定了捏捏会寄养在我的项目的小 leader 家里，他女儿眼馋猫猫很久了，安顿好后终于放下了悬着的心。</p>
<p>这样一路折腾估计十有八九是要阳的，得知这个，学姐还给了我豪华抗疫大礼包，感人。</p>
<p><img src="https://image.pseudoyu.com/images/medicines_from_boyi.jpg" alt="medicines_from_boyi"></p>
<p>然后前段时间博译学姐在灵隐的时候帮我许愿了”2023 都能如愿做自己喜欢的事、能够探索更多爱好“，还带了一个好看的佛珠手饰送给我了，我单方面宣布是天下第一好的学姐了，希望新的一年也都能好好的。</p>
<p>突然想起其实之前大学的时候有一年多一直带着倪给我的一个同样是灵隐的佛珠，直到线快磨断了、珠子摇摇欲坠才收起来，莫名觉得那一年确实幸运了许多，有时可能只是需要一些心静吧。</p>
<p>实现了会去还愿的，双份的愿望。</p>
<p><img src="https://image.pseudoyu.com/images/wonderful_gift_with_boyi.jpg" alt="wonderful_gift_with_boyi"></p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<p>这周在 B 站看了两个很有感触的视频，一个是来自我最喜欢的 Up 主『<a href="https://space.bilibili.com/37029661">小鹿 Lawrence</a>』的『<a href="https://www.bilibili.com/video/BV1Mx4y1G7zW">这是我最拼的一年，却让公司缩小了一半｜2022 年终总结</a>』，有一些感触：</p>
<blockquote>
<p>接连着看了好几年了，年终总结这个保留栏目每次也都会看好多好多遍。</p>
</blockquote>
<blockquote>
<p>有过处于同阶段的感同身受，为一些视频而触动；有过动态被鹿哥回复、鼓励了，开心了好多好多天；更多的是陪伴着我度过一个又一个深夜，醒来继续努力生活。可能由于太过熟悉，刚开新工作室门时细微的一点停顿，讲那句“因为曾经家人的支持是你的底气”时的哽咽，花束的 BGM，回顾这一年时的一声苦笑，都让我的情绪随之起伏与落泪。</p>
</blockquote>
<blockquote>
<p>“不是你长大了你就变了，而是你长大了，世界才开始对你展露全部的真相”。也许自己常常被描述的少年感、学生气也不过是过去经历的那些幸运的透支，与身边人对我的保护，才能在自己的周报里一次次谈论自我，一次次向往美好。而在 2022 年，一切也都回到原点。所幸，还能保留着『记录』这种习惯，还未丧失『感受』这项能力，微小，却弥足珍贵。</p>
</blockquote>
<blockquote>
<p>“这一年失去的东西太多太多，任何一点细小的死亡与崩坏，都会变得不可承受”。是啊，2022 就是很难啊，不可名状。新的一年，也要勉强努力一个人生活下去。</p>
</blockquote>
<blockquote>
<p>感谢鹿哥过去一年的陪伴与带来的感动，新的一年，加油！</p>
</blockquote>
<p>还有一个很犀利的 Up 主『<a href="https://space.bilibili.com/119801456">老蒋巨靠谱</a>』的『<a href="https://www.bilibili.com/video/BV17M411y7es">和不可名状的非必要一年说再见——我的新年献词</a>』，感想：</p>
<blockquote>
<p>太喜欢老蒋的思考和叙述风格了，平实、真诚但却大胆而不失尖锐，是看过得最好的新年献词了。</p>
</blockquote>
<blockquote>
<p>2022 就是这样过去了，很多事不可说，很多事正在发生，很多事再也不会发生，不可名状大概也是最好的形容了。</p>
</blockquote>
<h2 id="总结">总结</h2>
<p>2023 年的第一周，今年是个还不错的开端吧。</p>
]]></content:encoded></item><item><title>摄影集 #02 - Moment In Peking (The Autumn)</title><link>https://www.pseudoyu.com/en/2023/01/02/moment_in_peking_the_autumn/</link><pubDate>Mon, 02 Jan 2023 18:00:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/02/moment_in_peking_the_autumn/</guid><description>前言 来北京已经一年多了，由于长期宅在自己的小屋里，也没有太多心绪去探索，它的四季于我来说仅仅是上班路上的草木风光，连最耳熟能详的几个景点都未</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>来北京已经一年多了，由于长期宅在自己的小屋里，也没有太多心绪去探索，它的四季于我来说仅仅是上班路上的草木风光，连最耳熟能详的几个景点都未曾涉足。</p>
<p>其实这些年辗转了不少城市，每次都总是觉得“时间还早”、“来日方长”、“总有机会”，却常常留下许多遗憾。临近 12 月了才发现已经是晚秋了，之前计划的香山红叶可能也只剩一些残存了，但依然决定去用镜头留下一些秋天的痕迹。</p>
<p>之前看过林语堂的《京华烟云》，英文书名是《Moment In Peking》，承载了这座城市的很多悲欢离合，也勾画了当初的我对北京的第一印象。所以这次的摄影集也取名为『Moment In Peking (The Autumn)』，尽管秋意已经几乎散尽，依然是一段城市回忆。</p>
<p>特别鸣谢刚拿到驾照的博译学姐在疫情已经恶化的时候还愿意租车带我前往（<del>也是一个敢开，一个敢坐</del>）。</p>
<blockquote>
<p>因为是摄影集作品，这个栏目不想压图片质量，每张都比较大，放在阿里云 OSS 上了（账单警告 ⚠️），加载可能会略慢一些，见谅。</p>
</blockquote>
<h2 id="moment-in-peking-the-autumn">Moment In Peking (The Autumn)</h2>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04388.jpg"  />
    </div>
    
  </figure>
</div>

<!-- 

<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04373.jpg"  />
    </div>
    
  </figure>
</div>
 -->


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04374.jpg"  />
    </div>
    
  </figure>
</div>

<!-- 

<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04363.jpg"  />
    </div>
    
  </figure>
</div>
 -->


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04378.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04390.jpg"  />
    </div>
    
  </figure>
</div>

<!-- 

<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04367.jpg"  />
    </div>
    
  </figure>
</div>
 -->


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04383.jpg"  />
    </div>
    
  </figure>
</div>

]]></content:encoded></item><item><title>摄影集 #01 - Cat In The Box</title><link>https://www.pseudoyu.com/en/2023/01/01/cat_in_the_box/</link><pubDate>Sun, 01 Jan 2023 21:18:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/01/01/cat_in_the_box/</guid><description>前言 从 11 月开始一直想好好给捏捏拍照，但家里的采光不太好，当时工作比较匆忙也没刻意去购置布景和打光器材，今天在修图（我其实主要就是微调个色，懒</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>从 11 月开始一直想好好给捏捏拍照，但家里的采光不太好，当时工作比较匆忙也没刻意去购置布景和打光器材，今天在修图（我其实主要就是微调个色，懒）的时候感觉成片不算很满意，但是在新年第一天的 flag 不能倒，所以找朋友选了几张觉得还可以的，也算是一个好的开始了。</p>
<p>我的摄影启蒙来自一位纪实记者与纪录片导演，所以其实更在意画面构图与元素，总希望拍下的每一张照片都有一些故事感和主题（<del>低情商：技术不行</del>）。因为太喜欢这张在盒子里的照片了，所以给这个特辑取名为『Cat In The Box』；其中也有一个场景正巧站在我看了一半的村上的书上，再联想起当时看到村上的书里对猫咪的描述才有了更迫切的养猫的念头，也有一种奇妙的缘分，所以取名为『猫与村上春树』；还有几张是睡前抓拍的，光线是暗到后期都拯救不回来的程度，但是确实觉得很可爱（是摄影师的问题），所以也当作番外放一下了，取名为『Silence』（没错最近看日剧『静雪』有点上头）。</p>
<p>其实已经大概两年没好好拿起相机拍东西了，想重新开始记录一下生活，也要在摄影上多下点功夫了（<del>之前纯靠玄学审美和模特好看扛着了</del>），所以在博客的项目模块新增了一个摄影集栏目，当作自己摄影提升计划打卡了，新年里也要多给捏捏拍照。</p>
<blockquote>
<p>因为是摄影集作品，这个栏目不想压画质，每张都接近 10M，放在阿里云 OSS 上了（账单警告 ⚠️），加载可能会略慢一些，见谅。</p>
</blockquote>
<h2 id="cat-in-the-box">Cat In The Box</h2>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04487.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04509.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04468.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04431.jpg"  />
    </div>
    
  </figure>
</div>

<h2 id="猫与村上春树">猫与村上春树</h2>


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04451.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04452.jpg"  />
    </div>
    
  </figure>
</div>

<h2 id="silence">Silence</h2>


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04409.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/A7_04427.jpg"  />
    </div>
    
  </figure>
</div>

]]></content:encoded></item><item><title>2022 年末回顾 - 迷茫、低谷与改变</title><link>https://www.pseudoyu.com/en/2022/12/31/yearly_review_2022/</link><pubDate>Sat, 31 Dec 2022 14:18:37 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/31/yearly_review_2022/</guid><description>《后来的我们 - 五月天》 前言 今天是 2022 年的最后一天了，如之前周报所说： 年度总结也会有，会有自己这一年的各种事，失去的、得到的、值得感谢的、难免遗</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/yearly_review_2022_photo.png" alt="yearly_review_2022_photo"></p>
<p>今天是 2022 年的最后一天了，如之前周报所说：</p>
<blockquote>
<p>年度总结也会有，会有自己这一年的各种事，失去的、得到的、值得感谢的、难免遗憾的，虽然也犹豫过要不要再提一些东西，但还是决定更真实地面对吧。毕竟所有东西都会过期，凤梨罐头也是，这一年也是，是这些喜怒哀乐构成了我的 2022，也构成了一个更加完整的我。</p>
</blockquote>
<p>早早立下了年终总结的 flag，本想花上几天好好雕琢一下，却（<del>毫无意外地</del>）拖延到了 31 号下午。</p>
<p>19 年 Gap Year 的时候，当时的那份工作常常要出差，大半年里飞了三十多趟，行程密集时常常在飞机上一觉醒来会有几秒的恍惚，不知道自己在哪个城市、在做什么。这一年的生活其实大多时间在自己的小屋里，却也有同样的感觉。</p>
<p>似乎从大学毕业的那一年开始，每年总会发生很多计划之外的事，甚至一些事也会很轻易地改变自己的人生，但可能这也是生活的有趣之处。</p>
<p>也许是因为分享欲有了身边人的寄托，之前的几年里感觉生活已然美好而自足，所以没把跨年本身作为一个很有仪式感的节点，但今年却总想记录些什么，大概也到了以文字来对抗遗忘的年纪了吧。开始写回顾时才发现过去的一年奇妙地是自己各个方面的转折点。</p>
<p>虽然没能回去参加毕业典礼，但 1 月拿到了港大的毕业证与留学生认证，正式离开了学校；同样在 1 月初申请了岗位转正，开启了自己的第一份区块链研发工作；4 月，自己作为技术负责人的第一个项目顺利交付；5 月，分手了；6 月，重新捡起断更了很久的博客，开始写周报，并开始启用 Twitter 记录生活日常；7 月，回了趟家，重新体会到生活的一些归属。10 月，重拾心情养了猫，一只可爱的银渐层，生活明媚了许多；12 月，因为疫情在一直在家和“捏捏”共度时光，也开始做一些 side projects，算是离独立开发的梦更近了一些。</p>
<p>似乎这一年转换了很多身份，也经历了很多心境变化，从初工作的迷茫到生活的最低谷，再到重拾心情改变，站在这个节点回看也会感到讶异，原来短短几个月会发生那么多事。如果要给这一年设定一个主题，我会选择『变动』吧。</p>
<h2 id="感谢的人">感谢的人</h2>
<p>这一年的生活里有很多值得感谢的人。</p>
<p>感谢甜崽陪我度过了上半年最迷茫和焦虑的一段时光，即使没能继续走下去，也希望能够一直好好的；虽然身处三地，倪和占在很多个深夜里听我倾诉，陪我难过，后来的这些对于生活、感情观的思考也都源于他们的 push；和晓瑜虽然常常各自消失，但似乎不论什么时候只要一个电话就能够畅聊整晚，每次聊完也都能重新拾起对生活的期待，同时也算助力和见证了一段感情的萌生与结果，一定要继续幸福下去；父母日常的关心总是能够让我感受到温暖，与妹妹萱萱的聊天也让我多了很多乐趣；每次回杭也会期待与初中班主任春哥的相聚，似乎这样十几年如一日像朋友般的相处模式才能让我感觉到时间的静止（虽然每次都是最好奇我的感情经历然后骂我渣男）。</p>
<p>与乐迪的日常和带些文青属性的交流让我们感觉似乎回到了大学时光，也相互为对方的“感情”出谋划策，尽管都以悲剧收场；小雨学姐和许翀在我情绪的最低谷陪我喝酒排解，当然，后来也渐渐发现酒并不能解决问题，戒了；来自小宇、草木灰、静茹和徒儿的关心让我觉得似乎自己也还值得拥有一些朋友；博译学姐的生活状态让我相信 work 和 life 真的能 balance，也感谢数次收留我去蹭饭，让我觉得北京似乎也不是那么无依无靠；还有很多很多。</p>
<p>感谢这一年里大家给予我的陪伴与感动，也希望在未来的日子里平安喜乐，都能被生活温柔相待。</p>
<h2 id="感情与重新生活">感情与重新生活</h2>
<p>在分开后的日子，自己花了几个月的时间放慢脚步，用心去体会与感受生活本身，去找回自己在迷茫中前行时丢失的那些点滴。</p>
<p>从『<a href="https://www.pseudoyu.com/en/2022/06/06/yearly_review_25/">25 岁的自白：花束般的恋爱</a>』这篇当时写完心情起伏很大但后来回顾却虚有些华丽的生日总结开始，思考了『<a href="https://www.pseudoyu.com/en/2022/06/28/weekly_review_20220626/">情感、安全感与认真生活</a>』，试图找回自己『<a href="https://www.pseudoyu.com/en/2022/07/11/weekly_review_20220711/">健康、目标与生活的节奏感</a>』。</p>
<p>趁着项目结束的小长假回了趟杭州，思考了『<a href="https://www.pseudoyu.com/en/2022/07/24/weekly_review_20220724/">亲情与城市的归属感</a>』。偶尔会有因为曾经一起的痕迹被悄然抹去引起的情绪波澜，当发现过去的那些生活与关联『<a href="https://www.pseudoyu.com/en/2022/08/22/weekly_review_20220822/">404 Not Found</a>』后，也重新开始计划再养一只猫而让自己有所寄托与期待。</p>
<p>因为村上的一本书开始思考自己的『<a href="https://www.pseudoyu.com/en/2022/08/29/weekly_review_20220829/">人格与生活的本质</a>』，因为和故友的几次聊天不眠夜开始想起更加遥远的过去，回想了『<a href="https://www.pseudoyu.com/en/2022/09/04/weekly_review_20220904/">过去、遗憾与当下</a>』。</p>
<p>趁着一次突发的青岛出差给自己设计了一场『<a href="https://www.pseudoyu.com/en/2022/09/13/weekly_review_20220913/">不期而遇的旅行</a>』，在旅途中感受美好，并与自己的一部分内心执念和解了。国庆时由于突发的情绪波动，刚刚好转起来的生活又有了明显的颓势，度过了一阵艰难的时光，『<a href="https://www.pseudoyu.com/en/2022/10/09/weekly_review_20221009/">搁置了生活与自我</a>』。</p>
<p>也愈加发现情绪积累之重，于是回北京后不久就去猫舍看了，因为合眼缘当周就养了一只可爱的银渐层，重新过上了『<a href="https://www.pseudoyu.com/en/2022/10/31/weekly_review_20221031/">他和他的猫</a>』的生活。</p>
<p>与猫猫共处的日子静谧而美好，感受到了『<a href="https://www.pseudoyu.com/en/2022/11/08/weekly_review_20221108/">陪伴与另一种生活</a>』，也慢慢开始重新拿起手机和相机随手记录一些生活点滴美好，其实未曾设想猫能给自己带来那么大的变化，就像自己『<a href="https://www.pseudoyu.com/en/2022/12/06/weekly_review_20221206/">重新捡起了生活</a>』，也在圣诞的深夜看着『<a href="https://www.pseudoyu.com/en/2022/12/27/weekly_review_20221227/">Love Actually | 真爱至上</a>』并重新思索爱情与生活。</p>
<p>有些庆幸当时决定以周报的形式开始记录一切，在回顾时也能够将自己在这半年里零碎记录下的想法与感受串成一条线，能看到自己的变化，也能看到生活的流动。不知道新的一年会在哪里有怎样的感受，各个方面是会有怎样的改变，但依然会继续记录这些自己成长的碎片。</p>
<h2 id="性格与改变">性格与改变</h2>
<p><img src="https://image.pseudoyu.com/images/yu_personality_infj.png" alt="yu_personality_infj"></p>
<p>昨晚突然想到很久没有做性格测试了，可能也有了不少改变，就做了一下。还记得大学时候的自己是个 ENTJ，后来短暂有变成 INTJ，但也时常徘徊，经过了这一两年的各种事，自己竟然已经是 INFJ 了，有些惊讶。</p>
<p>可能是由于更多把自我的一些追寻和探索转向『<a href="https://www.pseudoyu.com/en/2022/10/18/weekly_review_20221018/">内观而非外求</a>』，而周报也是多偏内心与情绪，我的内向与偏重感受的倾向变的越来越明显。</p>
<p>之前的自己大概是一个有些过分追求自我、某些时候理性到甚至有些冷漠的人，对他人的生活总是仅仅给予礼貌限度的关心，即使是最亲近的人，优先级似乎也常常在自我之下。这一点也许在独自前行时能够有一些助力，但生活是复杂的也是流动的，人与人的关系常常也并不只是单方的妥协，简单的道理，身处其中却也很难做到。</p>
<h2 id="改变最大的三件事">改变最大的三件事</h2>
<p>常常会看到在年终时总结自己这一年的变化，我也跟风列举三项，不是什么深思熟虑后的重大事件，只是回顾时记忆深刻的一些。当然，上文已经提过不少，所以不想过多提及感情。</p>
<h3 id="抚养捏捏">抚养捏捏</h3>
<p><img src="https://image.pseudoyu.com/images/my_cat_nie_nie_28.jpg" alt="my_cat_nie_nie_28"></p>
<p>“捏捏”是我家的猫猫，从 10 月 30 日带回家后已经一起相处了两个月。</p>
<p>独自养猫这件事本身对于我来说其实也是一个很大的挑战（毕竟我是真的能两三天不吃饭不怎么睡觉在电脑前沉迷在自己的世界的，生活无比粗糙），也经过了很多犹豫，但见到她的当下，几乎就已经下了决心。</p>
<p>一切似乎都是从头开始学，两个月的时间改变了我很多，也希望新的一年里都能够继续健康生活下去。</p>
<p>圣诞装扮因为快递延迟了一些，所以还没出，明天会更新之前拍的一套『Cat In the Box』系列照片，<del>只想看捏捏的可以退出了</del>。</p>
<h3 id="使用双拼输入法">使用双拼输入法</h3>
<p><img src="https://image.pseudoyu.com/images/shuangpin_input_preview.png" alt="shuangpin_input_preview"></p>
<p>从小学接触电脑开始，我就用的拼音输入法（全拼），也就是我们常用的九宫格和 26 键那种，一个维系了十几年的习惯，在 5 月突然想有所改变，其实倒也不是纯粹去追求打字速度的提升，只是想尝试一下，改变一个早已习以为常甚至已经融入本能的生活习惯有多难（<del>这个人句句不提感情，但句句不离感情</del>）。</p>
<p>双拼是一种不同的键位分布，打任何一个字都只需要敲击两下键盘（声母+韵母），所以前期还是会有很多不适应的地方，虽然记忆键位只用了一个下午，但转换习惯大概花了半个月，也无数次想要切换回来，但过了阵痛期后原来也没有那么难。</p>
<p>是吧，其实也没有那么难。</p>
<h3 id="换了新发色">换了新发色</h3>
<p><img src="https://image.pseudoyu.com/images/yu_selfish_2022.jpg" alt="yu_selfish_2022"></p>
<blockquote>
<p>实在是很少有自己的照片，而且拍完才发现镜子已经脏到不需要打码了。</p>
</blockquote>
<p>这个本身虽然倒不是一个多大的改变，但我是比较少做这样的尝试，在 7 月的时候换了绿色发色，褪色差不多后又在 10 月换了蓝色，后者感觉更像个动漫死宅了，也算是圆了自己的一个二次元梦了，不过也就现在头发多所以还能折腾折腾，目前还是会保留蓝色吧。</p>
<p>也算是通过改变换一下心情吧。</p>
<h2 id="学习输入与输出">学习、输入与输出</h2>
<h3 id="工作">工作</h3>
<p>今年和 leader 涛哥在项目上的接触少了，但他的一些对于技术的想法态度还是有在深深影响着我，后面大概还是在几个项目的折磨下提升了不少 Go 开发的工程能力吧，还对 docker、k8s 以及各种 ci/cd 有了不错的基础，也自己做了不少探索。</p>
<p>系统学习了 Solidity 智能合约开发的一些知识，也出了相关的入门系列教程 —— 『<a href="https://guide.pseudoyu.com/">区块链入门指南</a>』，在下半年的项目中也做合约开发和与链交互相关的一些工作任务，总体是挺开心挺有成长的一年。</p>
<p>虽然工作氛围和方式已经是较为自由了，但也常常会感受到来自工作的一些消耗，有在考虑一些 Web3 远程工作的形式或是新的机会，大概也可能会回香港吧，新的一年，也许也适合做一些改变。</p>
<h3 id="技术">技术</h3>
<p>工作之外，自己还是做了一些好玩的探索，算是解锁了前端开发的一些基础技能，能够结合着原有的技术栈做一些小项目和工具了，以后介绍就可以加上“一个会糊点前端的后端”了，<del>或者厚颜无耻地加上一个伪全栈（pseudo full-stack）了</del>。</p>
<p>倒不是前端技术学习本身有多么让人欣喜，只是这样就可以独立做一些自己的产品，也能更好地解决一些问题，更接近自己想做技术的初衷了。</p>
<p>Rust 学了基础，但是还没在实践中用到，新年希望能有所精进；倒是计划好的 LeetCode 算法刷题一直没实践，也是新的一年的重点计划了，<del>虽然确实很难坚持</del>。</p>
<p>在 <a href="https://gocn.vip/">GoCN</a> 翻译团队继续贡献了接近 10 篇文章和参与了两本书，也承包了各种 ci/cd；参与了慢雾的『<a href="https://darkhandbook.io/">区块链黑暗森林自救手册</a>』英文翻译团队，也算是为 Web3 作了一些微小的贡献。</p>
<h3 id="语言">语言</h3>
<p>今年的很多重心放在了英语听读写的培养上，算是有了一些进步，可以 1.5 倍速看英文教程与 Podcasts，无字幕刷《硅谷》美剧，一些技术翻译和写作也还算得心应手，但口语还是有些欠缺，再加上很少练习，算是比较薄弱的一环了，离开了英语环境的提升也很依靠毅力了。</p>
<p>原本计划好的日语复习（<del>其实基本也等于预习了</del>）也搁置了，新年开始要在周报打卡学习进度了。</p>
<p>德语也只复习到一些基本词汇短语，早知道当年学二外的时候更加认真了，<del>现在就是很后悔</del>，这个不立 flag，随缘了。</p>
<h3 id="阅读与影音">阅读与影音</h3>
<p>为了 Telegram 频道的同步，我今年开始用豆瓣记录自己的一些读书、影音和游戏，影音因为有一部分是补标的，数据没什么参考性，就不放了。</p>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_book.png" alt="yu_2022_review_book"></p>
<p>今年后半年还算是读了蛮多书，大多时间是在通勤和午休的时候看的，没有刻意去追求什么量，整理时却突然发现也已经有 30 本之多，感觉慢慢找回了一些阅读写作的心境和乐趣。我最喜欢的作家是毛姆，他有一本读书随笔中有一句话叫“阅读是一座随身携带的避难所”，这半年也深有体会，书中可以看到很多不一样的世界，也有很多不一样的人生，真好。</p>
<p>也刷了不少剧，各种电影、剧集和动漫加起来应该有超过 100 部吧，也尽量有在认真体会。大概自己豆瓣文青的人设已经稳稳的了，收到了分别两个朋友送的豆瓣电影日历和一个电影放映周历，未来的一年也会继续多看一些。</p>
<p>因为想记录下这些痕迹，所以也开始在看完的书籍和影音后加上自己的感想发在豆瓣，感觉这种方式也有让自己在看的时候会更用心，虽然都是短评，累积下来不知不觉也有 8932 字。</p>
<h2 id="年终数据">年终数据</h2>
<p>大概还是受到了她的一些影响，原本比较随意无序的自己今年似乎也想以数据化的方式展现一些小小成长。</p>
<h3 id="重新捡起的博客">重新捡起的博客</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_umami_data.png" alt="yu_2022_review_umami_data"></p>
<p>自己很早开始写公众号和博文，但是就之前的更新频率和内容来说也很难称为独立博客。从五月的一篇『<a href="https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/">2022 年了，聊聊我为什么还在写博客</a>』开始，重新捡起了<a href="https://www.pseudoyu.com/">我的博客</a>，这一年里正好更新了 48 篇博文，虽然几乎都是下半年更新的，<del>但四舍五入我周更了</del>，其中周报和一些心绪相关的文章与技术博文和效率工具相关的文章刚巧约一半一半，也符合了我对于内容输出与分享欲的定位，不错的开端。</p>
<p>随着博文的持续更新，稍得到了一些读者的关注。从 6 月中旬通过 umami 搭建了一个数据统计系统，随着每个月更用心地输出，月 pv(page view) 已经到了 12k+，月 uv(unique visitor) 也到了 4k+，并且保持着不错的增长态势，能够看到自己的输出得到了一些认可，也常常在半夜打开统计界面时看到“当前在线 5 人”这样的提示时会心一笑。</p>
<p>常常也会收到一些感谢或是鼓励的评论，不知不觉也积累了好多页，很感谢这些素昧平生的陌生人用心的留言与评论，很开心自己的文字能够改变或是启发一些人，也感谢在博客已经式微的当下，他们依然愿意“浪费”自己的一些时间通过这种方式向我传达一些想法，即使只是简单的一句祝福与感谢。也在年度回顾之际精选一些以作分享（见文末），希望未来的一年还有你们相伴。</p>
<h3 id="推特">推特</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_twitter.png" alt="yu_2022_review_twitter"></p>
<p>也许是因为渐渐习惯了博客这种对外输出的方式，也许是因为随着生活变动分享欲无处安放，从年中启用了自己的推特帐号，原本只是想作为一个像是私密微博，前期也只是发一些深夜情绪。</p>
<p>后来随着和 <a href="https://twitter.com/strrlthedev">STRRL</a>、<a href="https://twitter.com/RealAkemiHomura">Homura</a>、<a href="https://twitter.com/Manjusaka_Lee">Manjusaka</a>、<a href="https://twitter.com/_a_wing">新一</a>和 <a href="https://twitter.com/OnlyXuanwo">Xuanwo</a> 等朋友一起分享自己的周报和闲聊，感受到了大家的友好，也更多开始分享自己的日常，不知不觉也发了 514 条推文（<del>这个人废话还挺多的</del>），收获了 600+ 朋友的关注，居然也能和 <a href="https://twitter.com/yihong0618">yihong</a>、<a href="https://twitter.com/GeekPlux">GeekPlux</a> 这些之前仅存在我仰望的关注列表里的技术博主互关，偶尔也能有一些很有趣的互动。</p>
<p>感谢这些朋友不嫌弃我。</p>
<h3 id="telegram-频道">Telegram 频道</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_tg.png" alt="yu_2022_review_tg"></p>
<p>在之前的一篇周报『<a href="https://www.pseudoyu.com/en/2022/09/19/weekly_review_20220919/">周报 #12 - 赛博空间、自我定义与界限</a>』里，我提到有搭建自己的一个 Telegram 频道，用来同步自己的各种 Twitter、评论、点赞等，原本也只是用于自己每周周报找素材的一份存档，不知不觉也有了 251 位订阅者，也收到了其中一些人对我频道的感谢，似乎自己不经意间做的一些事竟然也给别人创造了一些价值，很惊喜，会继续坚持输出的。</p>
<h3 id="github">GitHub</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_github_data.png" alt="yu_2022_review_github_data"></p>
<p>GitHub 也是年中才好好用起来的，2022 年有 1.1k 次代码提交，给 12 个项目贡献了 36 个 PR，收获了 260 个关注者。最开心的还是给自己在用了好几年的 hugo 主题项目提了一些优化和新增特性的 PR，经过了和开发者的一些交流后合并进了主分支，有一种很奇妙的参与感，可能这就是开源的魅力吧。</p>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_yu_tools.png" alt="yu_2022_review_yu_tools"></p>
<p>自己的一个工具箱项目『<a href="https://github.com/pseudoyu/yu-tools">GitHub - yu-tools</a>』也让我收获了 400+ stars（<del>别骂了，是 markdown 项目</del>），再加上自己做了一些区块链相关的项目，总 stars 终于破 500 了，还是蛮开心的，新年会为这个工具箱项目写一个网站，呈现更多工具介绍和使用体验。</p>
<h3 id="少数派">少数派</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_sspai.png" alt="yu_2022_review_sspai"></p>
<p>少数派是一个我看了好几年的平台，有很多效率工具类的优质文章，其实没想到自己能成为入驻作者。这一年写了 12 篇文章（包括了前几篇从博客搬运过来的），累计 38660 字，得到了 7 篇推荐，其中 4 篇首页推荐，1 篇会员专享，文章总阅读量达到 20w+，收获了 150 左右的关注，还收获了几千的稿费。新的一年也会继续产出一些文章，猫罐头就有了（<del>为了养猫真是成为了打工战士</del>），很感谢少数派的编辑『<a href="https://sspai.com/u/thebaldingken/updates">北鸮</a>』，很耐心也很友好，还向他学习了一些双拼输入法经验。</p>
<h2 id="总结">总结</h2>
<p>2022 年经历了许多许多，即使有了这些记录和数据，回顾的时候仍觉得有些恍若隔世。</p>
<p>新的一年就要开始了，祝 2023 年的自己，快乐。</p>
<h2 id="附录">附录</h2>
<h3 id="博客评论展示">博客评论展示</h3>
<p><img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_1.png" alt="yu_2022_review_cusdis_comment_1">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_2.png" alt="yu_2022_review_cusdis_comment_2">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_3.png" alt="yu_2022_review_cusdis_comment_3">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_4.png" alt="yu_2022_review_cusdis_comment_4">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_5.png" alt="yu_2022_review_cusdis_comment_5">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_7.png" alt="yu_2022_review_cusdis_comment_7">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_6.png" alt="yu_2022_review_cusdis_comment_6">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_8.png" alt="yu_2022_review_cusdis_comment_8">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_9.png" alt="yu_2022_review_cusdis_comment_9">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_10.png" alt="yu_2022_review_cusdis_comment_10">
<img src="https://image.pseudoyu.com/images/yu_2022_review_cusdis_comment_12.png" alt="yu_2022_review_cusdis_comment_12"></p>
]]></content:encoded></item><item><title>周报 #24 - Love Actually | 真爱至上</title><link>https://www.pseudoyu.com/en/2022/12/27/weekly_review_20221227/</link><pubDate>Tue, 27 Dec 2022 01:59:29 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/27/weekly_review_20221227/</guid><description>《クリスマスソング (English Cover) - Matt Cab》 前言 本篇是对 2022-12-20 到 2022-12-27 这周生活的记录与思考。 不知不觉已经第 24 篇了，也是 2022 年最后一篇周报了。有时候就是有这样莫名</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/christmas_song_english_version.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《クリスマスソング (English Cover) - Matt Cab》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-12-20</code> 到 <code>2022-12-27</code> 这周生活的记录与思考。</p>
<p>不知不觉已经第 24 篇了，也是 2022 年最后一篇周报了。有时候就是有这样莫名的仪式感，当有意义的事发生在一些比较整的时间节点时常常就会格外开心。</p>
<p>有时候分享欲这件事就是那么奇妙，明明在过去接近四五年里都已经习惯于关闭朋友圈入口，也很少发与私人情绪有关的东西，却在这小半年里开始用周报记录自己的日常，也在推特和 INS 上频繁分享（虽然大多也是猫猫相关的，但也是迈出社恐康复治疗第一步了），有时候改变的发生可能也不需要太多理由，只是 Timing。</p>
<p>这一周依然在辗转于学习与工作，但可能因为之前几天严重缺觉（基本上都是 3 点后睡），效率不算很高，大多时间也是在看课和调试代码，也算是缓缓调整了一下节奏。</p>
<p>在家与猫猫共度了第一个圣诞，收到了朋友给捏捏寄的圣诞装扮但当天偷懒没拍，也同样是跟着年底一起出片吧（还在 SD 卡里），当天也带点仪式感地点了想念了挺久的胖哥俩肉蟹煲外卖，但可能长期断食每天一顿饭，食量下降得严重，分两顿也没吃完。</p>
<p>一位很久没联系的大学同学最近在 B 站做了主播，突然感觉自己的二次元宅属性被唤醒了，看了几场，还受托当了正义的房管和粉丝群里的信息老师（？），还挺有意思的。顺便研究了一下录播姬，找了台服务器用 Docker 跑了个服务自动录屏，感觉能用一些自己熟悉的技术解决朋友的问题还挺有趣的。</p>
<p>另外，我的博客下雪了。</p>
<h2 id="love-actually">Love Actually</h2>
<p><img src="https://image.pseudoyu.com/images/loveactually.jpg" alt="loveactually"></p>
<p>虽然其实自己现在很难去思考对于感情还留有几分向往和几分勇气，曾以为能共度余生的人悄然离开，生活的痕迹被一点点抹去，但记忆重新涌上心头时难免会怀疑所谓 True Love 是否存在。于是在圣诞的夜晚重温了《Love Actually | 真爱至上》这部经典，也算是每年的保留节目了。</p>
<p>这是不论自己处于多痛苦的时刻，看了后总会愿意继续相信美好的一部电影。这部电影和 Matt Cab 翻唱的英文版『Christmas Song』（日剧《朝五晚九》的主题曲）总是让我把圣诞与美好的爱情联系在一起，无关具体的情感或是经历，只是这种美好的氛围就已经足够诉说所有情愫。</p>
<p><img src="https://image.pseudoyu.com/images/love_actually_you_are_perfect.jpg" alt="love_actually_you_are_perfect"></p>
<p>最喜欢的是这一对，虽然只有藏在心底的爱慕，却真诚而美好。</p>
<blockquote>
<p>“我爱你，与你无关。”</p>
</blockquote>
<p>到了这个年纪还保留着那么多幻想还挺难得的（或者说幼稚）吧，但始终觉得喜欢的情愫是远远凌驾于其他因素之上的，经历了这些依然这么坚持着。</p>
<p>写着写着难免泛起一些情绪，不想聊太多，分享一下歌词吧。</p>
<blockquote>
<p>The sound and bells are ringing everywhere,</p>
<p>A common classic familiar feeling,</p>
<p>There&rsquo;s something about the coldness in the air,</p>
<p>This season&rsquo;s got me feeling some kind away the night,</p>
<p>Christmas Carol&rsquo;s on repeat,</p>
<p>and happy couples fill the street,</p>
<p>See the city glistening,the sun and rushes over me,</p>
<p>I just wanna see your face, want you next to me,</p>
<p>Cause it has to be alone in Christmas Eve,</p>
<p>And if I could have just one wish come true,</p>
<p>girl you know, I wish for you,</p>
<p>Oh no every time I take a look around,</p>
<p>I get a little blue,</p>
<p>Cause even though I ask Santa to be nice to me,</p>
<p>There&rsquo;s nothing he can do,</p>
<p>I just want you in my arms, want you close to me,</p>
<p>and if I have you by my side make sure you&rsquo;ll never leave,</p>
<p>Yeah I know you out there aren&rsquo;t you missing me,</p>
<p>Cause girl you know, I&rsquo;m missing you,</p>
<p>No I can&rsquo;t find a better word to say,</p>
<p>I don&rsquo;t know what they&rsquo;ll do,</p>
<p>So maybe it&rsquo;s just better if you let me sum it up,</p>
<p>Baby I love you,</p>
<p>Oh&hellip;&hellip;Oh baby&hellip;..yeah&hellip;&hellip;</p>
<p>And it feels like yesterday,</p>
<p>the first time that I saw your face,</p>
<p>I never felt quite like this before,</p>
<p>Girl you do something to me~.</p>
<p>—— 来自 Matt Cab <a href="https://music.163.com/#/song?app_version=8.9.0&amp;id=39227975">《クリスマスソング (English Cover)》</a></p>
</blockquote>
<h2 id="与捏捏的日常">与『捏捏』的日常</h2>
<p>之前拍的几批和圣诞还没出片，就放一些静静的日常吧。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_22.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_23.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_24.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_25.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_26.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_27.jpg"  />
    </div>
    
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输出">输出</h3>
<p>上周的周报写了一篇关于如何学习的文章，算是对自己的一些经历的总结和思考，还挺开心的，顺便也在少数派上发了，继续打几份工挣猫粮钱了哈哈。</p>
<p>虽然不想那么早就开始立各种新年 flag，但是得继续更新文章了！</p>
<h3 id="输入">输入</h3>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>天官赐福</strong>，这部倒是很有意思，本来我蛮少看国漫以及类似题材的，但我现在刚上初中的妹妹今年开始写天官的同人小说，虽然是每期都追完了，但动漫却还一直没看过，也是补上了，这样去了解妹妹的喜好和她关注的世界也很有趣。</li>
<li><strong>Death Note: Desu nôto</strong>，死亡笔记的动漫是无法超越了，但就是喜欢到即使失望也会去看各种衍生作品，但是剧集出乎意料地还不错，很侧重月的心理描写和变化。</li>
<li><strong>间谍过家家</strong>，part2 开播的时候没追，这两天才补完，阿尼亚赛高！</li>
<li><strong>三体</strong>，第四集有点迷，几句话能讲完的剧情水了一集。</li>
</ul>
]]></content:encoded></item><item><title>周报 #23 - 如何学习一门新的技术（文科转码选手浅谈）</title><link>https://www.pseudoyu.com/en/2022/12/19/weekly_review_20221219/</link><pubDate>Mon, 19 Dec 2022 06:20:46 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/19/weekly_review_20221219/</guid><description>《Brand New Day - 墊底辣妹主題曲》 前言 本篇是对 2022-12-14 到 2022-12-19 这周生活的记录与思考。 本周同样因为疫情而居家办公（感觉这个开场白之后可以去掉了，已经是常</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/brand_new_day.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《Brand New Day - 墊底辣妹主題曲》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-12-14</code> 到 <code>2022-12-19</code> 这周生活的记录与思考。</p>
<p>本周同样因为疫情而居家办公（感觉这个开场白之后可以去掉了，已经是常态了），依然还是在“不务正业”地学前端，顺便工作写一点后端代码，有几天甚至不知不觉都已经拂晓了，感觉找回了去年在香港赶 due 和备战期末考的状态，但这次少了很多外界的压力和焦虑感，更加享受其中。</p>
<p>有过前一段时间天天加班到深夜的体验，才更加意识到能够自由支配一些时间，学习想学的东西，或是单纯和猫猫一起发呆的日子是多么珍贵。但是感觉已经有很久的时间都在状态调整和分享自己的一些日常，很久没有写些什么干货或是经验了，今天就来浅分享一下自己的一些学习经验、方法和思路吧，可能更多还是一些概念上的，后续（大概？）也有更具体的分享。</p>
<blockquote>
<p>想了想还是补充了下面这两段话。</p>
</blockquote>
<p>其实一开始只是想着该写年度总结了，于是看了看自己这一年（或者其实严格意义上是从 5 月才开始恢复更新的这半年）的文章，除了 5 月发了很多工具效率类的文章外，大多都是周报，一些思考、想法、情绪和碎碎念，虽然说更多只是一个表达欲的渠道，但偶尔也会惭愧自己讲情绪太多，似乎把博客作为了一个出口，于是想着还是能够带来一些干货吧，所以就有了这篇经验谈，不知不觉竟然也写了快 7000 字了。</p>
<p>年度总结也会有，会有自己这一年的各种事，失去的、得到的、值得感谢的、难免遗憾的，虽然也犹豫过要不要再提一些东西，但还是决定更真实地面对吧。毕竟所有东西都会过期，凤梨罐头也是，这一年也是，是这些喜怒哀乐构成了我的 2022，也构成了一个更加完整的我。</p>
<p>然后，会在 12 月 31 日发，一个对我挺特殊的日子。</p>
<p>从今年的某个时候开始，我在每篇文章加上了主题曲，五月天的《后来的我们》，一首我很喜欢的歌。今天换成了《Brand New Day》，垫底辣妹电影的主题曲，一直觉得很好听，也挺适合这篇文章。</p>
<h2 id="如何学习一门新的技术">如何学习一门新的技术</h2>
<h3 id="我的学习方法探索之旅">我的学习方法探索之旅</h3>
<h4 id="初探">初探</h4>
<p>自己以前并不算是一个很崇尚各种学习方法论的人，对这种“如何”体也比较无感，高中在阅读『如何阅读一本书』时也没能成功读完（？），总觉得这是一件很因人而异的事，看过许多帖子可能也比不上自己某个阶段的带点玄学的所谓“开窍”，当然，这里的开窍大多与天赋无关，只是在摸索中找到了一些自己的路子而已。</p>
<p>发生转变是高中一次在书店，遇到一些浙大的学生在售卖自己总结打印的高考备考资料和经验，出于好奇买了一本历史学科的，闲来无事就翻着看，里面有一些时间轴的整理和记忆的小技巧，后来真正学到这些知识的时候常常就能更加得心应手地运用，后来历史成为了我常常能拿年级前列的学科，慢慢也积累了我对历史学习的兴趣（甚至一度想报考历史系）。</p>
<p>现在想想，可能那本书上的内容本身并没有什么独一无二的部分，知识就是那些知识，只是从一个经历过高考且取得了不错成果的大学生视角来归纳方法，还是很有一种“降维打击”的效果的，这某种程度上也启发了我在其他学科的学习中也开始逐步探索自己的方法。</p>
<h4 id="学习心态">学习心态</h4>
<p>本篇并没有打算（<del>主要也讲不明白</del>）介绍各种有理论基础的学习法，主要是关于“XX 学习法”这样的视频、文章有很多，可能经过一些总结和内化后也不如阅读原文，这里先推荐『<a href="https://space.bilibili.com/43276908">是落拓呀</a>』学长的这篇『<a href="https://www.bilibili.com/read/cv6209820">我是如何学习一门新的技术或知识的？WW 学习法？以区块链为例。</a>』，我刚开始学习区块链和很多其他知识的时候从中获益良多。</p>
<p>这次更多想从一个我觉得很重要但常常被忽略的点讲讲我的一些想法和经验 —— 学习心态。</p>
<p>大学被调剂到了英语专业，只花了大概半个学期的时间，我就非常清晰地意识到了这并不是一个我会持续投入热情并能够赖以为生的专业。但当时的自己还没有很清晰的目标，于是开始不停地学各种技能以缓解迷茫和焦虑。</p>
<p>因为在社团主要是负责一些“技术”相关的工作任务，当然，这里的技术主要是指平面设计、摄影和视频剪辑这样的技能。还记得我第一个重点负责的晚会项目有一个很赶的宣传视频/MV 的工作任务，印象里并不复杂，也没什么特效，就是一些视频的素材基础处理、拼接和导出，最多也就是适配不同尺寸的屏幕以达到不错的显示效果。</p>
<p>于是在一个周末，下载了 Adobe Premiere Pro（也就是俗称的 PR，一个万恶的折磨了我长达五六年的软件，也没想到后来自己的很多事都和视频剪辑相关，也是奇妙的际遇了），看了一些入门教程，两天赶完了。去交任务的时候社员包括部长都挺惊讶的，问我之前学过么，怎么那么快。</p>
<p>其实我对于视频拍摄、剪辑的了解也不过就是在高三时做了一个生日祝福视频，还是找朋友帮忙一起做的（好像用的是绘声绘影还是爱剪辑来着，也是好遥远的名词了，然后这位朋友现在在做导演、剪辑相关的工作，奇妙际遇 * 2），而在用 PR 时也下意识地并没有觉得这是一个很难的软件或者说没觉得剪辑是一件很难的事，学习起来也就很顺其自然，遇到不会的问题现查就可以了，也并没有太多的技术含量，只是我去学了，仅此而已。</p>
<p>而很多朋友可能会在刚开始学习一个自己不了解的东西时候有一种很本能的畏惧感，觉得它很复杂，自己给自己设置了心理障碍，直到最后也没下定决心去学，后续我在带部门和社团进行教学的时候也大多用一个基础的实战项目带大家了解到这并不是一件那么“高不可攀”的事，打破了这一层心理因素并调整了学习心态后，学习操作本身就很容易了，效果很好。</p>
<p>当然这些只是一些通用性的技能，真正编程相关的技术还是差异很大的，但这一方面的心态变化历程可能就说来话长了，因为也常常被问到，也算是顺便提一下自己的文科转码之旅了。</p>
<h3 id="我的文科转码之旅">我的文科转码之旅</h3>
<h4 id="vb-入门">VB 入门</h4>
<p>作为理工院校的文科学院，我们非常具有理工特色的就是需要学计算机，但是只是基础的 VB (Visual Basic) 语言。得益于浙江的学业水平考试的信息技术学科需要 VB 上机考，已经在高中有过一些基础的了解，再学起来也比较轻松，虽然语法都需要重新学，但同样的，在心态上也觉得是一件并不那么难的事。</p>
<p>当时由于身边许多朋友都是初接触编程语言，对语法和各种符号有着非常强烈的畏惧感，所以我在学的时候以自己的思路和解释整理了一份几十页的笔记，从一本书变为了薄薄的几十页纸，朋友们在学习的心态上有了很大的变化，卓有成效（后来还“继承”给下一届，有成为了传说中的学长学姐宝典的经历也是一件很开心的事了）。</p>
<h4 id="转换方向">转换方向</h4>
<p>重温了 VB 后，突然觉得自己很喜欢这种能够通过代码来创造、实现一些想法的感觉的，然后也觉得某种程度上还算“擅长”，遂萌生了一个在当时看来有些大胆的想法 —— “是不是我也可以把计算机作为自己的未来方向”。</p>
<p>当然，因为学校莫名的“高考文科招生不能转理工专业”的规定，转专业这一条路已经被堵死，武大计算机辅修的申请也因为绩点差一点而失之交臂。</p>
<p>算了，那就自己学吧。</p>
<p>于是向认识的在华科辅修计算机的朋友要了课表和教材，当时的心态很简单，可能科班的很多课我确实没有那么多时间精力来通过自学同步补，但是辅修的课程负载还是可以接受的。于是，一边补着操作系统、计算机网络这些基础课程，一边学 Python（没错我也是从廖雪峰老师的 Python 课程开始的），开始了自己的“不务正业”之旅。</p>
<h4 id="艰难前行">艰难前行</h4>
<p><del>中间有过无数次挣扎和觉得自己是个废物想放弃的深夜时刻</del>，以及在挣扎期间因为迷茫去做过公众号运营、产品经理、区块链游戏策划、平面设计等各种岗位实习/兼职以及后来注册公司开了工作室做视频剪辑等等的经历，这就在另一篇『<a href="https://www.pseudoyu.com/en/2022/11/17/weekly_review_20221117/">周报 #19 - 忆一次创业经历</a>』了。</p>
<p>自己那几年真的在这条路上坎坷地走了很久，有过盲目地学各种语言（<del>因为觉得写上自己会一些小众语言听起来很酷</del>），有放弃枯燥的基础知识学习去写 Web 和小程序（<del>因为可以赚外快</del>），有觉得不需要去理解各种底层原理和数据结构自己也能写好代码的误区，有学了很久但是似乎长进并不明显的瓶颈期，当然，也有很多开心的收获，但这已经是日常了，就不细数了。</p>
<p>后来出于职业规划（诚实来讲，大多英语专业本科出去在现在的环境想找一个技术工作确实是简历都递不出去的，无奈却也不得不面对的现状）与想在具体的领域有所造诣的考虑，我在毕业后 Gap 了一年去申请了香港的计算机系研究生，这部分在『<a href="https://www.pseudoyu.com/en/2020/06/06/yearly_review_23/">23 岁的自白：去追寻意义</a>』里有提到，因为之前有拿到了台大计算机一名区块链方向教授实验室的邀请最后却被鸽的对我打击挺大的事，也算是圆了自己的一个梦（<del>你不要我，我值得比你更好的</del>）。</p>
<h4 id="摆正心态">摆正心态</h4>
<p>其实在后续的学习中，自己受益最大的是从来都没有把“我是一个英语专业的学生”作为自己学不好的理由，毕竟现在已经没有什么太高的知识获取壁垒，别人能学到的知识我也能够在很多公开课、教程中学到，甚至有了一些自己选择的权利，可以找最好的最适合的课程进行学习，以至于刷了好多门 MIT 的公开课和 Coursera 的课。</p>
<p>包括真正去参加港大计算机学院的面试时，我也没有把原专业作为自己的弱项避而不谈，而是提到了自己作为一个来自不相干专业的学生对于热爱的专业所付出的努力和获得的成果，包括对于专业和行业的一些探索和想法，相信对于最后的 offer 也有一定帮助。</p>
<h4 id="鸽了的文科生转码指南">鸽了的文科生转码指南</h4>
<p>题外话，关于文科转码其实之前自己一直有想写一个指南，大概就叫『文科生编程入门/转码指南』之类的（虽然听起来就很营销号的 Python 广告），但总是觉得无非是一些教程推荐和申请经验，最后的结果运气也占了很大的成分，分享出来也并没有太多的干货，反而更容易像是一种幸存者偏差的“炫耀”，于是一直没动笔。</p>
<p>但现在经过了一年多的工作和探索学习，自己也算是真正在程序员这个职业或者说区块链这个行业勉强站稳了脚跟，也觉得自己或多或少在学习新技术/知识上有着一些小经验，所以打算重启这个想法了，也挖一个小坑，慢慢填。</p>
<p>但其实想做这件事并不是说标榜转码有多好或是这件事有多容易，行业确实有一定红利，但转码和技术学习的个中艰辛苦楚也有不少，有很多熬夜的夜晚，也有很多怀疑自己的时刻，只是不值一提罢了。而且终究还是靠一点点的积累，就像那句朴实却很真切的道理 —— “无他，唯手熟尔”。</p>
<p>在 Podcasts 和推特上也见到过很多崇拜的技术大佬，也不乏转码的，相比之下，以自己的能力尚不足以去教导大家些什么，但想把这些写下来其实也只是想传达一下自己的想法与心路历程，或多或少让对这一领域有所好奇的人不要因为心态问题怯而不前。</p>
<p>有相关经验心得的也欢迎一起参与贡献。</p>
<h3 id="我是如何学习的">我是如何学习的</h3>
<p>回归正题，浅谈一下我学新技术或是接触一个新领域的一个基本模式吧，纯个人经验分享。</p>
<h4 id="信息源采集">信息源采集</h4>
<p>可能由于之前学习模式和个人信息控特质的一些影响，我非常倾向于在学习一项新的技术/知识时收集很多信息源，可能比起一些搜索引擎和算法推荐的结果，我更习惯去一些喜欢的 Youtuber 或是个人博客作者的历史视频/文章中进行翻找，常常有一些意外之喜（主要是那些大佬都太强涉猎太广了，好多个之前看 Python 和 Go 的博主都更新了区块链的很优质的内容），从他们的视频/文章中能看到学习中的坑，以及这项技术后面的实际应用。</p>
<p>比如在推友『<a href="https://twitter.com/strrlthedev">STRRL</a>』的博客『<a href="https://strrl.dev/">strrl.dev</a>』中能看到他折腾的很多小玩具，有些就是我同样需求但是没想到（<del>或者做不到</del>）能够以这种方式实现的，能有很多启发；以及在看另一个推友『<a href="https://twitter.com/n0vad3v">Nova Kwok</a>』的博客『<a href="https://nova.moe/">Nova Kwok&rsquo;s Awesome Blog</a>』时常常会发现，“这个人怎么什么都会啊”。</p>
<p>除了具体的知识和教程外，也能够从他们身上看到自己所向往成为的样子，能有更多的好奇心与探索欲，对未来有更多期待。</p>
<h4 id="初步了解">初步了解</h4>
<p>在选择教程方面，我之前也提过很喜欢以 Crash Course 的方式开始，直译成“XX 小时带你学会 XXX”好像有些营销号的感觉，但 Youtube 上真的有非常多这种系列，直接搜索比如『<a href="https://www.youtube.com/results?search_query=next.js+crash+course+2022">Next.js Crash Course 2022</a>』就会有很多很有意思的结果。</p>
<p><img src="https://image.pseudoyu.com/images/nextjs_crash_course.png" alt="nextjs_crash_course"></p>
<p>我前段时间做一个 ÐApp Demo 的时候因为有用到 Next.js 做基础的前端显示，就看了一下搜索结果中 <a href="https://www.youtube.com/@TraversyMedia">Traversy Media</a> 的这个 <a href="https://www.youtube.com/watch?v=mTz0GXj8NN0">Next.js Crash Course</a>，很喜欢他的讲解方式，在一个小时里就让我对这个框架包括整个前端开发语言有了基础的了解，虽然没经过系统性地学习自己很难上手做一个项目，但是在后来的项目中看到前端代码中出现的一些语法也能知道在做什么，在别人框架的基础上做一些自己的定制化修改也比较容易。</p>
<p>比如这就是我看完 Next.js Crash Course 后通过另一个很喜欢的 Youtuber <a href="https://www.youtube.com/@devaslife">devaslife</a> 开源的一个『<a href="https://github.com/craftzdog/craftzdog-homepage">GitHub - craftzdog/craftzdog-homepage</a>』项目修改的个人主页，『<a href="https://home.pseudoyu.com/">Yu - Homepage</a>』，花很短的时间就能做出一个很美观的小项目，也是在开始学习一项新技术时候很好的动力。</p>
<p><img src="https://image.pseudoyu.com/images/yu_homepage_profile.png" alt="yu_homepage_profile"></p>
<h4 id="深入学习">深入学习</h4>
<p>但真正要写一些企业级项目或是自己从头做一个复杂的项目，仅仅靠 Crash Course 是远远不够的，会需要更系统的学习和很多项目的实践，这个时候需要一些更实战性的课程，这一点看个人偏好，很多 Crash Course 作者其实有自己的训练营或者付费教程，如果找到了喜欢风格形式的博主则可以跟着他继续学下去。</p>
<p>我个人更偏好的是 <a href="https://www.udemy.com/">Udemy</a> 平台，也算是一个比较老牌的在线课程网站了，虽然价格看起来比较离谱但是基本上都在打骨折，总是各种理由发优惠券，<del>让我总是担心它哪一天就倒闭了</del>，平均一门课大概就 9.99-12.99 美元的样子吧，折合人民币 100 不到，还是很值得的。</p>
<p>比如我上文提到的 <a href="https://www.youtube.com/@TraversyMedia">Brad Traversy</a> 就在 Udemy 上开设了 React、Next.js、Tailwind CSS 等课程，因为我确实很喜欢他这种以项目为导向的方式和他的教学风格，虽然在 Udemy 上相关课程有比他购买/评分都高很多的课，我依然选择了他的，这些是我学 Web 相关购买的一些课（很多是前两天活动价购入，还没开始看）。</p>
<p><img src="https://image.pseudoyu.com/images/udemy_web_course.png" alt="udemy_web_course"></p>
<h4 id="成果输出项目实践">成果输出/项目实践</h4>
<p>之前跟我 leader 聊过学习方式，他学习一个新的语言/框架会先自己摸索着把项目运行起来，自己尝试着改点东西，然后可能项目里直接用上了，遇到问题再一点点解决。这是一种很高效的掌握方式，而且可能在项目工程应用上更加普适，但可能我还是偏学院派一点，会选择看课/看教程这一种起初效率相对较低，但能够在一开始就掌握一些最佳实践，且在后续遇到问题在心态上更稳一点的方式吧。</p>
<p><del>内心 OS：要是我有我 leader 那样前一天晚上刚发现一个框架，第二天就把项目架子重构了的可怕工程能力，我还看什么课啊。</del></p>
<p>看课也有一些完成作业、项目实践和最后的课程结业的成就感，能够在学习的各个阶段里给自己一些动力，比如我一周多学完的 React 课程拿到证书，并且成功用到了实际的 Side Project 项目中，还是蛮激励自己继续下去的。</p>
<p><img src="https://image.pseudoyu.com/images/udemy_react_cert.jpg" alt="udemy_react_cert"></p>
<p>当然，这种方式也还是有一个门槛就是很多这样比较高质量的课都还是在 Youtube 或是一些国外的平台的，基本只有英文，所以还是需要有一些克服的，不过也都会提供中文字幕，但我个人还是更倾向于英文来看的，毕竟也会牵扯到很多术语，而且机翻很一般。</p>
<p>另外，看课由于一般周期比较长，很容易中途放弃或是拖延到忘记了前面的内容，不进行实践或者记录很容易忘记，为了克服这一点，我采取了两种很简单却行之有效的方式 —— 以输出为导向与以结果为导向的学习。</p>
<p>输出导向很好理解，我有在更新自己的个人博客，<del>曾经技术干货还是很多的，现在在日常博主和工具效率博主之间反复横跳</del>，我会在学一门技术/知识的时候分屏在 Logseq 中记录下关键笔记，注意，这一定不能是直接粘课程资料，而是更多自己在编辑器里敲一遍并且勤加注释，顺便把关键的一些比如命令或者代码片段直接截图保存一下，完成后消化一段时间笔记。</p>
<p>过了 1-2 周后，再重新去看笔记，并且把笔记整理成文。这里有两点非常重要，一个是过 1-2 周，我们刚学完时会有比较深的印象，也常常会有一种“我已经会了”的错觉，但其实掌握得不一定很扎实，可能只是一些即时的记忆，1-2 周正好是一个不错的消化周期；而整理成文则是另一个很关键的点，我们常常会写一些零散的笔记或是思维导图，但其实能把一个知识点组织成文，用自然语言讲出来，让读者能够看得很流畅，是一件挺具有挑战性的事。</p>
<p>这时候上文的那些注释和截图就有用场了，我在写文章时有自己和自己对话以及反复回看的习惯，就是比如写完一个模块后，会常常问自己，如果我是读者，我在这里会提什么问题，我该怎么解答，那其实常常会发现一些讲得不够清楚的点，再加上反复回看后添加的补充说明，成文的时候一般来说还是一个挺行文完整且符合自己思维逻辑的技术博文了，作为以后温习或是当作参考文档查询也会比看别人的资料要有效得多。</p>
<p>其实更好的方式是录视频讲解，能把一件事在视频中讲清楚比起写明白的难度还是更上了一个层级的，但我还在克服需要录制视频讲课的一些心理障碍。</p>
<p>明年的一个小目标就是成为一名技术 Youtuber/up 主了，<del>可能最后成为了萌宠博主呢，毕竟谁看我啊，点开周报的都是来看捏捏的吧，我今天就不发，囤到年终总结攒一波出片</del>。</p>
<p>除了输出外，我还有另一个并不建议大家轻易尝试的方式 —— 以结果为导向的极限操作。其实就是把一些超出自己目前能力范围（但也别太多）的任务先接下来，以结果和 ddl 来逼自己快速掌握，以及遇到问题会更拼命想办法去解决。</p>
<p>这个可能和个人心态、信心和多线程能力有关，我是一个遇事还算冷静处理的人，经常几个任务并行但也不至于会被压垮，而这么多年踩坑的经验也让我明白了一个朴实的道理 —— 再复杂的任务总是奇迹地能在 ddl 逼近之前的几分钟搞完，大概这才是第一生产力吧。</p>
<p><del>但现在随着做的项目越来越复杂还是少这样吧，万一翻车了呢。</del></p>
<h2 id="总结">总结</h2>
<p>剩下的其实也没有太多方法可讲了，以上其实也都只是学习一门技术或知识的一些经验谈，学完了可能也只能说刚入门，工程能力的培养没有捷径，只能靠不断实践积累咯。</p>
<p>技术是一件很有趣且不同阶段去了解学习都有截然不同感受的事，就像我 leader 是一个二十多年工作经验的强者了，依然经常在半夜突然发个消息给我，说“XXX 框架/工具挺有意思的，可以玩一下”。</p>
<p>我很喜欢他的这种说法，“玩”一下，我们不需要再去纠结或是辩驳把爱好作为职业是一种怎样的体验，因为我们本就乐在其中，工作不过是顺便能够糊口的副产品罢了，也希望大家都能找到自己的心之所向吧。</p>
<p>自己并不是什么大佬，目前阶段很难能够在具体的一些技术和领域写出很深度的文章（但是也有在努力了），于是想把自己的各种经验作一些分享吧，后面也想针对一些更细节的技术输出一些视频教程和文字教程。</p>
<p><del>让我数数今天挖了几个坑要填。</del></p>
]]></content:encoded></item><item><title>周报 #22 - 内卷与焦虑感</title><link>https://www.pseudoyu.com/en/2022/12/13/weekly_review_20221213/</link><pubDate>Tue, 13 Dec 2022 22:24:02 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/13/weekly_review_20221213/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-12-07 到 2022-12-13 这周生活的记录与思考。 这大概是累计没有踏出家门的第 20 天了，基于当前多个项目并行的工作强度和阴性快要清</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-12-07</code> 到 <code>2022-12-13</code> 这周生活的记录与思考。</p>
<p>这大概是累计没有踏出家门的第 20 天了，基于当前多个项目并行的工作强度和阴性快要清零的现状，还并没有打算回公司，甚至想在家窝到年前都不出门了，自宅生活也很惬意。</p>
<p>忙碌的各项工作和 Side Project 任务模糊了周末与工作日的界限，但多年残留的习惯依然让我有一种“周末是自己的时间，用来睡觉岂不是太浪费了”的错觉，再加上没有早会的时间压力，也越睡越晚。不过做了不少有意思的事，探索了一些一直想学的东西并且应用到了项目里，还做了一些 Demo 玩具，一直处于还挺开心的状态。</p>
<p>其他时间里，和远在澳洲的挚友一起连麦看了荷兰的比赛（虽然输了），并得知会收到一个很欣喜的礼物（虽然会寄到香港，暂时拿不到）；一位朋友受到我的影响也开始写周报，互相催更（虽然我又拖延了几天）；猫猫能听懂自己名字了，一句“捏捏过来”就能从家里的各个角落召唤出她，像宝可梦一样；以及很多其他有意思的事。</p>
<h2 id="内卷与焦虑感">内卷与焦虑感</h2>
<p>在 <a href="https://space.bilibili.com/58078997">polebug</a> 最新的一期学习记录视频看到有在谈论卷和焦虑感的话题，其实就个人偏好来说，我不是很喜欢“卷”这个词，自己说自己卷像是带着一种居高临下与自我满足，听到别人如此评价又似乎有一种小时候听到老师说“这孩子不聪明但是一直很用功，值得鼓励”的莫名意味。</p>
<p>“卷”似乎与现在到处弥漫的焦虑感相生相伴，来自工作项目的压力、对自己方向的迷茫或是不满足于提升速度，以及所谓的 Peer Pressure，我们总是倾向于将自己置于当前所处阶段的消极面，总是去受到一些论调的影响去否认自己的一面，然后通过各种形式的自我满足式付出去挤压自己的空闲时间，常常也身心俱疲。</p>
<p>我更喜欢的是国外可能更常提及的“<a href="https://knowyourmeme.com/memes/today-i-learned-til">TIL</a>”的描述，Today I Learned，在完成基础或是重复性的本职工作之外，自己又学到了什么。可以是看了一些闲书或是工具书，可以是学了一项新的技术或是将之前的经验总结成文，可以是着手做一个新项目或是对原有项目进行了一些优化，只要是好奇心与求知欲所及，都可以称为一个个“TIL”。</p>
<p>学习和探索本身是一件有趣的事，甚至并不一定是一件与结果/收益直接相关的事，虽然略有些俗套，但我并不丰富的一些阅历和经验让我总是信奉着一种“无用之用”的心态，常常是过去出于兴趣、好奇或是其他纯粹目的所做的一些事在未来的一些阶段带来一些惊喜，要做的常常就是遵守本心和静静等候。</p>
<h2 id="与捏捏的日常">与『捏捏』的日常</h2>
<p>这周依然是一起宅在家的生活，能渐渐感觉到一点点建构起来的信任与情感依赖（同时也放肆了很多），会在我忙在各个会议里时静静躺在键盘前伴着嘈杂的人声与键盘敲击声熟睡，会在我许久没有管她时绕着我的脚撒娇要抱抱，会在我看世界杯时在我面前一起关注着赛场的动向，会在睡前跑酷到我的被子里一起入眠，也会在我赖床不起时直接一脚踩在我脸上“叫醒”我换粮。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_18.jpg" alt="冷知识，猫毛掉进路由器会造成网络拥堵（烂梗）" />
    </div>
    
      <figcaption>
          <p>冷知识，猫毛掉进路由器会造成网络拥堵（烂梗）
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_17.jpg" alt="你不陪我玩，我拿逗猫棒自己逗自己" />
    </div>
    
      <figcaption>
          <p>你不陪我玩，我拿逗猫棒自己逗自己
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_19.jpg" alt="荷兰你行不行啊，不然我来？" />
    </div>
    
      <figcaption>
          <p>荷兰你行不行啊，不然我来？
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_20.jpg" alt="别工作了，给我当枕头" />
    </div>
    
      <figcaption>
          <p>别工作了，给我当枕头
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_22.jpg" alt="别工作了，给我当脚垫" />
    </div>
    
      <figcaption>
          <p>别工作了，给我当脚垫
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_21.jpg" alt="别工作了，要抱抱" />
    </div>
    
      <figcaption>
          <p>别工作了，要抱抱
              
          </p>
      </figcaption>
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="技术">技术</h3>
<p>因为 Side Project 需要，这周跟着 Udemy 上之前买的一些课好好学了下 React，感觉前端现在还是蛮有意思的。大学时候赚外快写过一些网站，还记得当时都还是自己糊的 HTML、CSS、JavaScript，好像用了 JQuery 来获取元素什么的，还记得当时用 ThinkPHP，然后有一个什么 MVC 框架，包括后来做的一个微信小程序也是，现在感觉都有些时代的眼泪了。</p>
<p>因为很久没写过前端，也没什么技术包袱，用了 JavaScript + React + TailWind CSS + daisyUI 糊了一个查找 GitHub 用户和 Repo 的 Demo 练习项目“<a href="https://yu-github-finder.vercel.app">GitHub Finder</a>”，感觉现在写前端多了好多工具链和库，整个项目就没写几行 CSS，移动端响应做得也不错，有点舒服。</p>
<p>不过后面项目需要用的是 TypeScript + Next.js + TailWind CSS，所以这个 Demo 也就是打打基础了。</p>
<p>有意思的是这两周 JavaScript 写多了，那天给我一个工作里的小 leader 投屏改 Go 代码的时候取一个数组的长度我下意识就 <code>.length</code> 了，报错后好久才反应过来，感受到了来自屏幕对面的困惑，几天不见 Go 都不会了哈哈。</p>
<p>感觉离自己能糊出一些好玩的小工具越来越近了，开心。</p>
<h3 id="输入">输入</h3>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>三体</strong>，也还算期待了一阵子的三体动画版，放出了两集，我本身原著应该是看了大半，但算不上什么粉也没太多信仰，整体感觉的话还是挺不错的，画面和节奏都还行。</li>
</ul>
]]></content:encoded></item><item><title>[译] Google Go 风格指南</title><link>https://www.pseudoyu.com/en/2022/12/08/go_style_guide/</link><pubDate>Thu, 08 Dec 2022 11:46:54 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/08/go_style_guide/</guid><description>《后来的我们 - 五月天》 风格原则 以下几条总体原则总结了如何编写可读的 Go 代码。以下为具有可读性的代码特征，按重要性排序： 清晰：代码的目的和设计原</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="风格原则">风格原则</h2>
<p>以下几条总体原则总结了如何编写可读的 Go 代码。以下为具有可读性的代码特征，按重要性排序：</p>
<ol>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E6%B8%85%E6%99%B0">清晰</a>：代码的目的和设计原理对读者来说是清楚的。</li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E7%AE%80%E7%BA%A6">简约</a>：代码以最简单的方式来完成它的目的。</li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E7%AE%80%E6%B4%81">简洁</a>：代码具有很高的信噪比，即写出来的代码是有意义的，非可有可无的。</li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7">可维护性</a>：代码可以很容易地被维护。</li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E4%B8%80%E8%87%B4">一致</a>：代码与更广泛的 Google 代码库一致。</li>
</ol>
<h3 id="清晰">清晰</h3>
<p>可读性的核心目标是写出对读者来说很清晰的代码。</p>
<p>清晰性主要是通过有效的命名、有用的注释和有效的代码组织来实现的。</p>
<p>清晰性要从读者的角度来看，而不是从代码的作者的角度来看，代码的易读性比易写性更重要。代码的清晰性有两个不同的方面：</p>
<ul>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E8%AF%A5%E4%BB%A3%E7%A0%81%E5%AE%9E%E9%99%85%E4%B8%8A%E5%9C%A8%E5%81%9A%E4%BB%80%E4%B9%88">该代码实际上在做什么？</a></li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%A3%E7%A0%81%E4%BC%9A%E8%BF%99%E4%B9%88%E5%81%9A">为什么代码会这么做？</a></li>
</ul>
<h4 id="该代码实际上在做什么">该代码实际上在做什么</h4>
<p>Go 被设计得应该是可以比较直接地看到代码在做什么。在不确定的情况下或者读者可能需要先验知识才能理解代码的情况下，我们值得投入时间以使代码的目的对未来的读者更加明确。例如，它可能有助于：</p>
<ul>
<li>使用更具描述性的变量名称</li>
<li>添加额外的评论</li>
<li>使用空白与注释来划分代码</li>
<li>将代码重构为独立的函数/方法，使其更加模块化</li>
</ul>
<p>这里没有一个放之四海而皆准的方法，但在开发 Go 代码时，优先考虑清晰性是很重要的。</p>
<h4 id="为什么代码会这么做">为什么代码会这么做</h4>
<p>代码的基本原理通常由变量、函数、方法或包的名称充分传达。如果不是这样，添加注释是很重要的。当代码中包含读者可能不熟悉的细节时，“为什么？”就显得尤为重要，例如：</p>
<ul>
<li>编程语言中的细微差别，例如，一个闭包将捕获一个循环变量，但闭包在许多行之外</li>
<li>业务逻辑的细微差别，例如，需要区分实际用户和虚假用户的访问控制检查</li>
</ul>
<p>一个 API 可能需要小心翼翼才能正确使用。例如，由于性能原因，一段代码可能错综复杂，难以理解，或者一连串复杂的数学运算可能以一种意想不到的方式使用类型转换。在这些以及更多的情况下，附带的注释和文档对这些方面进行解释是很重要的，这样未来的维护者就不会犯错，读者也可以理解代码而不需要进行逆向工程。</p>
<p>同样重要的是，我们要意识到，一些基于清晰性考虑的尝试（如添加额外的注释），实际上会通过增加杂乱无章的内容、重述代码已经说过的内容、与代码相矛盾或增加维护负担来保持注释的最新性，以此来掩盖代码的目的。让代码自己说话（例如，通过代码中的名称本身进行描述），而不是添加多余的注释。通常情况下，注释最好是解释为什么要做某事，而不是解释代码在做什么。</p>
<p>Google 的代码库基本上是统一和一致的。通常情况下，那些比较突兀的代码（例如，应用一个不熟悉的模式）是基于充分的理由，通常是为了性能。保持这种特性很重要，可以让读者在阅读一段新的代码时清楚地知道他们应该把注意力放在哪里。</p>
<p>标准库中包含了许多这一原则发挥作用的例子。例如：</p>
<ul>
<li>在 <code>package sort</code> 中的维护者注释</li>
<li>好的<a href="https://cs.opensource.google/go/go/+/refs/tags/go1.19.2:src/sort/example_search_test.go">同一软件包中可运行的例子</a>，这对用户（他们会<a href="https://pkg.go.dev/sort#pkg-examples">查看 godoc</a>）和维护者（他们<a href="https://gocn.github.io/styleguide/docs/03-decisions/#%E7%A4%BA%E4%BE%8Bexamples">作为测试的一部分运行</a>）都有利</li>
<li><code>strings.Cut</code> 只有四行代码，但它们提高了<a href="https://github.com/golang/go/issues/46336">callsites 的清晰性和正确性</a></li>
</ul>
<h3 id="简约">简约</h3>
<p>你的 Go 代码对于使用、阅读和维护它的人来说应该是简单的。</p>
<p>Go 代码应该以最简单的方式编写，在行为和性能方面都能实现其目标。在 Google Go 代码库中，简单的代码：</p>
<ul>
<li>从头至尾都易于阅读</li>
<li>不预设你已经知道它在做什么</li>
<li>不预设你能记住前面所有的代码</li>
<li>不含非必要的抽象层次</li>
<li>不含过于通用的命名</li>
<li>让读者清楚地了解到传值与决定的传播情况</li>
<li>有注释，解释为什么，而不是代码正在做什么，以避免未来的歧义</li>
<li>有独立的文档</li>
<li>包含有效的错误与失败用例测试</li>
<li>往往不是看起来“聪明”的代码</li>
</ul>
<p>在代码的简单性和 API 使用的简单性之间可能会需要权衡。例如，让代码更复杂可能是值得的，这样 API 的终端用户可以更容易地正确调用 API。相反，把一些额外的工作留给 API 的终端用户也是值得的，这样代码就会保持简单和容易理解。</p>
<p>当代码需要复杂性时，应该有意地增加复杂性。如果需要额外的性能，或者一个特定的库或服务有多个不同的客户，这通常是必要的。复杂性可能是合理的，但它应该有相应的文档，以便客户和未来的维护者能够理解和驾驭这种复杂性。这应该用测试和例子来补充，以证明其正确的用法，特别是如果同时有一个“简单”和“复杂”的方法来使用代码。</p>
<p>这一原则并不意味着复杂的代码不能或不应该用 Go 编写，也不意味着 Go 代码不允许复杂。我们努力使代码库避免不必要的复杂性，因此当复杂性出现时，它表明有关的代码需要仔细理解和维护。理想情况下，应该有相应的注释来解释其中的道理，并指出应该注意的地方。在优化代码以提高性能时，经常会出现这种情况；这样做往往需要更复杂的方法，比如预先分配一个缓冲区并在整个 goroutine 生命周期内重复使用它。当维护者看到这种情况时，应该是一个线索，说明相关的代码是基于性能的关键考虑，这应该影响到未来修改时的谨慎。另一方面，如果不必要地使用，这种复杂性会给那些需要在未来阅读或修改代码的人带来负担。</p>
<p>如果代码非常复杂，但其目的应该是简单的，这往往是一个我们可以重新审视代码实现的信号，看看是否有更简单的方法来完成同样的事情。</p>
<h4 id="最小化机制">最小化机制</h4>
<p>如果有几种方法来表达同一个想法，最好选择使用最标准工具的方法。复杂的机制经常存在，但不应该无缘无故地使用。根据需要增加代码的复杂性是很容易的，而在发现没有必要的情况下删除现有的复杂性则要难得多。</p>
<ol>
<li>当足以满足你的使用情况时，争取使用一个核心语言结构（例如通道、切片、地图、循环或结构）</li>
<li>如果没有，就在标准库中寻找一个工具（如 HTTP 客户端或模板引擎）</li>
<li>最后，在引入新的依赖或创建自己的依赖之前，考虑 Google 代码库中是否有一个能够满足的核心库</li>
</ol>
<p>例如，考虑生产代码包含一个绑定在变量上的标志，它的默认值必须在测试中被覆盖。除非打算测试程序的命令行界面本身（例如，用<code>os/exec</code>），否则直接覆盖绑定的值比使用 <code>flag.Set</code> 更简单，因此更可取。</p>
<p>同样，如果一段代码需要检查集合成员的资格，一个布尔值的映射（例如，<code>map[string]bool</code>）通常就足够了。只有在需要更复杂的操作，不能使用 map 或过于复杂时，才应使用提供类似集合类型和功能的库。</p>
<h3 id="简洁">简洁</h3>
<p>简洁的 Go 代码具有很高的信噪比。它很容易分辨出相关的细节，而命名和结构则引导读者了解这些细节。</p>
<p>而有很多东西会常常会阻碍这些最突出的细节：</p>
<ul>
<li>重复代码</li>
<li>外来的语法</li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/#%E5%91%BD%E5%90%8D">含义不明的名称</a></li>
<li>不必要的抽象</li>
<li>空白</li>
</ul>
<p>重复代码尤其容易掩盖每个相似代码之间的差异，需要读者直观地比较相似的代码行来发现变化。<a href="https://github.com/golang/go/wiki/TableDrivenTests">表驱动测试</a>是一个很好的例子，这种机制可以简明地从每个重复的重要细节中找出共同的代码，但是选择哪些部分囊括在表中，会对表格的易懂程度产生影响。</p>
<p>在考虑多种结构代码的方式时，值得考虑哪种方式能使重要的细节最显著。</p>
<p>理解和使用常见的代码结构和规范对于保持高信噪比也很重要。例如，下面的代码块在<a href="https://go.dev/blog/errors-are-values">错误处理</a>中非常常见，读者可以很快理解这个代码块的目的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Good:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nf">doSomething</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>如果代码看起来非常相似但却有细微的不同，读者可能不会注意到这种变化。在这样的情况下，值得故意<a href="https://gocn.github.io/styleguide/docs/04-best-practices/#%E4%BF%A1%E5%8F%B7%E5%A2%9E%E5%BC%BA">“提高”</a>错误检查的信号，增加一个注释以引起关注。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Good:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nf">doSomething</span><span class="p">();</span> <span class="nx">err</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span> <span class="c1">// if NO error
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h3 id="可维护性">可维护性</h3>
<p>代码被编辑的次数比它写它的次数多得多。可读的代码不仅对试图了解其工作原理的读者有意义，而且对需要改写它的程序员也有意义，清晰性很关键。</p>
<p>可维护的代码：</p>
<ul>
<li>容易让未来的程序员正确进行修改</li>
<li>拥有结构化的 API，使其能够优雅地增加</li>
<li>清楚代码预设条件，并选择映射到问题结构而不是代码结构的抽象</li>
<li>避免不必要的耦合，不包括不使用的功能</li>
<li>有一个全面的测试套件，以确保预期行为可控、重要逻辑正确，并且测试在失败的情况下提供清晰、可操作的诊断</li>
</ul>
<p>当使用像接口和类型这样的抽象时，根据定义，它们会从使用的上下文中移除信息，因此必须确保它们提供足够的好处。当使用具体类型时，编辑器和 IDE 可以直接连接到方法定义并显示相应的文档，但在其他情况下只能参考接口定义。接口是一个强大的工具，但也是有代价的，因为维护者可能需要了解底层实现的具体细节才能正确使用接口，这必须在接口文档中或在调用现场进行解释。</p>
<p>可维护的代码还可以避免在容易忽视的地方隐藏重要的细节。例如，在下面的每一行代码中，是否有 <code>:</code> 字符对于理解这一行至关重要。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Bad:
</span></span></span><span class="line"><span class="cl"><span class="c1">// 使用 = 而不是 := 可以完全改变这一行的含义
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="nx">user</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">db</span><span class="p">.</span><span class="nf">UserByID</span><span class="p">(</span><span class="nx">userID</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Bad:
</span></span></span><span class="line"><span class="cl"><span class="c1">// 这行中间的 ！ 很容易错过
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">leap</span> <span class="o">:=</span> <span class="p">(</span><span class="nx">year</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(!(</span><span class="nx">year</span><span class="o">%</span><span class="mi">100</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="nx">year</span><span class="o">%</span><span class="mi">400</span> <span class="o">==</span> <span class="mi">0</span><span class="p">))</span>
</span></span></code></pre></div><p>这两种写法不能说错误，但都可以写得更明确，或者可以有一个附带的评论，提醒注意重要的行为。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Good:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">u</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">db</span><span class="p">.</span><span class="nf">UserByID</span><span class="p">(</span><span class="nx">userID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;invalid origin user: %s&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">user</span> <span class="p">=</span> <span class="nx">u</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="c1">// Good:
</span></span></span><span class="line"><span class="cl"><span class="c1">// 公历闰年不仅仅是 year%4 == 0
</span></span></span><span class="line"><span class="cl"><span class="c1">// 查看 https://en.wikipedia.org/wiki/Leap_year#Algorithm.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="nx">leap4</span>   <span class="p">=</span> <span class="nx">year</span><span class="o">%</span><span class="mi">4</span> <span class="o">==</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="nx">leap100</span> <span class="p">=</span> <span class="nx">year</span><span class="o">%</span><span class="mi">100</span> <span class="o">==</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="nx">leap400</span> <span class="p">=</span> <span class="nx">year</span><span class="o">%</span><span class="mi">400</span> <span class="o">==</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">leap</span> <span class="o">:=</span> <span class="nx">leap4</span> <span class="o">&amp;&amp;</span> <span class="p">(!</span><span class="nx">leap100</span> <span class="o">||</span> <span class="nx">leap400</span><span class="p">)</span>
</span></span></code></pre></div><p>同样地，一个隐藏了关键逻辑或重要边界情况的辅助函数，可能会使未来的变化很容易地被误解。</p>
<p>易联想的名字是可维护代码的另一个特点。一个包的用户或一段代码的维护者应该能够联想到一个变量、方法或函数在特定情况下的名称。相同概念的函数参数和接收器名称通常应该共享相同的名称，这既是为了保持文档的可理解性，也是为了方便以最小的开销重构代码。</p>
<p>可维护的代码尽量减少其依赖性（包括隐性和显性）。对更少包的依赖意味着更少的代码行可以影响其行为。避免对内部或未记录的行为的依赖，使得代码在未来这些行为发生变化时，不太容易造成维护负担。</p>
<p>在考虑如何构造或编写代码时，值得花时间去思考代码可能随着时间的推移而演变的方式。如果一个给定的方法更有利于未来更容易和更安全的变化，这往往是一个很好的权衡，即使它意味着一个稍微复杂的设计。</p>
<h3 id="一致">一致</h3>
<p>一致性的代码是指在更广泛的代码库中，在一个团队或包的范围内，甚至在一个文件中，看起来、感觉和行为都是类似的代码。</p>
<p>一致性的问题并不凌驾于上述的任何原则之上，但如果必须有所取舍，那往往有利于一致性的实现。</p>
<p>一个包内的一致性通常是最直接重要的一致性水平。如果同一个问题在一个包里有多种处理方式，或者同一个概念在一个文件里有很多名字，那就会非常不优雅。然而，即使这样，也不应该凌驾于文件的风格原则或全局一致性之上。</p>
<h2 id="核心准则">核心准则</h2>
<p>这些准则收集了所有 Go 代码都应遵循的 Go 风格的最重要方面。我们希望这些原则在你被保障可读性的时候就已经学会并遵循了。这些不会经常改变，新增加内容也有较高准入门槛。</p>
<p>下面的准则是对 <a href="https://go.dev/doc/effective_go">Effective Go</a> 中建议的扩展，它为整个社区的 Go 代码提供了一个共同的基准线。</p>
<h3 id="格式化">格式化</h3>
<p>所有 Go 源文件必须符合 gofmt 工具所输出的格式。这个格式是由 Google 代码库中的预提交检查强制执行的。<a href="https://docs.bazel.build/versions/main/be/general.html#genrule">生成的代码</a>通常也应该被格式化（例如，通过使用<code>format.Source</code>），因为它也可以在代码搜索中浏览。</p>
<h3 id="大小写混合">大小写混合</h3>
<p>Go 源代码在编写包含多个字的名称时使用<code>MixedCaps</code>或<code>mixedCaps</code>（驼峰大写）而不是下划线（蛇形大写）。</p>
<p>即使在其他语言中打破惯例，这也适用。例如，一个常量如果被导出，则为<code>MaxLength</code>（而不是<code>MAX_LENGTH</code>），如果未被导出，则为<code>maxLength</code>（而不是<code>max_length</code>）。</p>
<p>基于初始化大小写的考量，局部变量被认为是 <a href="https://go.dev/ref/spec#Exported_identifiers">不可导出的</a>。</p>
<h3 id="行长度">行长度</h3>
<p>Go 源代码没有固定的行长度。如果觉得某一行太长，就应该对其进行重构而不是破坏。如果它已经很短了，那么就应该允许它继续增加。</p>
<p>不要在以下情况进行分行：</p>
<ul>
<li>在<a href="https://gocn.github.io/styleguide/docs/03-decisions/#%E7%BC%A9%E8%BF%9B%E7%9A%84%E6%B7%B7%E4%B9%B1">缩进变化</a>之前(例如，函数声明、条件)</li>
<li>要使一个长的字符串（例如，一个 URL）适合于多个较短的行</li>
</ul>
<h3 id="命名">命名</h3>
<p>命名是艺术而不是科学。在 Go 中，名字往往比许多其他语言的名字短一些，但同样的<a href="https://testing.googleblog.com/2017/10/code-health-identifiernamingpostforworl.html">一般准则</a>也适用，名称应：</p>
<ul>
<li>使用时不感到<a href="https://gocn.github.io/styleguide/docs/03-decisions/#%E9%87%8D%E5%A4%8Drepetition">重复</a></li>
<li>将上下文考虑在内</li>
<li>不重复已经明确的概念</li>
</ul>
<p>你可以在<a href="https://gocn.github.io/styleguide/docs/02-guide/#%E5%91%BD%E5%90%8D">决定</a>中找到关于命名的更具体的指导。</p>
<h3 id="本地化一致性">本地化一致性</h3>
<p>如果风格指南对某一特定的风格点没有说明，作者可以自由选择他们喜欢的风格，除非相近的代码（通常在同一个文件或包内，但有时在一个团队或项目目录内）对这个问题采取了一致的立场。</p>
<p><strong>有效的</strong>本地风格化考虑例子：</p>
<ul>
<li>使用 <code>%s</code> or <code>%v</code> 来打印错误</li>
<li>使用缓冲通道来代替 mutexes</li>
</ul>
<p><strong>无效的</strong>本地化风格化考虑例子：</p>
<ul>
<li>代码行长度的限制</li>
<li>使用基于断言的测试库</li>
</ul>
<p>如果本地化风格与风格指南不一致，但对可读性的影响仅限于一个文件，它通常会在代码审查中浮出水面，而一致的修复将超出有关 CL 的范围。在这一点上，提交一个 bug 来跟踪修复是合适的。</p>
<p>如果一个改变会使现有的风格偏差变大，在更多的 API 表面暴露出来，扩大存在偏差的文件数量，或者引入一个实际的错误，那么局部一致性就不再是违反新代码风格指南的有效理由。在这些情况下，作者应该在同一 CL 中清理现有的代码库，在当前 CL 之前进行重构，或者找到一个至少不会使本地化问题恶化的替代方案。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://google.github.io/styleguide/go/guide">原文地址</a></li>
<li><a href="https://gocn.github.io/styleguide/docs/02-guide/">本文永久链接</a></li>
<li><a href="https://github.com/gocn/translator">GoCN &lt;每周译 Go&gt;</a></li>
<li><a href="https://github.com/pseudoyu">译者：pseudoyu</a></li>
<li><a href="https://github.com/zxmfke">校对：Xiaomin Zheng</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>周报 #21 - 重新捡起的生活</title><link>https://www.pseudoyu.com/en/2022/12/06/weekly_review_20221206/</link><pubDate>Tue, 06 Dec 2022 21:48:50 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/12/06/weekly_review_20221206/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-11-28 到 2022-12-06 这周生活的记录与思考。 都说 21 天可以养成一个习惯，然而到了第 21 篇周报，却依然没能如期更新，每周都是花式</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-11-28</code> 到 <code>2022-12-06</code> 这周生活的记录与思考。</p>
<p>都说 21 天可以养成一个习惯，然而到了第 21 篇周报，却依然没能如期更新，每周都是花式拖更理由了。</p>
<p>过去的一周工作上其实算不上多忙碌，为活动开发的功能都顺利上线而进入了日常维护阶段，但是睡眠状况依然堪忧，几乎也都还是 3 点后才睡。之前提到过的和学弟一起做的项目筹备得差不多，也逐步启动了，却更多地感觉是在忙自己喜欢的事，所以也算是幸福的负担了。但前前后后堆积的事还是不少，即使是习惯了多线程的自己也频繁感觉到有些力不从心，好在身体健康状况感觉还行。</p>
<p>仍然因为疫情而居家远程办公（已经整整 15 天没有出门了），继续和捏捏共度时光，与之前的一篇周报主题“<a href="https://www.pseudoyu.com/en/2022/10/09/weekly_review_20221009/">被搁置的生活与自我</a>”相对应，我的生活似乎重新被捡起来了，多了许多明媚时光。</p>
<h2 id="重新捡起的生活">重新捡起的生活</h2>
<p>其实即使自己并没有怎么意识到，在接捏捏回家后的这 40 天中，自己发生了很多变化。因为前段时间分别忙碌于工作，和一位友人一个多月没有联系，这次刚好我帮忙解决一个电脑问题，聊了几句，有了如下对话：</p>
<p><img src="https://image.pseudoyu.com/images/chat_with_jmadeinapril.png" alt="chat_with_jmadeinapril"></p>
<p>虽然也没有说的忧郁气质那么夸张，但我总体来说是个不那么积极阳光的人，对于生活和很多事都有着一种置身事外感，并不是不关心或是无法共情，只是不会有那么大的情绪投入，就像是一种角色扮演游戏，我扮演着我自己。而与他人的对话中其实更加不会过多展现自己的内心部分，同样，并不是因为不信任或是蓄意隐瞒所打造什么人设，只是不习惯。</p>
<p>而现在，即使自己好像并没有刻意改变什么，却依然能从哪怕只是日常的对话中让人感觉到情绪，是一种渐渐从自己的言语中溢出的满足感和充盈感。虽说决定再次养猫这件事也经过了反复思虑和权衡，但也未曾想这是一件会对我改变那么大的事，作为宠物和舍友责任与牵挂之余，她已然成为了我生活密不可分的一部分。</p>
<p>和另一位挚友聊天时被问到一句：</p>
<blockquote>
<p>“有了捏捏后会不会更安于现在的生活而不愿意做什么改变？”</p>
</blockquote>
<p>其实我的感知恰恰相反，最近有更加频繁和主动地去重新规划自己的生活节奏与未来目标，包括后续的工作形式、地域和内容。似乎对于之前的我来说，在哪个城市或是做怎样的工作，只要是自己喜欢做的事，只要是和自己在意的人一起，就已经足够满足，其他的没太太所谓。而现在则在自我独处以及和捏捏的“虚度时光”中逐渐更加能找到令自己舒适的生活状态与模式，也更加会在意生活本身的意义，生活不仅仅是自己爱好与工作的附属品，而是本身就值得被尊重和去好好探索的珍贵存在。</p>
<p>虽然并不想说得那么深沉，但捏捏似乎就像是在我生活的灰暗时刻突然出现的救赎，我在照顾之余也寄托了太多太多情绪与情感。所以其实会更加对未来会一起度过的生活有着更多期待，至少会更尽力工作来挣猫粮钱和争取更高的时间支配权来给予更多陪伴。</p>
<h2 id="与捏捏的日常">与『捏捏』的日常</h2>
<p>之前看过一部纪录片，《喵星人的奇思妙想》，是在解读猫的行为和背后潜藏的想法，自己最近似乎也有一些这样的倾向，在一些生活中的有趣时刻会拍下一张照片，并配上自己的猫语解读，是一种很有意思的体验，似乎猫和人都在互相揣测对方的想法。</p>
<p>因为她眼角分泌物比较多，咨询了医生说可能蛋白质摄入过多，所以开始换粮并减少了一些零食的投喂，第一天她发现吃的没有以前丰盛了，就一直趴在我电脑上用下图眼神看着我。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_11.jpg" alt="刚来的时候感觉你家伙食很好的？不会是养不起我了吧？" />
    </div>
    
      <figcaption>
          <p>刚来的时候感觉你家伙食很好的？不会是养不起我了吧？
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_12.jpg" alt="别工作了，看看我嘛" />
    </div>
    
      <figcaption>
          <p>别工作了，看看我嘛
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_13.jpg" alt="你的小可爱想引起你的注意力" />
    </div>
    
      <figcaption>
          <p>你的小可爱想引起你的注意力
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_14.jpg" alt="猫和老鼠都是你们人看着玩的，本猫都看困了" />
    </div>
    
      <figcaption>
          <p>猫和老鼠都是你们人看着玩的，本猫都看困了
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_15.jpg" alt="不许在我睡觉的时候卷我" />
    </div>
    
      <figcaption>
          <p>不许在我睡觉的时候卷我
              
          </p>
      </figcaption>
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输出">输出</h3>
<p>发现好久没正经写技术博客了，其实很多都已经打了草稿和笔记，只是还没有梳理成文，要继续加紧输出了。不过最近倒是和 GoCN 的小伙伴们一起翻译了一个 『<a href="https://gocn.github.io/styleguide/">Google Go 编程规范</a>』，还连同之前的『<a href="https://gocn.github.io/How-To-Code-in-Go/">How To Code In Go</a>』发布了在线版本和 pdf 版本，今天还接到了极客时间的合作邀请（顺便小组成员都能白嫖一个专栏），也算是很开心的一个小成就了。</p>
<p><img src="https://image.pseudoyu.com/images/gocn_trans_book.png" alt="gocn_trans_book"></p>
<p>不知不觉自己的 Telegram 频道『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』刚满了 200 订阅了，其实挺神奇的，只是一个自动化同步自己各个平台输入输出的一个小频道，慢慢积累了一些关注，也常常收到各个平台来的读者们的私信或是加好友申请，说频道有为他们带来一些不一样的视角和思考，还挺荣幸当时的一个小小的想法能够产生这样有趣的结果的，前几周忙碌于工作也少了很多输入输出，也希望继续坚持下去了。</p>
<p><img src="https://image.pseudoyu.com/images/yu_life_tg_subs_100.png" alt="yu_life_tg_subs_100"></p>
<p>这周的另一个小爱好就是调戏 ChatGPT，现在的 AI 聊天机器人也太强了，要是 GitHub Copilot 可能更多只是能够辅助一下写一些工具方法，但是 ChatGPT 是真能把整个程序给写出来（并且忽略了我的拼写错误正确理解了），要失业咯。</p>
<p><img src="https://image.pseudoyu.com/images/chatgpt_help_me_code_golang.png" alt="chatgpt_help_me_code_golang"></p>
<h3 id="输入">输入</h3>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>唐朝诡事录</strong>，被朋友推荐来看的，好像这种题材看得蛮少的，有些惊喜感，集中一个周末就刷完了，剧情大多还算经得起推敲，人物都很讨喜，喜君和小薛环都太可爱了！</li>
<li><strong>边缘世界</strong>，前几集虽然有点缝合但是感觉呈现形式挺不错的，后面越看越混乱，既没有了像是头号玩家那样的爽感，也算不上有什么深度，最后也算烂尾了。</li>
<li><strong>Wednesday，星期三</strong>，忘记从哪看到的推荐，工作间隙看完了，除了最开始的设定初见还比较新颖，后面有些不明所以，有点失望但还是追完了。</li>
<li><strong>静雪</strong>，正在追，侧重于情感渲染，所以后续节奏也比较慢，只求别再虐男二了。</li>
</ul>
]]></content:encoded></item><item><title>周报 #20 - 丧失的消费欲</title><link>https://www.pseudoyu.com/en/2022/11/27/weekly_review_20221127/</link><pubDate>Sun, 27 Nov 2022 21:08:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/11/27/weekly_review_20221127/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-11-18 到 2022-11-27 这周生活的记录与思考。 刚好到周末了，难得一天没有集中的开发工作量，饱饱地睡了一觉，下午补了落下的剧的</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-11-18</code> 到 <code>2022-11-27</code> 这周生活的记录与思考。</p>
<p>刚好到周末了，难得一天没有集中的开发工作量，饱饱地睡了一觉，下午补了落下的剧的一些进度，终于开始写周报，好像每周拖延几天（偷偷）磨掉了一周的周报哈哈，又回到了周日，新的轮回开始了。</p>
<p>这周是魔鬼作息，日常都是凌晨三四点睡，早上八九点起，有两三天甚至直接到了早上六点多才睡，然后又是一整天的工作量，周而复始，不过有猫猫的陪伴倒也算不上多苦，而且一直居家，反而多了一些相依为命的情谊。</p>
<p>可能因为确实过得太工作狂+生活佛系，又刚好要帮之前提过的酷学姐把一个她的画作上架成 NFT，所以让我带着猫猫去家里玩，体验了一下 “WeWork + 猫咖”，还蹭了两顿饭，是这周中为数不多的惬意时刻，也再次感慨自己的生活方式和品质和她的差距之大，不过也各有各的乐趣。</p>
<p>倒是猫猫是真的没良心，一点也不认生，一点好吃的好玩的就被收买了，四处好奇地探索，走的时候还不舍得，白养了，以后一定努力改善生活环境哈哈（卑微铲屎官的觉悟）。</p>
<h2 id="丧失的消费欲">丧失的消费欲</h2>
<p>其实自己以前一直算是个消费欲比较强的人，更多像是一种压制之下的报复性消费。因为家庭教育方式的问题，自己在学生时代一直是没有常规意义上的零用钱的，也不会有什么考好后的奖励这些（当然，与之相对的也是没有考不好后的批评和惩罚，很公平），而是有什么需要的会去跟父母说然后直接买，可能也是一种还不错的模式，但一些额外或是无用的消费也不太好跟家人提。</p>
<p>至今仍然记忆犹新（或者说是耿耿于怀哈哈）小学时期待了半年的一个礼物，原本一直以为会是 GBA SP（就是那个翻盖、有背光的 GBA 掌机，因为一直想来打口袋妖怪），但是收到后是一个遥控直升机，当时很失望。现在想想其实也挺好的，后面学无人机也有了一些基础直接上手了。</p>
<p>不过就是因为当下想要的东西总是没法第一时间获得，总是一种对于消费欲的压抑，而从大三开始经济独立，因为都是自己赚的钱所以可以很自由地支配，所以陆续买了很多东西，尤其是各种电子/数码产品，其实有些也并不是刚需或是真的很想要的东西，只是享受于能够自由拥有的感觉，甚至还有收藏各种包装盒的习惯（现在还都整齐地堆在书架顶上）。</p>
<p>工作后其实也更加是，毕竟也是一个算是天天和软硬件打交道的职业，再加上自己喜欢折腾各种工具应用，在有了一定经济能力后也都支持正版，在电子设备和软件上一直都有不小的开销，甚至还维护了一个还算小有热度的『<a href="https://github.com/pseudoyu/yu-tools">个人工具箱 - pseudoyu/yu-tools</a>』项目，也在持续更新中；同时，也常常会买一些感兴趣的 Switch 游戏，虽然有好多甚至都还没来得及打开，也少了很多沉下来慢慢品味的心境。</p>
<p>我似乎是一个不吝在爱好和喜欢的事物上消费的人，比起这些，反倒是自己的日常饮食或是生活起居才算是比较敷衍。但感觉近半年来，自己的消费欲在逐渐丧失，似乎再没有那种为了一个硬件产品期待好多天蹲发布、看评测和等收获的热情了，虽然常常嚷着自己的 16 寸 Intel 笔记本是被 Apple 背刺了，但也没那么在意所谓的 M 系列和它背后的数字了，更多就像是一种习惯一样看看发布的参数和跑分，提升了哪些哪些，然后自己来一句，“哦好，下一代再说吧”。</p>
<p>前段时间参加了双十一，因为刚刚把猫领回家，所以买了很多相关用品，倒是接连收了几天快递。然而在都安置好了，想着要不要给自己买点什么时，却好像陷入了一种空白，好像并不缺什么，也没有什么想要的，后来只好作罢；最近也是到了黑五，跟往年一样打开一些推文和文章看看有什么打折的软件数码，看了好半天最后也就买了两门和最近工作相关的课和一个笔记软件 Craft 的个人订阅会员，大部分期限也快结束了，自己也没什么感觉；可能双十二会买个体检套餐吧。</p>
<p>物欲的降低说不上是一件好事还是坏事，可能是因为现在自己已经不需要太多实体的、能触摸到的东西所带来的实感来填补自己的内心需要，慢慢地转向了一些可以内化的部分；可能是因为自己将许多需求的部分寄托到了猫猫和一些依赖关系上，并没有像以前那样有更多心思来关注自己的一些一时的满足；抑或是自己在日渐饱和的工作与日常中已经慢慢被磨灭了一些好奇心与探索的动力。</p>
<h2 id="与捏捏的日常">与『捏捏』的日常</h2>
<p>这周忙到书也没看，剧也只有周末的时候追了一部，其他也是什么都没顾上，但还是抽出时间带捏捏去体检了，依然有一些令人担心的小问题，也在继续吃药治疗了，希望能一直健健康康的，真的是有一点点小问题都会无比担心。</p>
<p>而因为一直都居家办公，陪伴的时间长了很多，有很多很棒的时刻值得记录，很不得每天都发好几条日常，像是一个晒娃狂魔，于是打算周报开一个小模块，日常记录这些瞬间，后面也想弄一些类似相册来记录下这些宝贵的时光。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_04.jpg" alt="来，帮我开会" />
    </div>
    
      <figcaption>
          <p>来，帮我开会
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_05.jpg" alt="优雅的姿态" />
    </div>
    
      <figcaption>
          <p>优雅的姿态
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_06.jpg" alt="藏在被子里的小可爱" />
    </div>
    
      <figcaption>
          <p>藏在被子里的小可爱
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_07.jpg" alt="这个无线充是给我充电用的么？" />
    </div>
    
      <figcaption>
          <p>这个无线充是给我充电用的么？
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_08.jpg" alt="你是要讲道理还是要我" />
    </div>
    
      <figcaption>
          <p>你是要讲道理还是要我
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_09.jpg" alt="熟睡的捏捏" />
    </div>
    
      <figcaption>
          <p>熟睡的捏捏
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_10.jpg" alt="三顿半和猫猫续命" />
    </div>
    
      <figcaption>
          <p>三顿半和猫猫续命
              
          </p>
      </figcaption>
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>初恋，First Love</strong>，出租车司机的设定让我想到之前看的《稍微想起一点》、《驾驶我的车》和一部动漫《奇巧计程车》，觉得这个还真的是能看到人世间百态的职业。这部期待了挺久的其实，围绕着音乐的展开、回忆和当下交错的呈现方式和满岛光，都是吸引的点，有好几个转场有被惊艳到。不过轮剧情上很难说出彩，只是现在越来越受不得虐，觉得这样甜甜的也挺好，毕竟看隔壁在播的《静雪》天天都在心疼男二和女二，果然年纪大了，还是适合甜甜恋爱的展开。总体来说还是蛮值得一追的。</li>
<li><strong>静雪</strong>，正在追，真的是被虐到，一直到更能带入一点男二却要被刀。</li>
<li><strong>边缘世界</strong>，正在追。</li>
</ul>
]]></content:encoded></item><item><title>周报 #19 - 忆一次创业经历</title><link>https://www.pseudoyu.com/en/2022/11/17/weekly_review_20221117/</link><pubDate>Thu, 17 Nov 2022 21:25:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/11/17/weekly_review_20221117/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-11-09 到 2022-11-17 这周生活的记录与思考。 这周的周报差点就鸽了，好像已经很久没有在周日准时发布了（甚至越拖越晚），总是有</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-11-09</code> 到 <code>2022-11-17</code> 这周生活的记录与思考。</p>
<p>这周的周报差点就鸽了，好像已经很久没有在周日准时发布了（甚至越拖越晚），总是有各种各样的事，原本也常常安慰自己说反正是自己的一种生活点滴记录，太忙了也可以降低一下优先级，但偶然在后台会发现一些用心的留言，甚至在微博这样已经几乎废弃使用的平台也能偶现一些催更，让我很真实地感觉到了自己写的文字和屏幕前的阅读者之间的链接，所以每次打开文档时也很难做到敷衍，倒不是说给自己压力一定要产出什么干货或是什么有价值的想法，但也难免会想象如果我作为读者在按照每周惯例打开周报看时是否会失望，也算是自己的一个小小标准吧。</p>
<p>其实一直很难称呼自己为作者，总觉得这个称号太重，似乎一下子和读者有了一些鸿沟，可能更多是自我定义为真诚写作的人，不论是一些周报想法中的碎碎念还是技术博文中对于知识的消化与解构，自己似乎很习惯于将自己的很多东西以文字形式呈现出来，归根结底还是自我分享欲的载体，但也常常能收获很多意外之喜，也更有动力坚持下去。</p>
<p>因为被工作占满了，这周的输入输出都不算多，不过倒是因为一些事记起了之前的一次创业经历，也算是第一次完整地回顾吧。</p>
<h2 id="忆一次创业经历">忆一次创业经历</h2>
<p><img src="https://image.pseudoyu.com/images/my_cat_nie_nie_02.jpg" alt="my_cat_nie_nie_02"></p>
<p>工作上已经连续熬了一周多的大夜，大概每天都是两三点睡，第二天挣扎着爬起来开晨会，上线了好几个大需求，不过大部分时间在家远程，偶尔想出门了就去公司，所以也提前享受了一下自己理想的远程办公模式，再加上有猫猫陪着，尽管处于高压之下，也没有去年驻场开发赶交付终验那么痛苦。</p>
<p>并且甚至在赶着项目的同时，还和一位偶识的挺有缘的学弟开启了一个分支创业项目，参与的初衷只是更快地提升一下自己的技术力，但能够把一些小小的构想通过一次次的讨论逐步成型也是一个很有趣的过程，也很乐在其中。</p>
<p>而且这周也第三次重温了美剧《硅谷》，大概自己就是那种只要感觉自己处于新领域探索或新知识学习时就会有用不完的精力（或者某种程度上的透支），似乎更能找到乐趣和成就感，自己大体还是幸运的吧，自己所谋生的工作同时也承载了自己的兴趣与个人追求。提到这个，其实在目前的阶段倒是可以略有些不好意思地说自己曾经有过那么一段创业的时光，结果不怎么好，但对于我也是一段很珍惜的经历。</p>
<p>大三结束的暑假自己咬牙买了一台 Sony A7M3，全套下来两万多的售价掏空了当时的全部积蓄，于是和一位学院的老师一拍即合，萌生了做一个在线教育视频工作室的想法。</p>
<p>事情的展开比自己想象得顺利很多。7 月底有了初步构想，八月底制作了商业计划书（BP）并和学院领导进行合作协商，很快申请到了一个可以免费使用的场地、一笔在当时看来不菲的启动资金与一些项目的合作机会；9 月就成立了公司，甚至为了省钱连注册公司与财务都自己去学习和尝试（最后注销公司的时候差点因为一些税务申报不规范问题而翻车），接下来就是几周的工作室设备购置与布置；10 月就正式招人和录制了第一门课程。</p>
<p>即使站在现在的角度也很难想象当初是抱着怎样的想法与热情在做这件事，市场推广、打光、拍摄、剪辑、后期、包装和各种繁琐的商业宣讲与谈判，为了节约成本前期都是自己一个人去做，后面才慢慢也带出了几位得意的“实习生”。已经记不清在那个因为要隔音而密不透风的录影棚中通宵过多少个夜晚，宜家沙发床的质感也成为了那段时间无法磨灭的记忆点。</p>
<p>经过了一年的探索，一切似乎慢慢有了起色，工作室也初具规模，但临近毕业时候的自己却很难真正将做视频这件事当作自己的事业，有些任性地还是选择了自己去申请计算机的研究生，于是一边做着一些远程工作维持 gap year 的生计，偶尔往返武汉完成录制项目，同时准备着雅思与申请文书，其实当时自己已经意识到了可能并没有打算再把这件事坚持做下去，只是不愿意就这样放弃自己的心血。</p>
<p>这样的纠结其实并没有持续太久，疫情来了，Base 在武汉且高度依赖线下业务的工作室自然陷入了停滞，而随着我赴香港读研，挤出来的时间也只够自己远程完成一些业务的收尾工作，于是在 21 年的 5 月也正式注销了公司。其实在收到最终的注销确认单时，算不上遗憾，在自己力所能及的领域做了一些尝试，为自己的大学生涯涂抹上了几分色彩。结束得也还算体面，将最后的一笔业务收益（尽管不多）全分给了参与投资的老师和依然在帮我完成许多善后工作的工作室成员，为自己的创业画上了一个还算圆满的休止符。</p>
<p>尽管都是自己主动的选择，依然残留着几分难过，在后面很多次的总结中也仅仅是轻描淡写地提及一下，似乎是在害怕过了这个阶段的自己就没办法捡起这样的勇气去做这些事，那再提“当年勇”也失去了意义。比起纠结于结果的成败，我依然觉得那段时光在积极地影响着我的工作与生活态度，尽管领域和内容天差地别，但坚持做好一件事的信念、解决问题的方法论、多线程处理各种事的冷静以及太多太多的品质似乎都是那时候所留下的，我也很庆幸现在的自己依然能够追随本心去尝试一些东西。</p>
<h2 id="捏捏与被治愈的生活">『捏捏』与被治愈的生活</h2>
<p>其实还没有正式取名字，总觉得是一件需要非常郑重去决定的事，一直还没有思绪。但最近也有了一个小名叫“捏捏”，一个可爱的拟声词，后面大概每篇周报都会有一些日常记录吧，周末也开始整理一下相机，开始记录一些成长，没准能成为一个 vlog 或萌宠博主呢（？在做梦），不过也确实因为在 B 站看到的 <a href="https://space.bilibili.com/58078997">polebug</a> 的视频周记而燃起了视频记录的念头，总之想做的事还是挺多的，一点点开始吧。</p>
<p>这周跟一位朋友聊天时，突然被评价说好像我的生活也还挺治愈的。才突然意识到好像是很久没有被这么说过了，总是让自己沉溺在一些情绪中，或是通过一些内心或是外部的忙碌来填充自己的时间，但这两周有了捏捏的陪伴，似乎成为了晒娃狂魔和一个奶爸，似乎整个世界都变的明媚了起来，连带着我的生活。</p>
<p>可能因为太宠了，最近总是在我工作的时候来捣乱，也爱上了爬我的键盘和电脑，完全无心工作哈哈。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_01.jpg"  />
    </div>
    
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cat_nie_nie_03.jpg"  />
    </div>
    
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>我的职业是小说家</strong>，正在读，村上真的是一个很独特的作家，太喜欢他的笔触与表达方式了。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>硅谷</strong>，重温第三遍，第一次看是在高中，觉得很酷但作为文科生的自己也没 get 太多；第二次是在大学毕业后，即将去读 CS，对其中的很多梗和这群 tech guys 的热情也更加向往；最近看完了第三遍，自己也终于如愿成为了 tech guy，尤其是后面很多区块链与去中心网络相关的，又有了奇妙的链接与共鸣，算是和《社交网络》一样对我影响挺大的一部作品了。不知道下一次重温的自己会是在做什么呢？</li>
<li><strong>她和她的她</strong>，被题材和宣传片所吸引，没办法去很自大地说自己能够对女性所面临的这些困境感同身受，但还是有很多共情的点，上周刚经受了《房思琪的初恋乐园》所残留的一些情绪波动，又看了这部，有些失语。整体节奏还不错，但依然还是觉得结局似乎有些太过于理想化和口号式，现实残酷的多。</li>
<li><strong>边缘世界</strong>，正在追。</li>
</ul>
]]></content:encoded></item><item><title>周报 #18 - 陪伴与另一种生活</title><link>https://www.pseudoyu.com/en/2022/11/08/weekly_review_20221108/</link><pubDate>Tue, 08 Nov 2022 13:04:41 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/11/08/weekly_review_20221108/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-11-01 到 2022-11-08 这周生活的记录与思考。 这周是和猫相处的第一周，因为双十一买了很多猫的各种设施和吃的，快递很多，大概有</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-11-01</code> 到 <code>2022-11-08</code> 这周生活的记录与思考。</p>
<p>这周是和猫相处的第一周，因为双十一买了很多猫的各种设施和吃的，快递很多，大概有一半多的时间是在居家办公收快递，所以也能有更多的相处时间，太乖了；周末带去体检了，整体还算健康，眼睛和肠胃有一些令人忧心的指标问题，开药进行了一些治疗，下周再去复查。</p>
<p>工作上这周进展不错，两个项目并行且都有了一些进展，写了一个合约并上生产环境使用了，并且针对一些常用的日常活动写了一些实用脚本，减少了很多重复性的繁琐工作，还挺开心的。</p>
<h2 id="陪伴">陪伴</h2>
<p>这是与猫度过的完整的第一周，因为也很不放心在家时候的状态，所以一半时间居家在家了，在公司上班的时候也时长开着摄像头观察一举一动（虽然大部分时间都是趴在椅子上睡觉的非静止画面，依然能盯着看很久），有一种莫名的牵挂。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cute_cat_1.jpg" alt="Cat On Bed" />
    </div>
    
      <figcaption>
          <p>Cat On Bed
              
          </p>
      </figcaption>
  </figure>
</div>

<p>常常以为自己是很能独处的一个人，并不需要太多陪伴，探索一些有趣的东西、或是看看电影书籍似乎已经足够填满我的大部分闲暇时光。但渐渐地发现其实自己是属于一个情绪隔绝的状态，低落和消沉的情绪逐步积累，却也不会影响我的正常生活工作，而从日常或是工作中获取的愉悦感也无法反向去消减我的负面。长此以往，有时甚至我自己都能够清晰地触摸到我的情绪值。</p>
<p>而这一周和猫的共处中，我能够感受到自己有在依赖这种感觉，一边开着会议一边抱着猫，或者看着她在旁边玩耍，时间流动得缓慢而美好，慢慢地才意识到这种感觉多么久违。</p>
<p>人和猫的羁绊真的很神奇，语言不通，情绪也很难共感，却似乎有一种隐隐的默契，一个将自己的被需要感寄托，一个静静地陪伴着。后面也慢慢打算捡起相机多拍摄一些自己的生活与猫的日常，似乎每天也都能有所期待了。</p>


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cute_cat_2.jpg" alt="Cat With Me" />
    </div>
    
      <figcaption>
          <p>Cat With Me
              
          </p>
      </figcaption>
  </figure>
</div>

<h2 id="另一种生活">另一种生活</h2>
<p>这周和之前在香港结识，并且现在同样北漂的学姐吃了饭，一年可能也就会约三四次饭，每次却都有挺不一样的体会，大概是每次都能从中获取自己对另一种生活方式的想象与期待。</p>
<p>大概从经历和性格上来说完全是两个不一样的人，我有自己专注的东西，似乎工作内容本身和沿着这个方向领域的许多事宜都是我所享受其中的，可以说是某种程度上的幸运，却也常常有些好奇如果没有走这条路，自己的生活又会是什么模样。</p>
<p>自己大概原本是一个所谓的挺“斜杠青年”的人，常常去学习体验一些全新的东西，有时候是享受于学会一项新东西的愉悦，有时候仅仅是沉浸于在学东西的过程。后来陷入了挺深的迷茫，纠结于“知识和体验是要更加追求深度还是广度”，最后还是选择了一个更专精的领域，同时，某种程度上来说也放弃了其他的可能性。</p>
<p>而学姐则是一个可以把自己的事做好，却也很能把自己的工作与自我追求分离的人，会在周末和闲暇的时候去攀岩、跳舞、游泳、冲浪、打拳，以及最重要的画画，在自己的各种兴趣爱好中尽情探索，不在意那么多得失，也不去纠结那么多意义，只是享受过程，同时享受着自我的补全。</p>
<p>而明明处于事业和个人发展都令人羡慕的阶段，却充满着热情跟我讲着在计划明年 gap 一年去美院参加一年全日制项目学画画，也不为了什么转型或是方向调整，只是喜欢。一时竟分不出自己是在羡慕能为了这样仅仅是“喜欢”的追求而能够做到这种程度还是能够找到这样的喜欢。</p>
<p>也许自己也在一些阶段做出了一些转变，不论是学业还是工作的方向，似乎也需要一些所谓的勇气，但内心深知自己已经平衡了其中的成本与得失，自己似乎已经好久好久没有为自己的内心追求与纯粹的喜欢去做一些事了。学姐所在体验与践行的就是曾经的我所向往的另一种生活，也让我看到了另一种生活的可能性。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<p>收到了一位读者 seyee 的评论：</p>
<blockquote>
<p>好奇一下这些书你都会读完嘛（没有质疑的意思，只是作为社畜觉得一周读这么多书好厉害）</p>
</blockquote>
<p>其实当然是不可能一周读那么多的书哈哈，只是我有并行读书的习惯，尤其是一些非小说类的书籍我可能会每天读部分章节，也根据时段和心情不同选择读不同的书，平均下来一本完整的书读完会在 2 周左右，但是遇到感兴趣的剧情类的可能一下午或者一晚上就会读完，或是两三个通勤时段，列举出来的大多是刚好在这周读完或是有读部分篇章的书。</p>


<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/reading_book_yizang.jpg" alt="Reading Book" />
    </div>
    
      <figcaption>
          <p>Reading Book
              
          </p>
      </figcaption>
  </figure>
</div>

<p>对于读书这件事从并不想以量或是产出作为自己的压力或是限制，而是更多作为自己的一种输入渠道和某种程度上的放松手段（当然在之前读《房思琪的初恋乐园》的时候也会 emo 好几天），尽量会达到一种情绪平衡吧。也是因为来自工作和多个方面的压力才寄托在书籍、电影这些媒介上，更像自己的一方净土吧。</p>
<ul>
<li><strong>我的职业是小说家</strong>，正在读。</li>
<li><strong>常识</strong>，正在读。</li>
<li><strong>自学大全</strong>，其实自己好像不算很喜欢像是《如何阅读一本书》这类的偏工具技巧类书籍，但确实有挺多经验可取的地方，这本书最近也比较火，刚开始看看，希望能有些方法上的参照。</li>
<li><strong>what if，那些古怪又让人忧心的问题</strong>，发现是那个火柴人的作者，真的讲了好多我小时候一些很好奇的疑问。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>Hacking Google</strong>，意外地节奏感很不错，虽然没有深入技术细节，但有把安全链条中的各个环节很清晰地呈现出来，很向往。</li>
<li><strong>边缘世界</strong>，正在追，但是感觉从第三集开始有些节奏一般，不过应该还是会追完。</li>
</ul>
]]></content:encoded></item><item><title>周报 #17 - 他和他的猫</title><link>https://www.pseudoyu.com/en/2022/10/31/weekly_review_20221031/</link><pubDate>Mon, 31 Oct 2022 10:46:08 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/10/31/weekly_review_20221031/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-10-28 到 2022-10-31 这周生活的记录与思考。 因为上一篇周报很晚才更新，所以这期在时间跨度上显得尤为短暂，但却也因生活中迎来</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-10-28</code> 到 <code>2022-10-31</code> 这周生活的记录与思考。</p>
<p>因为上一篇周报很晚才更新，所以这期在时间跨度上显得尤为短暂，但却也因生活中迎来的一个重大改变而别具意义。</p>
<p>经过了周五到周日三天的猫舍之旅与纠结，我把一只很合眼缘的银点（银渐层重点色？才发现原来也分那么多品类）小猫（名字还没决定）带回了家，重新过上了与猫的生活。</p>
<h2 id="他和他的猫">他和他的猫</h2>
<p>这个标题源于一部动漫《她和她的猫》，其中有这样一句话印象很深：</p>
<blockquote>
<p>我一直寻找着她的踪迹，我寻找她的理由，正是因为她同样也在寻找我。 —— 《她和她的猫》</p>
</blockquote>
<p>一直很喜欢猫，在遥远的 16 年的一家咖啡厅看到店主的可爱布偶时也动过想拥有一只的念头，但似乎在上段恋爱之前，自己从未真正认真思考过养猫这件事，或者说与猫为伴的生活。可能对于猫的热情与耐心是有的，但总是觉得自己并没有做好为一个新的生活伙伴负责的准备，自己的生活也常常是一团糟，又怎么敢去自以为是地负责 ta 的一生呢？之前见到过这样一句话，朴素却让人有些心痛。</p>
<blockquote>
<p>猫可能只是你这一生中的一小部分，而你却是它一生中的全部。</p>
</blockquote>
<p>在来北京生活工作稳定之后，“养猫”这件事似乎发生得自然而然，花了一个周末，去了几家猫舍，很快决定了很合眼缘的小薯，像是初为父母一样对于这个新伙伴的一切好奇而又紧张。</p>
<p><img src="https://image.pseudoyu.com/images/pity_and_ideas_in_hk.png" alt="pity_and_ideas_in_hk"></p>
<p>日子一天天地过去，似乎这已经是平淡的日常，但其实并没有那么理所应当。过去也曾有过这样的视日常为习惯的阶段，当似乎认为已经自己和一切改变了的时候，才发现不过更多的是自我满足罢了。</p>
<p>也很惭愧地说，在之前似乎也不短的养猫生活中，自己更多是享受其中的角色，在忙碌疲累时有所期待，在痛苦消沉的时候有所陪伴，在欢欣喜悦时有所寄托。而对于照顾猫的很多细节，似乎自己并没有上心太多，甚至到现在也很难准确说出小薯最喜欢的猫粮和罐头的品牌，实在也算不上称职。</p>
<p>后来的事也自然而然地发生了，在之前的一篇『<a href="https://www.pseudoyu.com/en/2022/08/22/weekly_review_20220822/">周报 #08 - 职业杂谈、404 Not Found 与猫</a>』中也提到过：</p>
<blockquote>
<p>实话说和她一起之前自己并没有想过养猫，大概是觉得连自己都照顾不好的人又怎么有资格对另一个生灵负责，但当真正家里多了一个成员时也才渐渐发现自己享受于这种依赖与被依赖，似乎生活也多了很多目标。</p>
</blockquote>
<blockquote>
<p>她离开后，小薯一并被带走了，虽然常常也跟朋友无奈地玩笑说自己“人猫两空”了，但也心知自己之前的照顾确实不如她，这样的选择也无可厚非，只是每次忆及从前又多了一倍的难过。</p>
</blockquote>
<blockquote>
<p>昨晚看了『喵星人的奇思妙想』纪录片后也更多了解了之前忽略的很多猫的想法和相处细节，也隐隐萌生出是不是要自己再养一只猫的念头。只是这就像是对小薯的一种背叛，自己也依然没能做好这个心理准备去再次去好好对待一个新的成员，而在自己需要的时候迎接一个新的成员于人于己都很难说是一个负责任的选择。</p>
</blockquote>
<blockquote>
<p>也许未来某一天吧。</p>
</blockquote>
<p>提到的这“未来某一天”，到了。</p>
<blockquote>
<p>远处的事物看起来渺小又模糊，近处的东西却非常清晰，回忆也是同样，遥远的曾经非常模糊，方才发生的事能记得一清二楚，本应这样才对。但我最近总能清晰地回忆起往事。 —— 《她和她的猫》</p>
</blockquote>
<p>原本觉得这一天会很遥远，会需要到我能够真正接受过去的时候才能够做到，会需要到我能够真正能说出“let it go”的时候才能坦然面对。然而并非如此，越是想要遗忘，回忆就越是清晰。</p>
<p>经常能够收到“珍惜当下”的安慰或是祝愿，但其实这于我而言是一个很狡猾的词，过去的所有经历构成了现在的我，过去和当下同样值得珍惜，而自己也并不想因为想走出消极情绪而抛弃一个完整的自己。大概还是抱着这样的念头继续生活下去了。</p>
<p>心理上很难说是不是真正做好了准备，各种意义上的准备都是，思绪理不清。但是，觉得自己应该已经可以好好地再接受一个新的生活伙伴了，或者说，也需要这样一种互相陪伴的关系了，也在『<a href="https://www.pseudoyu.com/en/2022/10/09/weekly_review_20221009/">周报 #14 - 被搁置的生活与自我</a>』中提及了：</p>
<blockquote>
<p>10 月 10 日就是当时第一次接小薯回家的日子了，躺在沙发下几个小时用猫粮吸引着她出来的时光还历历在目，第一次到怀里的欣喜也难以忘怀，临近这个日子却也只会愈加难过。</p>
</blockquote>
<blockquote>
<p>养猫大概是一件需要倾注许多心力去做好的一件事，原本更多觉得是我们在照顾猫，给她一个优渥的生活环境，到现在才发现，原来是我需要她。大概会早些考虑再养一只猫吧，等能够返京后会去之前的猫舍看看，让自己的生活多少能够增加一些期待与温存。</p>
</blockquote>
<p>这个时候其实挺感激当时立下了写周报这个 flag 的自己的，把这些思绪与其背后的自我记录了下来，也许是因为这些文字，自己才能够从中找到一些问题的答案。</p>
<p>尽管想再养一只猫的心路历程已经持续了好久，但下定决心其实更像是一个一时之念。周五下班后去了预订好的离公司并不远的猫舍，原本想选一只与小薯相似的布偶，却被一只小小的银渐层所吸引，也许是因为她蓝蓝的晶莹的的眼睛，也许是因为一来就乖乖地趴在我的腿上，安静而温柔。</p>
<p>因为要出差的安排，一直很犹豫，想着也许要在 12 月底才能带回家，害怕错过重要的陪伴阶段，也害怕路途与环境的颠簸对她带来的不适，似乎一到这样的时候就开始考虑很多。</p>
<p>周末还是去了原定的昌平的猫舍去看布偶，因为路途遥远，路上翻起了村上的这本《我的职业是小说家》。</p>
<p><img src="https://image.pseudoyu.com/images/life_about_cat_cunshang.jpg" alt="life_about_cat_cunshang"></p>
<p>他讲到了这一段刚毕业时候的经历，突然很戳内心感受，大概自己已经很久没有泛起这种温暖而有所期待的感觉了，原来，我比自己想象得更加需要一个陪伴。</p>
<p>在打听清楚了跨省托运的规则，和公司也经过一些沟通交涉后，还是决定当下就领回家，重新过上了与猫的生活。其实很奇妙，明明似乎一切都没什么变化，但在回家途中的出租车上，自己跟司机有一搭没一搭地聊着天，时不时地看一眼航空箱里的猫，突然有一种生活又重新流动起来的感觉，窗外依旧是那个并不算熟悉的北京，内心却有了一些归属。</p>

<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/my_cute_cat_01.jpg" alt="My Cute Cat" />
    </div>
    
      <figcaption>
          <p>My Cute Cat
              
          </p>
      </figcaption>
  </figure>
</div>

<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>我的职业是小说家</strong>，正在读，村上的文字真的太有意思了，几分真实几分自嘲。</li>
<li><strong>计算机体系结构：量化研究方法（第 6 版）</strong>，正在读，有点难啃。</li>
<li><strong>Programming in Lua, Fourth Edition</strong>，看完了视频，通过书巩固一下。</li>
<li><strong>常识</strong>，正在读，果然在行程里没有一口气读完就拖到了现在。</li>
<li><strong>乌合之众</strong>，正好重温了下，印象最深的也是进入一个群体就很容易降智或是忽略自己行为中错误的部分，即使并不是直接加害者，也难免成为一个抱有“法不责众”的心态去释放恶意的帮凶。 有些部分还挺有参考性的吧，但个人色彩也很浓厚。对于恶意群体是否值得被拯救也是挺需要思考的。</li>
<li><strong>五种时间</strong>，小鹿的视频里提到这本书就好奇来看了一下，我算是对于时间管理、知识管理等等这些有所追求的那一类群体了，依然在这本书中没法获取什么有益的部分。理论讲解的部分过于经验谈，很难了解到获取这些经验背后的经历和思考逻辑，这一部分《被讨厌的勇气》中阿德勒的对话思辨方式会好得多；而方法论部分华丽的“花园模型”却也很难有所参照。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>静雪</strong>，看了第四集突然好难过，虽然是意料之中，但还是很心疼凑斗（可能代入感比较强）。</li>
<li><strong>边缘世界</strong>，正在追。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>她和她的猫</strong>，很短却又很戳感受的一部短片，因为周报的标题重温了一下，对于新养了一只猫的自己可能触动尤其明显。猫可能只是你这一生中的一小部分，而你却是它一生中的全部。养猫大概是一件需要倾注许多心力去做好的一件事，原本更多觉得是我们在照顾猫，给她一个优渥的生活环境，到现在才发现，原来是我需要她。</li>
</ul>
<h4 id="游戏">游戏</h4>
<ul>
<li><strong>女神异闻录 5 皇家版</strong>，期待了很久终于上了 Switch，但才玩了指引的部分，画风、配乐和玩法设计都很惊艳，有时候做别的事放着作背景音乐也是一种享受，不知道什么时候才能完整体验完。</li>
</ul>
]]></content:encoded></item><item><title>周报 #16 - 纯粹性学习</title><link>https://www.pseudoyu.com/en/2022/10/27/weekly_review_20221027/</link><pubDate>Thu, 27 Oct 2022 00:28:15 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/10/27/weekly_review_20221027/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-10-19 到 2022-10-27 这周生活的记录与思考。 这一周工作项目很忙，连续好几天都在加班，不过总算是完成了自己部分的需求。但是在</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-10-19</code> 到 <code>2022-10-27</code> 这周生活的记录与思考。</p>
<p>这一周工作项目很忙，连续好几天都在加班，不过总算是完成了自己部分的需求。但是在闲隙时间里，倒是把几个之前一直想学的语言的入门教程看了，很有意思。然后公司安排作了一次技术分享，讲智能合约这一块，还是好好做了 ppt，不得不说 Apple 的 Keynote 真好用，神奇移动和一些内置的动画效果都很顺滑。</p>
<p>又折腾了好几个小网站和系统，自己的 starter page 也越来越丰富啦。其他就是因为一些个人的规划问题，打算把之前的一些项目和文章做一下双语版本了，后面可能除了周报外其他的技术文章也会先写英文再翻译一版中文（或者反过来？），感觉压力很大，不过还是要坚持下去。</p>
<h2 id="纯粹性学习">纯粹性学习</h2>
<p>这周沉迷学了好多新技术，把一直有些好奇的 Lua 基础语法看了，感觉能用来写点脚本和小游戏；C++ 进行了一些入门学习，这个主要想深入一些语言的机制，这次学反而更加能体会到一些语言设计的精巧；Rust 也把基础语法又巩固了一下，算是第二次冲击入门了；因为要写一些 DApp，React 和 TypeScript 也在进行中。</p>
<p>继续在读那几本很难啃的书，像是《深入理解计算机系统（CSAPP）》和新出的《计算机体系结构：量化研究方法（第六版）》进展都有点缓慢，但是慢慢来吧。</p>
<p>其实学这些倒也没有那么强的目的性，大部分在工作中也不会马上用到（这也是时常觉得工作有时候有些无趣的主要原因），可能没有很多实际应用的话也会常常忘记，但是本身学习过程就很有意思。慢慢还挺喜欢 Crash Course 这种形式，几个小时揭开了一些神秘名词的面纱，或是掌握一些奇奇怪怪的技能，能感受到一种很纯粹的学习乐趣。</p>
<p>这个好像是一直以来的习惯，大学时候就鼓捣着学习好几种新的外语（当然，学了一阵子后就放弃了，德语作为二外算是入门了吧，但不知道什么时候才能捡起来，有点后悔没好好学），以及把 Adobe 全家桶都学一遍（好多确实有点鸡肋，但有用的确实学得差不多了）。比起一项技能或是一类知识能够给自己带来的实际益处，似乎探索带来的动力更为重要。</p>
<p>目前也很想能做出一些有意思的东西，希望能一直从自己做的事中找到乐趣吧。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="twitter-统计系统">Twitter 统计系统</h3>
<p>跟着推友<a href="https://twitter.com/disksing">象牙山刘能</a>的『<a href="https://github.com/disksing/twiyou">twiyou</a>』项目搭建了自己的统计系统，很有意思。</p>
<p><img src="https://image.pseudoyu.com/images/yu_twitter_monitor.png" alt="yu_twitter_monitor"></p>
<h3 id="博客系统">博客系统</h3>
<p>之前虽然也经常魔改一些主题设置，还给我用的 hugo 主题提过 pr，但其实一直没深入研究过 hugo 的模板系统，这几天好好研究了一下，打算写一些 shortcode 来供使用，还是挺强大的。</p>
<p>文章的部分闲置了好久，其实都在 Logseq 中有记录，但是一直没细致整理，后面有些不一定很成文的可能就放在 Notes 模块了，持续更新下。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>乌合之众</strong>，正在重温。</li>
<li><strong>Programming in Lua, Fourth Edition</strong>，学了一点 Lua，感觉是个很有意思的语言。</li>
<li><strong>计算机体系结构：量化研究方法（第 6 版）</strong></li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>溺水小刀</strong>，画面还不错，有几个经典场景常有在混剪中看到，但是剧情和节奏还是挺平庸的。全程也就是在欣赏音乐了，歌单添加了好几首，很适合做视频的 bgm。</li>
<li><strong>罗马</strong>，节奏和画面都无比缓慢的一部电影，像是一部个人的回忆录，在当时的环境下又有一些微妙的隐喻，也正如在时代下无从适从的当下的我们。</li>
<li><strong>瞬息全宇宙</strong>，前几个月火到不行，今晚一边补周报一边看了，很失望，有点不明所以，情绪转折和反转都很莫名，有种想表达的太多，也立意太高，反而撑不起内核的感觉。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>串流先锋</strong>，故事总是相似，虽然在心目中还远比不上《社交网络》，但作为一个互联网创业故事很难得地没有仅仅专注于程序员，很新颖。崇拜 The Coder 中的科技宅们但是最喜欢的还是 Martin，毫无拘束，商业和现实世界不仅仅只是二进制，需要有人来为其理想主义而背负代价。另外，The Lawyer 中的许多转场画面很惊艳。</li>
<li><strong>龙之家族</strong>，我本身也不算权游的爱好者吧，当时看到第五还是第六季听说烂尾了就没追了，书倒是看了大半。前几个月比较热门所以追了，前几集几度想要弃坑，零碎着看完了，感觉这么宏大的世界观可能还是书更适合铺垫，剧集总有一些断续感。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>朝花夕誓</strong>，也是被朋友推荐，略带些奇幻的不老一族的设定。宏大的世界观下却只是从时间流逝与缘起缘尽的人情讲述整个故事，有一种不一样的视角。</li>
<li><strong>万神殿</strong>，同事说这部动漫有并行计算，资源池、死锁、互斥锁，于是好奇来看看。前几集很有意思，临近结尾有些抽象，看得很累，可能也是因为在午休闲隙看的没能细细琢磨，但总体还是很值得一看的。</li>
</ul>
]]></content:encoded></item><item><title>周报 #15 - 内观与外求</title><link>https://www.pseudoyu.com/en/2022/10/18/weekly_review_20221018/</link><pubDate>Tue, 18 Oct 2022 17:38:39 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/10/18/weekly_review_20221018/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-10-10 到 2022-10-18 这周生活的记录与思考。 因为疫情的缘故一直在杭州居家，天气日渐转凉，没带太多衣服，所以在健康宝状态正常</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-10-10</code> 到 <code>2022-10-18</code> 这周生活的记录与思考。</p>
<p>因为疫情的缘故一直在杭州居家，天气日渐转凉，没带太多衣服，所以在健康宝状态正常之后马上买了回来的票，周五就回了北京。短短半个月时间家里就有些一团糟，周末两天几乎都在大扫除和整理。</p>
<p>两个项目陆续开始有些重叠，在家的工作效率不算太高，也很久没有好好学点东西了，整理了下学习计划与日程安排。</p>
<p>不错的是自己终于坚持了几天晨跑，看到了久违的杭州的风景，不过也明显感觉到自己体能有所下降，临近秋冬了可能多做一些室内的运动吧。</p>
<h2 id="记一次印象深刻的交流">记一次印象深刻的交流</h2>
<p>本科时候在社团结识并一直师徒相称的一个朋友完成了第一部小说，也开始做自己的 B 站荐书的帐号，有一种很因缘际会的感觉。记得很遥远之前谈论过要写这样的一部作品，就像一棵幼芽一样藏在记忆中，而到了现在渐渐有了第一个发芽的种子，而自己作为这样的见证者，也由衷地开心。倒是作为师父，自己一直想做的一些事（比如 B 站帐号）反而持续搁置，也该加油了。</p>
<p>自己其实一直很珍惜这种能够不基于日常的交流模式，尽管好像已经有近两年没什么联系，却依旧发现了很多想法和特质上相像的点。这就像是一种磁场或是默契，基于个性特征的契合而不是日常或是某些其他的目的性的交流也更容易保持恒久，似乎只需要想到些什么，一句“对了，我突然想到&hellip;”或是相隔几个月毫无铺垫的一句“约个电话？”就已经足够打开话匣，是一种很令人惬意的关系模式。</p>
<h3 id="性别与交流">性别与交流</h3>
<p>起初聊到了关于性别与交流的问题，提到说好像当前比较普遍的男生比较难去完完全全静下心去看女生产出的内容，就好像总是对照片、工作情感状况尤其敏感，而常常忽略一些观点性的输出，就好像性别隔离了平等交流。</p>
<p>这是一个挺有意思的现象，似乎天然存在于异性之间的关系中，且由于心思细腻程度的一些天然差异，男性也更容易成为无视女性观点性表达的一方。诚然，自己也不是什么高尚的人，无法免俗地因外表或是称之为魅力的因素影响一些起初印象的判断，但一旦进入朋友的范畴，会更倾向忽略这些来追求更为真实与平等的交流，而尤其随着自己逐渐不再依赖于社交，也对这样仍可以交流的机会倍感珍惜，而这样的真诚也往往能有同样的回应。</p>
<h3 id="创作与分享欲">创作与分享欲</h3>
<p>还聊到了创作与分享的一些关系。其实某种程度上来说我的博客与朋友的书都是一种创作，同样也是我们分享欲的载体。</p>
<p>写东西、产出内容、表达想法，或是把之前埋下的想法一点点实现，是分享欲的一种表现，但并不是那种告诉别人自己在写一些似乎很厉害的东西这样的虚荣心作祟，而是希望真诚表达，或是自己付诸心血完成的作品能被认真对待，或者是得到一些反馈。</p>
<p>朋友的一句比喻很贴切，这就像是对着山谷发声，希望能听到回音。</p>
<h3 id="内观与外求">内观与外求</h3>
<p>印象比较深的是提到了“内观与外求”这个概念。我们作为人的关注点往往都分为内在与外在两个方面，相较而言，对外的关注点由于更具刺激性与正反馈而占了绝大部分，而对内在的关注则往往容易被忽略。</p>
<p>似乎从某个阶段起，开始有些害怕和警惕自己的变化，担心有一天再也看不进书和电影，或是看完后想法空空，这是一件多么难以想象和接受的事呀；与此同时，似乎又有些担心自己停止变化，那又会错过多少有趣的人生阶段呢？</p>
<p>细想了一下，自己其实是在害怕不再具备内观的能力，外求似乎总能有一些答案，而内观则没有终点。如果失去了自己的内核，失去了对自我的好奇与探索的动力，是最值得恐惧和难以忍受的事。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>毛姆读书随笔</strong>，补标，几年前最初读到，后面陆续又看了好几遍，可以说是重新燃起了我对文学经典的热情。</li>
<li><strong>常识</strong>，道长的时评政论，不得不说那么多年前的一些政治看法在现在的中国环境下看，有一些很有意思的点。</li>
<li><strong>乌合之众</strong>，也是大一的时候看过，路途上重温，挺不一样的，尤其是能够感觉到个体特质渐渐在被抹去的当下。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>坠落</strong>，看得全程很都很精神紧绷，也还是挺不一样的观感，大概上一次有这种感觉还是《云中行走》了。平时自己虽然并不怕过山车这样的活动但也不会刻意去追求刺激感，大概也比较难理解这种体验，倒是有点好奇，最近有在思考去徒步，也许之后可以去试试蹦极和跳伞。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>终极名单/The Terminal List</strong>，第一集的铺垫看着有点累和压抑，后面节奏感很紧凑，PTSD 与复仇元素也算是剧集常客了，但依然有不少惊喜感，查了一下原来也是 poi 的导演，熟悉的感觉。</li>
<li><strong>石子和羽男-这种事情也好告吗？</strong>，因为有村架纯的一个表情包看的这部剧，风格不错但是剧情和案子也就这样吧，可能原本定位更偏向社会现状影射和教育意义。另外怎么感觉最近律政题材的不错的新剧也越来越多了。</li>
<li><strong>甄嬛传</strong>，周末居家的时候补了，以前一直因为题材不太感兴趣，古装里面一直也都喜欢《琅琊榜》，不过追完后倒是发现了很多不一样的吸引点了，当时的剧集节奏和演技都还是挺绝的。</li>
<li><strong>静雪</strong>，在追的一部新日剧，很美。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>狼的孩子雨和雪</strong>，晚上突然翻起豆瓣想看的列表，偶然看见这部从高中时候就码了的动漫电影，就打开看完了。很喜欢的画风，尤其是自然景观的部分很细致，剧情上虽然结局算是不错但依然有点致郁，人物的性格都好喜欢。</li>
<li><strong>电锯人</strong>，高中时好像很有名，但是我当时没看过动漫，补一下番，看了第一集还蛮不错的。</li>
<li><strong>万神殿</strong>，听同事说看这个番还得了解死锁、互斥锁和并行计算什么的，有点兴趣，就追了一下，感觉设定也挺有意思的。</li>
</ul>
<h4 id="游戏">游戏</h4>
<ul>
<li><strong>火焰纹章：烈火之剑</strong>，打了一半多了，有点累了，比较费脑，等下一波时间空一点打完。</li>
</ul>
]]></content:encoded></item><item><title>周报 #14 - 被搁置的生活与自我</title><link>https://www.pseudoyu.com/en/2022/10/09/weekly_review_20221009/</link><pubDate>Sun, 09 Oct 2022 09:51:31 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/10/09/weekly_review_20221009/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-09-27 到 2022-10-09 这周生活的记录与思考。 这是一篇跨度很长的周报了，缘由是我自 9.29 日早晨就提前调休回了杭州，接着国庆假期，</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-09-27</code> 到 <code>2022-10-09</code> 这周生活的记录与思考。</p>
<p>这是一篇跨度很长的周报了，缘由是我自 9.29 日早晨就提前调休回了杭州，接着国庆假期，又凑了个小长假，那一周主要也是加班与回家的行程，便干脆合并为一篇了。</p>
<p>继续忙于手头项目的上线，且由于节前的调休而有些匆忙，尽管假期还有很多需要加班调整的，但总算功能是完成了。因此在家的一周多也算是有些放松，陪伴了家人、见了一些朋友、换了个发色（蓝灰色），也重新整理了自己被搁置的生活。</p>
<h2 id="被搁置的生活与自我">被搁置的生活与自我</h2>
<p>距离年中的生活变动已经过了接近半年，我一直以为自己在经历着无可避免地遗忘，但最近愈来愈频繁的梦境像是嘲弄般地提醒着我，不过是被搁置了而已，从未真正过去。</p>
<p>自己之前一直不怎么做梦，虽然算不上无忧无虑，但还算积极的品性也使得烦恼确实并没有在显著影响着我的生活。然而最近总是有一些真实记忆和情景通过梦境的方式重现，真实到每天早上都有些茫然，需要花越来越久的时间来排解这些低落情绪，或是任由它们滋生并蔓延到我生活的角落里。</p>
<p>细数一下过去的半年自己似乎并算不上一蹶不振，工作还算完成得不错，重新捡起的博客得到了一些认可并且有了还算可观的访问量；周报虽然常有摸鱼的时候，但也还算坚持下来了；作为分享欲出口的推特帐户也积攒了一些粉丝，算是一个小小的技术+日常博主，自己碎碎念的频道也慢慢充盈着丰富的内容。同时，我也看了很多之前 Mark 的书、电影、动漫和剧集，可能思想算不上有什么变化但有在培养思考的习惯。</p>
<p>似乎一切都有着不错的态势，但总是隐隐觉得缺少了一些什么。</p>
<p>我似乎总是自我保护式地避免让自己陷入极度糟糕的状态，在某些方面低落消沉时便会强迫式地将精力投入其他，像是在寻求某些方面的平衡与体面，就像是从一个客观视角审视自己的生活，过于冷静地填补着生活的空缺之处，而生活本身的意义则是被搁置了，似乎失去了其重要性与意义。</p>
<p>几年前写过一篇《<a href="https://www.pseudoyu.com/en/2020/06/06/yearly_review_23/">23 岁的自白：去追寻意义</a>》，也算是这个博客颇具意义的开篇之作。回看当时的文字，尽管在一些略带自以为是的心得体悟陈述后最终也没得出什么太深刻的道理，但多少还是有些追寻自我的傲气与建构自我的决心。</p>
<p>然而现在的自己似乎把自我这件事随着生活意义的缺失而一同搁置了，似乎只要能让自己不闲下来，一切都好，周报算是一种自省的渠道，却也只能解决当下的状态与心情而难以触及自我的深处。</p>
<p>能看到明显的颓势却无力去弥补，这种无力感并不是主观的自我麻痹与纵容，而是一种如在大海中溺水般的窒息与绝望，无法自救，更难以指望他人，看不见灯塔，只能依靠着偶然出现的浮木苟活。并不想总是留下一些消极的文字，但在这个假期却放任自己被情绪的漩涡所吞噬，几乎感受不到时间的流逝。</p>
<p>10 月 10 日就是当时第一次接小薯回家的日子了，躺在沙发下几个小时用猫粮吸引着她出来的时光还历历在目，第一次到怀里的欣喜也难以忘怀，临近这个日子却也只会愈加难过。</p>
<p>养猫大概是一件需要倾注许多心力去做好的一件事，原本更多觉得是我们在照顾猫，给她一个优渥的生活环境，到现在才发现，原来是我需要她。大概会早些考虑再养一只猫吧，等能够返京后会去之前的猫舍看看，让自己的生活多少能够增加一些期待与温存。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="设备">设备</h3>
<p><img src="https://image.pseudoyu.com/images/rg351v_game_console.jpg" alt="rg351v_game_console"></p>
<p>每隔一两年就会用手机模拟器重温一下经典 GBA 游戏，但虚拟按键玩起来总差点小时候的那种感觉。从
<a href="https://twitter.com/Ehco1996">@Ehco1996</a> get 新玩具，解锁了开源掌机新世界！</p>
<p>火速重温宝可梦和火焰纹章系列（虽然已经通关好多遍了），快乐！</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>送你一颗子弹</strong>，是我近两年看得最享受的一本书了，因为是杂文札记，通勤时看上几篇不至于有断续感。可太喜欢刘瑜的讲话风格了，生活随笔掺杂着一些政治、文化思考，好几次在地铁上快笑出声，原来文字可以把一个人怎样生活和其世界的面貌展现得如此具体而真实。另外这种文字中的真实和对自己的戏谑也是我所向往的状态，希望多年后看自己的文字也能或多或少有这样的惊喜感。</li>
<li><strong>悉达多</strong>，很短的一本小书，两个小时的航程途中看完的，可能因为物理上隔绝了外部干扰，莫名宁静。讲述的是印度宗教哲学，是一种对人的自我纯净与宁静部分的追寻。听一位朋友讲说有过觉得一切都无意义的阶段，封闭且痛苦，自己也常有，就突然想到了悉达多。一个完整的人需要经历悉达多的一生，从反抗世间的一切、拒绝庸碌，到克己、压制欲望、自我逃避与安慰，再到开始认识、学习并推翻自己，自我矛盾，最后到依然遵循自我，却能够理解与同情世人和他们的生活方式。于我而言最深刻的点就是从一个完整的一生的维度告诫了自己人生无法通过遵循规律或是模仿、追随他人来找到自我，只有不断思考与找寻才能真正理解自己与生活，并不是说一定所有事都需要亲历，只是至少更应该探究与体验而非索取。强烈推荐看 B 站宝藏 up “天真的和感伤的小说家”的评析视频。</li>
<li><strong>小于一</strong>，回家整理书架发现几年前读过，但记忆已经有些模糊了，补标一下，之后有空重读一下。当时真爱纸质书啊。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>子弹列车</strong>，有点《两杆大烟枪》的即视感，镜头切换和霓虹灯旁白设定还挺印象深刻，可惜最后收尾和背景解释有些仓促。</li>
<li><strong>海边的曼彻斯特</strong>，可能并不是一部适合在我本身情绪低迷时候看的电影，还是静静看完了。悔恨、感情、亲情、一个人的孤独感，称不上感同身受但有在好好体会。</li>
<li><strong>新·奥特曼</strong>，没想到现在还能看一部奥特曼电影，还是熟悉的感觉。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>终极名单/The Terminal List</strong>，看到推荐，刚看了个开头。</li>
<li><strong>石子和羽男-这种事情也好告吗？</strong>，已经完结了，但一直还看完，前段时间看到竹棘的剪辑，于是想着把后面的部分看了。</li>
<li><strong>龙之家族 第一季</strong>，看到中间了觉得倒是还行，想着干脆追完吧。</li>
<li><strong>瑞克和莫蒂 第六季</strong>，可能因为前几季连着看完有些匆忙，追这一季慢慢看能发现更多细节。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，陪我度过了这半年，设定、节奏和剧情都很舒服，结局我圆满了，果然谁不爱甜甜的恋爱呢。</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，抛去设定，中后期更像恋爱日常番，倒是也有点甜。</li>
</ul>
<h4 id="游戏">游戏</h4>
<ul>
<li><strong>火焰纹章：烈火之剑</strong>，最近闲鱼收了一个开源掌机，可以静下心补一下之前心心念的火焰纹章系列，当时太小，没能太体会战棋策略类的乐趣，也算是有些遗憾。</li>
</ul>
]]></content:encoded></item><item><title>周报 #13 - 忙里偷闲的乐趣</title><link>https://www.pseudoyu.com/en/2022/09/26/weekly_review_20220926/</link><pubDate>Mon, 26 Sep 2022 23:19:25 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/26/weekly_review_20220926/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-09-19 到 2022-09-26 这周生活的记录与思考。 这一周异常忙碌，有好几天都很晚才到家，但是神奇的是倒是只有在这样的时候才似乎更</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-09-19</code> 到 <code>2022-09-26</code> 这周生活的记录与思考。</p>
<p>这一周异常忙碌，有好几天都很晚才到家，但是神奇的是倒是只有在这样的时候才似乎更有动力做更多，看完了一本书，补了好多电影和剧集，还完成了不少大大小小的事，其余倒是没有太多事发生，以至于周报都有些拖沓。</p>
<h2 id="忙里偷闲的乐趣">忙里偷闲的乐趣</h2>
<p>今天刷推时偶尔看到<a href="https://twitter.com/disksing">象牙山刘能</a>和<a href="https://twitter.com/cloudwu">云风</a>的一段对话，觉得很有意思：</p>
<blockquote>
<p><strong>象牙山刘能</strong>：平时上班干活的时候总想着做 side project，真到了周末只想打游戏看剧&hellip;</p>
<p><strong>云风</strong>：不如上班永远做 side project ，周末工作。这样就不会打游戏看剧了，因为周末再不做，就真的什么工作都没做了。这样做还有一个好处：如果你的工作和同事是相互依赖的，那么这样没有并行，所以永远不会产生冲突。你还可以充分考虑产品多变的需求后才开始动手。</p>
<p><strong>网友</strong>：这个想法的侧面是，工作两天就能做完</p>
<p><strong>云风</strong>：一个长期工程的实际有效工作量远小于 2/5 吧。如果实在做不完，可以适当延长周末工作时间。另外，每周有长达五天时间去自习估算这个工作量，一般不会错了。所以，这个方法实质上指：多想少做。</p>
<p><strong>象牙山刘能</strong>：多想少做这点确实是的，经常拖得越久做起来就越顺利。不过只在周末做正经工作这个难度有点高，我还以为你在讲段子哈哈。而且应该很多人都不适合，比如说我如果工作都推到周末估计会因为压力太大直接摆烂😳</p>
<p><strong>云风</strong>：一半是段子 :) 不过我这些年不少关键工作的确是周末/法定假日做的。</p>
</blockquote>
<p>仔细回想，自己似乎总是有这样的倾向，大二备考专四和软考时，尽管复习时间已经十分紧张了，却好像拿这段时间来学了很多无关（但也不至于无用）的东西，能够感受到挤压出来的时间尤其珍贵，做什么事都有额外的乐趣。</p>
<p>在忙到爆炸争分夺秒时，常常会有这样的念头，“原来我这短短的一周能够完成那么多事，那等我考完/假期/闲下来，有了大把能够支配的时间，那一定能学完/做完 xxx”。但其实当那个节点真正来到时，反而开始“摆烂”了。</p>
<p>仔细想想自己的大部分额外的技能或是学习的东西都是“不务正业”时完成的，甚至在很久后的现在都还受益良多，而真正那些正经任务却经常是积累到 deadline 的最后时刻完成的，似乎也有不错的结果，这不禁让我困惑时间与效率之间的相关性以及心态对自己做一件事动力的影响。</p>
<p>每个人对于任务安排与时间管理的模式各不相同，我可能是个效率控，但绝对不是一个对于时间安排极度细致的人。某种程度上我享受于一种并不有序却又能恰好完成所有事的一种随意感，这让我觉得自己不是在被任务清单上一个个条目所奴役，而是在支配着自己的时间。作为这种模式产生的副作用，我常常会有不得不“力挽狂澜”的时候，久而久之倒是心态也变得更稳了，或者说对于自己解决问题的能力有了一些衡量标准与累积的信心。</p>
<p>另外，惯性与乐趣也在其中扮演了重要角色。</p>
<p>这在五六月我被疫情封锁在家中，接近 50 天未出门的那一段经历中表现得尤其明显。那段时间因为自己的精神状态也并不好，一心投入了工作中，在很多会议或是任务项的间隙，却一直在学很多额外的部分，同时也重新开始写博客记录，似乎自己要在极其有限的时间里消耗完全部精力，而现在依然从那一段时间的很多积累、决定和培养的习惯中获益。而到了七八月项目结束略空闲的时期，尽管还是有在按照计划做一些事，却很难找到当时的沉浸感。</p>
<p>后来发现这取决于如何看待这些事，在工作忙碌时的学习或是放松是一种额外的状态出口，能够从繁重而重复的日常中脱离，当然也更容易感受到乐趣所在，而且这时并不需要太多状态调整或是筹备的前期步骤，依靠工作状态的惯性也更容易切换。而到了真正可以支配的自由时间时，我们却不得不将其看待为任务项，需要为其安排出时间并将自己从休息或是娱乐的状态中切换回来，成本更高，阻力也更多。</p>
<p>所以之后在工作日回家的可能并不那么完整的时间里，也会尽量安排一些 side project 或是学习的部分，而周末则希望更完整用来外出或是书籍、电影、剧集或是游戏这样的输入活动，更好将自己的状态作一些切分似乎也是不错的方式，会尝试探索一下。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>法治的细节</strong>，之前看过一些罗翔老师的视频，也读过他的一本《圆圈正义》，我觉得与其说“清醒”，我更觉得罗老师只是保持了对于一切的“敬畏”与“谦卑”，在此之上，尽管觉得自己永远做不到，无法画出一个完美的圆，但始终在追寻。受益很多。读经典的这一部分读得很吃力，重看了几遍还是没办法消化，“自由、平等与博爱”那么大的主题却能那么娓娓道来，果然还是需要更多积累吧。</li>
<li><strong>送你一颗子弹</strong>，正在看，太喜欢刘瑜的讲话风格了。</li>
</ul>
<h4 id="播客">播客</h4>
<ul>
<li><strong>Fork It - #22 - PoW vs PoS</strong>，随着 “The Merge”的发生，这个话题又变得热门起来，一期很好的概念梳理探究，值得反复听和记笔记。</li>
<li><strong>Fork It - #23 - PoS 是谎言么？</strong>，前后花了三天的通勤才完整听完，有几个概念解释不断回退反复听，还是发现了很多理解上的漏洞，打算看看 BTC Study 补补了。</li>
<li><strong>科技乱炖：你被羊了个羊骗了么？</strong>，最近挺现象级的一个游戏，但自己又没什么兴趣，通过主播们的这期了解一下，很短，但作为科普话题也还算有意思。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>春天不是读书天</strong>，刚开始看还觉得男主有些太跳了，后面慢慢发现这才是不设限的生活方式，太快乐了。和《早餐俱乐部》连着看，感觉内心的叛逆都被唤醒了。</li>
<li><strong>鹬</strong>，最近加班加到有点心累，想起了一些一直躺在列表里的动画短片，莫名好治愈。</li>
<li><strong>达拉斯买家俱乐部</strong>，片子里对于绝望与窒息感的刻画太细了，耳鸣的音效和逼仄的画面，代入感极强。看到了一个 cowboy 的生活态度，好像厌倦一切却真真切切地热爱着人生，似乎漠不关心他人却又愿意付诸真心，太酷了。另外，虽然没什么爱情戏，但后半段和女主的几次眼神和神态交流也真的很够回味许久的，好配。</li>
<li><strong>花样年华</strong>，一次次重复的走过巷子与擦肩的镜头描写，点到为止的情欲和欲言又止的情愫，原来爱是真的能从眉眼间滋生和蔓延的。能感受到其魅却又不至于艳俗，拿捏得刚好，可能这也是香港和那个时代特有的气质了。另外，真的很喜欢这部的英文片名，In the mood for love，太美了。</li>
<li><strong>爱乐之城</strong>，说来有意思，爱乐之城组曲的现场音乐会都去了两次，电影却才第一次真正看完。遥远的 16 年，刚上映的那个情人节订了电影票却因故错过，后来也一直没补上。最近听朋友提到，就分了两个夜晚看完了，也才真正感受到那曲《City Of Stars》的韵味，一曲便走完了想象中的一生。</li>
<li><strong>卡萨布兰卡</strong>，看《爱乐之城》的时候女主提到小时候看了这部电影反复模仿，也在之前自己的列表里所以就翻出来看了下。不得不说那个年代的片子还是经典，不需要太多拖沓的剧情，对话就已经足够展现大多数主题了，最后机场的那场三个人的对话，关于革命、民族与爱情，寥寥几句就把各自性格和对应的选择呈现得很具象，特有的魅力了。</li>
<li><strong>敦刻尔克</strong>，没有什么宏大的战争场面，只是海滩上战争的狼藉、海上义无反顾的小船和天空中战斗机的周旋几个场景不断切换，形成了一种异样的美感。最后燃烧的飞机和驶在国土上的火车的对比，隐于发言稿之下战争的代价让人心痛。</li>
<li><strong>Nope 不</strong>，大概分三次才看完，叙事确实有些乱，看了一半还是有些不明所以，可能缺少渲染，剧情推动上如果是那个导演可能还合理一点（但是很轻描淡写），只是那对兄妹做这些事的动机实在不足（可能是什么奇妙的家族骄傲），以至于到了最后也没能很理解。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>人生切割术</strong>，前段时间风评不错的剧，整体风格节奏很喜欢，尤其是片头，太惊艳了。故事设定上蛮新的，对一种扭曲的“Work Life Balance”科技的反叛，但可能是因为第一季的戛然而止，总感觉有些动机不足，期待后续发展了。</li>
<li><strong>真相捕捉</strong>，同类型里的最经典还是《疑犯追踪》，但英剧特有的紧凑节奏感也很适合这样的叙事方式，感觉第一季可能都是几年前看的了，衔接剧情上也没什么问题，看了一半左右大概就能猜到结局，但真正最后反转的大型 show 上演时还是燃起来了，只能说不愧是 BBC 剧里的 BBC，很强。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>红辣椒</strong>，补一下今敏的作品，原本主要是想看看分镜和转场，发现真的藏了好多隐喻和想象力的部分，也可以理解之后那么多的致敬今敏的一些由来了。</li>
<li><strong>夏日重现</strong>，追番中，要结局了，潮也太好了。</li>
</ul>
]]></content:encoded></item><item><title>周报 #12 - 赛博空间、自我定义与界限</title><link>https://www.pseudoyu.com/en/2022/09/19/weekly_review_20220919/</link><pubDate>Mon, 19 Sep 2022 12:53:53 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/19/weekly_review_20220919/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-09-13 到 2022-09-18 这周生活的记录与思考。 过去这一周有些忙碌，在几个项目中反复徘徊，所以也没能有很多输入。周末要加班但不</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-09-13</code> 到 <code>2022-09-18</code> 这周生活的记录与思考。</p>
<p>过去这一周有些忙碌，在几个项目中反复徘徊，所以也没能有很多输入。周末要加班但不想一直窝在家里，所以外出了，意外发现了一家挺不错的咖啡厅，度过了惬意的一天。</p>
<h2 id="赛博空间">赛博空间</h2>
<p>之前从 <a href="https://twitter.com/novoreorx">Reorx</a> 的这一篇『<a href="https://reorx.com/blog/sharing-my-footprints-automation/">使用自动化工作流聚合信息摄入和输出</a>』了解到了“<a href="https://en.wikipedia.org/wiki/Cyberspace">赛博空间</a>” 这一概念，原话是：</p>
<blockquote>
<p>赛博空间构成了我的精神世界。</p>
</blockquote>
<p>很难不赞同这一描述。</p>
<p>不知道从什么时候起，自己其实能很明显感受到自己对网络世界信息的依赖。可能有别于游戏瘾或是经常被诟病的短视频算法鸦片，我的这种依赖并不是机械性地刷刷刷，或是面对焦虑时的逃避，而是一种对于信息获取的渴求，甚至内化为了一种生活方式。</p>
<p>依赖于网络世界其实最难免的是与社交媒体与算法的抗争，一方面是要避免自己被过载的贩卖焦虑的信息或是熟人社交圈的“Peer Pressure”所困扰，另一方面也需要警惕算法所构造的信息茧房。</p>
<p>实话说这一点挺难做到，即使自己多少算是具备一些克制和过滤信息的能力并有意识在这样做，但依然难以避免被其所扰乱思绪或是引导。我最后采取了一种简单却也行之有效的方式 —— 关闭微信朋友圈入口与大部分软件通知提醒。</p>
<p>大概是从大三的一个晚上我关闭了朋友圈的入口，具体的情境与动机已经有些模糊，但这一偶然之举也奇迹般成为了一个我坚持至今的习惯。想说的是，这并不意味着我不再关注朋友或是周围人的动态，在关闭朋友圈之后，常常在阶段性想起一些人的时候会点进他们的头像去看看近况，也许会就一些内容开启一次对话。</p>
<p>也许听起来有些多余，比起一个即时的小红点提醒，我们需要经历“想起某个具体的人/事 -&gt; 找到对话框 -&gt; 点进头像 -&gt; 查看朋友圈 -&gt; 了解近况”这样繁琐的过程。但于我而言，如同一种仪式感的隐喻，这种刻意制造的麻烦不断提醒着我维护一段关系所需要付出的部分，渐渐地，朋友越来越少，但留存的人也愈加重要。</p>
<p>而近两年也做了一些另外的改变，关闭了除了即时通讯软件（微信、Telegram）和邮件以外的所有软件消息提醒，并且把大部分不带社交属性而仅仅是用于信息获取的平台（如 B 站、微博等）的关注数量控制在 100 以内，如果新增则筛选优化之前的关注，减少无关内容的干扰。</p>
<h2 id="我的信息流">我的信息流</h2>
<p>通过这一篇『<a href="https://reorx.com/blog/sharing-my-footprints-automation/">使用自动化工作流聚合信息摄入和输出</a>』和后续的『<a href="https://reorx.com/blog/0-cost-self-hosted-n8n-with-railway-and-supabase/">使用 Railway 和 Supabase 零成本搭建 n8n 自动化平台</a>』迭代升级，我也通过 n8n 和 Telegram 搭建了自己的自动化信息流平台 —— 『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life</a>』，</p>
<p>参照着 Reorx 的列表，我也整理了自己的输入输出源：</p>
<ul>
<li><strong>Telegram</strong>，采集我零散在各个平台的信息输入输出，并且最近还会将我对电影、书籍的观后感以及自己其他一些所思所想发在频道里。也关注了一些频道和群组获取一些资讯或是认识一些志同道合的人，偶尔会手动转发。</li>
<li><strong>Blog</strong>，目前最用心在维护的输出渠道了，现在更像是一种生活日志。</li>
<li><strong>Twitter</strong>，我目前主要在使用的社交平台，也是分享欲的载体，认识和关注了很多有意思的朋友。</li>
<li><strong>Instagram</strong>，最近才打算恢复使用，主要想分享一下自己的摄影成果和一些日常生活。</li>
<li><strong>YouTube</strong>，也是重度用户了，看技术相关教程和数码资讯比较多，偶尔也有很多好玩的内容。</li>
<li><strong>Bilibili</strong>，主要保留了自己这么多年一直在关注的一些博主，看旅拍比较多，只看动态不看首页和热门，之前倒是有自己经营帐号的计划，暂时没有什么好的想法。</li>
<li><strong>Pinboard</strong>，书签和网站保存管理工具，才开始用几个月就保存了很多重要的内容，重度依赖了。</li>
<li><strong>Instapaper</strong>，管理稍后读，主要是一些精品或是长文的保存。</li>
<li><strong>GitHub</strong>，也是日常刷了，看一些好的项目，也用列表在管理 Star。</li>
<li><strong>Apple Music</strong>，日常听歌软件（毕竟全家桶还是方便），但是列表这些交互感觉很一般。</li>
<li><strong>YouTube Music</strong>，订阅了 YouTube 会员所以附带了这个，用得不算多，但偶尔用于检索。</li>
<li><strong>Spotify</strong>，在上述两个音乐软件听到的好歌会在 Spotify 标注一下并且自动同步到频道。</li>
<li><strong>豆瓣</strong>，记录自己的书籍、剧集、电影、动漫和游戏，也是重度使用了，也在尝试每一个看过/玩过的作品都写一下自己的评价。</li>
<li><strong>微博</strong>，很少发，也依然是保留了一些熟人关注，偶尔会同步分享一些动态吧但是没有太多动力。</li>
<li><strong>微信朋友圈</strong>，摄影以及一些自己写得比较开心的文章会发，基本是偶尔证明自己还活着的频率。</li>
</ul>
<p>自己就像是有一种信息整理的强迫症，在看到自己这些零散的数字痕迹被归集到自己的个人小空间时会感到由衷的快乐，写周报时候往回翻翻也能捡起不少有意思的点，希望之后也能积累越来越多的东西。</p>
<h2 id="自我定义与界限">自我定义与界限</h2>
<p>这周末可能有点叛逆，看了两部青少年电影，《<a href="https://movie.douban.com/subject/1295728/">早餐俱乐部</a>》和《<a href="https://movie.douban.com/subject/1295437/">春天不是读书天</a>》，都是很老的片子了。主题上跟自己看了好几遍的《<a href="https://movie.douban.com/subject/1291548/">死亡诗社</a>》一样，有对于自己个性的坚持、对权威的认知与反抗、对生活与未来可能性界限的冲击，但相比起来可能更加轻松与诙谐。</p>
<p>随着经历见长，自己可能在面对生活与变动已经不算怯懦，也常常踏出一些不一样的选择，但即使到了现在我依然觉得自己还是一个被内心界限所定义的人，以及会用这样的方式与习惯去定义周遭的一切。</p>
<p>我不认为自己是有很强“创造力”的人，所以常常在遇到相关事情或是选择时本能逃避；我认为“友善”和“礼貌”是自己的标签所以常常在一些交流中不愿意破坏，“理性”和应有的“坚持”常常为之让步；我可能愿意为自己的一些看似疯狂的选择负责但其实已经在内心评估过其代价与是否能承受，所以其实也缺少真正“冒险”的勇气。</p>
<p>在亲情、友谊与亲密关系上其实也是如此，我似乎在内心为每段关系下了自己的一些定义，并自认为遵守着其中的界限，但其实情感并非如此分明，自己有意无意地忽略了这一点，却还觉得自己在维系着这样的平衡。</p>
<p>本周自己与身边的一些关系发生了微妙的变化，自己的第一感是无所适从，就像是面对变化的本能的恐惧，在克服之余却也很难马上梳理清楚自己的情绪与想法，可能这种状态可以称之为“情绪过载”吧。自己在这样反复的过程中也常常会思考着是不是自己一直太执着于界限本身而放弃了感受情绪和情感的真实变化，抑或是界限本就是一种自我保护的机制。</p>
<p>好难。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>送你一颗子弹</strong>，正在看</li>
<li><strong>法治的细节</strong>，正在看</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>医院五日</strong>，讲美国卡特里娜飓风时候的一些事，难免不让人联想到武汉疫情当时的一些事。就医学伦理或是法律相关的知识储备都不足以让我来评价紧急情况下安乐死的正当与否，只是在其中也确实看到了政治家的傲慢、人性的真实与小人物在其中的卑微。就像其中所说的，没有亲历常常也是没有资格去居高临下评判其对错的。</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>早餐俱乐部</strong>，可能老片的年代感和主题上会让我稍稍想起《死亡诗社》，但是更轻松有趣，学生的视角、一个有限的空间场景和足量的对话这样结合的表达方式会让人很容易代入，叛逆与对权威（家庭、校园）的本能畏惧展现得很自然，而最后的集体独白也令人会心一笑 — 一群并不愿意被定义的青少年。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>赛博朋克：边缘行者</strong>，剧情比较常规，画风也算不上喜欢，但有些造型和场景美术还可以。可能因为没玩过游戏本体，对其中世界观和人物的部分没有太多代入。算是中规中矩的游戏周边动画吧。</li>
<li><strong>夏日重现</strong>，追番中</li>
</ul>
]]></content:encoded></item><item><title>周报 #11 - 心情、旅行与不期而遇</title><link>https://www.pseudoyu.com/en/2022/09/13/weekly_review_20220913/</link><pubDate>Tue, 13 Sep 2022 12:53:53 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/13/weekly_review_20220913/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-09-05 到 2022-09-12 这周生活的记录与思考。 过去的这一周不论是周中还是中秋假期都还挺丰富的，工作渐渐变得忙碌但也有趣；日常</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-09-05</code> 到 <code>2022-09-12</code> 这周生活的记录与思考。</p>
<p>过去的这一周不论是周中还是中秋假期都还挺丰富的，工作渐渐变得忙碌但也有趣；日常也有了一些变化，不至于那么乏味和碌碌；也会在即使只有短短几十分钟的车程里习惯性地拿出 Kindle 翻上几页，很快便沉浸其中；出门也变得更多了，即使只是毫无目的地在街上走走。</p>
<p>大概一切都有在变好。</p>
<h2 id="心情">心情</h2>
<p><img src="https://image.pseudoyu.com/images/yu_mood_review_20220913.png" alt="yu_mood_review_20220913"></p>
<p>虽说平时话并不多，但自己大体上还是个挺情绪化的人，会因为一些突然闯入的心绪伤感，因为一部电影的结局而发呆许久，也会因为一些生活中的小小细节而感到莫名地欢喜。</p>
<p>我并不是一个对生活那么乐观的人，现在依旧觉得生活中的不幸远远多过幸运，在遭受痛苦时常常觉得自己理应承担这些。过去一两年经历了很多痛苦的事，有的是天灾人祸，遗憾而不甘；有的是自作自受，自责而悔恨。幸而有这样几位挚友，可能并不一定在身边，但过去的那些共同度过的惬意时光常常像是冬日暖阳般照亮我的至暗时刻。</p>
<p>但有时候也需要踏出自己的角落，走在阳光下。</p>
<blockquote>
<p>今天早上起来晚了一点 出来上班的时候天已经挺晴的了 不过气温还好 有点风 在一边听歌（五月天的温柔） 突然感觉心情很好很好 已经很久很久没有那么放松 从心底比较愉悦的这种感受了</p>
</blockquote>
<p>我很庆幸能有这样的时刻，哪怕只是很短暂的情绪，也让我感受到自己与内心的某些部分和解了，连带着周遭的时空。</p>
<h2 id="旅行">旅行</h2>
<p>自己应该算不上一个旅游爱好者，之前有闲暇的时光大多宅在家里打发了，想到要计划各种出行琐事，兴致早已减了大半，更别说还要忍受热门景区的拥挤和吵闹了。</p>
<p>买了相机后，开始有了一些出门的念想，在实习和工作之余也常常随身带着相机出去转转，不知不觉走过了很多城市，拍下了很多记忆。后来看了『<a href="https://space.bilibili.com/37029661">小鹿 Lawrence</a>』的旅拍视频后，在自己的出行清单里列了一条又一条，可始终未能兑现。</p>
<p>8 月本来有去青岛旅行的计划，但因为工作和一些细碎的事未能成行（可能更多也是因为懒），而后疫情又开始各地蔓延，只能一拖再拖。所以当中秋第二天突然得知要去青岛出差时，欣喜的情绪甚至盖过了突发工作任务的压力。</p>
<p>定了第二天一早的票，一边补眠一边看着沿途的风景。抵达后很幸运遇上了一位本地的出租车司机，攀谈几句后突发奇想地决定改行程，让他带着我绕着海边转一圈，一路走走停停，遇到不错的风景就下来吹吹海风，顺带着拍几张照。</p>
<p>这一个小时的旅程似乎是一个青岛旅游的缩印版本，没有看什么攻略，没有在几个景点之间奔波。有的景错过也就错过了，没有多少遗憾；而有的心绪感受到了，却会成为记忆中很美好的一部分，在许久之后也值得会心一笑。</p>
<p>因为只带了一只轻便的 55mm F1.8，却因为时间关系只能拍远景，所以匆匆几下快门的结果并不那么满意，但至少留下了一些记忆点，也勉强串了一个主题《海边的人们》。</p>
<p>
<link rel="stylesheet" href="https://www.pseudoyu.com/css/hugo-easy-gallery.css" />
<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/people_with_the_sea_04.png" alt="A man" />
    </div>
    
      <figcaption>
          <p>A man
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/people_with_the_sea_01.png" alt="Shoes" />
    </div>
    
      <figcaption>
          <p>Shoes
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/people_with_the_sea_02.png" alt="A girl" />
    </div>
    
      <figcaption>
          <p>A girl
              
          </p>
      </figcaption>
  </figure>
</div>



<div class="box">
  <figure  itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
    <div class="img">
      <img  itemprop="thumbnail" src="https://image.pseudoyu.com/images/people_with_the_sea_03.png" alt="Family" />
    </div>
    
      <figcaption>
          <p>Family
              
          </p>
      </figcaption>
  </figure>
</div>
</p>
<h2 id="不期而遇">不期而遇</h2>
<p>其实之前和挚友去泰国也是一样，比起曼谷的繁荣热闹，我们在清迈逗留了更久，有时候只是走在街道找一些不起眼的美食，或是跟着 Pokémon Go 的活动探索着城市的另一面。</p>
<p>愈加觉得对于自己而言，旅行的重点早已不是那些“十佳”、“必去”和“绝美”的景色，而是旅途中的心绪感受，以及陪伴着走过的时光。在这样的心境下，所有的不期而遇反而更加美好。</p>
<p>看了小鹿最新一期视频 —— 《<a href="https://www.bilibili.com/video/BV1pe411g7om">不做攻略的旅行有多绝望&hellip;</a>》，可能，下一站会是云南吧。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="工作">工作</h3>
<p>这周工作上做了一些和链交互的开发，还挺有意思的，后面也想再研究一下链上数据处理这一块。也开始要写一些生产级的智能合约了，工作任务挺多的，十一前也得上线两个我负责的新模块，需要加油了。</p>
<h3 id="博客">博客</h3>
<p>很意外的是自己写的一篇『<a href="https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/">PostgreSQL 基础与实践</a>』得到了很多关注和反馈，后面也还会继续写工作实践系列了，目前完成了：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2021/03/29/database_mysql_basic/">MySQL 基础与实践</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/">PostgreSQL 基础与实践</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/09/07/container_docker_basic/">Docker 基础与实践</a></li>
</ul>
<p>其他的就是还蹭了个 Go 的热点，给 GoCN 首发翻译了一篇文章：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/09/10/vulnerability_management_for_go/">[译] Go 新漏洞管理工具：govulncheck</a></li>
</ul>
<p>还有很多想写的主题，后面不能再偷懒了。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>黑客与画家</strong>，通勤路上在读的，原本以为像是软技能那样的比较实际的一些内容，是当作路途消遣来看的，但是出乎意料地很多想法挺有趣，文风也很舒服。一直觉得代码、绘画或是写作都是创作的不同形式，都能让人感受到创造的快乐，但少有书籍能将这部分那么自然地表达出来。</li>
<li><strong>送你一颗子弹</strong>，正在看</li>
<li><strong>法治的细节</strong>，正在看</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>蓝色大门</strong>，之前对台湾电影最深的印象应该就是《阳光普照》了，许多对话、独白和长镜头，很多景就像是想把记忆碎片拍下来。假期补了这部《蓝色大门》，早期青春片的质感真的很绝，诠释了“唯美”这一后续被滥用的形容。陈柏霖的《我可能不会爱你》影响了我青春的很多部分，甚至有些想法和品性深入了我的人格本身，对他的印象也多是沉稳而温暖，是自己想成为的样子。在这部看到了一个相似却不一样的他，很喜欢的一点是他总是认真而坚定地重复着自己的话，不论是自我介绍还是带着愠怒的质问，似乎在和自己确认着什么，又带着一些青春特有的胆怯。最后一段独白也很戳，终于找到了之前喜欢的这句话的出处 — “虽然，我闭着眼睛也看不见自己， 但是我却可以看见你。”</li>
<li><strong>驴得水</strong>，又是一部群像的电影，刚好是我最近最喜欢的叙述方式。不知道该归咎于时代还是人性，混乱与可笑的政治正确的秩序交织着影响着事情的各种走向。政治、爱情、女性，包罗了太多主题，却不至于让人感觉到故事的剥离感，喜剧和幽默的部分自一开始就没打算掩盖其悲剧的内核，以至于到了结局虽然有些难过，但更多的还是无力。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，追番中</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，追番中</li>
</ul>
<h3 id="摄影">摄影</h3>
<p>目前一直在用的是 Sony A7M3，主要看中的是视频性能，也买了大疆稳定器来拍一些视频，但就没法兼顾拍照了。想着之后旅游再有一台设备来进行街拍，对 Fuji Xpro3 有点心动，尤其是光学取景和胶片模拟，太有仪式感了。</p>
<p>不过还是先多出门多拍，再更新设备吧。</p>
]]></content:encoded></item><item><title>[译] Go 新漏洞管理工具：govulncheck</title><link>https://www.pseudoyu.com/en/2022/09/10/vulnerability_management_for_go/</link><pubDate>Sat, 10 Sep 2022 10:27:18 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/10/vulnerability_management_for_go/</guid><description>《后来的我们 - 五月天》 前言 我们很高兴地宣布 Go 对漏洞管理的最新支持，这是我们为帮助 Go 开发者了解可能影响他们的已知漏洞而迈出的第一步。 这篇文章概</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>我们很高兴地宣布 Go 对漏洞管理的最新支持，这是我们为帮助 Go 开发者了解可能影响他们的已知漏洞而迈出的第一步。</p>
<p>这篇文章概述了这个项目的当前状况和后续计划。</p>
<h2 id="概览">概览</h2>
<p>Go 提供的工具可以分析你的代码库并展示出已知的漏洞，该工具由 Go 安全团队设计维护的 Go 漏洞数据库提供支持。Go 只展示代码调用函数中的漏洞，从而减少结果中的噪音。</p>
<p><img src="https://image.pseudoyu.com/images/go_vulnerability_management_architecture.png" alt="go_vulnerability_management_architecture"></p>
<h2 id="go-漏洞数据库">Go 漏洞数据库</h2>
<p>Go 漏洞数据库(<a href="https://vuln.go.dev/">https://vuln.go.dev/</a>)是一个囊括了公共 Go 模块中可导入包的已知漏洞的全面信息源。</p>
<p>漏洞数据来自现有来源（如 CVEs 和 GHSAs）以及 Go 软件包维护者的直接报告。这些信息将由 Go 安全团队审查并添加至数据库中。</p>
<p>我们鼓励软件包维护者<a href="https://go.dev/s/vulndb-report-new">贡献</a>他们自己项目中的公共漏洞信息，并<a href="https://go.dev/s/vulndb-report-feedback">更新</a>现有漏洞信息。我们旨在让报告漏洞成为一个低阻力的过程，所以请<a href="https://golang.org/s/vuln-feedback">把你的建议</a>发送给我们，以便于我们进行改进。</p>
<p>我们可以在浏览器中查看 Go 漏洞数据库，网址为 <a href="https://pkg.go.dev/vuln">pkg.go.dev/vuln</a>。关于数据库的更多信息详见 <a href="https://go.dev/security/vuln/database">go.dev/security/vuln/database</a>。</p>
<h2 id="使用-govulncheck-进行漏洞检测">使用 govulncheck 进行漏洞检测</h2>
<p>新的 <a href="https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck">govulncheck 命令</a>是一种低噪音、稳定的方式，让 Go 用户了解可能影响其项目的已知漏洞。Govulncheck 会基于代码中涉及调用易受攻击函数的函数分析你的代码库，展示对你有实际影响的漏洞。你可以在项目中运行以下程序来使用 govulncheck。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ go install golang.org/x/vuln/cmd/govulncheck@latest
</span></span><span class="line"><span class="cl">$ govulncheck ./...
</span></span></code></pre></div><p>Govulncheck 是一个独立的工具，以便在我们收集用户的反馈时可以频繁更新和快速迭代。从长远来看，我们计划将 govulncheck 工具整合到 Go 的主要发行版中。</p>
<p>为了将漏洞检查直接集成到其他工具和流程中，<a href="https://pkg.go.dev/golang.org/x/vuln/vulncheck">vulncheck</a> 包将 govulncheck 的功能作为 Go API 导出。</p>
<h3 id="集成">集成</h3>
<p>在开发和部署过程中尽可能早地了解漏洞总是更好的。为此，我们将漏洞检测整合到现有的 Go 工具和服务中，如<a href="https://pkg.go.dev/">Go 软件包发现页</a>。例如，<a href="https://pkg.go.dev/golang.org/x/text?tab=versions">这个页面</a>显示了 golang.org/x/text 每个版本中的已知漏洞。通过 VS Code Go 扩展进行漏洞检查的功能也即将推出。</p>
<h2 id="后续计划">后续计划</h2>
<p>我们希望你能发现 Go 对漏洞管理的支持是有用的，并帮助我们改进它!</p>
<p>Go 漏洞管理是一项正在积极开发中的新功能，可能会有一些错误和<a href="https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck#hdr-Limitations">局限之处</a>。</p>
<p>我们希望您能在以下方面做出贡献，帮助我们进行改进。</p>
<ul>
<li><a href="https://golang.org/s/vulndb-report-new">贡献新的</a>和<a href="https://go.dev/s/vulndb-report-feedback">更新现有的</a>涉及你所维护的 Go 软件包的公共漏洞信息</li>
<li><a href="https://golang.org/s/govulncheck-feedback">参加此调查</a>，分享您使用 govulncheck 的体验</li>
<li><a href="https://golang.org/s/vuln-feedback">向我们反馈</a>问题和新功能需求</li>
</ul>
<p>我们很高兴能与你合作，建立一个更好、更安全的 Go 生态系统。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li>原文地址：<a href="https://go.dev/blog/vuln">https://go.dev/blog/vuln</a></li>
<li>原文作者：Julie Qiu, for the Go security team</li>
<li>本文永久链接：<a href="https://github.com/gocn/translator/blob/master/2022/w37_Vulnerability_Management_for_Go.md">https://github.com/gocn/translator/blob/master/2022/w37_Vulnerability_Management_for_Go.md</a></li>
<li>译者：<a href="https://github.com/pseudoyu">张宇</a></li>
<li>校对：<a href="https://github.com/fivezh">Fivezh</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Docker 基础与实践</title><link>https://www.pseudoyu.com/en/2022/09/07/container_docker_basic/</link><pubDate>Wed, 07 Sep 2022 01:30:48 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/07/container_docker_basic/</guid><description>《后来的我们 - 五月天》 前言 这是工作实践系列容器部分的第一篇，主要介绍 Docker 的基础知识与实践。 作为一个后端开发，我刚开始工作的时候其实主要都是在本</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>这是工作实践系列容器部分的第一篇，主要介绍 Docker 的基础知识与实践。</p>
<p>作为一个后端开发，我刚开始工作的时候其实主要都是在本地调试的，并没有怎么了解过 Docker 的相关使用。直到后来开始接触较为复杂的底层链开发，因为链或其相关工具的依赖关系比较复杂，也涉及很多版本冲突问题，在本机或服务器上每次需要配置复杂的环境，且每次重启后很多服务与配置都需要重新部署，繁琐且容易出现一些莫名的跨平台错误。</p>
<p>因此逐渐开始采用编写项目特定 Dockerfile 并编译镜像的方式进行后续的开发调试，部署的机器仅需安装 Docker 环境（以及 Docker Compose），而不需要本地安装各种依赖，很便捷。后续也和 Leader 一起基于 Docker 镜像、GitLab CI 与 k8s 环境配置了项目的 CI/CD 流程，极大提升了开发调试效率。</p>
<p>本文将基于这些经验对 Docker 相关的概念与实践进行总结，希望能有所帮助。</p>
<h2 id="docker-简介">Docker 简介</h2>
<p>我们所开发的服务往往以二进制的方式运行在操作系统中，而 Docker 是一种容器技术，将我们的应用程序及相关依赖打包在一个容器中，容器往往是基于一个较为轻量级的 Linux 镜像，是多层镜像的堆叠，我们的应用往往在最上层，这些依赖关系在 Dockerfile 中进行指定。</p>
<p>使用容器进行部署比起在本机或远程服务器有很多明显的优势。</p>
<ol>
<li>无需在操作系统上安装各类环境和依赖（除了 Docker 自身）。如果采用原有的服务启动模式，开发流程会变得十分繁琐，需要开发与运维不断沟通，配合完成环境配置与部署，并且如果一台机器上部署了多个服务，也极易造成依赖/版本冲突问题。</li>
<li>可以拥有独立的部署环境。我们通过为不同的项目编写 Dockerfile 来构建镜像，将应用所需环境与依赖打包在镜像中，可以很方便地运行同个应用的不同版本，或为 MySQL 这样的通用服务运行多个实例，并且可以通过 Docker 命令或 Docker Compose 命令进行管理，一键启动/暂停。</li>
<li>Docker 并不强依赖于操作系统本身的版本，同一个 Docker 镜像可以在不同的操作系统（Windows、macOS、不同发行版的 Linux）上运行，易于服务的分享、迁移与跨平台部署等。</li>
<li>与虚拟机相比，Docker 容器没有内核而只包含应用层，体积更小，启动速度更快，更加轻量级。</li>
</ol>
<p>当然，Docker 容器的兼容性相比操作系统与虚拟机相对更差一些，如 VM 能够运行任意其他操作系统，能满足更特定的一些需求。</p>
<h2 id="docker-基础操作">Docker 基础操作</h2>
<h3 id="安装-docker">安装 Docker</h3>
<p>Docker 的安装很简单，在<a href="https://www.docker.com">官网</a>下载自己操作系统对应的安装包并按照指引进行安装即可。</p>
<h4 id="macos">macOS</h4>
<p>我个人的 macOS 系统起初是安装了 <a href="https://www.docker.com/products/docker-desktop/">Docker Desktop</a>，可以通过图形化界面对镜像、容器进行管理，很方便但是占用较高，比较耗电。</p>
<p>后来尝试了 <a href="https://github.com/abiosoft/colima">Colima</a>，一个较为轻量级的容器运行环境，在 macOS 系统上本机调试十分方便，推荐使用，根据项目官方文档安装并配置环境即可。我直接通过 <code>brew</code> 包管理工具来进行安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install colima
</span></span></code></pre></div><p>安装完成后运行 <code>colima start</code> 即可启动容器，运行 <code>colima stop</code> 停止容器，更多命令可以通过 <code>colima --help</code> 查看。</p>
<p>我通过了如下命令启动了自己的常用开发环境，大家可以根据自己的需求自行配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">colima start -c <span class="m">8</span> -m <span class="m">16</span> -a x86_64 -p docker-amd
</span></span></code></pre></div><h4 id="centos">CentOS</h4>
<p>比起本机开发，Docker 更常用的应用场景是在服务器上部署应用，我常用的操作系统是 <code>CentOS 7</code>，可以通过 <code>yum</code> 包管理工具安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install -y yum-utils device-mapper-persistent-data lvm2
</span></span><span class="line"><span class="cl">yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</span></span><span class="line"><span class="cl">yum install docker-ce
</span></span></code></pre></div><p>安装完成后，启动 Docker 服务并配置其开机自启：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl <span class="nb">enable</span> docker
</span></span><span class="line"><span class="cl">systemctl start docker
</span></span></code></pre></div><h3 id="docker-镜像">Docker 镜像</h3>
<p>Docker 主要有镜像和容器两个概念，可以认为镜像是通过 Dockerfile 编译出来的容器的一个模板，而容器是镜像的一个实例。</p>
<h4 id="dockerfile">Dockerfile</h4>
<p>我们通过 Dockerfile 来指定应用所需环境与依赖，其基本格式如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> &lt;image&gt;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">ENV</span> <span class="nv">USERNAME</span><span class="o">=</span>admin <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="nv">PASSWORD</span><span class="o">=</span><span class="m">123456</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">RUN</span> mkdir -p &lt;app-directory&gt;<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">COPY</span> . /&lt;app-directory&gt;<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;&lt;command&gt;&#34;</span><span class="p">,</span> <span class="s2">&#34;&lt;entrypoint file&gt;&#34;</span><span class="p">]</span><span class="err">
</span></span></span></code></pre></div><p>完成 Dockerfile 编写后，我们可以在同级目录（或指定 Dockerfile）下通过 <code>docker build</code> 命令来构建镜像：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 镜像构建</span>
</span></span><span class="line"><span class="cl">docker build -t &lt;image:tag&gt; .
</span></span></code></pre></div><h4 id="存储加载镜像">存储、加载镜像</h4>
<p>我们可以把本地编译好的镜像存储为 <code>tar</code> 包来进行分享：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker save -o &lt;image-name&gt;.tar &lt;image-name&gt;
</span></span></code></pre></div><p>当需要使用镜像时则可以通过 <code>docker load</code> 命令来加载 tar 包：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker load -i &lt;image-name&gt;.tar
</span></span></code></pre></div><h4 id="上传拉取镜像">上传、拉取镜像</h4>
<p>当然，通过镜像 <code>tar</code> 包的方式来进行分享并不那么便捷，有的镜像可能会很大，传输也不方便。因此，我们可以通过 <code>docker push</code> 命令来将镜像推送至官方镜像仓库或企业/个人的私有库（像我所在的项目就是通过 Harbor 来管理镜像），并通过 <code>docker pull</code> 命令来进行拉取。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 拉取官方镜像（简写）</span>
</span></span><span class="line"><span class="cl">docker pull &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 拉取官方镜像（完整命令）</span>
</span></span><span class="line"><span class="cl">docker pull docker.io/library/&lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 推送镜像至官方镜像仓库 Docker Hub</span>
</span></span><span class="line"><span class="cl">docker push &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 推送镜像至私有库（需要配置鉴权）</span>
</span></span><span class="line"><span class="cl">docker tag &lt;image:tag&gt; &lt;private-repo-path&gt;/&lt;image:tag&gt;
</span></span><span class="line"><span class="cl">docker push &lt;private-repo-path&gt;/&lt;image:tag&gt;
</span></span></code></pre></div><h4 id="docker-镜像操作">Docker 镜像操作</h4>
<p>针对 Docker 镜像，我常用到的操作就是查看、删除与重命名 tag，更多命令可以通过 <code>docker image --help</code> 或官网查看。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看所有镜像</span>
</span></span><span class="line"><span class="cl">docker images
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 删除镜像</span>
</span></span><span class="line"><span class="cl">docker rmi &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 重命名镜像</span>
</span></span><span class="line"><span class="cl">docker tag &lt;old-image:tag&gt; &lt;new-image:tag&gt;
</span></span></code></pre></div><h3 id="容器操作">容器操作</h3>
<h4 id="查看容器">查看容器</h4>
<p>当我们通过 Docker 或 Docker Compose 命令启动镜像后，可以通过以下命令查看服务状态：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看运行中容器</span>
</span></span><span class="line"><span class="cl">docker ps
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看所有容器</span>
</span></span><span class="line"><span class="cl">docker ps -a
</span></span></code></pre></div><h4 id="通过镜像启动停止实例">通过镜像启动/停止实例</h4>
<p>当我们通过 Dockerfile 编译好了所需镜像后，可以通过 <code>docker run</code> 命令启动镜像实例，并在命令中加入一些配置来满足我们的服务需求，我的常用操作如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 运行容器</span>
</span></span><span class="line"><span class="cl">docker run &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 运行容器并指定名称</span>
</span></span><span class="line"><span class="cl">docker run --name &lt;server-name&gt; &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 以 detached 模式运行容器</span>
</span></span><span class="line"><span class="cl">docker run -d &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 端口映射</span>
</span></span><span class="line"><span class="cl">docker run -p6000:6379 &lt;image:tag&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 配置环境变量</span>
</span></span><span class="line"><span class="cl">docker run -e <span class="nv">USERNAME</span><span class="o">=</span>admin -e <span class="nv">PASSWORD</span><span class="o">=</span><span class="m">123456</span> &lt;image:tag&gt;
</span></span></code></pre></div><h4 id="启动停止容器服务">启动/停止容器服务</h4>
<p>当我们通过镜像创建实例后，可以通过如下命令来启动/停止容器服务：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 启动/重启容器</span>
</span></span><span class="line"><span class="cl">docker start &lt;container-id&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 暂停容器</span>
</span></span><span class="line"><span class="cl">docker stop &lt;container-id&gt;
</span></span></code></pre></div><h4 id="查看日志">查看日志</h4>
<p>当我们的通过 Docker 启动服务后，还常常需要查看其运行日志以便于调试，可以通过 <code>docker logs</code> 进行查看，具体命令如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看日志</span>
</span></span><span class="line"><span class="cl">docker logs &lt;container-id&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 滚动查看日志</span>
</span></span><span class="line"><span class="cl">docker logs -f &lt;container-id&gt;
</span></span></code></pre></div><h4 id="进入容器">进入容器</h4>
<p>有时我们还需要进入 Docker 容器服务内部进行服务查看与调试，可以通过 <code>docker exec</code> 命令进入容器，具体命令如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 根据 id 进入特定容器</span>
</span></span><span class="line"><span class="cl">docker <span class="nb">exec</span> -it &lt;container-id&gt; &lt;command&gt;
</span></span></code></pre></div><h4 id="docker-网络">Docker 网络</h4>
<p>Docker 容器实例运行于网络中，我们上文的各个命令未指定网络，所以服务会运行在默认网络下，我们可以通过以下命令来查看网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看所有网络</span>
</span></span><span class="line"><span class="cl">docker network ls
</span></span></code></pre></div><p>如果不想运行在默认网络中，我们可以通过如下命令创建自定义网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 创建自定义网络</span>
</span></span><span class="line"><span class="cl">docker network create &lt;network-name&gt;
</span></span></code></pre></div><p>创建了我们的自定义网络后，在创建容器实例时我们可以通过 <code>--network</code> 参数来指定网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker run --network &lt;network-name&gt; &lt;image:tag&gt;
</span></span></code></pre></div><h4 id="docker-数据持久化">Docker 数据持久化</h4>
<p>使用 Docker 实例运行服务后，我们的数据会保存在容器中，当容器被删除后，数据也会被删除，对于一些需要长期运行的服务来说会造成数据丢失。因此，我们需要进行数据的持久化，我常用 host 挂载与 container 挂载两种方式。</p>
<p>我们可以通过将宿主机的某个具体的目录挂载映射至容器内的目录来实现持久化：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 通过宿主机目录挂载容器内目录</span>
</span></span><span class="line"><span class="cl">docker run -v &lt;host-file-path&gt;:&lt;container-file-path&gt; &lt;image:tag&gt;
</span></span></code></pre></div><p>也可以通过 container 挂载的方式，使用 volume 来实现持久化：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 可以通过名字来引用 volume</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Docker 会自动生成一个路径</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Windows: C:\ProgramData\docker\volumes</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Linux: /var/lib/docker/volumes</span>
</span></span><span class="line"><span class="cl"><span class="c1"># macOS: /var/lib/docker/volumes</span>
</span></span><span class="line"><span class="cl">docker run -v &lt;volume-name&gt;:&lt;container-file-path&gt; &lt;image:tag&gt;
</span></span></code></pre></div><p>如果只是需要挂载，不需要对文件进行具体的管理查看等，我们也可以通过 container 匿名挂载的方式，不指定 volume 名称，而使用其自动生成的目录：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Docker 会自动生成一个路径</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Windows: C:\ProgramData\docker\volumes</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Linux: /var/lib/docker/volumes</span>
</span></span><span class="line"><span class="cl"><span class="c1"># macOS: /var/lib/docker/volumes</span>
</span></span><span class="line"><span class="cl">docker run -v &lt;container-file-path&gt; &lt;image:tag&gt;
</span></span></code></pre></div><h2 id="docker-compose">Docker Compose</h2>
<p>Docker 提供了丰富的命令供我们使用，但是使用命令行操作不易于记忆，且如果应用依赖多个环境/服务，则需要分别运行与管理多个容器，造成不便。因此，我们可以通过 Docker Compose 工具来进行管理。</p>
<p>Docker Compose 是一个用于定义和运行多容器 Docker 应用程序的工具，其通过 <code>.yaml</code> 文件来进行配置管理。我在日常工作中使用最高频率的也是 Docker Compose，只有一些很简单的应用才会使用 <code>docker run</code> 命令来启动，也便于统一管理和后续的配置调整。</p>
<h3 id="安装">安装</h3>
<p>macOS 系统如果安装了 Docker Desktop 则已经自带了 Docker Compose，可以直接使用。如果是 Linux 系统则需要单独安装，我这里同样以 <code>CentOS 7</code> 为例：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -L <span class="s2">&#34;https://github.com/docker/compose/releases/download/1.23.2/docker-compose-</span><span class="k">$(</span>uname -s<span class="k">)</span><span class="s2">-</span><span class="k">$(</span>uname -m<span class="k">)</span><span class="s2">&#34;</span> -o /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">chmod +x /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
</span></span></code></pre></div><p>完成安装后就可以使用 <code>docker-compose</code> 命令了。</p>
<h3 id="配置管理">配置管理</h3>
<p>Docker Compose 的配置文件是一个 <code>yaml</code> 文件，其基本格式如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="nt">contrainer-1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    	</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;image-name&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span>- <span class="l">&lt;host&gt;:&lt;container&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span>- <span class="l">&lt;host-file-path&gt;:&lt;container-file-path&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span><span class="l">&lt;ENV-KEY&gt;=&lt;ENV-VALUE&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">contrainer-2</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    	</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">&lt;image-name&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span>- <span class="l">&lt;host&gt;:&lt;container&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span>- <span class="l">&lt;volume-name-1&gt;:&lt;container-file-path&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        	</span><span class="l">&lt;ENV-KEY&gt;=&lt;ENV-VALUE&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">	</span><span class="nt">volume-name-1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    	</span><span class="nt">driver</span><span class="p">:</span><span class="w"> </span><span class="l">local</span><span class="w">
</span></span></span></code></pre></div><p>其大部分配置都很直观，如服务名称、镜像名称、端口映射、文件挂载、环境变量等。</p>
<p>其中，<code>version</code> 表示配置文件的版本，<code>services</code> 表示服务列表，<code>volumes</code> 表示挂载的卷列表。</p>
<p>在具体的 <code>services</code> 中，<code>image</code> 表示镜像名称，<code>ports</code> 表示端口映射，<code>volumes</code> 表示文件挂载，<code>environment</code> 表示环境变量，更多配置可以根据项目需要进行查看。</p>
<h3 id="常用命令">常用命令</h3>
<h4 id="启动停止服务">启动/停止服务</h4>
<p>跟 <code>docker run</code> 命令类似，Docker Compose 也提供了 <code>up</code> 和 <code>down</code> 命令来启动和停止服务。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 启动服务</span>
</span></span><span class="line"><span class="cl">docker-compose -f &lt;name&gt;.yaml up
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 以 detached 模式启动服务</span>
</span></span><span class="line"><span class="cl">docker-compose -f &lt;name&gt;.yaml up -d
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 停止服务</span>
</span></span><span class="line"><span class="cl">docker-compose -f &lt;name&gt;.yaml down
</span></span></code></pre></div><h4 id="查看日志-1">查看日志</h4>
<p>我们可以通过 <code>logs</code> 命令来查看服务的日志。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看日志</span>
</span></span><span class="line"><span class="cl">docker-compose logs &lt;container-id&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 滚动查看日志</span>
</span></span><span class="line"><span class="cl">docker-compose logs -f &lt;container-id&gt;
</span></span></code></pre></div><h2 id="实用操作命令">实用操作命令</h2>
<p>除了以上基础命令外，我常用的还有以下几个常用命令。</p>
<h3 id="清除无用容器">清除无用容器</h3>
<p>当我们因配置或程序运行时调用出错而导致容器实例退出时，其依然会保留，可以通过 <code>docker ps -a</code> 命令来查看，我们可以通过以下组合命令进行清理：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker rm <span class="sb">`</span>docker ps -a <span class="p">|</span> grep Exited <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="sb">`</span>
</span></span></code></pre></div><h3 id="批量导入本地镜像">批量导入本地镜像</h3>
<p>当我们需要将大量本地镜像导入机器时，如果一个个导入会非常麻烦，我们可以将镜像放入同一个目录并通过以下命令进行批量导入：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="k">for</span> i in <span class="sb">`</span>ls<span class="sb">`</span><span class="p">;</span> <span class="k">do</span> docker load &lt; <span class="nv">$i</span> <span class="p">;</span> <span class="k">done</span>
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我对 Docker 容器技术的基础知识与实用操作的讲解，希望对你有所帮助。其实 Docker 的内容还有很多，如在上一个项目中尝试用到 Docker 的 <code>Buildkit</code> 特性，极大减小了最终构建镜像的大小，以及使用到 <code>buildx</code> 来实现跨平台兼容等等，本文旨在讲解基础知识与实践中常用的命令，这些拓展部分如果大家感兴趣的话后续再进行更新。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://www.docker.com">Docker 官网</a></li>
<li><a href="https://www.youtube.com/watch?v=3c-iBn73dDE">Docker Tutorial for Beginners</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>PostgreSQL 基础与实践</title><link>https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/</link><pubDate>Mon, 05 Sep 2022 23:30:46 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/05/database_postgres_basic/</guid><description>《后来的我们 - 五月天》 前言 最近想着把工作中常用到的技术点与工具做一些整理总结，一方面梳理一下这些知识点，加深使用记忆，也可以作为之后使用的查</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>最近想着把工作中常用到的技术点与工具做一些整理总结，一方面梳理一下这些知识点，加深使用记忆，也可以作为之后使用的查阅。</p>
<p>目前主要计划了数据库相关、CI/CD 相关（GitHub Actions + GitLab CI）、容器相关（Docker + k8s）、运维相关（Ansible 等）这几个核心介绍，以及一些像是语言特性、Git 实用技巧、Shell 脚本等技巧总结。因为有很多内容工作中只是接触到，自己做了一些拓展学习，所以不一定完全符合企业具体实践（大多为自己的经验与理解），希望能有所帮助。</p>
<p>本篇是数据库系列的 PostgreSQL 部分，关于 MySQL 之前已经梳理过，可以进行查阅 —— 『<a href="https://www.pseudoyu.com/en/2021/03/29/database_mysql_basic/">MySQL 基础知识与相关操作</a>』。</p>
<h2 id="数据与数据库概述">数据与数据库概述</h2>
<h3 id="数据">数据</h3>
<p>首先，数据其实本质上是一种事实或者观察到的结果，是对客观事务的逻辑上的归纳总结，是信息的一种表现形式和载体。人们从很早的时候就开始管理数据（即使还没有这个概念），最初是由人工管理，而后来渐渐有了文件系统（就像图书馆一样，分门别类地管理不同信息），而随着计算机技术的发展，最后形成了用数据库进行管理的这种较为便捷高效的模式。</p>
<h3 id="数据库">数据库</h3>
<p>数据库是按照一定的数据结构来组织、存储和管理数据的一个仓库，主要特征为</p>
<ul>
<li>结构化</li>
<li>可共享</li>
<li>冗余度小</li>
<li>独立性高</li>
<li>易于拓展</li>
</ul>
<p>很好理解的是，按照不同关系/结构组织起来的数据具备不同的特征，同时也适用于不同的应用场景，目前主要分为层次数据库、网状数据库和关系数据库三种，而我们要着重介绍的 Postgres 就是关系数据库。</p>
<h3 id="数据库管理系统dbms">数据库管理系统(DBMS)</h3>
<p>数据库管理系统(DBMS)是对数据库进行各种操作的一个系统，一具有建立和维护数据库、对数据的存储进行组织管理、对数据库进行控制、定义数据、操纵数据以及管理数据之间的通信等核心功能，不同的数据库管理系统对数据库和数据的处理方式不同，数据呈现方式也不同，也往往需要根据数据规模、业务需求等场景选择合适的数据库管理系统，如在海量数据和高并发数据读写的情况下，关系性数据库的性能会下降得很厉害。</p>
<h2 id="关系性数据库rdbms">关系性数据库(RDBMS)</h2>
<h3 id="主要特征">主要特征</h3>
<p>关系性数据库主要以数据表的形式呈现，每一行为一条记录，每一列则为记录名称所对应的数据域(Field)。许多行列组成一张单表，而若干单表则组成数据库。用户/系统通过 SQL(结构化查询语言对数据库进行查询。</p>
<p>有些关系型数据库的操作具有事务性，即 ACID 规则</p>
<ul>
<li>原子性(Atomicity)</li>
<li>一致性(Consistency)</li>
<li>隔离性(Isolation)</li>
<li>持久性(Durability)</li>
</ul>
<p>原子性是指一系列事务操作要么都完成，要么都失败，不存在完成了一部分这样的情况，例如银行转账这样的场景里，转账行为发生后，发送方余额减少，而如果数据库出现了操作错误，接收方余额未增加，则会造成严重的问题。</p>
<p>一致性是指在事务执行完成后，整个数据库的数据是一致的，不应存在数据库内同一数据不同步的情况。</p>
<p>隔离性则是指不同的事务之间应该独立进行运行、互不干扰的，当然，这样会牺牲一定的效率，但对数据的准确性等提供了较好保障。</p>
<p>持久性则是指当一个事务执行完成后，它对数据库进行的更改、对系统产生的影响是永久的。</p>
<h3 id="数据完整性">数据完整性</h3>
<p>数据完整性是数据库很重要的一个要求和属性，是指存储在数据库中的数据应该保持一致性和可靠性，主要分为以下四种</p>
<ul>
<li>实体完整性</li>
<li>域完整性</li>
<li>参照完整性</li>
<li>用户定义完整性</li>
</ul>
<p>实体完整性要求每张数据表都有一个唯一的标识符，每张表中的主键字段不能为空且不能重复，这主要是指表中的数据都可以被唯一区分。</p>
<p>域完整性则是通过对表中列做一些额外限制，如限制数据类型、检查约束、设置默认值、是否允许空值以及值域范围等。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 在创建表时对字段进行唯一性的约束
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="nb">INT</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="n">auto_increment</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">name</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">30</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id_number</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span><span class="w"> </span><span class="k">UNIQUE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>参照完整性是指数据库不允许引用不存在的实体，数据库的表与其他表之间往往存在一些关联，可以通过外键约束来保障其完整性。</p>
<p>而用户自定义完整性则是根据具体应用场景和涉及到数据来对数据进行一些语义方面的限制，如余额不能为负数等，一般用设定规则、存储过程和触发器等来进行约束和限制。</p>
<h3 id="主流-rdbms">主流 RDBMS</h3>
<p>目前主流的关系型数据库有以下几种</p>
<ul>
<li>SQL Server</li>
<li>Sybase</li>
<li>DB2</li>
<li>Oracle</li>
<li>MySQL</li>
<li>PostgreSQL</li>
</ul>
<p>企业和个人用得比较多的是 Oracle、MySQL、PostgreSQL 几种，接下来也会以 PostgreSQL 为例进行详细的操作讲解。</p>
<h2 id="postgresql">PostgreSQL</h2>
<h3 id="安装与配置">安装与配置</h3>
<p>PostgreSQL 是一种现代化的开源对象关系性数据库管理系统。</p>
<p>作为个人用户学习使用，可以直接下载软件安装包使用本地搭建环境，可以根据不同的系统选择不同的版本，也具备较便捷的图形界面供大家进行服务的开启、关闭、重启以及进行相关的配置等。本文以 macOS 系统下的 <code>PostgreSQL 14</code> 为例，在<a href="https://postgresapp.com">官网</a>安装及进行基本设置后，就可以对本机 PostgreSQL 服务进行管理，版本可能会略有差别，但核心功能差别不大。</p>
<h4 id="图形界面">图形界面</h4>
<p>打开 PostgreSQL.app 应用，可以看到如下界面：</p>
<p><img src="https://image.pseudoyu.com/images/mac_postgres_interface.png" alt="mac_postgres_interface"></p>
<p>在这个管理界面可以很方便地进行 PostgreSQL 服务的开启与关闭，点击对应的数据库也可以进入命令行操作界面。</p>
<h4 id="命令行界面">命令行界面</h4>
<p>首先我们讲 <code>psql</code> 的路径加入环境变量以便后续使用，我使用的是 <code>zsh</code>，所以在 <code>~/.zshrc</code> 文件中添加如下内容：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># postgres</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="si">${</span><span class="nv">PATH</span><span class="si">}</span>:/Applications/Postgres.app/Contents/Versions/14/bin
</span></span></code></pre></div><p>之后在终端中输入 <code>psql</code>，就可以访问 PostgreSQL 的命令行界面了。可以使用如下命令查看 psql 的命令列表：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">psql --help
</span></span></code></pre></div><h3 id="连接-postgresql">连接 PostgreSQL</h3>
<p>我们可以通过以下命令连接数据库：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 连接数据库</span>
</span></span><span class="line"><span class="cl">psql -h &lt;host&gt; -p &lt;port&gt; -U &lt;username&gt; &lt;database-name&gt;
</span></span></code></pre></div><p>当然，我们也可以通过一些第三方工具来更方便地连接数据库使用，我当前使用的 <a href="http://tableplus.com">TablePlus</a> 就支持 PostgreSQL 数据库，推荐。</p>
<h3 id="命令行交互">命令行交互</h3>
<p>PostgreSQL 提供了强大的命令行交互功能，我们可以使用 <code>\</code> + 关键词来进行操作。我们可以通过查阅文档或 <code>\?</code> 与 <code>help</code> 命令来查看命令详情与帮助信息。其他常用命令如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看帮助</span>
</span></span><span class="line"><span class="cl"><span class="nb">help</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看 psql 命令详情</span>
</span></span><span class="line"><span class="cl"><span class="se">\?</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看数据库（全部）</span>
</span></span><span class="line"><span class="cl"><span class="se">\l</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看数据库（指定）</span>
</span></span><span class="line"><span class="cl"><span class="se">\l</span> &lt;database-name&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 连接数据库</span>
</span></span><span class="line"><span class="cl"><span class="se">\c</span> &lt;database-name&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看方法</span>
</span></span><span class="line"><span class="cl"><span class="se">\d</span>f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看表（全部）</span>
</span></span><span class="line"><span class="cl"><span class="se">\d</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看表（只看表）</span>
</span></span><span class="line"><span class="cl"><span class="se">\d</span>t
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看表（指定）</span>
</span></span><span class="line"><span class="cl"><span class="se">\d</span> &lt;table-name&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 执行 sql 命令</span>
</span></span><span class="line"><span class="cl"><span class="se">\i</span> &lt;filepath&gt;/&lt;filename&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 打开拓展视图</span>
</span></span><span class="line"><span class="cl"><span class="se">\x</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 导出至 CSV</span>
</span></span><span class="line"><span class="cl"><span class="se">\c</span>opy <span class="o">(</span>SELECT * FROM person LEFT JOIN car ON person.car_id <span class="o">=</span> car.id<span class="o">)</span> TO <span class="s1">&#39;path/to/output.csv&#39;</span> DELIMITER <span class="s1">&#39;,&#39;</span> CSV HEADER<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 退出</span>
</span></span><span class="line"><span class="cl"><span class="se">\q</span>
</span></span></code></pre></div><h3 id="核心语法">核心语法</h3>
<p>经过了本地 PostgreSQL 配置与连接后，我们就可以对数据库进行一些操作了，SQL 语言主要分为以下四类</p>
<ul>
<li>DDL 数据定义语言（Data Definition Language）</li>
<li>DML 数据操纵语言（Data Manipulation Language）</li>
<li>DQL 数据查询语言（Data Query Language）</li>
<li>DCL 数据控制语言（Data Control Language）</li>
</ul>
<h4 id="ddl-操作">DDL 操作</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 创建数据库
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="o">&lt;</span><span class="k">database</span><span class="o">-</span><span class="n">name</span><span class="o">&gt;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 删除数据库
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">DROP</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="o">&lt;</span><span class="k">database</span><span class="o">-</span><span class="n">name</span><span class="o">&gt;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 进入某个数据库</span>
</span></span><span class="line"><span class="cl"><span class="se">\c</span> &lt;database-name&gt;<span class="p">;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 创建表（添加约束）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">BIGSERIAL</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">first_name</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">last_name</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">gender</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date_of_birth</span><span class="w"> </span><span class="nb">DATE</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">country_of_birth</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">email</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">150</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 修改表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 删除字段
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">DROP</span><span class="w"> </span><span class="k">column</span><span class="w"> </span><span class="n">email</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 删除全表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">DROP</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h4 id="dml-操作">DML 操作</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 插入数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">first_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">last_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">gender</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date_of_birth</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w"> </span><span class="p">(</span><span class="s1">&#39;Yu&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;ZHANG&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;MALE&#39;</span><span class="p">,</span><span class="w"> </span><span class="nb">DATE</span><span class="w"> </span><span class="s1">&#39;1997-06-06&#39;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 修改数据内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">UPDATE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">SET</span><span class="w"> </span><span class="n">email</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;ommar@gmail.com&#39;</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">20</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 删除数据内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">DELETE</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">1</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>可以使用 <code>ON CONFLICT</code> 关键字来处理冲突：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 当发生冲突时不进行操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">first_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">last_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">gender</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date_of_birth</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w"> </span><span class="p">(</span><span class="s1">&#39;Yu&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;ZHANG&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;MALE&#39;</span><span class="p">,</span><span class="w"> </span><span class="nb">DATE</span><span class="w"> </span><span class="s1">&#39;1997-06-06&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">CONFLICT</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="k">DO</span><span class="w"> </span><span class="k">NOTHING</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 当发生冲突时更新指定字段
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">first_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">last_name</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">gender</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">date_of_birth</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="k">VALUES</span><span class="w"> </span><span class="p">(</span><span class="s1">&#39;Yu&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;ZHANG&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;MALE&#39;</span><span class="p">,</span><span class="w"> </span><span class="nb">DATE</span><span class="w"> </span><span class="s1">&#39;1997-06-06&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">CONFLICT</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="k">DO</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="k">SET</span><span class="w"> </span><span class="n">email</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">EXCLUDED</span><span class="p">.</span><span class="n">email</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h4 id="dql-操作">DQL 操作</h4>
<p>可以通过 <code>SELECT</code> 命令来对表进行查询，最常用的查看全表命令为</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查看表的全部数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 查询数据（特定字段）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">first_name</span><span class="p">,</span><span class="w"> </span><span class="n">last_name</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>可以通过 <code>WHERE</code> 关键字来进行条件查询、以及多个条件的组合查询：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（条件筛查，WHERE | AND | OR | 比较 &gt; | &gt;= | &lt; | &lt;= | = | &lt;&gt;）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;MALE&#39;</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="p">(</span><span class="n">country_of_birth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Poland&#39;</span><span class="w"> </span><span class="k">OR</span><span class="w"> </span><span class="n">country_of_birth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;China&#39;</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p><code>IN</code>、<code>BETWEEN</code>、<code>LIKE</code> 和 <code>ILIKE</code> 也是一些可以很灵活用于查询的关键字。</p>
<p><code>IN</code> 可以帮助我们过滤某个字段的多个值。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（使用 IN 关键词查询）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">country_of_birth</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="s1">&#39;China&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Brazil&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;France&#39;</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p><code>BETWEEN</code> 可以帮助我们过滤某个字段的一个范围。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（使用 BETWEEN 关键词查询）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">date_of_birth</span><span class="w"> </span><span class="k">BETWEEN</span><span class="w"> </span><span class="nb">DATE</span><span class="w"> </span><span class="s1">&#39;2021-10-10&#39;</span><span class="w"> </span><span class="k">AND</span><span class="w"> </span><span class="s1">&#39;2022-08-31&#39;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p><code>LIKE</code> 可以帮助我们进行一些包含关系的模糊搜索，<code>%</code> 可以匹配任一个字符，<code>_</code> 可以匹配单个字符。而 <code>ILIKE</code> 则是不区分大小写的 <code>LIKE</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（使用 LIKE/ILIKE 关键词查询，_ | %）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">email</span><span class="w"> </span><span class="k">LIKE</span><span class="w"> </span><span class="s1">&#39;%@bloomberg.%&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">email</span><span class="w"> </span><span class="k">LIKE</span><span class="w"> </span><span class="s1">&#39;________@google.%&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">country_of_birth</span><span class="w"> </span><span class="k">ILIKE</span><span class="w"> </span><span class="s1">&#39;p%&#39;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>实际应用中，往往数据表的数据量非常庞大，会对数据根据相应条件进行分组，这就要用到 <code>GROUP BY</code> 关键字，以及 <code>HAVING</code> 用于进一步筛选条件。<code>GROUP BY</code> 需要配合聚合函数进行使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（使用 GROUP BY 关键词分组查询，使用 HAVING 关键词添加条件，使用 AS 对结果别名）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">country_of_birth</span><span class="p">,</span><span class="w"> </span><span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">Amount</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">GROUP</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">country_of_birth</span><span class="w"> </span><span class="k">HAVING</span><span class="w"> </span><span class="n">Amount</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">country_of_birth</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>有时候我们只需要返回唯一值，而需要去掉重复数据，则可以使用 <code>DISTINCT</code> 关键字</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（去重）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="n">country_of_birth</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>在实际应用中，还很有可能会需要对某些商品交易量进行排名、对一些数值进行排列或博客文章中按照时间线后进行顺序显示等，这就需要用到 <code>ORDER BY</code> 这一关键字，它默认为 <code>ASC</code> 升序排列，可以通过手动设置 <code>DESC</code> 来实现降序。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（排序 ASC | DESC）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">country_of_birth</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>同时，有的数据库数据量非常大，一次返回所有的数据比较消耗资源，因此也可以使用 <code>LIMIT</code> 关键字来约束返回的记录数，同时可以使用 <code>OFFSET</code> 指定偏移量。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 查询数据（指定数量与偏移量）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">OFFSET</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="k">LIMIT</span><span class="w"> </span><span class="mi">10</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">OFFSET</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="k">FETCH</span><span class="w"> </span><span class="k">FIRST</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="k">ROW</span><span class="w"> </span><span class="k">ONLY</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h3 id="核心概念">核心概念</h3>
<h4 id="primary-key-主键">PRIMARY KEY 主键</h4>
<p>主键在数据表中的唯一身份记录，用以下命令创建与修改：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 添加主键
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">BIGSERIAL</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 修改主键
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>其中主键通常会使用 <code>SERIAL/BIGSERIAL</code> 递增 <code>INT</code> 值，也可以使用 <code>UUID</code> 作为主键。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">UUID</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><h4 id="foreign-key-外键">FOREIGN KEY 外键</h4>
<p>外键是一种特殊的主键，它是另一个表的主键，用以下命令创建与修改：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 添加外键
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">BIGSERIAL</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">car_id</span><span class="w"> </span><span class="nb">BIGINT</span><span class="w"> </span><span class="k">REFERENCES</span><span class="w"> </span><span class="n">car</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">),</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">UNIQUE</span><span class="p">(</span><span class="n">car_id</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- 修改外键
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">car</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">BIGSERIAL</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w">
</span></span></span></code></pre></div><h4 id="join-联表查询">JOIN 联表查询</h4>
<p>联表查询是指在查询时，将多个表中的数据进行连接，以便查询出更多的信息。在 SQL 中，我们可以使用 <code>JOIN</code> 关键字来实现联表查询，使用 <code>LEFT JOIN</code> 关键字来实现左联表查询，使用 <code>RIGHT JOIN</code> 关键字来实现右联表查询。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- JOIN 联表查询
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">JOIN</span><span class="w"> </span><span class="n">car</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">person</span><span class="p">.</span><span class="n">car_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">car</span><span class="p">.</span><span class="n">id</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--- LEFT JOIN 左联表查询
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">LEFT</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="n">car</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">person</span><span class="p">.</span><span class="n">car_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">car</span><span class="p">.</span><span class="n">id</span><span class="w">
</span></span></span></code></pre></div><p>可以通过 <code>USING</code> 关键字来简化 <code>ON</code> 关键字的使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">LEFT</span><span class="w"> </span><span class="k">JOIN</span><span class="w"> </span><span class="n">car</span><span class="w"> </span><span class="k">USING</span><span class="w"> </span><span class="p">(</span><span class="n">car_id</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><h4 id="约束">约束</h4>
<p>CONSTRAINT 约束是用来限制数据表中的数据的，我们可以通过以下命令来添加约束：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">ALTER</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="k">CONSTRAINT</span><span class="w"> </span><span class="n">gender_constraint</span><span class="w"> </span><span class="k">CHECK</span><span class="w"> </span><span class="p">(</span><span class="n">gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Female&#39;</span><span class="w"> </span><span class="k">OR</span><span class="w"> </span><span class="n">gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;Male&#39;</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><p>例如通过添加 <code>UNIQUE</code> 来显示唯一：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w"> </span><span class="n">BIGSERIAL</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">email</span><span class="w"> </span><span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">150</span><span class="p">)</span><span class="w"> </span><span class="k">UNIQUE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">ALTER</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">person</span><span class="w"> </span><span class="k">ADD</span><span class="w"> </span><span class="n">CONTRAINT</span><span class="w"> </span><span class="n">unique_email_address</span><span class="w"> </span><span class="k">UNIQUE</span><span class="w"> </span><span class="p">(</span><span class="n">email</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><h3 id="常用技巧">常用技巧</h3>
<h4 id="聚合函数">聚合函数</h4>
<p>内置了很多聚合函数，例如 <code>COUNT</code>、<code>SUM</code>、<code>AVG</code>、<code>MIN</code>、<code>MAX</code> 等，用于对数据进行聚合计算。</p>
<h4 id="coalesce">COALESCE</h4>
<p>在查询数据时我们可以使用 <code>COALESCE</code> 填充默认值：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="c1">--- 使用 COALESCE 填充默认值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">COALESCE</span><span class="p">(</span><span class="n">email</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Email Not Provided&#39;</span><span class="p">)</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h4 id="nullif">NULLIF</h4>
<p>使用 <code>NULLIF</code> 关键字，当第二个参数与第一个相同时返回 <code>NULL</code>，否则返回第一个参数，用于防止一些被除数为 <code>0</code> 的报错等。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">COALESCE</span><span class="p">(</span><span class="mi">10</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="k">NULLIF</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="p">),</span><span class="w"> </span><span class="mi">0</span><span class="p">);</span><span class="w">
</span></span></span></code></pre></div><h4 id="时间">时间</h4>
<p>时间的显示格式如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">NOW</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">NOW</span><span class="p">()::</span><span class="nb">DATE</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">NOW</span><span class="p">()::</span><span class="n">TIME</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>我们可以对时间进行运算：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">NOW</span><span class="p">()</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="nb">INTERVAL</span><span class="w"> </span><span class="s1">&#39;1 YEAR&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="n">NOW</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nb">INTERVAL</span><span class="w"> </span><span class="s1">&#39;10 MONTHS&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="p">(</span><span class="n">NOW</span><span class="p">()</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="nb">INTERVAL</span><span class="w"> </span><span class="s1">&#39;3 DAYS&#39;</span><span class="p">)::</span><span class="nb">DATE</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><p>可以通过 <code>EXTRACT</code> 来获取时间的某个部分：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="k">EXTRACT</span><span class="p">(</span><span class="k">YEAR</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">NOW</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="k">EXTRACT</span><span class="p">(</span><span class="k">MONTH</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">NOW</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="k">EXTRACT</span><span class="p">(</span><span class="k">DAY</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">NOW</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="k">EXTRACT</span><span class="p">(</span><span class="n">DOW</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">NOW</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="k">EXTRACT</span><span class="p">(</span><span class="n">CENTURY</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">NOW</span><span class="p">());</span><span class="w">
</span></span></span></code></pre></div><p>可以通过 <code>AGE</code> 关键字来计算年龄差值：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">first_name</span><span class="p">,</span><span class="w"> </span><span class="n">last_name</span><span class="p">,</span><span class="w"> </span><span class="n">AGE</span><span class="p">(</span><span class="n">NOW</span><span class="p">(),</span><span class="w"> </span><span class="n">date_of_birth</span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="n">age</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">person</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h3 id="拓展支持">拓展支持</h3>
<p>PostgreSQL 提供了许多拓展，以实现更丰富的功能。</p>
<h4 id="安装拓展">安装拓展</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="n">EXTENSION</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="s2">&#34;uuid-ossp&#34;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h4 id="查看拓展方法">查看拓展方法</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">df
</span></span></code></pre></div><h4 id="使用拓展方法">使用拓展方法</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">uuid_generate_v4</span><span class="p">();</span><span class="w">
</span></span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我对 PostgreSQL 的基础知识与实用操作的讲解，希望对你有所帮助。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="http://www.postgresql.org">PostgreSQL 官网</a></li>
<li><a href="https://postgresapp.com">Postgres.app 官网</a></li>
<li><a href="https://tableplus.com">TablePlus 官网</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>周报 #10 - 重返过去、遗憾与当下</title><link>https://www.pseudoyu.com/en/2022/09/04/weekly_review_20220904/</link><pubDate>Sun, 04 Sep 2022 23:05:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/09/04/weekly_review_20220904/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-08-29 到 2022-09-04 这周生活的记录与思考。 发现以前拍的照片原片越堆越多，好多都没修，最近在慢慢整理。目前每篇封面图也都会</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-08-29</code> 到 <code>2022-09-04</code> 这周生活的记录与思考。</p>
<p>发现以前拍的照片原片越堆越多，好多都没修，最近在慢慢整理。目前每篇封面图也都会选一张尽量符合主题的作品作为展示，看看后续能不能挑选一些作为特定主题的作品集。</p>
<p>挺意外从好几个现实里的朋友这里听说在 follow 我的周报，在聊天时讲到一些话题时会说“你在之前周报里提到过”，也有一位意料之外的人因为周报而恢复了一些联系，自己分享欲的载体慢慢在关联与影响着自己的现实生活，感觉很奇妙。</p>
<h2 id="重返过去遗憾与当下">重返过去、遗憾与当下</h2>
<p><img src="https://image.pseudoyu.com/images/back_to_campus.jpg" alt="back_to_campus"></p>
<p>因为一段对话，周五度过了一个未眠之夜，很多学生时代的记忆不断浮现。</p>
<p>第二天实在有些心乱，于是重温了一部古早的日剧《求婚大作战》，大概是讲了男主通过照片重返过去来弥补遗憾，却发现不论怎么修补都无法改变结局，最终决定在现实中付诸行动的故事。</p>
<p>其实几年前看的时候一直有些疑惑，在多年后重拾以前的遗憾，去试图达到一个美好的结局是否真的有意义？换言之，这一切会不会只是对记忆滤镜映射出的美好想象的盲目追逐，就像那些用于穿越的照片所散发的青春与美好一样，存在于记忆中，也仅仅存在于记忆中。</p>
<h3 id="重返过去">重返过去</h3>
<p>不知道该说是幸运还是不幸，自己曾有过这样一段可以称之为“重返过去”的故事。故事倒并不复杂，初中时喜欢过的女生在大一时因为一些交集再次相遇，也许是重新燃起了一些莫名的情感，在一起了，一个多月后，又分开了。</p>
<p>可能因为一切都发生得太快，来不及留下什么美好，只有一条大意为“新鲜感不是和未知的人体验已知的事，而是和已知的人探索未知的事”的说说被遗忘在记忆的某个角落里。</p>
<p>其实那段感情结束带来的伤害早已不再重要，但它的存在本身却有其特殊的意义。初中的我大概是木讷而迟钝的，对她学不会隐藏自己的喜欢却也只会笨拙地表达，现实中并没有什么男主光环，自然也没有皆大欢喜的结果，但那确实是我第一次感受到了名为“喜欢”的情绪，而“巧”的是大学的这一次“续前缘”也是我的初次恋爱。</p>
<p>同一个人带上了两层不同的情感和意义，也许本应是一段佳话，“多年后弥补初次悸动的遗憾”这样百看不厌的爱情主题。但真正进入了这段感情后，却发现并不是如此，当初的喜欢经过了时间和成长的磨损后仅剩的一些执念也被这样的逞强所撕扯得支离破碎。</p>
<h3 id="遗憾与当下">遗憾与当下</h3>
<p>我们都不存在回到过去改变记忆的超能力，并且因为上述的经历，自己也一直有些害怕重蹈覆辙，我对待那些遗憾像是潘多拉魔盒一般谨慎。一直习惯于将过去的这些事尘封起来，有时候甚至久到觉得自己都已经忘记了，而因为一些事或言语牵动情绪时才发现依然清晰。</p>
<p>既然聊到这个话题了，我还想讲另一个故事，一个藏在记忆深处的悠长的故事。</p>
<p>高中文理分科后，进了文科班，一个陌生的环境。脸盲晚期的自己却莫名在第一时间记住了前排的一个小个子女生，笑起来很好看，第一次加好友时别致的“猜猜我是谁”也让我每每想起时都嘴角上扬。一个国庆假期的聊天让我们亲近了许多，一句本是玩笑话的“我打电话到你宿舍呀”让我之后好几个月的周末中午都充满期待。因为常常一聊就是几个小时，我会沿着运河边的小道一直走，踩在落叶上的沙沙声和电话听筒那端的温柔勾画了我记忆中最美好的一个秋天。</p>
<p>后来的记忆以陪伴为主线，夹杂着一些细碎却温暖的日常：每次晚自习下课后默契地一起在走廊看夜空，与喝着 QQ 星牛奶努力长高的她聊日常成为了一天里最幸福的时光；记得一次偶然听到她说一位同学带来的糖葫芦很好吃，不好意思开口问，于是在打探到的同学家住址附近走了几条街，终于根据包装袋找到了一样的，只为看到送到手边时惊喜却又故作淡定的小表情；记得一次学校办手工节义卖，我选了一个很喜欢的蓝色风铃填写了她的名字让他们送到班级，青涩的小心思伴随着风铃轻轻晃动；她 18 岁生日之前几个月我申请了走读，悄悄录制着她身边重要的人的祝福视频以及全班的留言录音，剪辑成一条现在看来可能无比粗糙但当时倾注了许多心意的视频，只是想让这个生日在她的人生中多几分特别；&hellip;</p>
<p>似乎只要与她有关，什么都好。</p>
<p>但世间美好往往带着遗憾匆匆收场，最后也没能在一起，让人感慨缘分之无情。</p>
<p>高考后，因为一些也许现在看来本可以释怀的事争吵、决裂、互删。尽管后来有问过分数和志愿，几番犹豫之后却鬼迷心窍地避开了所有与她有关的城市。直到大学才打听到了近况，恢复了一些联系，但已经都不是曾经的我们了。</p>
<p>其实那么多年一直没法云淡风轻地讲出这段故事，也一直畏惧着那些遗憾和衍生的情绪，直到这些记忆全在这个夜晚涌现，无眠。</p>
<p>过去的这些美好与遗憾造就了现在的自己，《求婚大作战》中的健选择了带着这些面对当下，而我选择写下来。勇气的表现各不相同，但至少，我们都迈出了第一步。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="工作">工作</h3>
<p>这周工作上主要在忙一个演示的排练，因为要系统操作演示+讲解共计一个多小时，对内容编排和临场应对都有一些考验，难免还是有点紧张，希望正式的时候能够顺利一些；其余时间都在了解新项目，还没正式进入我的开发任务部分，其实以前的时候也常常多任务并行，但大多是同类型，这次因为有很多需要额外了解学习的，略有些力不从心。</p>
<p>其他就是学了一下 PostgreSQL，就想着整理一下工作实践中用到的一些常用技术栈或是工具的使用，也可以作为一个查阅，就当作一个持续更新的系列吧（又是一个 Flag）。不知道什么时候才能更得心应手写一些深度的文章，还差得远呀。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>黑客与画家</strong>，通勤路上在读的，原本以为像是软技能那样的比较实际的一些内容，是当作路途消遣来看的，但是出乎意料地很多想法挺有趣，文风也很舒服，看了一半左右了，还有些沉浸</li>
<li><strong>送你一颗子弹</strong>，刚开始看，更多想学一下怎么样“审视”身边的人事物</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>彩排</strong>，看第一集的时候就有在想，参与彩排主角的人真的能以一个新的身份进入角色么？抑或是如果身处彩排其中的人逐渐分不清其和现实的界限会怎么样？很短也很有趣的走向，就像一开始就告诉你这是在表演，少了一些反转的期待却更容易被事情发展吸引到，滑滑梯下来的年龄转换有被惊艳到，以及很多长镜头</li>
<li><strong>求婚大作战</strong>，老剧，因为本周的一些事想到了高中时代，重温了一下这部剧，上次看应该也是大一大二了</li>
<li><strong>医院五日</strong>，讲到医学伦理部分，有些好奇在这样政治环境下的处理方式</li>
<li><strong>龙之家族</strong>，又追了一集，感觉快要弃了</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>奇巧计程车</strong>，群像的感觉很不错，围绕着一个主线的各个人之间都有关联。挺喜欢漫才组合的那条线，想到了好久之前看的日剧《火花》，觉得这个职业一直好有意思</li>
<li><strong>夏日重现</strong>，追番中</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，追番中</li>
</ul>
]]></content:encoded></item><item><title>周报 #09 - 没有色彩的 Yu 和他的巡礼之年</title><link>https://www.pseudoyu.com/en/2022/08/29/weekly_review_20220829/</link><pubDate>Mon, 29 Aug 2022 11:08:14 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/08/29/weekly_review_20220829/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-08-22 到 2022-08-28 这周生活的记录与思考。 这周工作上终于有了些变化，进入了另一个很感兴趣也更有挑战性的项目，感觉可以把之</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-08-22</code> 到 <code>2022-08-28</code> 这周生活的记录与思考。</p>
<p>这周工作上终于有了些变化，进入了另一个很感兴趣也更有挑战性的项目，感觉可以把之前居家时候学的合约和底层链相关的都用上一点。周中有个挺亲近的同事离职了，比我早一周入职，我工作以来的第一个接口就是他教我写的，可能还没太习惯离别，有些感慨。</p>
<p>周末和推友 <a href="https://twitter.com/RealAkemiHomura">Homura</a> 面基了，是个有趣&amp;可爱的男孩子，聊了很多，有很多想法和爱好相近的地方，很开心的体验。大概因为之前不打网游也不怎么发社交媒体，自己好像不太会结识网友，也算是最近的一个小改变了（社恐康复治疗），也决定之后多出门拍照和让生活更丰富一些。</p>
<p>另外就是看了不少书，逐渐也在生活的正轨上了，很巧（或是隐隐有些倾向）的是这周在看的两本书和联想到的剧都是讲述一个普通人的生活与想法，引申了很多思考，关于有趣、平凡与自我。</p>
<p>另外还因为 <a href="https://twitter.com/Manjusaka_Lee">Manjusaka</a> 的一条推勾起了一些记忆以及对慈善和善意的一些思考。</p>
<h2 id="没有色彩的-yu-和他的巡礼之年">没有色彩的 Yu 和他的巡礼之年</h2>
<p><img src="https://image.pseudoyu.com/images/no_color_people.png" alt="no_color_people"></p>
<p>这个标题取自村上春树的『<a href="https://book.douban.com/subject/25733470/">没有色彩的多崎作和他的巡礼之年</a>』，很长又略些不知所云的名字。这本书是在和 Humura 面基的时候约在了书店，瞥到了他在看村上的『<a href="https://book.douban.com/subject/30144095/">海边的卡夫卡</a>』，突然想到之前想补一下村上的书。</p>
<p>之前看『<a href="https://book.douban.com/subject/10529920/">1Q84</a>』和『<a href="https://book.douban.com/subject/27200257/">挪威的森林</a>』这两部的时候就挺喜欢他的文风，感觉平实而有些娓娓道来的韵味，夹杂着一些充满想象力的比喻。但我最喜欢的还是他的杂文札记，在『<a href="https://book.douban.com/subject/3369600/">当我谈跑步时我谈些什么</a>』的很多思考耐人寻味，看完后也有动力坚持跑了一个寒假的步。</p>
<p>北京的万圣书园外面很破败，甚至对着地图确认了好几遍才在旁边的一个不起眼的地方找到入口，进去后四处都是书架，摆放算不上有序但也不缺美感，顺着同样在旁边的一个小角落里发现的入口拐了几个弯才发现文学区，“别有洞天”可能是最好的形容，很有趣的地方，也让我联想到了香港的很多旧书店。</p>
<p>一下就看到村上的书所在的书架，随意选了这本『<a href="https://book.douban.com/subject/25733470/">没有色彩的多崎作和他的巡礼之年</a>』，还顺便拿了一本『<a href="https://book.douban.com/subject/26889236/">我的职业是小说家</a>』。犹豫了一下还是决定先看前者，不知所云的名字让人多了一丝好奇，下午的时光也是小说更容易打发，初读了几页，嗯，还是熟悉的味道。</p>
<p>尽管读得匆匆，看小说也没有太多记笔记的习惯，但还是记住了几个很有趣的点。首先就是对名字的释义与探究，父母为他取名时纠结于“多崎作”与“多崎创”，后来选了前者，仅需做到“制作”便好，不希望施以“创造”的压力，本已经有了不错的寓意，但因为他所在的小群体中其他四人以及后续结交的挚友的名字都巧合地包含了颜色词：“赤”、“青”、“黑”、“白”、“灰”，让他感觉自己就像是一个没有个性的存在，连带着没有色彩的人生。</p>
<p>其实关于自己名字的埋怨常常有，『<a href="https://movie.douban.com/subject/26302614/">请回答 1988</a>』里德善也有向父母埋怨自己的名字毫无特色，不如姐姐宝拉。我也曾有过这样的想法，似乎自己的名字简短而没有特色，再加上也是几个大姓之一，常常在一个学校遇到不少同名的人，与之相伴的就是自己常常也需要额外努力才能留下更多记忆点。</p>
<p>虽然后续也和自己和解了，但似乎还总是感觉自己的生活与有趣已经无缘了。总是羡慕别人的有趣个性和经历，也常常在即使自己做得不错时也只是觉得在履行自己平凡人生的职责或是这些都并不属于自己，心理学有个症状定义叫“冒名顶替综合症”似乎很贴切地描述了这一点。之前看过一篇关于工程师素养的文章中提到过这一点：</p>
<p><img src="https://image.pseudoyu.com/images/imposter_syndrone.jpg" alt="imposter_syndrone"></p>
<p>而随着年岁和经历的增长这种倾向似乎愈演愈烈，追寻有趣也成为了一个虚无缥缈的执念，但即使是他人评论是个经历丰富或是有意思的人也总是将信将疑。书中描述的多崎作似乎也处在这样的状态中，其实又在做自己一直很感兴趣的车站建造工作，却依然觉得自己缺失了什么，就会将其归咎于自己的缺乏色彩。</p>
<p>人在各个阶段似乎总是会有抱团的倾向，而一旦依赖于一个群体又不免遭受来自关系的压力与挫折。大学时我曾有这样一个四人小团体，两男两女，总是形影不离，到辅导员或是同学发现缺人都会很自然地询问其余的人。</p>
<p>但我在一段时间后感受到了明显的压力，剩下三位似乎是更风云一点的人物，总是在人群中耀眼的那一个，而我却似乎总是缺乏存在感，而内心又不想成为这样出于习惯而依附其中的多余之人。于是我开始刻意回避和逃离，当然，表现拙劣的我并不懂如何隐藏，很快就被察觉。</p>
<p>可以说比起多崎作我是幸运的，没有被抛弃，也没有什么误会，另外三位在一个夜晚把我堵在男生宿舍楼下让我讲出心结，并逐一进行排解，关于个性和存在感的回应我可能依旧觉得是安慰，但有感受到自己有被这段关系和模式所需要，自己的情绪有被他们所认真看待，我们的关系有被珍惜。即使后续因为城市和很多原因已经少有共同行动的机会了，但是依然有着不错的联系，以及到了任一成员所在的城市所首先会想到的人。</p>
<p>目前也处于另一段三人的关系中，两位初中挚友，可能就定义上来说算不上发小但亲近更甚。因为分开于三地，常常也会思考这段关系的立足点、走向以及平衡，尽管慢慢会有一些变化，也有不少未来需要面对的部分，但也逐渐愿意为之努力和探索更多。</p>
<p>『<a href="https://book.douban.com/subject/26425831/">斯通纳</a>』其实也描述了许多关于生活的平凡与人格的完善这一块，不过话题比较庞大，可能以后会结合着『<a href="https://movie.douban.com/subject/33477335/">Normal People</a>』一起讲讲。</p>
<h2 id="善意与慈善">善意与慈善</h2>
<p>上周看到 <a href="https://twitter.com/Manjusaka_Lee">Manjusaka</a> 发的一条推文：</p>
<blockquote>
<p>一个好消息和大家分享一下</p>
</blockquote>
<blockquote>
<p>我妹子和我一起资助的一个大凉山的学生，比较顺利的考上了东部沿海一个还不错的公立大专。算是迈出了走出来的第一步，虽然对于很多人来说大专不值得一提，但是对于大凉山的孩子来说，这一步已经需要付出太多的努力</p>
</blockquote>
<blockquote>
<p>欢迎大家一起来资助学生，毕竟</p>
</blockquote>
<blockquote>
<p>#教育是最好的公益</p>
</blockquote>
<p>后来也了解了一下『<a href="http://www.one-school.org">壹个村小</a>』这个组织，打算后续关注一下通过一对一的方式援助一位。</p>
<p>其实我很难将自己这些举动赋予“慈善”这样高尚含义，自己也曾有过以之为炫耀或是谈资的时候。</p>
<p>高考结束那年和挚友去了湖南的一个山村支教，参加了一些活动、教了一些课、结识了一群可爱的小朋友，然后匆匆离去。后来大学开始的时候一次在班群讨论过关于支教的事，当时我讲了这段经历（或许带着一些隐隐的自豪，“看！我还做过这样的事”），有一位同学回复让我印象深刻，具体的言辞记不清了，大意是质问我是否想过这样一波一波的支教老师似乎带着自己的目的去让那些孩子看到了外面的世界、给予了他们更多的想象和温暖，然而却匆匆离开，可能再也不会回到这个地方，生活也不会再与之交轨，比起这短暂传递的所谓“知识”，究竟是益处更多还是伤害更大。</p>
<p>后面大家的议论我记不清了，我想我无非是还带着对那些孩子们的不舍之情说了“我之后有机会会再去看他们的”这样的话。那时是 2015 年，7 年过去了，我再也没有回去过，她是对的。</p>
<p>后面自己很小心翼翼地对待这样的事，也不再敢称什么慈善，生怕自己出于虚荣做出这样自我满足的事。记忆里也就是在系里支教团号召捐钱买冬衣的时候略多出一些以尽绵薄。</p>
<p>这次看到了 Manjusaka 的这条推，感受到了由衷的开心，也希望自己也能以这样的方式多做一些什么吧。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>工作、消费主义与新穷人</strong>，不论是在工作伦理时代还是后来的消费主义，即使加上了伦理、道德这样冠冕堂皇的措辞，穷人终究仅仅是一个符号而从未被当作一个群体来正视，不断变化的规则秩序或是不同的态度也只是每个社会选择了它在那个阶段偏爱或允许的方式，即使赋予了穷人“价值”也不过是居高临下的施舍。</li>
<li><strong>九宫格写作法</strong>，一本小书，精简且文风很有吸引力，之前自己其实一直不爱看这类“如何阅读/写作”这样的书，但随着自己开始博客更新后也常常感受到表达方式的局限，很有启发，尤其是在信息收集与整理这一块，在自己的实践上结合 Logseq 的每日记录各种想法，能为写作增加很多思路。</li>
<li><strong>斯通纳</strong>，高中时草草读过一遍，最近重读又有很多新的感受。不知道是不是因为设定都是文学专业，读的时候联想到了 Normal People 普通人，前两年很火的剧。大概一个普通人的一生总是这样琐碎且真实，学业、爱情、婚姻无不充满着破碎感，无力改变却又认真地生活着。最近越来越喜欢这样朴素笔触下的平淡人生和它传达出来的生活态度，大概慢慢也老了（虽然这么讲有些矫情</li>
<li><strong>没有色彩的多崎作和他的巡礼之年</strong>，最近难得的一口气读完的实体书，村上的文字常常有这样的魔力，似乎只是在描述一些琐事和心里的杂念，却又吸引着人去探究各个元素之间的关联。这本书主要关于友谊的破碎以及失去。不禁联想到我所在的一个三人小群体，寄托了过多依赖的自己也许已经无法承受失去的代价了，只是随着生活与时间流逝我们所需要面对的也更多了。</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>医院五日</strong>，看了一半多，讲美国卡特里娜飓风时候的一些事，难免不让人联想到武汉疫情当时的一些事</li>
<li><strong>龙之家族</strong>，权游前传，目前看了一集观感一般</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>隐入尘烟</strong>，第一感觉想到了无依之地，紧接着是活着。雨中那一段既感动又心疼，默默祈祷着苦难不要降临，却也于事无补。但静静看完的两个小时里观感上并没有太多渲染苦难的痕迹，大概这就是中国人真实的苦难本身的样子，一代又一代人地重蹈覆辙。</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，甚至有些舍不得结束了，很难得到了 20 集还在期待后续发展的番，千万别烂尾</li>
</ul>
<h4 id="游戏">游戏</h4>
<ul>
<li><strong>八方旅人</strong>，工作日晚上闲暇的时候打了一会儿，高清马赛克的体验还是挺不错的</li>
<li><strong>极乐迪斯科</strong>，这周生病了，停滞了没玩</li>
</ul>
]]></content:encoded></item><item><title>周报 #08 - 职业杂谈、404 Not Found 与猫</title><link>https://www.pseudoyu.com/en/2022/08/22/weekly_review_20220822/</link><pubDate>Mon, 22 Aug 2022 10:22:14 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/08/22/weekly_review_20220822/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-08-16 到 2022-08-21 这周生活的记录与思考。这周工作上依然没那么紧，周中也有了更多时间跟同事交流和聚餐，回家后的时间并不多</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-08-16</code> 到 <code>2022-08-21</code> 这周生活的记录与思考。这周工作上依然没那么紧，周中也有了更多时间跟同事交流和聚餐，回家后的时间并不多，所以整体也算休闲。感觉七八月就像是之前放暑假一样，心态上也没有什么负罪感。不过还是读了一些书，并且把阅读时间、频率和方式都更规律化了一点。</p>
<p>周中在感情上（可能也有些难再冠之以感情，记忆吧）发生了一些令人低落的事，经过了几天的调整略缓过来一些。对自己的状态有些担心，可能也有在认真地考虑是不是要（再）养一只猫。</p>
<h2 id="职业杂谈">职业杂谈</h2>
<p>上周听了这期『<a href="https://pan.icu/65">65. 内核恐慌 × 枫言枫语：如果不做程序员我们会做什么？</a>』，还挺有感触的。和各位嘉宾不同，其实自己走上程序员这条路才算是阴差阳错，之前并不算长的人生里也经历过数次转折，就像一条条不同的世界线，也常常会想另一个平行世界的自己是过得更开心还是同样迷茫。</p>
<p>其实自己一直也算不上什么大理想，自小就没有成为“xx 学家”的梦，更真实的倒是有过一段时间想做老师，但在与一个并不友善的小学班主任共度几年之后早已失去了大半兴致，不是说老师这个职业不好，只是害怕自己成为这样的大人。</p>
<p>在高中时随着读书写作变多了，也萌生过成为独立作家或者记者的梦，或许有带着稚气的一些正义感和英雄主义，但总的来说当时没有多宏大或是高尚的想法，如想要“振兴中华文坛”或是“揭露社会丑恶”，而只是单纯地觉得，能把读书和写作兼为自己的爱好和职业该是一件多幸福的事呀。</p>
<p>高考后参加的一个国际支教团中也见到了真正的国际记者，填充了自己对于未来职业的想象。只是随着年龄见长，才慢慢觉得对于成为作家而已自己少了一些想象力，而作为记者似乎又缺了一些勇气。这大概也是成长的代价吧，已经不再能大声说出自己的所谓“理想”了，也不得不承认并面对自己力有不逮之处。</p>
<p>调剂到了英语专业算是万幸，或多或少在我迷茫未来的时候没有觉得自己是在虚度时光。大一大二时并没有思考那么多未来的事，只是在闲暇之时不断学 ps、pr 等各种软件，活跃在各个社团组织里，做文科学院里所谓的“技术宅”。</p>
<p>大多软件的使用逻辑并不复杂，“我亦无他, 唯手熟尔”。慢慢地萌生了一个想法，比起“使用”，是不是“创造”可能更有趣一些？于是从 Python 开始学代码，走了很多弯路，也经历过学了几个月依然只会课后习题，做不出什么完整项目的阶段，慢慢摸索至今才勉强摸到了一些门槛。</p>
<p>那时也并没有把其作为自己的职业目标，可能仅仅觉得自己在做一件挺有趣也很酷的事。到了大三时候一时兴起开始学摄影，买了一台 Sony A7M3 微单（陪伴我至今），一边实习出差一边记录一些风景人文。</p>
<p>当时教我摄影的师父是一位深度记者兼纪录片导演，其实并不会教我构图原理或是参数怎么调这样的基础，而是潜移默化地向我传达即使是一张简单的照片，在拍摄的时候也一定要在心里构思一个主题，就像是含蓄地讲一个故事一样，所有构图、色调或是效果都需要为这个故事服务，这一点持续影响着我。</p>
<p>实习结束后回到学校开办了自己的视频工作室，承接一些宣传视频与在线课程的录制剪辑，从打光、布景、绿幕等开始，以一个最小工作流体验了这个行业的各个方面，其实也萌生过是否要将其作为职业的念头，只是最终还是觉得乐趣不足，遂放弃了。</p>
<p>临近毕业时一直有考虑从事产品经理一职，也了解和体验了一些相关工作，后来依然觉得自己的兴趣是在“创造”与自己真正完成一件事的满足感，而不是在设计与勾画蓝图（同时依然觉得自己缺乏足够的创意），依然没走下去。</p>
<p>最后跨专业出去留学，回来成为了一名还算合格的程序员。这就是我目前的职业之路，尽管有很多轻描淡写的部分，但各个阶段也真切地体会到了迷茫、挣扎、沮丧等各种感受，能走到现在有幸运有付出的回馈，也让我倍感珍惜。并不能确信自己以后会一直会做程序员，但应该或多或少都会与 Coding 有关，毕竟这是我迄今做过的最有意思的事，还有着无尽的探索空间。故事还在继续，谁又不想体验更多元有趣的生活模式呢？</p>
<h2 id="404-not-found">404 Not Found</h2>
<p><img src="https://image.pseudoyu.com/images/dino.gif" alt="dino"></p>
<p>这可能是一个有些不知所云的标题。</p>
<p>在网页中，如果内容已经不存在了，一般会显示一个“404 Not Found”页面以起到告知作用。我一直觉得这还挺酷的，之前有把自己随身带的用来装充电宝的包选了 404 的图标样式，也有一段时间把自己的介绍页面加上了 Google 的小恐龙动画（Google Chrome 浏览器在访问网站出问题时会有一个离线的跳跃类小游戏，让访问者等待之时有一些乐趣）。</p>
<p>大概一直觉得自己在某种意义上是一个容错率很高的人，能够坦然甚至玩笑的方式看待一些小错误插曲，有常常自豪这样的心态。直到，我的感情 404 Not Found 了。</p>
<p><img src="https://image.pseudoyu.com/images/misty_blog_404_not_found.png" alt="misty_blog_404_not_found"></p>
<p>其实自己也并不是没有发现一些被清理或是解除关联的痕迹，也在一天天逝去的时间里在逐渐接受了一些现实，只是当 404 的提示出现在眼前时才发现刺痛感比自己想象得强得多，也撕开了我那么多天伪装的坚强。</p>
<p>我一向来看待感情比起其他事物要乐观得多的，至此也不得不承认感情自带的悲剧属性，曾经的甜成为了如今束缚自己的布满荆棘的牢笼，不去触碰就不会受伤，也失去了迈出去的勇气。</p>
<h2 id="猫">猫</h2>
<p><img src="https://image.pseudoyu.com/images/my_cat_xiao_shu.jpg" alt="my_cat_xiao_shu"></p>
<p>实话说和她一起之前自己并没有想过养猫，大概是觉得连自己都照顾不好的人又怎么有资格对另一个生灵负责，但当真正家里多了一个成员时也才渐渐发现自己享受于这种依赖与被依赖，似乎生活也多了很多目标。</p>
<p>她离开后，小薯一并被带走了，虽然常常也跟朋友无奈地玩笑说自己“人猫两空”了，但也心知自己之前的照顾确实不如她，这样的选择也无可厚非，只是每次忆及从前又多了一倍的难过。</p>
<p>昨晚看了『<a href="http://movie.douban.com/subject/36033619/">喵星人的奇思妙想</a>』纪录片后也更多了解了之前忽略的很多猫的想法和相处细节，也隐隐萌生出是不是要自己再养一只猫的念头。只是这就像是对小薯的一种背叛，自己也依然没能做好这个心理准备去再次去好好对待一个新的成员，而在自己需要的时候迎接一个新的成员于人于己都很难说是一个负责任的选择。</p>
<p>也许未来某一天吧。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="学习">学习</h3>
<p>这周也还是陆续在按计划看一些学习课程资料，也终于把智能合约这块的课程追完了（32 小时，好长！），不过后面因为已经熟悉了合约，而且很多重复性的代码，就比较少之间上手跟着写了，打算这周看项目源码作一些分析，所以这两周的代码量也少得可怜，都快成为一个 Markdown 工程师了。</p>
<h3 id="博客相关">博客相关</h3>
<p>之前写的那篇 Stablecoin 相关的还是有一些要修改的，但后半期因为自己状态的影响还没修改，这几天需要调整完善一下了，剩下这周继续完成以下几篇博文（拖了好久了还没动笔）：</p>
<ol>
<li>Cosmos 原理与架构</li>
<li>Docker 基础与实践</li>
<li>k8s 基础与实践</li>
</ol>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<p>这周把之前遥远的 Kindle Oasis 2 翻出来了，清理了一下帐号和书籍分类，只留了”To Read“、“Reading”、“Read”三个分类，基本与豆瓣同步，这样每天通勤能看 50 分钟左右，有时候在家也能看一点，也比手机看电子书更有沉浸感和护眼一些。</p>
<ul>
<li><strong>蒂姆库克传</strong>，看完了，书是一般，感觉更多就是信息的堆砌，但是确实让我更多了解到了乔布斯之后的苹果与它践行的价值观</li>
<li><strong>工作、消费主义与新穷人</strong>，一本很有意思的书，读了两个章节了，对自己最近工作状态的一些思考还挺有启发的</li>
<li><strong>九宫格写作法</strong>，<a href="https://lutaonan.com/blog/read-grid-writing-method/">Randy 推荐的一本小书</a>，这周读一下</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>非常律师禹英禑</strong>，原先只是看了一个剪辑觉得女主很可爱所以追的剧，竟然完整等周更看完了，自闭症律师是一个挺新的切入点，难能可贵的也并没有仅仅是渲染女主的幸运，也包含到了其他自闭症相关的案子，主线剧情不多但男女主的感情线挺清新自然</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>稍微想起一点</strong>，虽然自己还没有到可以很平静地看爱情片的程度，但也算沉浸其中了。能看到一些类似花束中描述的场景与模样，但是少了几分刻意渲染的缘分和矫情，多了一些融在言语举止里的过去与现在的牵绊。另外，深夜的日式街景真的完全满足了我对美好缘分的一切幻想，想去</li>
<li><strong>喵星人的奇思妙想</strong>，有点了解到了猫的一些想法，也能感受到拥有过又抽离出生活后的痛苦，有点考虑等略调整之后再养猫了（总有一些莫名的背叛感）</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>英雄联盟：双城之战</strong>，刚出的时候就想看，结果到现在才补，算是近几年看过的动画里在画面、剧情、节奏和配乐的巅峰了，虽然我不玩英雄联盟，可能少了些对人物剧情的触动，但也能看到一个很好的故事和与之匹配的宏大的世界观，期待下一季了</li>
<li><strong>夏日重现</strong>，越来越精彩了</li>
</ul>
<h4 id="游戏">游戏</h4>
<p>突然发现豆瓣还有记录游戏的功能，修改了一下自己 n8n 的自动化脚本，添加了游戏记录同步的功能，之后也想在自己的日常生活里添加一些能够放松的部分。</p>
<ul>
<li><strong>极乐迪斯科</strong>，算是前两年很有名的文学游戏了，制作人是几个作家。之前在 Steam 上玩了一点但是记录没留存了，最近买了 Switch 卡带版好好玩一下，顺便作为收藏，大概玩了两三个小时了，被画风和背后的一些思考吸引了，慢慢玩，也想写点东西</li>
</ul>
]]></content:encoded></item><item><title>周报 #07 - 学习、考证与工作追求</title><link>https://www.pseudoyu.com/en/2022/08/15/weekly_review_20220815/</link><pubDate>Mon, 15 Aug 2022 12:36:14 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/08/15/weekly_review_20220815/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-08-08 到 2022-08-15 这周生活的记录与思考。这周的工作还是筹备项目需要参加的一个测评，主要是方案讲解，下班时间都还算正常，</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>本篇是对 <code>2022-08-08</code> 到 <code>2022-08-15</code> 这周生活的记录与思考。这周的工作还是筹备项目需要参加的一个测评，主要是方案讲解，下班时间都还算正常，也渐渐恢复了不错的生活节奏。</p>
<p>但是感觉下班回家宅习惯了后就很缺乏出门的动力，原定的练习滑板和夜跑也都暂搁了，不过比起之前也还是出门了几次，工作日几个晚上有聚餐，周末去了趟南锣鼓巷，晚上还去了什刹海散步，一直觉得这个地名很美，终于得以一见。</p>
<p>经过了上周的调整，这周也安排进了不少学习计划，并且决定通过考一个证书来检验自己的学习，也算是一种外部激励吧。其他就是与几个朋友聊了一下关于工作调整、远程工作与工作追求相关的事。</p>
<h2 id="学习与考证">学习与考证</h2>
<p>之前的两个工作项目里就经常有用到 docker 与 k8s，对他们的基本命令与配置文件编写都比较熟悉，但一直没有对它们的架构与技术细节有系统性学习，上周看了 YouTube 上『<a href="https://www.techworld-with-nana.com">TechWorld with Nana</a>』频道的一些讲解，补齐了很多知识盲点。</p>
<p>但是因为 k8s 涉及到的组件和操作太多，稍一阵子不用就会忘记，而且不上手练习也不利于记忆，然后自己也对 Devops 这一块很感兴趣，经常折腾一些自动化工具和 Serverless 应用。于是打算更系统地学习一下，考一个 Certified Kubernetes Application Developer （CKAD）认证，一个由 CNCF 与 Linux 基金会共同开发的认证项目。这个项目主要面向开发者，涉及了很多知识点：</p>
<p><img src="https://image.pseudoyu.com/images/ckad_topics.png" alt="ckad_topics"></p>
<p>比较特殊的是这个认证考试最后是 19 道上机实操题，也可以查看 k8s 官方文档，没有什么需要死记硬背的部分，很适合作为学习成果的检验。买了 Udemy 平台的『<a href="https://www.udemy.com/course/certified-kubernetes-application-developer/">Kubernetes Certified Application Developer (CKAD) with Tests</a>』，最近就一直沉浸在刷它附带的 Lab，因为是一个在线环境就很方便，找回了当时读书的时候写作业赶 due 的心境。</p>
<p>其实我大学时候好像莫名地考过不少证，印象比较深的是一个软考中级（软件设计师）证书，因为上午考理论综合，下午考实务，通过率也只有 30%不到，刚报考时很紧张，早早地买了书和各种资料，但是一直拖延，直到只剩半个月了才开始紧急预习和刷题，最后压分通过了。因为大学时候是非科班 CS，那次考试最深的体验就是在备考过程对软件工程、操作系统、计算机组成原理以及各个编程语言都有了比较系统的认识，也给后面跨专业学习提供了很多帮助。</p>
<p>后来因为本科主修的是英语专业，也考了英语专业四级、英语专业八级、雅思等，越来越感知到学习目标与计划对于了解一个新领域或掌握一个新知识的重要性，跟之前提到的面向周报或面向博客学习的模式也类似，有一个产出标准会会让自己在学习的过程中能更体系化，思路也会更清晰。最近的应该就是 CKAD 和日语 N2 了吧，其他的可以再探索一下（不过有的认证真的好贵）。</p>
<h2 id="工作与状态调整">工作与状态调整</h2>
<p>这周和两个朋友聊了一下工作相关的事宜，一位正在换工作，来了解一些 web3 相关的资讯，另一位近几个月刚进入 web3 团队工作，采访了他们的一些对于工作的想法，很羡慕，也觉得很有意思：</p>
<blockquote>
<p>“可以认识更多有热情/有趣的人”</p>
</blockquote>
<blockquote>
<p>“我现在也不午睡了，更愿意去把工作的事情做好，甚至感觉这不是工作”</p>
</blockquote>
<blockquote>
<p>“讲究主动性，同时也有挑战”</p>
</blockquote>
<blockquote>
<p>“开会也少，自由度也够，写代码有时不知不觉写到凌晨一两点，久违的感觉”</p>
</blockquote>
<p>可以从字里行间感受到他们的热爱与期待，除了作为谋生赚钱的工具外，他们对工作氛围、模式与内容也有自己的追求与想法，这也很大程度影响到了我对日后工作的一些定义与标准。</p>
<p>这几天的学习和工作状态有所缓解，但睡眠依旧有些糟糕，常常有断断续续的梦境，夹杂着不少过去的记忆，真实到醒来后依然很难缓过来。体检要开始预约了，想在八月完成。</p>
<h2 id="其他">其他</h2>
<p>这个部分会记录一下自己的输入输出以及其他觉得有意思的东西。</p>
<h3 id="学习">学习</h3>
<p>如上文所述，这周主要是在学习 Devops 这一块以及备考 CKAD，同时对 GitLab CI/CD、GitHub Action、Ansible 等自动部署、运维工具做了一些学习记录，还在整理。</p>
<p>另外把修图（Adobe Photoshop + Affinity Photo）和剪辑（Final Cut Pro X + Davince Resolve）这一些技能点重新捡起来，开始慢慢重新计划自己的一些生活记录了。</p>
<h3 id="博客相关">博客相关</h3>
<p>在拖了我的少数派编辑一个多月的稿（并且还已读不回）后，我终于良心发现，把之前约稿的那篇 Stablecoin（稳定币）相关的文章写好初稿发过去了，再根据反馈进行一些修改补充就可以了，感觉心里一块大石头放下了。</p>
<p>之前写的那篇『<a href="https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/">基于 frp 内网穿透的瘦客户端开发工作流</a>』终于在这周发布了，被收录在<a href="https://sspai.com/prime/story/thin-client-solution-with-frp">会员专享</a>内容中，也是一个小小成就了。</p>
<p>剩下这周继续完成以下几篇博文（可能更多是对实践的笔记吧）：</p>
<ol>
<li>Cosmos 原理与架构</li>
<li>Docker 基础与实践</li>
<li>k8s 基础与实践</li>
</ol>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>蒂姆库克传</strong>，快看完了，感觉也更深入了解到了苹果产品背后的一些理念和哲学</li>
</ul>
<h4 id="剧集">剧集</h4>
<ul>
<li><strong>非常律师禹英禑</strong>，开始虐了，也有了一些剧情冲突点，小鲸鱼也是真的可爱</li>
<li><strong>石子和羽男-这种事情也好告么？</strong>，一个新日剧，也是律政题材的，其实对男主人设比较无感，但因为女主是有村架纯，有想看的理由</li>
</ul>
<h4 id="电影">电影</h4>
<ul>
<li><strong>分手的决心</strong>，镜头语言和整体节奏感很舒服，对犯罪和心理的描述占据了绝大部分，但剧情发展和心态变化上缺少了一些呈现，乐趣就是在其中找苹果设备的各种用法了</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，继续蹲后面的剧情发展</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，我是还挺喜欢这种恋爱番的</li>
</ul>
]]></content:encoded></item><item><title>周报 #06 - 真诚、游戏与自我调整</title><link>https://www.pseudoyu.com/en/2022/08/07/weekly_review_20220807/</link><pubDate>Sun, 07 Aug 2022 18:28:24 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/08/07/weekly_review_20220807/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-08-01 到 2022-08-07 这周生活的记录与思考。就工作节奏而言远远算不上忙碌，甚至有几天久违地 7 点多就到了家，空出来的闲暇时间</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/yu_switch_games.jpg" alt="yu_switch_games"></p>
<p>本篇是对 <code>2022-08-01</code> 到 <code>2022-08-07</code> 这周生活的记录与思考。就工作节奏而言远远算不上忙碌，甚至有几天久违地 7 点多就到了家，空出来的闲暇时间让我有了更多时间思考自己的人格与生活状态，也能够将之前很多细碎的思绪好好梳理一下。</p>
<h2 id="真诚">真诚</h2>
<p>周末得知一位挚友遭遇了人际关系的困境，也共同回顾分析了其中涉及人格、个人气质、沟通、思维方式等各个方面的缘由，而『真诚』这一特质则是贯穿其中的核心因素，加上前几周对与人际和沟通方面的梳理，浅谈一下自己的思考。</p>
<h3 id="人际关系的困境">人际关系的困境</h3>
<p>随着年岁的增长和自己内化在性格中的特质影响，我挺乐于为他人、尤其是亲近的人付出，也自认为自己在过去的经历中践行了这一点。但后来发生的一些事让自己渐渐意识到，我似乎一直以来把人际关系的界限划分得很明白，家人、爱人、挚友、其他朋友、不会深交的人、陌生人等等，尽管可能并没有那么多主观意识或功利考虑，但总是有潜藏其中的优先级存在。在绝大多数与他人的沟通中我可能也仅仅是做到了真实或是不虚伪逢迎，而真诚这一步常常难以迈出。</p>
<p>从所谓的社交标准或是从他人身上获取的正反馈来看，似乎已经很足够，让我常常质疑是不是人与人相识之初可能就是有这样固有的一条线，想达到并不难，友善似乎就已经符合了几乎所有关系建立的基础，而想要跨过则需要成倍的付出，而自己则往往止步于此，似乎到了某个临界之时，就会有个声音告诉自己，需要为这段关系所做的也就只此而已，够了。</p>
<h3 id="自我">自我</h3>
<p>后来一次与挚友的争吵让自己意识到了这种思维方式背后隐藏的自以为是与自我满足的部分，甚至会很潜移默化地影响了自己的行为方式与思考优先级。意识到这一点后，自己也经历了一些调整与变化，逐渐不那么在意互相付出的比重，开始更多在与他人的相处中对于他人所需要的与自己所能做到的部分作下意识地思考，不管是在沟通还是相处上，都在之前的习惯之余上多走一步，也收到了一些真诚的反馈，但是依然觉得在自己内心真诚的部分还是很难做到很好。</p>
<h3 id="对真诚的思考">对真诚的思考</h3>
<p>可能是出于不安全感与内心的防备，我常常觉得自己别人对于自己友好的部分很大程度是对自己友好姿态的一种等价回馈。而我自己内心其实也是有很多冷漠的因素存在的，并不是能一直充满热情地全心全意付出，有时候会觉得自己像是一个置身事外的观察家，看着自己的所作所为与其得到的对应反馈，并且在过程中实现自己在与他人相处过程中的“优化”。</p>
<p>要说有什么恶意或是功利性的目的倒也不至于，只是在审视自己时总有一些奇奇怪怪的想法，但时间久了有些难以感受到对方言谈或是反馈中的真诚的部分，也先入为主地很难区分究竟是出去感谢还是纯粹的情绪。</p>
<p>慢慢地，自己变得只会对这些对象才能放下心防：</p>
<ul>
<li>一直陪伴着自己的以家人相待的挚友</li>
<li>感情中自己毫无防备付出的对象</li>
<li>共同度过艰难时刻的朋友（可能是糟糕的状态、崩溃的情绪等）</li>
</ul>
<p>其实共性就是自己都曾主动在他们面前展现过极度脆弱敏感或是糟糕的一面，却被信任与接纳，并让自己在某个阶段意识到了自己依赖于这样的真诚陪伴。也许是对于这一点太过苛刻，抑或是自己已经并不那么习惯于在一段新的关系中倾注太多真诚，总觉得自己在情感上变得越来越消极和迟钝，也常常不再有更多期待，这也是我目前面临的最大困境。关于真诚与相处的思考与探讨仍在继续，希望能有所缓和。</p>
<h2 id="游戏">游戏</h2>
<p><img src="https://image.pseudoyu.com/images/yu_game_gallery.png" alt="yu_game_gallery"></p>
<p>这周其实并没有玩游戏，但想谈谈“游戏”。</p>
<p>游戏于我而言是既熟悉又陌生的一个事物。小时候的我是任天堂的死忠粉，一个 GameBoy，几盘宝可梦（当时还叫口袋妖怪）卡带几乎陪我度过了整个童年，各个版本都通关过无数次，对各种游戏内的收藏如数家珍；即使到了初高中依然常常通过模拟器重温那些经典，玩了古早版本的塞尔达与火焰纹章系列。</p>
<p>到了大学之后反而完全对游戏提不起兴趣，经久不衰的英雄联盟似乎只打了一局人机后再也没登录过，没去赶守望先锋的热潮，后来的炉石、王者也仅仅是浅试了几局后再也没开过，聚会时邀请王者开黑时我的一句“不太会”总是让对面一愣。</p>
<p>大概自己总是觉得有更重要的事去做，或是害怕自己沉浸游戏之后的愧疚感，我一直有些可以避免接触，久而久之也就丧失了兴趣，直到 17 年 Nintendo Switch 的出现。我似乎重拾了对于游戏世界的热情，<a href="https://pseudoyu.notion.site/f5f9e6e31b4744a7a1284eaf55451462?v=6e3be0ced2f44305b9ff3a8298e72de5">囤了很多游戏</a>，沉浸在海拉鲁大陆里完全不记得<del>塞尔达</del>林克的使命，为了培育自己的战队没日没夜地在宝可梦剑盾里孵蛋，为火焰纹章风花雪月里的一个限定道具思考一晚上战略&hellip;</p>
<p>其实游戏带给了很多，因为一次猜测她在剑三里究竟是长歌还是万花输了一杯星巴克，也算是就此结缘；每天一起在 Pokémon Go 抓伊布，刷日常任务和道馆，收获了很多快乐；后来的日常也是她玩剑三，我打宝可梦，也都一起玩成了养成与换装游戏。渐渐地，游戏的乐趣也不仅仅囿于游戏设计本身，而是寄托在其中的日常。</p>
<p>现在自己常常有想重新拿起手柄玩点什么，一直在切换游戏，却再难有勇气打开，也失去了那份心境。</p>
<h2 id="状态调整">状态调整</h2>
<p>这周的工作还是在做前一个项目的筹备，因为之前也已经很熟悉这部分架构和代码了，工作量很可控，所以都能比较早地完成。</p>
<p>但即便时间有了一些自由，依然觉得内耗有些严重。其实最近也开始慢慢思考关于工作的性质与收获，也跟一个刚认识的很有缘的本科学弟聊到这一点，虽然工作初期得到了很多提升，也是必要的阶段，但因为并不是自己真正想做和感兴趣的东西，而是一个接着一个的外部需求，缺少了成就感所带来的正反馈，反而只能从自己的博文或是其他的学习输出中去弥补这一部分。</p>
<p>这几天基本 7 点多就能到家，多了很多自己可以支配的时间，但是前几天到家后有些无所适从，也没能好好利用或是休闲。Humura 在我上篇周报后提了很多建议，尤其是运动与睡眠上，但这周的调整空间很有限，甚至在脱离了褪黑素（已经吃完两罐），睡眠状况更加恶化了。</p>
<p>后面几天的时间安排上好了许多，但睡眠依然没有改善。感觉自己需要更多的自律来进行状态调整。这里所提到的自律倒不是专注于工作或是学习，而且更严格地划分自己的时间，以规律化的方式来保障自己工作学习中的劳逸结合、娱乐、运动，而不是一段时间的积极 + 一段时间的颓败，甚至会需要自己为自己每天找一些细微的动力或是期待，比如拍一些日常的视频或是培养一些简单的习惯。</p>
<h2 id="学习与输入">学习与输入</h2>
<p>这个部分会记录一下自己觉得有意思的东西以及工作学习的一些进展。</p>
<h3 id="技术学习">技术学习</h3>
<p>这一周看了不少的工作之外的书与教程。之前在工作中用到了很多 Docker 与 k8s 的操作，对基本的操作有了一些了解，但是并没有很系统了解它们的原理和进阶用法，发现了一个很棒的『<a href="https://www.techworld-with-nana.com">TechWorld with Nana</a>』频道，讲得很清晰实用。</p>
<p>对于 Cosmos 的架构与核心机制部分已经完整学了一遍，正在画一些图做一些整理。工作后的第一个项目就基于 Cosmos 开发了接近半年，却一直对其底层有些一知半解，终于填了自己当时的一些坑，好好学习了一下。</p>
<h3 id="博客相关">博客相关</h3>
<p>之前看到一种基于博客或是教学的学习观念，即学习一个新的知识点时以能够教会他人或是让读者更好理解为标准，以此为前提能够更明确自己的学习目标。出于这一点，我规划了几篇博文：</p>
<ol>
<li>Cosmos 原理与架构</li>
<li>Docker 基础与实践</li>
<li>k8s 基础与实践</li>
</ol>
<p>下周需要更多时间放在写作上了。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>蒂姆库克传</strong>，对 Tim 的童年和一些观念还挺意外的</li>
<li><strong>区块链架构与实现：Cosmos 详解</strong>，工作用到所以看了下，前四章挺不错的，对整个架构尤其是共识算法这一块讲得很细，后面详细的章节打算看看源码当作参考资料用到的时候看了</li>
</ul>
<h4 id="剧集">剧集</h4>
<ol>
<li><strong>天才基本法</strong>，雷佳音的演技很好，张子枫也有些惊喜，看到后面发现平行世界的设定和《想见你》类似，但是逻辑和世界观差远了，剧情和人设变化有点无语</li>
<li><strong>非常律师禹英禑</strong>，每周期待更新</li>
</ol>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，越来越精彩了</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，连续看了几集，挺休闲的</li>
</ul>
]]></content:encoded></item><item><title>周报 #05 - 工作、时间的掌控感与新朋友</title><link>https://www.pseudoyu.com/en/2022/07/31/weekly_review_20220731/</link><pubDate>Sun, 31 Jul 2022 23:55:54 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/31/weekly_review_20220731/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-07-25 到 2022-07-31 这周生活的记录与思考，也是休假回来后恢复工作的第一周。 经历了一个久违的“小暑假”后还未来得及作状态调</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/bg_computer_room_hellowork.jpg" alt="bg_computer_room_hellowork"></p>
<p>本篇是对 <code>2022-07-25</code> 到 <code>2022-07-31</code> 这周生活的记录与思考，也是休假回来后恢复工作的第一周。</p>
<p>经历了一个久违的“小暑假”后还未来得及作状态调整就马上投入了紧张的新项目筹备中，也推动着自己更多思考工作与生活的平衡。</p>
<h2 id="工作与时间的掌控感">工作与时间的掌控感</h2>
<p>之前的一篇也有讲到过自己结束学生生涯踏入职场已经一年了，得益于第一个项目极端压力下的锻炼，我工作职责上的事务大多已经上手，即使遇到很临时的会议或是技术方案讲解也能比较从容应对。</p>
<p>工作中被信任的最大好处是有了不错的自由度，只要自己能够协调安排好整个任务的进度，获得一个不错的结果，就不需要屈从于无意义的卷；上下班时间还算正常，大部分项目的工作压力也并不会长期很大（因为是 to B 业务为主，所以大多赶一些交付节点），也可以在省下来的时间里学习一些其他东西。</p>
<p>原先一直觉得这种模式还不错，但最近的状态慢慢出了一些问题，感觉就像是自己的生活慢慢被吞噬了。</p>
<p>我对原先预想的下班后闲暇时间并没有办法做到那么好的掌控，随着日子一点点过去，下班时间有时候会更多做一些比较无脑的休闲活动，比如追剧或是刷刷 B 站上的一些微电影（偶尔刷到跟感情相关的又开始 emo）。</p>
<p>有时候莫名地几个小时过去了，因为第二天还需要上班，不得不吃点褪黑素睡了；更有几天回来就已经快 10 点了，想着躺下歇一会儿，再次睁眼就已经 1 点多了，起来打开电脑，却也没干什么事。</p>
<p>下班时间的生产力因此也就很难保证，甚至有时候是在强迫自己做一些事，对一位群友的描述很有同感：</p>
<blockquote>
<p>“我现在有点面向周报学习的意思，每次想彻底躺了的时候，就想着，彻底躺了周报没写的咋办，然后就垂死病中惊坐起了。”</p>
</blockquote>
<p>我反思了一下产生这种状态的原因，觉得还是自己还是很难从工作中得到自己的想要的提升，反而常常是在消耗自己的精神，下班后的时间也不足够恢复，致使自己的生产力完全被破坏了。虽然确实是没有什么任务量规定或是来自外部的 Deadline，但还是常常有些自我谴责，这与自己所追求的理想生活状态相去甚远。</p>
<p>好像是从某个播客中听到这样一个概念，我们都需要找到隐藏在 A 面之后的 B 面。如果把工作项目当作一个 A 面，B 面就是隐藏在其中找到一些点，不论是创新还是一些新的技术尝试都能够让自己有更多的主观意愿去完成；而如果把工作本身当作一个 A 面，那就需要去思考如何去填补这占据了我们绝大多数时间的工作另一面，可以是学习提升，也可以是一个简单的爱好培养。</p>
<p>当然，这种状态的改变并没有一个标准的解决方案，也从来不是一件可以轻易解决的事，但总归是需要去慢慢梳理。但目前是想着自己的下一份工作会更多考虑远程工作的模式，能够更好地平衡自己的节奏，最近也在了解一些相关资讯。</p>
<h2 id="新朋友">新朋友</h2>
<p>这周的惊喜就是认识了几个 Twitter 上一直有在关注的朋友们，起因只是和 <a href="https://twitter.com/strrlthedev">STRRL</a> 讨论了一下 cloudflare pages 并且互加了友链，后来又进了小群认识了 <a href="https://twitter.com/RealAkemiHomura">Homura</a>、<a href="https://twitter.com/Manjusaka_Lee">Manjusaka</a>、<a href="https://twitter.com/_a_wing">新一</a> 和 <a href="https://twitter.com/OnlyXuanwo">Xuanwo</a> 等大佬们，偶尔也会对于生活和技术有一些日常的交流。</p>
<p>自己在毕业之后好像就很少去主动社交了，现实生活中也不愿意参加有陌生人的聚会，再加上朋友圈入口已经关闭了四五年，也并不了解曾经的同学们现状，更加难以有什么交流的契机，一直处于封闭的状态。反倒是在 Twitter 上倒是从 5 月开始碎碎念很多，也常常惊叹于很多推友的有趣生活与思考深度，但一直也都是默默看着，极少有什么直接的互动。这一次认识了那么多新朋友，还是很开心和惊喜的，也希望之后能够多多交流，人都很 nice。</p>
<h2 id="学习与输入">学习与输入</h2>
<p>这个部分会记录一下自己觉得有意思的东西以及工作学习的一些进展。</p>
<h3 id="技术学习">技术学习</h3>
<p>这一周先加入了一个新的项目，进行了一些环境搭建，牵扯到了不少和 docker 相关的一些操作，不过因为之前做过类似的，整体还比较顺利。然后因为涉及了 Cosmos 区块链，所以开始看 《区块链架构与实现：Cosmos 详解》，并且做了一些笔记，慢慢看。</p>
<p>但是没几天后就去指派到另一个项目的前期筹备，有很多繁琐的工作，连续加班了几天，但是开发进展不多，希望项目顺利。</p>
<p>这一周没进行太多其他的技术学习，CSAPP、合约开发和新到的 Go 语言相关的书都需要按照进度推进了。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<ul>
<li><strong>蒂姆库克传</strong>，虽然听说大多是一些报道和信息汇总，不过对苹果这家公司很感兴趣但是却一直对 Tim 很陌生，大概乔布斯的光环太重，所以也想了解一下</li>
</ul>
<h4 id="剧集">剧集</h4>
<ol>
<li><strong>The Most Hated Man on the Internet</strong>，Netflix 新出的纪录片，事件中的妈妈强大、自信且有趣，比起之前关于 N 号房的纪录片少了些沉重，多了一些悬疑节奏感。但是深夜看完依然觉得无奈（或者说是无力），只希望这个世界能多点善意和人性吧，哪怕只是变好一点点</li>
<li><strong>非常律师禹英禑</strong>，女主还是很可爱，男女主也挺好磕</li>
</ol>
<h4 id="电影">电影</h4>
<ul>
<li><strong>独行月球</strong>，中规中矩的院线喜剧片，配乐和气氛渲染还是挺到位的，剧情的话有些低配版火星救援的感觉，并且结局有些过于核心价值观</li>
</ul>
<h4 id="动漫">动漫</h4>
<ul>
<li><strong>夏日重现</strong>，每周都会期待更新的番剧</li>
</ul>
<h2 id="折腾小记">折腾小记</h2>
<h3 id="软件折腾">软件折腾</h3>
<ol>
<li><strong>Arc</strong>，一个新晋网红浏览器，尝试了一下，体验很不一样，目前还没发现什么硬伤，但还是更多只会作为一个辅助浏览器，毕竟 Safari 用得太习惯了</li>
<li><strong>Arctype</strong>，从某个推荐文章里看到的数据库管理工具，界面很好看，可以分多个工作区，也有一个内置可视化面板功能，还没详细玩，目前主力还是 TablePlus</li>
</ol>
<p>看了 <a href="https://twitter.com/strrlthedev">STRRL</a> 上周的周报，也把自己的博客彻底迁移到了 Cloudflare Pages，迁移体验很无缝，后续使用感觉也很棒，至此我的 Serverless 博客系统为：</p>
<ul>
<li>Github 作为 Hugo 博客源文件和运行一些 Github Actions 来自动更新 About 页面</li>
<li>Cloudflare Pages 托管博客，并且用在 Cloudflare 托管的域名进行解析</li>
<li>在 Railway 和 Vercel 托管了 Cusdis 评论系统和 Umami 数据统计系统</li>
</ul>
<h3 id="博客相关">博客相关</h3>
<p>这周没写什么文章，不过数据上有了一些小小的里程碑，首先是 Google 搜索达到了 1000 次点击。</p>
<p><img src="https://image.pseudoyu.com/images/blog_google_search_1k.jpg" alt="blog_google_search_1k"></p>
<p>然后也第一次月浏览量达到了 1 万左右，访客 3 千多。</p>
<p><img src="https://image.pseudoyu.com/images/blog_umami_10k.png" alt="blog_umami_10k"></p>
<p>需要继续加油多写一些了。</p>
]]></content:encoded></item><item><title>周报 #04 - 休假、亲情与城市的归属感</title><link>https://www.pseudoyu.com/en/2022/07/24/weekly_review_20220724/</link><pubDate>Sun, 24 Jul 2022 23:31:27 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/24/weekly_review_20220724/</guid><description>《后来的我们 - 五月天》 前言 本篇是对 2022-07-11 到 2022-07-24 这两周生活的记录与思考。至于延迟的理由 —— 我休假了！！！ 休假 算上实习工作已经一年有余了，但因为项目一</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/one_way_street_books.jpg" alt="one_way_street_books"></p>
<p>本篇是对 <code>2022-07-11</code> 到 <code>2022-07-24</code> 这两周生活的记录与思考。至于延迟的理由 —— <strong>我休假了！！！</strong></p>
<h2 id="休假">休假</h2>
<p>算上实习工作已经一年有余了，但因为项目一直在持续进行中，除了春节几乎没有完整的假期，也攒了不少调休。恰逢第二个项目圆满收尾，我向 leader 申请了休假，7 个工作日 + 2 个周末，有一种久违的放暑假的感觉。</p>
<h3 id="我与家人">我与家人</h3>
<p>虽然疫情时而有反复，最后还是决定回杭州，回家。感觉自 20 年中离家之后，每次回来总是匆匆的，上一次还是国庆了，大约也就待了 3 天，除去亲戚之间的聚会，真正陪伴在家人身边的时间折下来大概也就凑不满完整的一天，只够将自己的近况和想法简单聊聊，似乎就踏上了归途。这次大概也是因为这大半年自己身上发生了不少事，有些疲倦了，只想好好地待在家里休息调整下，同时想多陪陪家人（主要是带我妹妹出去玩）。</p>
<p>其实自己没有那么显著地意识到自己的长大，但在家庭聚餐的饭桌上似乎已经成为带头向各个长辈敬酒的主力，小辈们出去聚会玩耍时也已经是自己在安排了，就连印象里一直都很小的妹妹过了暑假也要步入初中学堂了。就好像从某个时间起，时间就在加速流逝了，在匆忙的学业和工作中并没有什么感知，而只有当自己回到家体会慢下来的时光或是偶尔想起深藏在记忆里的零星小事时，才会感慨两句。</p>
<h3 id="我与妹妹">我与妹妹</h3>
<p>我有一个小我 13 岁的妹妹，每每提及都会让同学朋友羡慕。这个年龄差不至于会有什么争吵冲突，而随着自己长大也能多照顾一些。高中时因为住校和备战高考，也算不上有很多陪伴，而大学之后更是四处奔波，大概只有寒暑假会稍完整一些。而工作后更是聚少离多，只有每天微信群里的闲谈和偶尔的电话，不知道她对我这个哥哥的角色如何评价，希望能合格吧。</p>
<p>所以这次回家带妹妹去拍了一些照、逛了步行街、做了手工、去了海洋馆以及一起去单向空间书店看书。有很多事似乎很稀松平常，但大概因为之前自己也还是太宅了而缺席，所以都还是挺新奇的体验，每次出游或是玩耍结束后手牵着手回家时能从中感受到一种静谧的美好。</p>
<p>这次还带了相机回来，又琢磨了下新买的大疆 RS3 稳定器（真的很好用！！！），拍了很多照片和视频，也算是为她接近尾声的童年留下了一些记忆碎片。</p>
<h3 id="我与老师">我与老师</h3>
<p>初中毕业虽然也已经近十年了，但每次寒暑假或是这样休假的时候都会约初中班主任春哥出来吃饭、聊天，只是以往都有倪和占一起，而如今都已经四散在海外，之后的时间恐怕也比较难聚齐。大概是因为见面得很频繁，这么多年过去的竟也没感觉彼此有太多变化，也都像是朋友一样从学业、工作聊到感情、想法，常常不知不觉就四五个小时，也常常感慨竟然相识已经 13 年之久。</p>
<h2 id="城市的归属感">城市的归属感</h2>
<p><img src="https://image.pseudoyu.com/images/dayuecheng.jpg" alt="dayuecheng"></p>
<p>说来有趣，因为高中毕业后前往武汉读了大学，后续又在上海、厦门等城市进行过为期不短的实习，没多久就赴香港读研，结束后又很快去北京实习工作了，也算是待了不少城市，但不论就环境还是对城市中人的感情来说，都很难承认自己属于哪里。</p>
<p>待得最长的杭州因为大学时期的缺席，有联系的初高中同学已经少之又少，最亲近的几个朋友也都纷纷离开杭州，大多在海外，这次回来后发现竟然连可以出来吃个饭喝点东西的人都一时难以想到，只好作罢；毕业后因为自己当时的学生创业还回去过几次武汉，毕业后尚有联系的也就几个导师、舍友和原本经常一起玩的四人组，然而也都分布在各地，只有出差才能见上一两面，而后续因为疫情爆发，也有两年多没有再回去；香港这一年则充满了紧迫感，除了感情外自己似乎也没有结识太多人，相处时间短暂，毕业后也渐渐没了联系；反倒是在北京因为本来就有几个好友，也因为工作项目与同事和一些工作伙伴结下了不错的友谊。</p>
<p>我一直比较宅，对城市气候或是风貌其实感知并不明显，对环境的适应力也还算不错，所以从来没有把城市作为自己考虑各种事情的重要因素，但这次回去后的很多想法也有所变化了。</p>
<p><img src="https://image.pseudoyu.com/images/xinfeng_food.jpg" alt="xinfeng_food"></p>
<p>只身一人在北京时虽然不至于会感觉有多苦，但总感觉一草一木都少了一些牵挂，似乎这些都与自己无关。而回到杭州哪怕只是河边走走，也能感觉到一些亲切；也会去自己常去的店看看，或是坐上 30 分钟的公交去吃心心念了很久的新丰小吃，抑或是在单向空间的书店里坐上几个小时重温以前在书店一坐一下午的惬意时光。</p>
<p>这可能就是一个城市所给人带来的温度与归属感吧，年纪越大对这些也更为在意。</p>
<h2 id="学习输入与输出">学习、输入与输出</h2>
<p>这个部分会记录一下自己觉得有意思东西以及工作学习的一些进展。</p>
<h3 id="技术学习">技术学习</h3>
<p>第一周主要是在进行项目的一些收尾工作以及新项目的筹备，没有太多需要开发的部分，不过买了一些技术的书，准备休假回来好好沉淀一下。</p>
<p>技术类的主要是《<strong>用 Go 语言自制编译器</strong>》、《<strong>用 Go 语言自制解释器</strong>》、《<strong>Go 语言精进之路</strong>》这几本新书和一个自己计划很久但一直没读的《<strong>重构：改善既有代码的设计</strong>》，有了一些项目经验之后再读这些书感觉会更加深刻。</p>
<p>非技术的则买了一套思维相关的《<strong>金字塔原理</strong>》，作为一些思维方式的培养，后续都会做一些笔记。</p>
<p>休假前两天参加了之前所说的技术分享，主要讲了自己区块链学习的一些经历和经验，整体感觉还可以，后续也会将讲稿重新编排成博文发布。本来讲完就想整理了，但是马上休假了，虽然带了电脑，但基本没有工作或是学习，纯粹的放松了。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<p>书籍方面，继续在看『房思琪的初恋乐园』，应该这周能看完。然后也同时打算看几本偏向于信息的书：</p>
<ul>
<li><strong>Working in Public</strong>，讲开源软件相关的</li>
<li><strong>蒂姆库克传</strong>，虽然听说大多是一些报道和信息汇总，不过对苹果这家公司很感兴趣但是却一直对 Tim 很陌生，大概乔布斯的光环太重，所以也想了解一下</li>
</ul>
<p>除了这些外，在单向空间看到一本自己好几年前看过的《斯通纳》，翻了一下，突然很想重温一下，感觉在自我寻找这一块会有新的感触。</p>
<h4 id="剧集">剧集</h4>
<ol>
<li><strong>Normal People</strong>，普通人，之前看了一半多，后来莫名搁置了，Normal People，讲述了来自同一个小镇男女主及他们周边的一些故事，不知道是不是因为男主是英语专业或者是有同样的脆弱敏感的特质，感觉看到了很多自己的影子</li>
<li><strong>非常律师禹英禑</strong>，一个律政题材的韩剧，主要是看了一点简介觉得女主人设比较可爱所以看了下</li>
<li><strong>The Bear</strong>，熊家餐厅，讲一个大厨回来经验家庭餐厅的故事，不长，节奏很不错，回程的高铁上看的</li>
</ol>
<h4 id="电影">电影</h4>
<ol>
<li><strong>新奇</strong>，对现在社会的感情、社交相关进行了一些思考，主要讲约炮文化的，但是感觉表达和转折都很奇怪，不推荐</li>
<li><strong>灰影人</strong>，动作片，最近挺火的，据说是奈飞投入最高的电影，看下来有点 john Wick 的感觉</li>
</ol>
<h4 id="动漫">动漫</h4>
<ol>
<li><strong>鬼灭之刃</strong>，第一季很喜欢，后来一直没追了，这次把无限列车篇和游郭篇都补了，很喜欢</li>
<li><strong>天气之子</strong>，之前一直想看，剪辑和翻拍都看了好多版本了，正片一直没看，补上了，很新海诚</li>
<li><strong>夏日重现</strong>，还在追，剧情越来越紧凑和想象不到后续发展，很惊喜了</li>
</ol>
<h2 id="其他">其他</h2>
<p>最后发色选择了灰绿色，漂了两次染了一次，自己感觉还挺不错的，虽然略有点点浮夸，但是很动漫，大概自己迟到的叛逆期终于来了，后面也可以多试试其他风格了。</p>
]]></content:encoded></item><item><title>周报 #03 - 健康、目标与生活的节奏感</title><link>https://www.pseudoyu.com/en/2022/07/11/weekly_review_20220711/</link><pubDate>Mon, 11 Jul 2022 08:30:20 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/11/weekly_review_20220711/</guid><description>《后来的我们 - 五月天》 前言 感觉每次从标题开始似乎就要给过去的这一周定一个主题，有时候也并不那么好概括，但还是坚持那么做了，似乎这样生活就会像</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>感觉每次从标题开始似乎就要给过去的这一周定一个主题，有时候也并不那么好概括，但还是坚持那么做了，似乎这样生活就会像是一个个篇章拼凑而成，在很久之后回顾也会像是构成一本书那样的充盈感。</p>
<p>本篇是对 <code>2022-07-04</code> 到 <code>2022-07-10</code> 这一周生活的记录与思考。</p>
<h2 id="健康">健康</h2>
<p>不知道是工作疲累还是精神上的一些残留的影响，最近其实感觉到自己的健康状况有下滑的征兆，也算不上很严重，但就是常常能感受到一些虚弱感，有时候甚至感觉身体不是自己的。</p>
<p>似乎这么多年以来一直没有怎么关注过自己的健康，体检虽算不上定期但有在做，都没什么大碍，因此也就没有过多关注，有时还有些小得意自己熬了那么多年的夜，视力和身体都没受到什么影响，但最近的征兆也让自己不得不开始警惕一些身体的变化了。</p>
<p>首先需要注意的就是饮食了，因为有坚持断食（16+8），也就是保持 16 小时不进食，然后将主要的两餐集中在剩下的 8 小时内，所以很久没吃早餐了。由于工作日需要规律地去公司，基本能保障午饭在 12 点左右准点吃，偶尔在下班后和同事一起吃个便餐或回家后随便吃点。然而到了周末就很难控制，有时一天仅仅一餐或是水果，这部分也是需要调整的，也要注意一下营养均衡。</p>
<p>睡眠则是一直以来知道却很难调整的问题，过去的两个月像是被剥夺了睡眠，每天大约都是 4、5 点才入睡，8 点多起来，紧接着通勤，然后进入一天的工作。其实精神状态神奇地没有太多影响，甚至连午睡都不需要，但也已经有了一些隐形的消耗。这周有刻意调整至从凌晨 2 点多至早上 8 点，感觉稍微缓过来一点。</p>
<p>7 月会去进行一次全身体检，说实话还是挺担心结果的，就像大学时创业熬得最狠的那两年也没敢去医院检查，似乎没有一个确定的指数就可以心安理得地继续透支，所幸当时一切都好，希望这次也一样。</p>
<h2 id="目标">目标</h2>
<p>两年多之前，在我重构自己博客的时候就在『<a href="https://www.pseudoyu.com/en/about/">关于</a>』页写过这样几段话：</p>
<blockquote>
<p><strong>生活方面</strong>，希望能够和现在的挚友一直相互支持走下去，和家人保持现在这样亦亲亦友的关系，和在意的人一起面对人生的挑战，同时也能认识更多有趣的人。
<strong>专业方面</strong>，希望一直有所进步，能够在开源世界留下一些痕迹。
<strong>经济方面</strong>，希望能自主无虞，足够支撑做自己想做的事，探索更多元的未来生活。
<strong>社会方面</strong>，希望有机会多参与一些公益活动或其他形式的善举，为世界带来一些微小的改变。</p>
</blockquote>
<p>很有趣的是，大概是当时自己定的也并不具体，或者是自己这方面一直也没有什么进展，在现在这个节点回顾，也没有什么可以补充的，只是会更加具象化地思考自己想成为一个怎么样的人。</p>
<p>总的来说，我想成为一个有趣的人，想过一些不一样的生活，而自己所追求的不一样也希望不仅仅是依赖于工作内容或是环境的改变，而是想或多或少找到或者在尝试和探索自己想做并且或许也恰巧擅长做的事，哪怕没有能力全职或是全身心投入做，也希望能够找到并且坚持下去吧。</p>
<p>当然，还是想更具体一点，这部分之后也会在周报中作记录了，作为一直探索的记录，至少要多看看一些自己向往的生活方式，并且拆解自己想要做到所需要改变和付出的。</p>
<h2 id="生活的节奏感">生活的节奏感</h2>
<p>本周分别和两个朋友出去吃饭了，这大概是自己这几个月以来除了同事以外在现实中面对面交流最多的时候了，也是我在北京极少的可以交谈的朋友了。</p>
<p>其中一位是我本科学校大我一届的学姐，一直以来都有保持比较亲近的联系，定期会聊聊近况，之前去广州旅游的时候也受了很多照顾，但见面或者聊天也远远算不上频繁。不知道是不是以前因为有大学时『会长-&gt;部长』或者是『学姐-&gt;学弟』这样的身份加持，似乎一直没有很深入内心的交流，反倒是都工作之后对各自的生活状态有了更深的了解，也能更感同身受一些，给予互相的关心和支持。</p>
<p>另一位也是本科学校的学姐，不过是毕业后我的导师亮亮介绍认识的。当时我正要前往香港，亮亮说她之前也在香港读研并且后续也在香港工作，可以交流一下，也互相有个照应。不过我刚到香港一个月，学姐就因为个人规划离开了，这是当时的一些心绪：</p>
<p><img src="https://image.pseudoyu.com/images/some_thoughts_about_boyi.png" alt="some_thoughts_about_boyi"></p>
<p>不知不觉也接近两年了，没想到后续自己来了北京工作，也是很巧合。一直以来她的生活状态和态度都是我向往的那种，不论是之前的香港还是现在在北京，即使工作环境和节奏截然不同，她依然能在周末或是平时闲暇的时候去学小提琴、画画，去冲浪、拳击、攀岩、跳舞等。</p>
<p>她有说希望之后的每个周末都能做一些至少自己觉得有意义的事，感觉她一直以来都比较能够践行自己的一些想法。我觉得也不仅仅是执行力的问题，这方面自己可能也算不上差，但能够很明显地感受到她会能够清晰地定义自己的工作、生活与个人想法之间的边界，我将之称为生活的节奏感，也希望自己之后能够做得更好。</p>
<p>很有趣的插曲是在日料店和老板及一众朋友聊了很多，可能有北京人口音的加持和离奇的经历，整个聊天像是脱口秀一样，也第一次觉得自己也挺能接梗的，也是近几个以来很难得的纯粹放松的一次体验了。</p>
<h2 id="学习输入与输出">学习、输入与输出</h2>
<p>这个部分会记录一下自己这边所看的各类影音书籍、折腾的好玩的东西以及工作学习的一些进展。</p>
<h3 id="技术学习">技术学习</h3>
<p>需要承认的是这周不管是工作产出还是闲暇之余自己的学习进度都有些落后。主要是因为项目已经到了尾声，工作任务大多是配合完成一些测试和文档更改，以及讨论一些技术方案，并没有什么实质开发工作；剩下的就是给公司新项目客户讲解我们的产品与实现方案。</p>
<p>即使如此，琐碎的事还是不少，回家常常也 9 点之后了，没有拿出很完整的时间来看课程或是看书，下一周需要有所调整，主要也还是侧重在合约开发和 CSAPP 这两个部分。</p>
<p>受邀作为嘉宾参加一个 7 月 14 日的技术分享，面向还挺有名的一个社区，半小时左右，主题是『web2 工程师如何进入 web3』，我也是第一次参加那么大型的技术分享，而且自己也就是刚入行不算很久，有些紧张，需要好好准备一下。</p>
<h3 id="输入">输入</h3>
<h4 id="书籍">书籍</h4>
<p>书籍方面，这周看完了之前通勤时候一直在看的『洛丽塔』，开始看『房思琪的初恋乐园』，慢慢习惯于在拥挤的地铁上看书了，这样慢慢积累也能看很多。</p>
<p>看了 <a href="https://twitter.com/yihong0618">@yihong0618</a> 的这个 <a href="https://twitter.com/yihong0618/status/1507000968478871559?s=21&amp;t=TfLr28X_8uLPyPPJCrzYeA">thread</a>，也想重温村上的很多书籍了，记得高中的时候和同学一起看『1Q84』，对其表现形式印象深刻；大学有段时间阅读像是『当我谈跑步时，我谈些什么』也给了我很多生活的思考，也许这个阶段重读一些也会有不一样的体验吧。</p>
<h4 id="剧集">剧集</h4>
<ol>
<li><strong>黑袍纠察队</strong>，很新颖的反超级英雄题材，三季的质量也一直很高，很值得推荐</li>
<li><strong>黑客军团</strong>，这个几年前看过前几季，不过就重温了以及追了最新的一季，很精彩，许多地方也发人深省</li>
<li><strong>High Score</strong>，在每天吃饭的空档看的一部讲电子游戏发展史的纪录片，算不上出彩但是是个还不错的科普</li>
</ol>
<h4 id="电影">电影</h4>
<ol>
<li><strong>银翼杀手 2049</strong>，有些末日题材的加上爱情的元素，可能在科技发展到了现在再看这类题材少了一些惊喜感却有了一些对于未来的担忧甚至是绝望</li>
<li><strong>她</strong>，同样是科技+爱情的元素，讲的是与人工智能恋爱的故事，说实话倒是有不少感同身受，大概自己也过于以来和沉迷科技，甚至忽略了很多人的情感生活的真实感</li>
<li><strong>无依之地</strong>，描述了美国一批无家可归的底层人民的生活状态，可以作为另一种视角，但刻意渲染的感觉太重以至于无法真正打动</li>
<li><strong>罗马假日</strong>，经典就是经典，奥黛丽赫本真的美</li>
<li><strong>土拨鼠之日</strong>，之前看过一个日本 up 主拍的一个土拨鼠之日风格的微电影，一直想看，补上了</li>
<li><strong>波斯语课</strong>，记得之前重映过错过了没去看，也是补一下，但没有很惊喜，同类型的战争题材里我可能还是更喜欢『美丽人生』</li>
<li><strong>起风了</strong>，也是一个战争题材，高中时就有被推荐发现自己一直没看，补上了，挺喜欢的</li>
</ol>
<h4 id="动漫">动漫</h4>
<ol>
<li><strong>辉夜大小姐想让我告白 第三季</strong>，恋爱喜剧，很喜欢，每一季都挺惊艳的，结局真的甜到了</li>
<li><strong>间谍过家家</strong>，也是偏喜剧，前几集比较惊喜，后面就有些过于夸张，有些人设也不太一致，不过总体来说很欢乐</li>
<li><strong>夏日重现</strong>，最惊喜的一部新番了，世界观和节奏感都很惊艳，还是个半年番，继续追</li>
<li><strong>继母的拖油瓶是我的前女友</strong>，感觉好像自己的二次元属性突然就觉醒了，开始继续追一些番，名字奇奇怪怪但是看了一集还不错的新番</li>
</ol>
<h3 id="输出">输出</h3>
<p>这周还是写了有两篇挺满意的文章：</p>
<ol>
<li><a href="https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/">基于 frp 内网穿透的瘦客户端开发工作流</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/">Warp，iTerm2 还是 Alacritty？我的终端折腾小记</a></li>
</ol>
<p>惊喜的是第一篇入选了少数派的会员精选，也是解锁了新成就；后一篇刚完成发给了编辑，等待反馈意见；倒是很早之前的那篇区块链相关的约稿自己还没开始动，可能也要提上日程了。</p>
<p>慢慢也有了自己写这类文章的风格、行文逻辑，也能有一些自己的写作节奏和固定频率了，之后继续积累一些想写的选题。</p>
<h2 id="习惯兴趣与改变">习惯、兴趣与改变</h2>
<p>这周在习惯和兴趣培养上也没什么进展。后面至少健身环大冒险要有一个固定频率开始了，以及想学的一些东西也要开始了，需要克服对于生活的倦怠感了。</p>
<p>然后有想染一下头发，目前有考虑奶奶灰或是亚麻绿，还没选好。</p>
<h2 id="其他">其他</h2>
<p>最值得一提的就是我现在 6 年级的妹妹开始写网络连载小说了，是仙侠相关题材的。每天晚睡一小时用 iPad 码字一个小时，大概坚持了一周日更了，发布在网络小说平台上，得到了挺多阅读和曝光的，还有很多人催更，我们现在还经常互相卷，经常问问对方是不是在写文章。</p>
<p>下周打算开始调休假，陪陪父母家人，上次回去也已经是去年国庆了，然后也想找机会出去旅游，但是疫情实在是带来了很多变数。</p>
]]></content:encoded></item><item><title>Warp，iTerm2 还是 Alacritty？我的终端折腾小记</title><link>https://www.pseudoyu.com/en/2022/07/10/my_config_and_beautify_solution_of_macos_terminal/</link><pubDate>Sun, 10 Jul 2022 11:18:29 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/10/my_config_and_beautify_solution_of_macos_terminal/</guid><description>《后来的我们 - 五月天》 前言 作为一个开发者，不论是本地代码运行调试还是在远程服务器上进行项目的部署运维，都离不开下图所示的终端，也就是科技电影</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>作为一个开发者，不论是本地代码运行调试还是在远程服务器上进行项目的部署运维，都离不开下图所示的终端，也就是科技电影中常出现的黑窗口。</p>
<p><img src="https://image.pseudoyu.com/images/my_terminal_tools.png" alt="my_terminal_tools"></p>
<p>各个操作系统一般都有自己默认的 Shell，如 Windows 操作系统下的“Powershell”、macOS 与 Linux 系统的 bash、zsh 等；带图形版界面的系统也都会预置终端仿真器（Terminal Emulator），如 macOS 平台下的“终端.app”以及 Linux 各发行版自带的终端程序等。</p>
<p>作为一个生产力工具爱好者与颜控，我对终端配置美化的折腾从未停止过，也几经迭代。可能与大多数开发者不同的是，我并不是某种特定方案的拥趸，而是会去尝试各种工具，依照自己的习惯进行配置降低各个方案之间的操作差异，在日常开发过程中根据用途无缝切换使用，有时甚至是随机选一个使用以切换心情。</p>
<p>本文主要讲述了我的终端方案选择及配置细节。</p>
<h2 id="终端配置方案需求">终端配置方案需求</h2>
<p>终端配置分为几个方面：</p>
<ol>
<li><strong>工具配置</strong>。在使用 macOS 或 Window 系统进行开发时，我们往往需要一个终端仿真器（Terminal Emulator）连接到本机开发环境或远程服务器。这通常是我们开发过程中的常驻应用，其颜值、响应速度与快捷键等也会很大程度影响我们的开发体验，因此是我们配置与美化的重点。</li>
<li><strong>功能配置</strong>。我们在使用命令行对系统服务/文件进行一些操作时，需要使用 Shell，如 bash、zsh 等，对其进行一些命令提示、自动补全等配置能有效提升我们的使用体验。</li>
<li><strong>集成配置</strong>。除了运行 git 等常用命令行工具外，终端往往还需要满足文本编辑、多任务管理等进阶需求。因此，通过终端配置实现 vim、tmux 等工具的深度集成也是我们开发体验优化的重要一环。</li>
</ol>
<p>我梳理了自己的终端使用需求，列出了以下几个核心要点：</p>
<ol>
<li><strong>风格简约</strong>。作为一个每天都需要长时间面对的软件，再 fancy 的主题也会看腻，甚至影响自己的注意力。因此，我对终端工具外观与操作逻辑配置的基本思路为 Minimal Distraction，简约而不单调。</li>
<li><strong>响应速度快</strong>。最开始我对终端的配置侧重在美观与功能，安装了很多插件配置，但也出现了每次软件开启会有几秒延迟的不良体验。因此，使用过程的响应速度也是我方案选择与优化的重点。</li>
<li><strong>可定制性</strong>。因为我的代码编辑器与窗口管理使用的都是 Vim 『HJKL』 特殊键位，因此我也希望能够进行比较灵活的快捷键配置，降低自己在各个软件直接切换的成本。</li>
<li><strong>可移植性</strong>。我时常需要在不同的设备上进行操作，偶尔也会有设备的迭代，会希望自己的配置能比较方便地移植到新设备/服务器等，最好是可以复用同一个配置文件。</li>
<li><strong>可拓展性</strong>。我希望能够根据自己的需求拓展一些功能与插件，如使用 fzf 对文件或命令历史记录进行检索，通过命令跳转至指定目录，使用 waka-time 记录自己的编程时间等。</li>
</ol>
<h2 id="我的终端配置说明">我的终端配置说明</h2>
<p>即使需求已经比较明确，找到合适的工具与配置方案依旧是一件困难但充满乐趣的事。接下来我将逐个对我仍在使用并且比较满意的方案进行描述，并提供我的配置文件供大家参考。</p>
<p>此外，因为我大多数时间都在 macOS 系统上进行开发，所以我的终端工具配置主要是基于 macOS 平台的，但有些工具或插件（如 Alacritty、ohmyzsh、Neovim 等）是跨平台的，配置方式大同小异，可以根据实际情况进行参照与配置。</p>
<h3 id="warp">Warp</h3>
<p><img src="https://image.pseudoyu.com/images/warp_interface.png" alt="warp_interface"></p>
<p>我本身是一个折腾流，会希望能自己能够对各类配置有足够的定制化空间。然而，如果要我只推荐一款工具给刚使用终端不久的新手，我会毫不犹豫地选择『<a href="https://www.warp.dev">Warp</a>』。</p>
<p>Warp 是一个基于 Rust 开发的速度极快、功能强大且开箱即用的现代化终端工具。不需要额外配置就支持智能提示、AI 命令智能搜索、命令历史查询、自定义 workflow 等功能。</p>
<p>我是很早参与 Warp 内测的那一批用户，即使是在功能还很不完善的早期，我也被它精致的外观和顺滑的使用体验所惊艳到了。因为基于 Rust 语言开发，Warp 的命令执行与响应速度很快，并且它还内置了很多常用功能，我们无需在 Shell 层配置使用历史记录搜索、命令提示等各类插件就能获得强大的功能支持。</p>
<p><img src="https://image.pseudoyu.com/images/warp_code_block.png" alt="warp_code_block"></p>
<p>它还有很多传统终端不具备的特色功能，如“block”的概念，每一条命令的执行都以一种“命令块”的形式呈现，可以通过上下左右键在各个 block 之间移动，避免了有些命令输出结果太长导致需要一直拉动滚动条阅览；并且我们可以通过右上角对特定 block 进行书签收藏、命令复制、内容检索甚至在线分享等。</p>
<p><img src="https://image.pseudoyu.com/images/edit_command_in_warp.png" alt="edit_command_in_warp"></p>
<p>与常规终端工具体验不同的是，Warp 的命令输入窗口长期固定在底部（更接近于 IDE），将我们命令输入与结果反馈进行了视觉上的分离；并且它的输入模式接近于文本编辑器，我们可以通过鼠标或是键盘任意移动光标编辑、修改命令或是输入多行命令依序执行，这也是我所认为的 Warp 的 killer feature。</p>
<p><img src="https://image.pseudoyu.com/images/warp_other_feature.png" alt="warp_other_feature"></p>
<p>我们仅需在输入框使用对应的快捷键即可唤出历史记录检索、自定义 workflow 等功能，并且可以使用鼠标滚轮或是方向键进行选择，十分灵活。更强大的是，当我们使用 Warp 通过 SSH 连接到远程终端时，这些快捷键依然有效，如历史记录搜索等，而无需在目标服务器进行配置。</p>
<p>另外值得一提的是我们可以通过内置快捷键 <code>Command+D</code> 与 <code>Command+Shift+D</code> 来水平或垂直拆分终端，无需集成其他工具或进行额外配置。</p>
<p>随着技术的发展，文本编辑器不断迭代更新，增加了丰富的功能并提供了更好的使用体验，然而与我们开发人员朝夕相处的终端却一直发展迟缓，Warp 正是在这个阶段应运而生，也正如它官网所描述的那样：</p>
<blockquote>
<p>The terminal for the 21st century.</p>
</blockquote>
<h3 id="iterm2">iTerm2</h3>
<p>在使用 Warp 之前，我的主力终端工具为 <a href="https://iterm2.com">iTerm2</a>，相信这也是很多开发者刚入手 Mac 时的必装软件（毕竟默认终端的颜值和可玩性都不太行）。iTerm2 是一个集美观与功能性为一体的老牌终端工具，即使是默认配置也已经很好的满足了我们的需求。</p>
<h4 id="外观与配色">外观与配色</h4>
<p><img src="https://image.pseudoyu.com/images/iterm2_interface.png" alt="iterm2_interface"></p>
<p>我对一位 YouTuber 『<a href="https://www.craftz.dog">Takuya Matsuyama</a>』的配置加以改造，定制了一个性冷淡风外观方案。</p>
<p>首先在 <strong>偏好设置</strong> - <strong>Appearance</strong> 部分对主题、Tab 栏与状态栏进行如下配置，保持较为简洁的布局。</p>
<p><img src="https://image.pseudoyu.com/images/iterm2_theme_config.png" alt="iterm2_theme_config"></p>
<p>完成主题配置后，右键底部状态栏可进行详细配置。我选取了部分状态栏组件实时显示设备状态，这部分可根据自己的偏好进行选择。</p>
<p><img src="https://image.pseudoyu.com/images/iterm2_status_components.png" alt="iterm2_status_components"></p>
<p>在 <strong>Profile</strong> - <strong>Colors</strong> 面板选取自己的主题配色或导入其他配色方案。可以点击<a href="https://github.com/pseudoyu/dotfiles/tree/master/iterm2">这里</a>下载我的配置文件，导入并根据自己的需求进行调整。</p>
<p><img src="https://image.pseudoyu.com/images/iterm2_window_blur_setting.png" alt="iterm2_window_blur_setting"></p>
<p>完成配色方案选择后，我通过调整 Transparency 和 Blur 来实现背景透明与毛玻璃效果（即窗口模糊），此处可以根据具体设备的视觉效果进行调整。</p>
<p>完成了终端工具的配置后，我们还需要对 Shell 进行配置，以集成一些定制主题、智能提示、搜索历史记录等拓展模块，我使用的是 zsh + ohmyzsh + starship 方案，因这些配置各个方案通用，详见下述 Alacritty 配置说明部分。</p>
<h4 id="多服务器管理">多服务器管理</h4>
<p><img src="https://image.pseudoyu.com/images/iterm2_profile_settings.png" alt="iterm2_profile_settings"></p>
<p>目前我主要使用 iTerm2 来连接我的各个远程主机/服务器，它提供了方便的多配置管理功能，可以通过设置不同的 Profiles 实现不同服务器或配置环境的快速切换，并且可以用醒目的 Badge 来作为标识。</p>
<p><img src="https://image.pseudoyu.com/images/iterm2_multiple_servers_management.png" alt="iterm2_multiple_servers_management"></p>
<p>当我们在工作或个人使用中需要连接到多台开发机时，可以通过 <code>Command+O</code> 或通过右键 Dock 栏 iTerm2 图标选择对应 Profile 打开服务器，同时也可以通过内置快捷键 <code>Command+D</code> 与 <code>Command+Shift+D</code> 来水平或垂直拆分终端，便于多服务器同时操作，无需不断切换窗口。</p>
<h3 id="alacritty">Alacritty</h3>
<p>iTerm2 已经是 macOS 平台上颜值与功能都非常平衡的终端工具了，但综合使用下来它的响应速度与配置的自由度还是不那么完美，因此我现在主要将其用于连接远程服务器，本地常用终端后续更换为了 <a href="https://alacritty.org">Alacritty</a>。</p>
<p>Alacritty 也是一款使用 Rust 编写的跨平台终端工具，提供了一些基础默认配置，并通过 <code>~/.config/alacritty/alacritty.yml</code> 文件进行各项自定义配置，可以点击<a href="https://github.com/pseudoyu/dotfiles/tree/master/alacritty">这里</a>访问我的完整配置。</p>
<h4 id="外观配置">外观配置</h4>
<p><img src="https://image.pseudoyu.com/images/alacritty_interface.png" alt="alacritty_interface"></p>
<p>外观部分我主要通过如下配置进行窗口与字体配置，实现了一种半透明的极简配置，甚至都没有任何边框与按钮，其他配置可自行查看，如选中即复制等在 iTerm2 上惯用的功能均可通过几个简单的配置项实现。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">window</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">opacity</span><span class="p">:</span><span class="w"> </span><span class="m">0.85</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">padding</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">x</span><span class="p">:</span><span class="w"> </span><span class="m">18</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">y</span><span class="p">:</span><span class="w"> </span><span class="m">16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">dynamic_padding</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">decorations</span><span class="p">:</span><span class="w"> </span><span class="l">buttonless</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">font</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">normal</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">family</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;MesloLGSDZ Nerd Font Mono&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">style</span><span class="p">:</span><span class="w"> </span><span class="l">Regular</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">size</span><span class="p">:</span><span class="w"> </span><span class="m">13.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">use_thin_strokes</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span></code></pre></div><h4 id="ohmyzsh--starship">ohmyzsh + starship</h4>
<p><img src="https://image.pseudoyu.com/images/alacritty_starship_config.png" alt="alacritty_starship_config"></p>
<p>我使用 zsh 作为默认终端，通过 ohmyzsh 来拓展插件功能。zsh + ohmyzsh 是目前非常流行的 Shell 配置方案，其具备了丰富的插件系统，可以通过几行配置轻松实现各项拓展功能。首先，我们按照其<a href="https://ohmyz.sh/#install">官方说明</a>进行安装。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sh -c <span class="s2">&#34;</span><span class="k">$(</span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></div><p>安装完成后，通过在 <code>~/.zshrc</code> 中添加如下配置来启用 ohmyzsh：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">export ZSH=&#34;$HOME/.oh-my-zsh&#34;
</span></span><span class="line"><span class="cl">source $ZSH/oh-my-zsh.sh
</span></span></code></pre></div><p>我配置了 starship 来美化 Shell 提示。同样，我们根据<a href="https://starship.rs/guide/#%F0%9F%9A%80-installation">官方说明</a>进行安装配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -sS https://starship.rs/install.sh <span class="p">|</span> sh
</span></span></code></pre></div><p>完成后在 <code>~/.zshrc</code> 中添加如下配置即可：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">eval &#34;$(starship init zsh)&#34;
</span></span></code></pre></div><p>此外，我们还可以通过在 <code>~/.zshrc</code> 的 plugin 部分添加插件配置，例如我配置了如下插件支持，实现了智能提示、语法高亮、<code>Ctrl + R</code> 搜索命令历史记录以及 <code>j + &lt;path&gt;</code> 实现快捷跳转等。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">plugins=(
</span></span><span class="line"><span class="cl">  git
</span></span><span class="line"><span class="cl">  zsh-autosuggestions
</span></span><span class="line"><span class="cl">  zsh-syntax-highlighting
</span></span><span class="line"><span class="cl">  zsh-history-substring-search
</span></span><span class="line"><span class="cl">  autojump
</span></span><span class="line"><span class="cl">  zsh-wakatime
</span></span><span class="line"><span class="cl">  fzf-zsh-plugin
</span></span><span class="line"><span class="cl">)
</span></span></code></pre></div><p>我的完整配置可点击<a href="https://github.com/pseudoyu/dotfiles/tree/master/zsh">这里</a>进行查看，各插件安装说明详见官方文档。</p>
<h4 id="tmux">tmux</h4>
<p><img src="https://image.pseudoyu.com/images/acacritty_tmux_demo.png" alt="acacritty_tmux_demo"></p>
<p>因为 Alacritty 本身不提供窗口拆分、Session 管理等功能，所以我们需要集成 <a href="https://github.com/tmux/tmux/wiki">tmux</a> 这一强大的跨平台窗口管理工具。</p>
<p>macOS 平台用户用过 <code>brew install tmux</code> 安装即可，其他平台可根据<a href="https://github.com/tmux/tmux/wiki/Installing">官方说明</a>进行安装。</p>
<p>其通过 <code>~/.tmux.conf</code> 进行配置，点击<a href="https://github.com/pseudoyu/dotfiles/tree/master/tmux">这里</a>查看我的配置，因其配置使用需要一定学习与记忆成本，本文不做详述，建议通过官方文档或其他完整教程进行学习。</p>
<h4 id="neovim">Neovim</h4>
<p>我们的日常开发的代码编写一般在 VS Code 或 Jetbrains 家的 IDE 中进行，而调试则需要使用终端，如果不想频繁切换于各个软件之间，我们可以选择 vim 这一可用于命令行的编辑工具。</p>
<p>然而，原生 vim 就是一个简单的窗口，与我们的配置好的终端显得格格不入，因此，我们也将对 vim 进行美化配置。限于篇幅，本文不会涵盖 vim 的具体配置使用相关内容，仅对我的配置方案进行描述。</p>
<p><img src="https://image.pseudoyu.com/images/vi_homepage.png" alt="vi_homepage"></p>
<p>我使用的是 neovim 这一 vim 的衍生版本，其高版本采用 lua 进行配置与插件管理。我使用的我的一个朋友 <a href="https://github.com/Cluas">Cluas</a> 定制的方案，并在其基础上进行了一些修改调整，可点击<a href="https://github.com/pseudoyu/nvim/tree/pseudoyu">这里</a>查看，仅需将 <code>nvim/</code> 目录 clone 或下载后复制到 <code>~/.config</code> 即可。</p>
<p>其显示效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/neovim_file_preview.png" alt="neovim_file_preview"></p>
<p><img src="https://image.pseudoyu.com/images/neovim_edit_file.png" alt="neovim_edit_file"></p>
<h4 id="快捷键配置">快捷键配置</h4>
<p>tmux 是一个强大的窗口管理工具，然而每次都需要使用 <code>&lt;Ctrl+b&gt; + %</code> 或 <code>&lt;Ctrl+b&gt; + :</code> 来进行水平或垂直分屏，或是使用 <code>&lt;Ctrl+b&gt; + c</code> 来新建窗口等操作十分繁琐。</p>
<p>那么，有没有能够通过 macOS 自带的例如其他终端编辑器使用的 <code>Command+D</code>、<code>Command+Shift+D</code> 或 <code>Command+T</code> 来实现分屏或新建窗口等配置呢？</p>
<p>经过了一番调研与折腾，我参照着 <a href="https://www.joshmedeski.com">Josh Medeski</a> 的这篇『<a href="https://www.joshmedeski.com/posts/macos-keyboard-shortcuts-for-tmux">macOS Keyboard Shortcuts for tmux</a>』完美实现了这一需求。</p>
<p>其基本实现方式为，在终端输入 <code>xxd -psd</code> 命令后，键入所需要映射的 tmux 快捷键，如 <code>&lt;Ctrl+b&gt; + c</code>，其会显示该输入的 hex codes 为：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">^Bc
</span></span><span class="line"><span class="cl">02630a
</span></span></code></pre></div><p>其中，<code>02</code> 代表 <code>&lt;Ctrl+b&gt;</code>，<code>63</code> 代表 <code>c</code>，而 <code>0a</code> 代表回车键，因此，在 tmux 中新建窗口的快捷键对应 hex code 为 <code>\x02\x63</code>。我们在 <code>~/.config/alacritty/alacritty.yml</code> 中的 key_bindings 部分配置如下选项即可：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">key_bindings</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- {<span class="w"> </span><span class="nt">key: T, mods: Command, chars</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;\x02\x63&#34;</span><span class="w"> </span>}<span class="w">
</span></span></span></code></pre></div><p>其他快捷键配置实现原理一致，可点击<a href="https://github.com/pseudoyu/dotfiles/tree/master/alacritty">这里</a>查看我的所有快捷键配置并自行修改调整。</p>
<h2 id="总结">总结</h2>
<p>至此，我对我目前所使用的三种终端工具进行了介绍与配置说明，开箱即用的 Warp 有其强大之处，iTerm2 在易用性与定制化上实现了不错的平衡，而 Alacritty 也自有折腾的乐趣。</p>
<p>如我前文所述，有时候换一个终端就是一种全新的心情，闲暇时不断优化折腾也不失为一种放松。当然，每个人的终端配置都各有自己的偏好与特点，本文只是对我的方案进行了介绍，更多满足了自己的审美追求与功能需求，希望能够为你的终端配置提供一个参考，如你在配置中遇到问题或有了更好的优化建议，也欢迎交流。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://github.com/pseudoyu/dotfiles">GitHub - pseudoyu/dotfiles</a></li>
<li><a href="https://github.com/Cluas/nvim">GitHub - Cluas/nvim</a></li>
<li><a href="https://www.warp.dev">Warp 官网</a></li>
<li><a href="https://www.iterm2.com">iTerm2 官网</a></li>
<li><a href="https://alacritty.org">Alacritty 官网</a></li>
<li><a href="https://ohmyz.sh">ohmyzsh 官网</a></li>
<li><a href="https://starship.rs">starship 官网</a></li>
<li><a href="https://neovim.io">Neovim 官网</a></li>
<li><a href="https://github.com/tmux/tmux">GitHub - tmux/tmux</a></li>
<li><a href="https://www.joshmedeski.com/posts/macos-keyboard-shortcuts-for-tmux">macOS Keyboard Shortcuts for tmux</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>基于 frp 内网穿透的瘦客户端开发工作流</title><link>https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/</link><pubDate>Tue, 05 Jul 2022 10:00:16 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/05/access_your_local_devices_using_reverse_proxy_tool_frp/</guid><description>《后来的我们 - 五月天》 前言 在之前的『GitHub - 个人工具箱』项目中，我提到家里放置了一台长期开机的 Mac Studio 和一个装了 Ubuntu 系统的 Raspberry Pi 3b+ 微型树莓派设</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/leopold_fc660c.jpg" alt="leopold_fc660c"></p>
<p>在之前的『<a href="https://github.com/pseudoyu/yu-tools">GitHub - 个人工具箱</a>』项目中，我提到家里放置了一台长期开机的 Mac Studio 和一个装了 Ubuntu 系统的 Raspberry Pi 3b+ 微型树莓派设备，在家时我通常是将 Mac Studio 连接显示器进行操作或通过 Chromebook 终端 SSH 连接访问。</p>
<p>结束居家办公后，需要每天往返于公司与家里。因为不想每天背着电脑通勤，我将之前的 16 寸 MacBook Pro 主力开发机（真的很重）留在了公司用于工作项目开发使用。虽然可以通过 GitHub 与 GitLab 同步代码，以及通过 OneDrive 与 iCloud 同步文件，每天总还是觉得是在维护两套桌面开发环境，有些配置环境的变更需要双倍的工作量，带来了很大的心智负担。</p>
<p>此外，家里的 M1 Max 芯片机器性能远好于老 Intel MacBook Pro 笔记本，于是，我开始琢磨公网远程访问家庭设备的方案，并实践一种瘦客户端工作流，本文是对这套工作流的一个记录与总结。</p>
<h2 id="瘦客户端thin-client工作流">瘦客户端（thin client）工作流</h2>
<p>被『<a href="https://teahour.fm">Teahour</a>』Podcast 的这期『<a href="https://teahour.fm/95">#95 - 用 Chromebook 做开发是什么样的体验？</a>』种草，第一次了解到了瘦客户端（thin client）开发这种模式。</p>
<h3 id="基本概念">基本概念</h3>
<p>瘦客户端开发是一种日渐流行的开发模式，它的主要理念是自己所使用的开发输入设备（如笔记本、平板电脑等）上并不安装各种开发环境，而是通过终端、VS Code Remote 或 Jetbrains Client 等客户端程序作为入口来连接自己的远程主机或服务器。这种方式有如下好处：</p>
<ol>
<li>可以最大程度简化自己的开发环境，只需要一个终端和一个浏览器即可完成大部分开发工作，可以降低设备成本，甚至使用 Chromebook 或 iPad 即可完成日常开发工作</li>
<li>减少办公场所的限制，可以携带便携设备在咖啡厅或其他场合自由使用，比起本机运行各种开发环境，这种方式也拥有更久的续航</li>
<li>不论从哪个设备上进行开发访问，都能确保自己的开发环境与进度保持一致，降低环境同步与维护成本</li>
<li>往往我们的开发环境为 macOS 或 Window 操作系统，有时本地开发环境会与实际项目运行环境存在一定差异，而在 Linux 系统进行远程开发可以有效降低这种差异，提高开发效率</li>
<li>我们可以将大多数的成本集中在一台性能较为强劲的设备，满足长期开发需求</li>
<li>在有临时的开发需求时，我们可以随开随停一些云服务器，节约成本并提升开发效率</li>
<li>像 Deep Learning 等领域需要使用 GPU 等特定设备进行运算，无法在本地机器进行开发</li>
</ol>
<h3 id="我的瘦客户端工作流">我的瘦客户端工作流</h3>
<p><img src="https://image.pseudoyu.com/images/thin_client_structure.png" alt="thin_client_structure"></p>
<p>为了降低成本，我的瘦客户端工作流主要基于我自己所搭建的一套内网穿透方案（下文会详细讲述方案原理及搭建方法），在公网中从各个 Client 访问家里性能较强的主机与 Server，完成主要开发工作。</p>
<p>我目前 Client 端的主要设备为：</p>
<ol>
<li>16 寸 MacBook Pro，长期放在公司，作为工作机使用，主要用于浏览网页、文档以及通过 iTerm2 终端工具连接到各个远程主机或 Server 进行开发工作，并通过 Git 管理代码与项目</li>
<li>Google Pixelbook Go，主要是在咖啡店、家中沙发或其他地方进行一些技术学习、博客撰写或个人项目开发</li>
</ol>
<p>而我的 Server 端分以下几类：</p>
<ol>
<li>Mac Studio 主机，连接电源长期开机，是我的主力 Server，通过内网穿透供客户端从公网连接访问，在家办公或学习时连接显示器与键鼠也可以作为客户端连接其他服务器主机</li>
<li>Raspberry Pi，装了 Ubuntu 系统作为主要服务运行与调试环境，主要运行一些服务，通过内网穿透供客户端从公网连接访问</li>
<li>个人阿里云 ECS、腾讯云轻量级服务器或其他公司提供的项目开发环境，主要用于一些项目服务的运行与调试，如链环境等</li>
<li>GitHub Codespaces，参加了内测，GitHub 为个人项目提供多达 10 个项目的运行环境，我主要用于 Solidity、Rust 或前端学习项目的开发，这样可以保障在不同机器甚至浏览器连接时保持一致的环境，不需要自己重新配置搭建，不过出于安全性考虑我不会运行工作项目或一些涉及个人敏感信息的项目</li>
</ol>
<h3 id="我的瘦客户端开发工作体验">我的瘦客户端开发工作体验</h3>
<p>瘦客户端并不仅仅是一种工具技巧上的优化，其初衷本就是一种工作模式的“极简主义”。践行了几个月这样的开发模式，能明显感觉到自己用于开发环境调试与维护的时间减少了，而将更多的注意力放在代码与服务本身，“即开即用”与“随开随停”两种模式的无缝切换也让自己可以时刻切换工作状态与项目，极大减少了环境冷启动、配置等时间成本。</p>
<p>虽然我对软硬件有着自己的使用体验追求，但并不是一个方方面面都追求极致的人，而是遵循着一种“Just Enough”的理念，满足我的当下使用需求即可。例如网络环境方面，我家中就是普通的 100M 宽带网络环境，也并未在带宽与路由器上有刻意折腾。整体体验下来，不管是打字输入还是获取实时显示，操作过程中的网络延迟几乎可以忽略不计（我的主要使用场景为使用 macOS 系统下的 VS Code Remote 或 iTerm2 终端工具，通过 SSH 连接至远程主机或服务器进行开发，以及偶尔使用 Termius 的 SFTP 功能进行文件传输，可供参考），也几乎没有因网络环境而断连的情况。</p>
<p>我仅在配置树莓派时使用过 VNC 进行远程桌面控制，并未进行其他高度依赖于图形界面的操作，网络延迟尚可接受但并不是很建议。</p>
<h2 id="网络远程访问需求分析">网络远程访问需求分析</h2>
<p><img src="https://image.pseudoyu.com/images/raspberry_pi.jpg" alt="raspberry_pi"></p>
<p>关于异地网络访问的方案与原理，少数派的这篇『<a href="https://sspai.com/prime/story/remote-lan-access-guide-01">异地网络远程访问指北</a>』中已经对各个方案进行了详细的叙述与评估，我仅仅按照个人需求从方案易用性、费用等维度进行考虑，大家可自行阅读选取适合的方案。</p>
<p>首先，我整理了一下网络条件与需求。</p>
<p>网络条件：</p>
<ol>
<li>租房随便办的短期宽带，没有提供公网 ip，申请估计也很麻烦</li>
<li>家庭无线路由器好像也是小米一个普通的，没有怎么折腾</li>
<li>因为工作和个人开发需要，在阿里云和腾讯云都有服务器长期续费，有公网 ip</li>
</ol>
<p>远程连接需求：</p>
<ol>
<li>通过公网 SSH 访问 Mac Studio 主机，并能够在有需求的时候开放特定端口</li>
<li>通过公网 SSH 访问树莓派，并能够在有需求的时候开放特定端口</li>
<li>要求连接稳定快速，且尽量复用已有软件与服务，避免额外开支</li>
<li>易于拓展新设备（如购入新的树莓派）与配置新端口映射（开放新的服务）</li>
<li>因为家里的网络完全由 Surge 作为软路由托管，已经进行了关闭 DHCP 等配置，因此尽量不要在光猫与路由器层作配置</li>
<li>能够对家庭网络环境连接情况与树莓派 Server 资源情况进行实时监控</li>
</ol>
<h2 id="frp-内网穿透方案">frp 内网穿透方案</h2>
<p>经过一番调研，我选择了开源项目『<a href="https://github.com/fatedier/frp">GitHub - fatedier/frp</a>』，根据其官方文档描述：</p>
<blockquote>
<p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网，同时提供诸多专业的功能特性。</p>
</blockquote>
<p>这完美满足了我的需求，我仅仅需要复用自己购置的具有公网 ip 的阿里云服务器作为中转服务器，部署 frp 服务端，暴露对应端口，在需要从公网访问的家庭设备中部署 frp 客户端并进行端口映射，即可实现内网穿透。</p>
<h3 id="方案架构">方案架构</h3>
<p><img src="https://image.pseudoyu.com/images/frp_structure.png" alt="frp_structure"></p>
<p>首先，我在自己有公网 ip 的服务器上部署了 frp 服务端并暴露了对应的端口。</p>
<p>我家中的内网环境下主要有两台长期连接电源开机的设备，一台 Mac Studio 主机，一台装了 Ubuntu 操作系统的树莓派 Server，主要通过网线/Wifi 连接至无线路由器。我在两台机器分别按照官方说明安装了运行了 frp 客户端，通过配置连接至 frp 服务端，并对 SSH 等需要开启的服务端口映射（如将树莓派的 SSH 服务端口 22 映射到阿里云服务器的 6002）。值得一提的是，因为 frp 客户端会主动发送请求服务端，因此即使更换了网络环境也无需重新配置，仅需要保证其网络环境能访问到安装了 frp 服务端的中转服务器即可。</p>
<p>此时，我的阿里云中转服务器已经可以将我们的内网环境与服务暴露在公网环境中了。当我在公司时，就可以使用笔记本、平板或手机通过阿里云服务器的公网+对应服务的端口进行访问了，如通过终端远程 SSH 连接至 Mac Studio 进行开发工作。</p>
<p>同时，我们会想对家里的网络环境以及两台主机的状态进行实时监控，以便于维护。我使用了 Surge macOS 端作为软路由托管了家中所有设备的网络，并使用了 Surge iOS 端的云通知功能，对家庭的网络状态进行实时监控。此外，我使用了 ServerCat 软件对家中的树莓派 Server 进行资源监控，甚至可以精确到温度等，与云服务器体验无异。</p>
<p><img src="https://image.pseudoyu.com/images/servercat_monitor_raspberry_pi.png" alt="servercat_monitor_raspberry_pi"></p>
<p>frp 的配置比较简单，按照官方文档进行配置即可，我的配置流程如下。</p>
<h3 id="frp-服务端配置">frp 服务端配置</h3>
<p>我的阿里云装了 CentOS 操作系统，其他 Linux 发行版也大同小异。</p>
<h4 id="服务安装与配置">服务安装与配置</h4>
<p>首先登录阿里云服务器的终端，通过以下命令安装下载 frp 程序（注意，需要根据自己的操作系统从『<a href="https://github.com/fatedier/frp">GitHub - fatedier/frp</a>』项目的 <a href="https://github.com/fatedier/frp/releases">releases</a> 页面下载自己操作系统对应的版本、解压并进入目录。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl">tar -zxvf frp_0.43.0_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> frp_0.43.0_linux_amd64/
</span></span></code></pre></div><p>其中的 <code>frps</code> 与 <code>frps.ini</code> 是我们需要关注的文件。<code>frps</code> 即服务端程序，而 <code>frps.ini</code> 则为对应的配置文件。我们使用 <code>vi frps.ini</code> 编辑配置文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[common]
</span></span><span class="line"><span class="cl">bind_port = 7000
</span></span><span class="line"><span class="cl">dashboard_port = 7002
</span></span><span class="line"><span class="cl">token = password
</span></span><span class="line"><span class="cl">dashboard_user = admin
</span></span><span class="line"><span class="cl">dashboard_pwd = 123456
</span></span><span class="line"><span class="cl">vhost_http_port = 8080
</span></span></code></pre></div><p>因为我想通过控制台可视化我们的 frp 服务的运行状况，因此同时还配置了 dashboard 相关参数，可以根据自己的需要进行选择，保存或记住本配置，后续使用 frp 客户端连接服务端时需要与之对应。保存配置后即可通过 <code>./frps -c frps.ini</code> 启动服务端。</p>
<p>当然，我们需要配置其开启自启与后台运行，以免每次重启服务器都需要重新配置。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vi /lib/systemd/system/frps.service
</span></span></code></pre></div><p>添加如下内容并保存，注意需要将 <code>frps</code> 与 <code>frps.ini</code> 的路径改为自己的实际路径。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[Unit]
</span></span><span class="line"><span class="cl">Description=frps service
</span></span><span class="line"><span class="cl">After=network.target syslog.target
</span></span><span class="line"><span class="cl">Wants=network.target
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Service]
</span></span><span class="line"><span class="cl">Type=simple
</span></span><span class="line"><span class="cl">ExecStart=/path/to/frps -c /path/to/frps.ini
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Install]
</span></span><span class="line"><span class="cl">WantedBy=multi-user.target
</span></span></code></pre></div><h4 id="服务启动与开机自启配置">服务启动与开机自启配置</h4>
<p>完成配置后，即可通过 <code>systemctl start frps</code> 启动服务端。</p>
<p>我们在命令行键入以下命令配置服务开机自启：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl <span class="nb">enable</span> frps
</span></span></code></pre></div><p>至此，我们的服务端配置完毕。</p>
<h3 id="frp-客户端配置">frp 客户端配置</h3>
<h4 id="服务安装与配置-1">服务安装与配置</h4>
<p>frp 客户端配置和服务端配置类似，通过 <code>wget</code> 命令下载对应版本的 frp 程序，解压并进入目录。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl">tar -zxvf frp_0.43.0_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> frp_0.43.0_linux_amd64/
</span></span></code></pre></div><p>其中的 <code>frpc</code> 与 <code>frpc.ini</code> 是我们需要关注的文件。<code>frpc</code> 即客户端程序，而 <code>frpc.ini</code> 则为对应的配置文件。我们使用 <code>vi frpc.ini</code> 编辑配置文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[common]
</span></span><span class="line"><span class="cl">server_addr = 114.114.114.114
</span></span><span class="line"><span class="cl">server_port = 7000
</span></span><span class="line"><span class="cl">token = password
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[pi]
</span></span><span class="line"><span class="cl">type = tcp
</span></span><span class="line"><span class="cl">local_ip = 127.0.0.1
</span></span><span class="line"><span class="cl">local_port = 22
</span></span><span class="line"><span class="cl">remote_port = 6001
</span></span></code></pre></div><p>此处的 <code>server_addr</code> 和 <code>server_port</code> 需填写实际的中转服务器的公网 ip 与端口，<code>token</code> 需填写之前配置的 token；下面为自己的需要连接的服务配置端口映射，<code>local_ip</code> 与 <code>local_port</code> 需填写客户端的本地 ip 与端口，如需要开启 SSH 服务则为 <code>127.0.0.1</code> 与 <code>22</code>，而最后的 <code>remote_port</code> 则为该端口在中转服务器中的端口映射。</p>
<h4 id="服务启动与开机自启配置-1">服务启动与开机自启配置</h4>
<h5 id="ubuntu">Ubuntu</h5>
<p>在树莓派的 Ubuntu 系统中，我们通过 <code>vi /etc/systemd/system/frpc.service</code> 新建或编辑 fprc 服务配置文件，添加如下内容并保存，同样，需要将 <code>fprc</code> 与 <code>fprc.ini</code> 修改为自己的实际路径。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">[Unit]
</span></span><span class="line"><span class="cl">Description=frpc daemon
</span></span><span class="line"><span class="cl">After=syslog.target  network.target
</span></span><span class="line"><span class="cl">Wants=network.target
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Service]
</span></span><span class="line"><span class="cl">Type=simple
</span></span><span class="line"><span class="cl">ExecStart=/path/to/frpc -c /path/to/frpc.ini
</span></span><span class="line"><span class="cl">Restart= always
</span></span><span class="line"><span class="cl">RestartSec=1min
</span></span><span class="line"><span class="cl">ExecStop=/usr/bin/killall frpc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Install]
</span></span><span class="line"><span class="cl">WantedBy=multi-user.target
</span></span></code></pre></div><p>完成配置后，通过 <code>sudo systemctl enable frpc.service</code> 开启服务自启，通过 <code>sudo systemctl start frpc.service</code> 启动客户端服务。</p>
<h5 id="macos">macOS</h5>
<p>而在 macOS 系统中，我们则通过 <code>vi ~/Library/LaunchAgents/frpc.plist</code> 编辑 plist 来添加服务自启，同样需要将 <code>fprc</code> 与 <code>fprc.ini</code> 修改为自己的实际路径。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
</span></span><span class="line"><span class="cl">&lt;!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN
</span></span><span class="line"><span class="cl">http://www.apple.com/DTDs/PropertyList-1.0.dtd &gt;
</span></span><span class="line"><span class="cl">&lt;plist version=&#34;1.0&#34;&gt;
</span></span><span class="line"><span class="cl">&lt;dict&gt;
</span></span><span class="line"><span class="cl">&lt;key&gt;Label&lt;/key&gt;
</span></span><span class="line"><span class="cl">&lt;string&gt;frpc&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;key&gt;ProgramArguments&lt;/key&gt;
</span></span><span class="line"><span class="cl">&lt;array&gt;
</span></span><span class="line"><span class="cl">&lt;string&gt;/path/to/frpc&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string&gt;-c&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;string&gt;/path/to/frpc.ini&lt;/string&gt;
</span></span><span class="line"><span class="cl">&lt;/array&gt;
</span></span><span class="line"><span class="cl">&lt;key&gt;KeepAlive&lt;/key&gt;
</span></span><span class="line"><span class="cl">&lt;true/&gt;
</span></span><span class="line"><span class="cl">&lt;key&gt;RunAtLoad&lt;/key&gt;
</span></span><span class="line"><span class="cl">&lt;true/&gt;
</span></span><span class="line"><span class="cl">&lt;/dict&gt;
</span></span><span class="line"><span class="cl">&lt;/plist&gt;
</span></span></code></pre></div><p>至此，我们就可以在公网环境下通过中转服务器的对应端口了解到我们的内网服务了，且不论是服务端还是客户端，服务都会开机自启。我们可以通过 <code>&lt;公网 ip&gt;</code> + 刚在服务端配置的 <code>dashboard_port</code> 端口访问 frp 控制台，查看各服务流量情况。</p>
<p><img src="https://image.pseudoyu.com/images/frp_dashboard.png" alt="frp_dashboard"></p>
<h2 id="总结">总结</h2>
<p>以上就是我对公网远程访问家庭设备与瘦客户端工作流的实践与总结，这带来了一种很有趣的、有别于传统模式的开发体验，有兴趣的同学可以自行尝试。希望本文对你有所帮助。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://github.com/fatedier/frp">GitHub - fatedier/frp</a></li>
<li><a href="https://teahour.fm/95">Teahour #95 - 用 Chromebook 做开发是什么样的体验？</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>周报 #02 - 工作、焦虑与成长</title><link>https://www.pseudoyu.com/en/2022/07/03/weekly_review_20220703/</link><pubDate>Sun, 03 Jul 2022 12:54:39 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/03/weekly_review_20220703/</guid><description>《后来的我们 - 五月天》 前言 从实习开始，来到北京开始工作已经满一周年了。 自己一直是一个有着莫名仪式感的人，在这个节点也会频繁回顾这一年的所思所</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/raspberry_pi.jpg" alt="raspberry_pi"></p>
<p>从实习开始，来到北京开始工作已经满一周年了。</p>
<p>自己一直是一个有着莫名仪式感的人，在这个节点也会频繁回顾这一年的所思所想与所得，当然，也包括那些焦虑与遗憾。我常常想，一年前的今天，那个带着紧张与期待的自己，会想从未来这一年得到些什么？</p>
<p>于是，本篇就来聊聊工作、焦虑与成长。</p>
<h2 id="关于工作">关于工作</h2>
<h3 id="入职">入职</h3>
<p>自己其实并不是一个很认真对待求职这件事的人，大概也因为即使是北京，可选的区块链公司也并不多，从香港回深圳隔离的酒店里一共也只参加了大概五六场面试，不过有些印象还比较深。</p>
<p>其中一家没有什么常规流程，第一轮就与一位美国的面试官共享屏幕，两个小时完成一个 ERC20 Token 智能合约的编写、测试与发布，而第二轮则也是通过 Shell 脚本完成一个系统级定时任务的编写；另一家则是问了许多关于 EVM 底层优化及如何避免合约中的无限循环相关的问题。</p>
<p>而最终选择的这家则是由两个技术 leader 共同参与的，一位问了一些 Go 语言相关问题，而另一位则问了许多 Hyperledger Fabric 与 Ethereum 相关的问题（后来知道他是之前 IBM Fabric 团队的开发者），后来还聊了许多和之后发展方向有关的事，一共大概持续了近一个半小时外加一场半小时的算法笔试。</p>
<p>我其实挺享受并珍惜这种能够从面试中获得一些从未接触过的工程相关知识，或是能与面试官相对平等沟通的机会的，也会让自己在其中快速学习，或至少能稍明确一些方向。</p>
<p>到了北京后又参加了一场 HR 面后就正式作为实习生入职了，就这样开始了自己的第一份正式技术实习。</p>
<h3 id="实习">实习</h3>
<p>初接触技术岗，前期的忐忑多于新奇，对于从学校的理论走向企业工程实践这一部分自己并没有太多信心，Go 语言也只是应对面试学了几个月的大概，甚至也没有参与编写过一个用于生产的应用。</p>
<p>作为一个刚入行的 CRUD Boy，最开始也是 leader 成哥带着我从写业务接口开始熟悉的。主要是一个 BaaS 平台的研发，七个接口写了两周，有的复杂 sql 反复测试优化；也完整体验了 git 提交规范、Code Review 和代码合并流程。其实还是一个挺有乐趣的过程，自己写的代码运行在生产项目中，自己所学的各种知识能够很快应用在工作中获取一些实时的反馈，以及一个团队共同为了一个目标和节点向前推进。</p>
<p>这个项目的主要开发工作完成后，我想去做一些链相关的开发，于是申请了参与另一个组的自研链智能合约执行引擎性能优化项目，不过因为并不熟悉 java，只能边对理论做一些学习研究边尝试写一些测试，这是当时做的博文记录，『<a href="https://www.pseudoyu.com/en/2021/08/16/blockchain_ethereum_mpt/">Ethereum MPT（Merkle Patricia Tries）详解</a>』，也是这段时间经历才意识到原来刷 LeetCode 时那些枯燥的算法原理真的会那么快用上。</p>
<p>可能因为是实习，工作节奏并不是很快，还有很多时间可以自己对感兴趣的领域或技术进行了解，写了如下博文进行记录：</p>
<ol>
<li><a href="https://www.pseudoyu.com/en/2021/09/07/blockchain_baas_platform/">区块链服务平台（BaaS）简介及架构</a></li>
<li><a href="https://www.pseudoyu.com/en/2021/09/08/blockchain_consensus/">分布式系统与区块链共识机制</a></li>
<li><a href="https://www.pseudoyu.com/en/2021/09/06/blockchain_crosschain/">跨链技术原理与实战</a></li>
<li><a href="https://www.pseudoyu.com/en/2021/09/09/blockchain_crosschain_bitxhub/">BitXHub 跨链插件（Fabric）源码解读</a></li>
</ol>
<p>很有意思的是，因为公司内部并没有一个内容发布平台，我这段时间常常给我们友商的区块链技术博客平台投稿并且获取他们技术核心人员的一些学习反馈，在跨链这一块受益良多，也让我感觉到技术的开放性。</p>
<p>其实这个时候还没决定是否要留下来，也与其他心仪的一些公司有一些联系。不过紧接着，跟着另一个 leader 涛哥参与了另一个跨链项目，随着和他接触越来越多，我看到了一个技术人的热忱与无限可能性。我们同样爱折腾各种新奇的工具和技术，时常互相分享；他知道我时常焦虑于缺乏足够的工程经验和能力，于是让我参与到各个项目实战，有时在周末还会带着我 Pair Programming。</p>
<p>他是 <a href="https://github.com/hyperledger/cello">Hyperledger Cello</a> 的核心开发者，会鼓励我参与开源，当时说过的一句话我依然记忆犹新，大意是，作为一个技术人，除了完成自己一项项工作任务外，总需要在自己的技术生涯中有几个标签，比如“某某开源项目核心贡献者”等等，我也需要不断努力去找到自己的标签。这一点对我影响很深，在后续的工作学习中，我也开始持续关注开源社区并且慢慢参与其中。</p>
<p>一个可遇不可求的 leader 在影响我选择的因素中占据了更大的比重，所以其实没有太多犹豫，我留下了。</p>
<h3 id="工作">工作</h3>
<p>紧接着就参与了我严格意义上的第一个完整的、也几乎贯穿了我工作第一年大部分时光的项目，是一个底层跨链项目。</p>
<p>大概是得益之前工作之余对跨链的学习了解，我在刚实习转试用之际就莫名地担任了项目负责人，参与技术方案探讨、前期系统设计、底层链部分的开发改造、开发流程的规范化、Devops 环境的使用、讲解演示以及项目交付相关的文档与沟通相关工作。这带来了工作之初我未曾设想的压力和焦虑，同时，也带来了我的快速成长。</p>
<p>白天的各种会议一开就是大半天，几乎只有晚上才能沉下心写几行代码；为了赶一个个项目节点，熬夜甚至通宵都已经成为了常态；遇到许多技术难点可能一卡就是几天，却也不得不同时兼顾其他部分的开发任务进度；与之相伴的还有很多很多情绪的压抑与生活节奏的失控。</p>
<p>但当自己真正和团队一起完成了这个项目的最终交付时，那种喜悦感与成就感也是从未体验到的，可能这对于我的意义尤其特别，从本科的英语专业、到去留学转至计算机，在很多课程学习中常常有受挫的时候，期间也不止一次质疑过自己能否在这条路走下去。而这个项目虽然过程磕磕绊绊，我们终究还是做到了，这也给了我莫大的信心。</p>
<h3 id="相处">相处</h3>
<p>值得一提的是工作之后人与人的相处模式，我似乎一直没有褪去身上那一份学生气，不论是面对 leader、同事还是项目合作伙伴，似乎都是以一种比较直接与坦诚的方式进行交流的。在五月自己的生活经历了一些变故时，团队的小伙伴承担了更多工作职责让我可以自己有所调整；刚结束的项目的一个客户负责人会打电话给我聊三四个小时安慰我；而另一个在建项目的负责人也在帮我申请能否去出差以稍缓一下心情。工作其实也并没有那些贩卖焦虑的推文描述的那般沉闷，我也始终觉得不论处于什么环境或是场合，关系与相处都是互相的，真诚相待其实也能够同样收获一些信任与真心。</p>
<h3 id="收获困境与改变">收获、困境与改变</h3>
<p><img src="https://image.pseudoyu.com/images/dev_guide.png" alt="dev_guide"></p>
<p>一年过去了，第二个项目也即将结束了，我从这一年里学到了很多，也想以自己的方式为部门留下些什么，于是决定写了一份技术指南。除了开发规范外，还包括了这几年我对区块链的一些学习记录，以及一些从工作中学到的实战记录，这些都是我刚步入这份工作时希望能学到的，也希望能够告诉新加入的成员。</p>
<p><img src="https://image.pseudoyu.com/images/dev_guide_content.png" alt="dev_guide_content"></p>
<p>尽管工作才过去了一年，技术与经验上还有很多想提升与成长的，但对于方向却多少有了一些迷茫。想钻研一下区块链底层技术，打磨公司或个人的产品，以及更多参与到开源建设中，但工作之中也常常疲于一个个项目交付时间节点，很难有完整的时间学习研究，这也是后续的工作生涯中我需要克服与调整的难题。</p>
<p>所幸另一个 leader 楷哥很关注开源和技术底层这一部分，偶尔的交流也都为我指明了一些方向，还有很多需要去学习提升的，技术之路漫漫，任重而道远。</p>
<h2 id="总结">总结</h2>
<p>以上就是我在现在这个时间节点对于工作的一些总结，现在也渐渐享受于以这样的方式梳理、记录自己的生活、工作与心境，也希望在下一年回望正在经历的这一年时，能够看到自己更多改变与成长，共勉。</p>
]]></content:encoded></item><item><title>通过状态锁在 Solidity 智能合约中实现两阶段提交</title><link>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</link><pubDate>Fri, 01 Jul 2022 10:54:57 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</guid><description>《后来的我们 - 五月天》 前言 在一些牵扯到多个系统或合约交互的智能合约应用场景中，尤其是一些资产/数据准确性较为敏感的业务中，我们需要保证在整个</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>在一些牵扯到多个系统或合约交互的智能合约应用场景中，尤其是一些资产/数据准确性较为敏感的业务中，我们需要保证在整个业务流程中数据的原子性。因此，我们需要在合约层面实现类似多阶段提交的机制，即将合约中的状态更改过程分解为预提交和正式提交两个阶段。</p>
<p>本文通过状态锁的机制实现了一个最小化的两阶段提交模型，完整合约代码参见 <a href="https://github.com/pseudoyu/learn-solidity/blob/master/practice/two_phase_commit/TwoPhaseCommit.sol">TwoPhaseCommit.sol</a>，下文将对本合约核心逻辑进行讲解，并尽量遵循风格指南与最佳实践。</p>
<blockquote>
<p>注：本合约因初始场景主要考虑的是联盟链中的业务用途，未对 Gas fee 等进行特定优化，仅供学习参考。</p>
</blockquote>
<h2 id="合约逻辑">合约逻辑</h2>
<h3 id="合约结构">合约结构</h3>
<p>两阶段提交场景包含以下方法：</p>
<ol>
<li>set: 两阶段 - 预提交</li>
<li>commit: 两阶段 - 正式提交</li>
<li>rollback: 两阶段 - 回滚</li>
</ol>
<p>因 Solidity 语言对于字符串长度判断/比较等有一些限制，为了提升合约代码的可读性，本合约提供了部分辅助方法，主要包含以下方法：</p>
<ol>
<li>isValidKey: 检查 key 是否合法</li>
<li>isValidValue: 检查 value 是否合法</li>
<li>isEqualString: 比较两个字符串是否相等</li>
</ol>
<h3 id="两阶段提交核心逻辑">两阶段提交核心逻辑</h3>
<p>在两阶段提交场景中，本合约提供了一套简易的 <code>set</code>, <code>commit</code>, <code>rollback</code> 方法实现，实现了将合约调用传入的 key-value 键值对存储到链上。我们通过状态锁的机制来实现跨链交易的原子性。我们定义了如下数据结构：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">enum</span> <span class="nc">State</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">UNLOCKED</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">LOCKED</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">struct</span> <span class="nc">Payload</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">State</span> <span class="n">state</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="nb">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">string</span> <span class="n">lockValue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>其中，<code>State</code> 为枚举类型，记录了链上 key 值的锁定状态，而 <code>Payload</code> 结构则会对锁定状态、当前值与正在锁定的值进行存储，并通过如下 <code>mapping</code> 结构与 key 进行绑定：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">mapping</span> <span class="p">(</span><span class="kt">string</span> <span class="o">=&gt;</span> <span class="n">Payload</span><span class="p">)</span> <span class="n">keyToPayload</span><span class="p">;</span>
</span></span></code></pre></div><p>因此，我们可以根据 <code>keyToPaylaod</code> 对合约调用中的每一个 key 进行状态跟踪，并在下述 <code>set</code>, <code>commit</code>, <code>rollback</code> 方法中对 key 的状态进行检查，进行一些异常处理。</p>
<h4 id="set">set()</h4>
<p>在 <code>set()</code> 方法中，我们会检查 key 的状态，如为 <code>State.LOCKED</code>，则不会进行存储并抛出异常：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">==</span> <span class="n">State</span><span class="p">.</span><span class="n">LOCKED</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如为 <code>State.UNLOCKED</code>，则会将合约调用传入的值存储至 lockValue 中，并将其状态设置为 <code>LOCKED</code>，等待后续 <code>commit</code> 或 <code>rollback</code> 进行解锁。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">=</span> <span class="n">State</span><span class="p">.</span><span class="n">LOCKED</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span> <span class="o">=</span> <span class="n">_value</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="commit">commit()</h4>
<p>在 <code>commit()</code> 方法中，我们会检查 key 的状态，如为 <code>State.UNLOCKED</code>，则不会对该 key 进行操作，并抛出异常：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">==</span> <span class="n">State</span><span class="p">.</span><span class="n">UNLOCKED</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsNotLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如为 <code>State.LOCKED</code>，我们检查合约调用传入的值是否与 lockValue 相等，如不相等，则抛出异常：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isEqualString</span><span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span><span class="p">,</span> <span class="n">_value</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsInconsistent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如值相等，则会将该 key 所对应的 value 存储上链，将 key 的状态设置为 <code>UNLOCKED</code>，更新当前值 <code>value</code>，同时将 <code>lockValue</code> 置空：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">store</span><span class="p">[</span><span class="n">_key</span><span class="p">]</span> <span class="o">=</span> <span class="n">_value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">=</span> <span class="n">State</span><span class="p">.</span><span class="n">UNLOCKED</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="nb">value</span> <span class="o">=</span> <span class="n">_value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="rollback">rollback()</h4>
<p>在 <code>rollback()</code> 方法中，我们会检查 key 的状态，如为 <code>State.UNLOCKED</code>，则不会对该 key 进行操作，并抛出异常：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">==</span> <span class="n">State</span><span class="p">.</span><span class="n">UNLOCKED</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsNotLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如为 <code>State.LOCKED</code>，我们检查合约调用传入的值是否与 lockValue 相等，如不相等，则抛出异常：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isEqualString</span><span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span><span class="p">,</span> <span class="n">_value</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsInconsistent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如值相等，则会将该 key 所对应的 value 存储上链，将 key 的状态设置为 <code>UNLOCKED</code>，并将 <code>lockValue</code> 置空：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">=</span> <span class="n">State</span><span class="p">.</span><span class="n">UNLOCKED</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="错误处理逻辑">错误处理逻辑</h3>
<p>在合约执行异常场景中，我们会抛出错误并进行回滚。为了更好地提升错误消息的可读性并方便上层应用人员进行错误捕获与处理，我们采用了错误类型定义的方式，定义了各类异常场景，因为我在错误命名中已经包含了大部分信息，所以未定义错误类型额外参数值，可以根据需求自行定制。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataKeyIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataValueIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataIsNotExist</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataIsLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataIsNotLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="n">error</span> <span class="n">TwoPhaseCommit__DataIsInconsistent</span><span class="p">();</span>
</span></span></code></pre></div><p>在具体合约逻辑中，我们通过 <code>revert</code> 方法抛出异常，如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isValidKey</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">_key</span><span class="p">)))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataKeyIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isValidValue</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">_value</span><span class="p">)))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataValueIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">state</span> <span class="o">==</span> <span class="n">State</span><span class="p">.</span><span class="n">UNLOCKED</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsNotLocked</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isEqualString</span><span class="p">(</span><span class="n">keyToPayload</span><span class="p">[</span><span class="n">_key</span><span class="p">].</span><span class="n">lockValue</span><span class="p">,</span> <span class="n">_value</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsInconsistent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="通用参数校验">通用参数校验</h3>
<p>我们会对传入参数进行一些合法性校验，为了提供拓展性，我们通过 <code>isValidKey()</code> 与 <code>isValidValue()</code> 方法对 key 与 value 进行独立校验：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @notice 数据键格式校验
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param _key 数据 - 键
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">isValidKey</span><span class="p">(</span><span class="kt">bytes</span> <span class="k">memory</span> <span class="n">_key</span><span class="p">)</span> <span class="k">private</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">bytes</span> <span class="k">memory</span> <span class="n">key</span> <span class="o">=</span> <span class="n">_key</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">key</span><span class="p">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/**
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @notice 数据值格式校验
</span></span></span><span class="line"><span class="cl"><span class="cm"> * @param _value 数据 - 值
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">isValidValue</span><span class="p">(</span><span class="kt">bytes</span> <span class="k">memory</span> <span class="n">_value</span><span class="p">)</span> <span class="k">private</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bool</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">bytes</span> <span class="k">memory</span> <span class="nb">value</span> <span class="o">=</span> <span class="n">_value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nb">value</span><span class="p">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>本合约只进行了非空校验，可根据业务需要自行定制业务逻辑，在需要校验的地方调用即可，如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isValidKey</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">_key</span><span class="p">)))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataKeyIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isValidValue</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">_value</span><span class="p">)))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataValueIsNull</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">isValidValue</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">store</span><span class="p">[</span><span class="n">_key</span><span class="p">])))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">revert</span> <span class="n">TwoPhaseCommit__DataIsNotExist</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="事件机制">事件机制</h3>
<p>此外，我们定义了核心方法对应的 event，并为事件设置了 indexed 以方便上层应用进行监听和处理。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">setEvent</span><span class="p">(</span><span class="kt">string</span> <span class="k">indexed</span> <span class="n">key</span><span class="p">,</span> <span class="kt">string</span> <span class="k">indexed</span> <span class="nb">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">getEvent</span><span class="p">(</span><span class="kt">string</span> <span class="k">indexed</span> <span class="n">key</span><span class="p">,</span> <span class="kt">string</span> <span class="k">indexed</span> <span class="nb">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">commitEvent</span><span class="p">(</span><span class="kt">string</span> <span class="k">indexed</span> <span class="n">key</span><span class="p">,</span> <span class="kt">string</span> <span class="k">indexed</span> <span class="nb">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">rollbackEvent</span><span class="p">(</span><span class="kt">string</span> <span class="k">indexed</span> <span class="n">key</span><span class="p">,</span> <span class="kt">string</span> <span class="k">indexed</span> <span class="nb">value</span><span class="p">);</span>
</span></span></code></pre></div><p>在合约方法中通过 <code>emit()</code> 方法抛出 event，如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">setEvent</span><span class="p">(</span><span class="n">_key</span><span class="p">,</span> <span class="n">_value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">getEvent</span><span class="p">(</span><span class="n">_key</span><span class="p">,</span> <span class="n">_value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">commitEvent</span><span class="p">(</span><span class="n">_key</span><span class="p">,</span> <span class="n">_value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">rollbackEvent</span><span class="p">(</span><span class="n">_key</span><span class="p">,</span> <span class="n">_value</span><span class="p">);</span>
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我两阶段提交合约的一个最佳实践，关于 Solidity 基础语法可参看『<a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a>』，后续我还会对更多合约场景进行实践与讲解，敬请关注。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://github.com/pseudoyu/learn-solidity/blob/master/practice/two_phase_commit/TwoPhaseCommit.sol">TwoPhaseCommit.sol 合约源码</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a></li>
<li><a href="https://docs.soliditylang.org/en/v0.8.15/">Solidity 官方文档</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>周报 #01 - 情感、安全感与认真生活</title><link>https://www.pseudoyu.com/en/2022/06/28/weekly_review_20220626/</link><pubDate>Tue, 28 Jun 2022 22:54:39 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/28/weekly_review_20220626/</guid><description>《后来的我们 - 五月天》 前言 写周报的心思从生日前就有了，最早吸引我的是 Xuanwo 大佬的开源周报，一方面是憧憬这样能每周有所产出有所贡献的状态，而另一方</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/leopold_fc660c.jpg" alt="leopold_fc660c"></p>
<p>写周报的心思从生日前就有了，最早吸引我的是 <a href="https://twitter.com/OnlyXuanwo">Xuanwo</a> 大佬的开源周报，一方面是憧憬这样能每周有所产出有所贡献的状态，而另一方面也是对以周为一个尺度观察与衡量自己的生活、工作与学习这样的形式很感兴趣。</p>
<p>放弃思考总是一件再容易不过又最心安理得的事，生活早已充斥着无数的琐事、噪音以及各种“高优先级”的事，有时候即使难得空出一片完整的时间，似乎也会选择发呆放空，这大概就是生活的惯性吧。即使是作为本系列的开始，新鲜感和尚有余温的 flag 也没能抵挡过惰性，在预定之期的两天后才缓缓动笔。</p>
<p>虽然这定位是一个周报，我依然想采用每篇涵盖特定主题的完整文章这种形式，而不仅仅是条目的堆砌。也许在目前这样的生活阶段我会更多专注在感情与生活的思考，在之后的一些阶段可能也会在意生活方式与对个人发展的观察，可能不必每篇都需要站在一个高度来为自己指明方向或口号式激励，我更愿意将其视为一种对话。</p>
<p>本篇我们就来聊聊情感、安全感与认真生活。</p>
<h2 id="从零开始的生活">从零开始的生活</h2>
<p>五月虽然称不上是浑浑噩噩，但也远远算不上积极，以各种理由逃避着面对生活的种种变动。从某个痛苦的深夜下定决心要以生日为期，做一些生活环境与习惯的调整，重新开始一个人认真生活。</p>
<p>其实这个短句于我而言有着多重意义，『重新』、『一个人』、『认真』以及『生活』。</p>
<p>似乎已经很久很久没有以个人的角度来经营自己的生活了，久到自己已经丧失了这种“技能”或是“习惯”。自大学起的六七年可以自由支配的时光里，自己似乎就是一个倾向于从自己所在做的事中获取“注意力”的人，再加上还算温和的性格，身边也不并不缺乏社交。所以很长很长的时间里我只需要专注在自己身上，而并没有将过多的目光投向以我的生活为轴辐射出来的我们称之为“生活”的元素集合。</p>
<p>而经过了从学生到步入职场的生活转变，当自由的时间与可支配的注意力被来自工作与似乎到了这个年纪自然而然会去在意的一些相处与社交所侵占，我似乎更难从中找到属于自己的那部分了。</p>
<p>被生活裹挟着前进像是一种随着年龄增长而培养起来的被动技能。大多数人会称赞于“前进”这一部分，似乎在这样的阶段能够依然保留前行的动力就已经难能可贵，但这也是一种思维陷阱，一种由满足感构成的舒适区，也许我们需要克服的并不是被挤压的时间精力，而是在这样的状态下我们如何与焦虑感进行对抗，以维持初衷。</p>
<p>也许是人类天性，即使没有刻意与身边的人进行比较，也总还是在担心或是恐惧一种我称之为『Left Behind』的感觉。自己在学习上似乎总是倾向于不断获取新的资讯或了解新的技术，总是害怕自己的关注点偏移带来的机会成本，投资圈中有个缩写很贴合这一点，『FOMO（Fear of Missing Out）』，总是害怕自己是错过机会的那个，甚至不计成本不加筛选。值得庆幸的是我有不错的自由度能争取到避免工作上无意义的卷，当工作职责完成后自己会将更多的时间精力投入一些自己的事之中。</p>
<p>自己其实是一个不那么依赖社交的人，将自己为数不多愿意外显的情感都倾注于身边最亲近的人，但不知是由于到了一个新的环境还是到了年纪，自己现在似乎会慢慢开始担心自己会不会太过于特立独行而少了新认识朋友的机会，也会害怕自己在同事圈里是那个插不上话的人，虽然算不上功利，但也开始慢慢会以一种更积极更经雕琢的姿态去面对他人。</p>
<p>没有方向与初衷的前进会减轻自己的焦虑感，却可能会带来长期以来的停滞甚至是轨道的偏离，这部分的界限很难去把握，自己似乎也一直是不那么擅长处理这些的人，但想要重新掌握自己的生活就需要与这些不断进行对抗，而人的天性也总是会倾向于选择轻松的方式。所以，最大的敌人依旧是自我。</p>
<h2 id="感情中的illustion与reality">感情中的『Illustion』与『Reality』</h2>
<p>其实现在提起感情还是难以避免痛苦与失落，但也渐渐到了可以 Look back 的时候了，之前看到过这样一句话：</p>
<p><img src="https://image.pseudoyu.com/images/love_is_illusion.png" alt="love_is_illusion"></p>
<p>之前谈论感情的『<a href="https://www.pseudoyu.com/en/2022/06/06/yearly_review_25/">25 岁的自白：花束般的恋爱</a>』中有提到：</p>
<blockquote>
<p>有的时候生活只有拼了命的去改变、去适应，才能勉强的，维持现状。</p>
</blockquote>
<p>其实后来想想这也是一件很奢望且不可能维持的事，感情会衰退是一件像是“人会变老”这样一件虽然是常识但终究要切身体会了才能真正理解的概念。像是很多生活中在发生的事，家里洗手间的下水道堵了，每次洗完澡会漫出一点，可能一周前就这样了，也许更久。因为也不会漫太多影响房间，只是稍微湿一下脚，没多久也就退了，所以一直没太在意，也没去修；或是自己每次关门是还总是很小心翼翼地虚掩和回头看一下，生怕猫乱跑出去，过了好一会儿才意识到已经离开这个家很久了，只是习惯了。可能很多事就是这样，在怔怔地看着一个既定结果时候恍然，原来它一直在发生，只是自己没注意到。</p>
<p>可能关于感情目前越来越认识到的是记忆并没有那么坚固，习惯与过去那些最美好的瞬间也会因为时间流逝而一点点变得陌生，而现实也很多时候在加速这个过程。而自己有些太过于依赖这些美好的感受了，觉得这些重过一切。其实自己也不知道怎么去形容感情中幻想与现实重叠后的种种，只是各种记忆碎片似乎也以各种方式提醒着我这些事和情绪真真切切地发生过。就像很多曾经说过的记住的话或是因为相处久了共同养成的习惯总会在某些瞬间像是恶作剧般出现，甚至有的部分像是已经成为了一种症状。</p>
<p>比如，每到傍晚大概六点多时，我总是会想起当时她说的当她小憩到日暮看着窗外时，会感到尤其孤独与难受，似乎这个世界上只有自己一个人。可能我一直自诩是一个坚强的人，当时也并没有完全做到感同身受，只是希望每次这样的时候醒来的时候能陪着她。而现在似乎自己也陷入了这样的状态，甚至连周遭太安静或是太吵闹都会感受到这种孤独感，当然，这是另外的话题了。</p>
<h2 id="孤独感与安全感">孤独感与安全感</h2>
<p>如前文所述，自己似乎曾经并不是一个那么害怕孤独的人，或者至少没有很敏感。而随着生活状态的改变，我对孤独的感知也愈加显著。现在不论做什么，似乎都需要放着 Podcast 或是白噪音才能略平复一些，而音乐又似乎有些太过吵闹，以至于没办法集中注意力去享受旋律，而只是带来烦躁感。也许自己把太多对于安全感的追求寄托于情感，当这一部分缺失时，被过度保护的安全感也就消散了，而与其相生相伴的孤独感却迅速侵袭了我的生活。也许在之后很久的时光里，孤独感都会像是一个朋友一样如影随形，我尚未学会如何与它相处，但也逐渐在习惯它的存在。</p>
<p>也许渐渐地，我会将这些寄托放置在亲近的朋友、家人或是其他的关系上，这样稀松平常的事其实对于过去的我来说并不是一件容易的事。不知是出于害怕麻烦他人还是所谓的自我坚持，似乎自己即使在面对亲人或是最信任的挚友身上也有一种自我保护，也有一些“报喜不报忧”的倾向，总是不愿意主动承认自己的弱点或是分担自己的情绪。这无关熟悉程度，只是我似乎只习惯于在一段亲密关系中表现自己的一切，而可悲的是，爱情的很多阶段依赖与幻想与感受，往往无法承受彻底的真实感所带来的副作用。这也并非是说感情需要隐瞒或是扮演，而是感情并不是一个适合寄托安全感的完美载体，其所依赖的感性与氛围感的部分是需要一定的距离与想象才能构筑的，同样是需要把握其界限与平衡。</p>
<h2 id="学习输入与输出">学习、输入与输出</h2>
<p>这个部分会记录一下自己这边所看的各类影音书籍、折腾的好玩的东西以及工作学习的一些进展，所幸根据『<a href="https://reorx.com/blog/sharing-my-footprints-automation/">使用自动化工作流聚合信息摄入和输出</a>』这一篇搭建了自己的『<a href="https://t.me/pseudoyulife">Yu&rsquo;s Life 频道</a>』，会自动化采集自己的一些主动输出与输入，如 Twitter、Blog、书签以及 GitHub 动态等，很方便自己进行每周复盘。</p>
<h3 id="技术学习">技术学习</h3>
<p>这周开始恢复去公司上班了，居家快两个月还有些不太习惯，不过能出门对情绪状态也是一种好事。因为项目快要结束了，本身工作量不是很大，不过本周要把 fabric 环境以及一些操作部分熟悉一下，即使不算感兴趣但毕竟也是工作很重要的一环。</p>
<p>最近主要在学 Soldiity 和 Rust 开发，不过这周因为去公司上班了，完整的时间很少，进度一般，需要重新计划一下了。然后打算把 CSAPP 开始重新学习记录一下了，是时候好好沉淀下来补自己的一些技术和底层知识了。</p>
<p>这周和一个 Leader 有了对于区块链和技术的一些有趣的讨论，也对我之后的学习方向提供了一些参照，技术路还很遥远呀，继续加油了。</p>
<p><img src="https://image.pseudoyu.com/images/discuss_about_blockchain_in_twitter.png" alt="discuss_about_blockchain_in_twitter"></p>
<h3 id="输入">输入</h3>
<p>整理了一下自己的 GitHub Star 列表与项目，把一些部分做了分类，以及用 tag 的形式记录到了 Pinboard 中进行管理，把一些稍后读转移到了 Instapaper，目前是一个比较闭环的输入流了。实践下来，这种还是看了不少有价值和营养的内容的，后续需要更专精一些领域深入学习。</p>
<p>影音这一块这周主要在补『黑客军团』，很久之前看过的一部美剧，觉得挺有意思的所以重温了一下前几季并且把最新的一季看了一下；书的话之前的『洛丽塔』还没看完，通勤的时候缓慢在看，因为居家反而搁置了很久。</p>
<h3 id="输出">输出</h3>
<p>写作也是目前坚持了最久也最有成效的一个兴趣了，还赚到了一些意料之外的稿费。这周工作之余在少数派发了一篇『<a href="https://sspai.com/post/73934">2022 年了，聊聊我为什么还在写博客</a>』，反响不错，结识了很多同样在写博客的人，一起交流了下，顺便把博客数据统计系统也再完善了一下。另外又接到了一篇关于区块链的约稿，不过是自己不太熟悉的 stablecoin 相关内容，可以先做一些调研学习。</p>
<h3 id="软硬件优化">软硬件优化</h3>
<p>这周主要是把 n8n 服务通过 docker 转移部署到了 Railway 上，这样就不用担心服务异常问题了，会是一个更加稳定的系统。</p>
<p>使用 frp 实现了家里的内网穿透，可以从公司或者外出的时候只带一台 Chromebook 直接 ssh 远程连接到家里长期开机的 Mac Studio 上进行开发了，之后也打算把树莓派也搭建一下，可以省不少云服务器的成本，也想配合一些温度湿度传感器这些折腾一些好玩的东西。</p>
<p>DJI RS3 相机稳定器到了，折腾了一下学习了基础操作，不过关于调平这一块不太熟悉，之后慢慢学习使用，可以多拍一些。</p>
<p>新键盘 Leoplod FC660C 到了，外观和手感都很喜欢，换为家里的主力键盘了，把 HHKB 带去公司。</p>
<h2 id="习惯兴趣与改变">习惯、兴趣与改变</h2>
<p>我很难界定自己是不是一个喜欢改变的人，我很乐于接受新事物，也能比较快地适应一个新环境，但对于很多熟悉的日常或是尚有眷恋与情感倾注的部分，我又很努力地将其保持原状。家里的布局、穿衣的风格甚至是衣柜里时色系的顺序我都像是强迫症似的保留了原样。甚至是自己一些生活的上的行为模式与习惯，似乎也都不愿意去改变。我很难去界定自己的这些行为，或许是对于过去的眷恋或是自己不愿意接受的改变的偏执吧。</p>
<p>但其实有时候做一些改变与尝试也是一件很有趣的事，也很适合作为新的生活方式或兴趣的探索。这部分也会记录一下自己所做的一些尝试与兴趣培养的进展。</p>
<ol>
<li><strong>输入法</strong>。尝转换到了很久之前就感兴趣却一直没耐下心练习的小鹤双拼，其实也不是为了打字速度有多少提升，只是感觉将自己（被动）坚持了十几年的习惯做一个转换是一种很有趣的体验，大概也有三周了，速度还没有回到全拼时，但打字节奏感好了很多，不过更重要的是似乎从打字这件事也体会到了乐趣与提升所带来的喜悦，这很难想象是能从一件自己做了十几年的事上所能获得的感受。</li>
<li><strong>视频剪辑</strong>。一直很想做一些拍摄和剪辑，虽然因为之前的工作和日常的一些兴趣，不过一直没能完整做些什么创作，可能更多都是技能的培养，打算开始进行一些拍摄与剪辑，顺便好好学习一下稳定器的使用。</li>
<li><strong>运动</strong>。感觉自己宅家太久了，很久没做运动，打算开始用健身环开始做一些日常运动，以及天气好一些可以去滑滑板，至少保持一个相对稳定的频率。</li>
<li><strong>语言</strong>。英语的阅读和写作在日常工作学习用到了很多，但我想更多在口语上多一些提升，也需要有一个稳定的练习频率；而日语也是学完新标日初级后就没再继续，同样的要开始做一些复习和筹备。</li>
<li><strong>音乐</strong>。把家里的吉他寄过来了，自大一学过一阵子后就搁置了许久，之后打算做一些练习，至少音乐是一种能让人放松与平静的艺术，但需要练习与坚持，也会以视频的方式记录一些练习的流程与小作品。</li>
</ol>
]]></content:encoded></item><item><title>2022 年了，聊聊我为什么还在写博客</title><link>https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/</link><pubDate>Sun, 12 Jun 2022 13:48:58 +0000</pubDate><guid>https://www.pseudoyu.com/en/2022/06/12/why_i_still_write_blog_in_2022/</guid><description>《后来的我们 - 五月天》 前言 前段时间发了几篇文章介绍了一下自己的博客搭建流程及组件，有很多朋友跟着我的教程也搭建了自己的博客。同时，也有一些朋</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>前段时间发了几篇文章介绍了一下自己的博客搭建流程及组件，有很多朋友跟着我的教程也搭建了自己的博客。同时，也有一些朋友提出了疑问，在 2022 年这个时间节点，已经有那么多成熟的写作与发布平台，为什么我们还要那么大费周章，搭建与更新自己的博客呢？</p>
<p>我从大一（2015 年）开始写公众号，分享一些关于书、电影与个人生活的文章；2018 年开始使用 <a href="https://wordpress.com/">Wordpress</a> 搭建了一个自己的个人博客，并于 2019 年迁移到了 <a href="https://gohugo.io/">Hugo</a> + <a href="https://pages.github.com/">Github Pages</a> 并维护至今
。</p>
<p>在这两年时间里，我共计更新了 70 篇文章，主要包含课程笔记、技术与效率相关主题，自搭建了网站数据统计系统以来有近万名访客。本文想从我个人经历的角度跟大家讲讲我在写博客过程中的所思所想，也许能够为正在犹豫的你提供一些参考。</p>
<h2 id="写博客的初衷与价值">写博客的初衷与价值</h2>
<h3 id="学习笔记发布">学习笔记发布</h3>
<p>可能是因为初高中对语文学科的热忱以及大学时英语专业的耳濡目染，我一直很享受于阅读与分享，很早之前也和故友一起维护过个人公众号，写了一些有关书籍、电影、音乐与个人生活相关的文章。这是我第一次通过文字传达自己的情绪，也体会到了外界反馈带来的欣喜与感动。</p>
<p>后来因为一些原因公众号停止更新了，我也很久没再公开发布文章。不过因为当时有转专业的想法，一直在自己学一些新的知识，会定期把笔记与学习心得记在自己的笔记软件中，逐渐也养成了记录的习惯。</p>
<p><img src="https://image.pseudoyu.com/images/hku_course.jpg" alt="hku_course"></p>
<p>尤其是在香港留学期间，因为是全英授课，课后需要花很多时间来整理回顾，也会分享给很多同学，于是捡起了断更很久的博客，陆续发布了很多学习笔记，收到了很多同学的积极反馈与感谢。后来还加上了网站访问统计、评论等组件，偶尔查看会很惊喜地发现有很多来自搜索引擎的访问者，也给我继续更新提供了很多动力。</p>
<p>博客文章与零散记录的知识点不同，需要有着特定的主题、一定的行文结构与完整的内容。这促使着我在构思与写作时对自己的知识体系进行梳理总结，有时还需要用一些思维导图与流程图来辅助理解，这个过程让我不断巩固所学知识点，帮助我度过了很多作业与考试。</p>
<p>尽管前期阅读的人并不多，但我视其为自己的一个表达渠道，也是自己获取认同感与价值的窗口。因此，一篇文章需要花很多心血来写，让我更自律地放弃了很多无意义的消遣，投入更多时间打磨自己的文章。此外，时间上的紧迫也促进了我对学习方式与效率的思考，在听课或阅读资料时就会自然地从整个知识结构的维度来进行理解与思考。</p>
<h3 id="工作心得记录">工作心得记录</h3>
<p>工作后，因为我从事的区块链行业是一个新兴的领域，有时候一个小小的知识点需要查阅很多零散的资料才能理解，而且大多是来自于同行业大佬的博文，有时候会追着一位博主的文章时间线从头开始看，获益良多。这时，我便也萌生了自己将这些工作学习中踩过的坑记录并分享出来的想法。</p>
<p>我发现网上区块链相关的资料大多都比较简略、偏底层，没有很详细的步骤讲解，对于入门学习者来说可复现性不强。于是，我开始定期把自己的学习心得与工作经验分主题组织成文在<a href="https://www.pseudoyu.com">自己的博客</a>上发布，并将区块链相关的单独抽出来为一个<a href="https://www.pseudoyu.com/blockchain-guide/">入门指南</a>，以便大家学习交流。</p>
<p>发布后得到了很多反馈，也因此结识了不少志同道合的人，建立了自己的关系网络，对自己的学习与工作发展有了更深的认识，甚至也能获得一些有趣的机会。</p>
<p>工作一段时间后，做了一些项目的技术负责人，需要带团队快速接入项目。这时，我的这些博文就可以作为与团队成员共享的培训资料，极大减少了重复工作量，也推动着自己保持稳定的输出节奏。此外，因为这种乐于分享的态度，我还被指派与团队 leader 一起搭建技术团队的文档库，这推动了部门乃至公司内的信息传播与业务发展，对自己的职业发展也有一些帮助。</p>
<h3 id="效率技巧分享">效率技巧分享</h3>
<p>工作之余，我还是一个效率控，很喜欢折腾各类工具应用，还维护了一个『<a href="https://github.com/pseudoyu/yu-tools">pseudoyu/yu-tool 个人工具箱</a>』项目。久而久之，很多朋友遇到软硬件相关的问题都会来问我，例如“我想实现这个功能有什么好的软件可以做到？”、“这个要怎么下载安装？”等等，我也会一一给他们解答，但因为有些软件自己使用已经不那么频繁，对细节记忆会有偏差。因此，我会将自己软件系统的搭建、使用过程作详细的记录，组织为博文并发布，以便之后自己查阅或直接分享给需要的朋友。</p>
<p><img src="https://image.pseudoyu.com/images/yu_new_desk_setup.jpg" alt="yu_new_desk_setup"></p>
<p>我一直觉得记录软硬件与这些折腾的过程并不是一些冷冰冰的条目与截图的堆砌，而是我个人价值观、生活方式以及思维方式的传导，正如我在另一篇文章中的有感而发：</p>
<blockquote>
<p>但当我在日常工作学习中使用自己当初花了很多心思调研和优化的系统后，或当一个突发的需求使用到了我之前的一个折腾过的软件/配置时，会莫名地很开心、很有成就感，这大概就是折腾的意义吧。</p>
</blockquote>
<h3 id="个人思考与成长">个人思考与成长</h3>
<p>经过了学业与工作的各个时期，我发现自己在不同阶段与角色可能会有着截然不同的思考与成长，有时回顾起来也会很有感触。因此，我设立了一个『<a href="https://www.pseudoyu.com/en/category/ideas/">思考</a>』板块，之前会以每年生日为期记录一下自己的成长，也会在一些特定的时间节点记录自己的所思所想，后续也将以周报/月报的形式记录自己的一些阶段性感悟。</p>
<p>相信几个月甚至几年后的自己也能从这点点滴滴的记录中找到自己当时的心境。当自己逐渐培养起记录生活的习惯，也会让自己能关注与感受到生活的美好，也能更积极地面对来自未来的挑战。</p>
<p><img src="https://image.pseudoyu.com/images/warm_comments.png" alt="warm_comments"></p>
<p>个人博客就像自己的一个树洞，在记录与表达自己情绪的同时，也许也会收获一些来自陌生人的温暖。</p>
<h2 id="如何坚持写作">如何坚持写作</h2>
<h3 id="克服心理障碍">克服心理障碍</h3>
<p>写作并不是一件很容易的事，当我很长时间没动笔之后，常常也会觉得“没有手感”，之前没有写作习惯的朋友们可能会更容易感觉“不知道写什么”、“自己写的东西没有意义”或“会不会没人看”。</p>
<p>这其实是一个误区，有句话叫“达人须悦己”，写作（尤其是个人博客写作）不应该是一个目的性很强的事，而应该是一个自我记录、自我发现、自我探索与自我表达的过程。我们每个人都处于不同的角色，都有着自己的独特角度与看待事物的眼光。只要多多关注自己所在或感兴趣的领域，收集碎片化的想法，积极思考，对一些有意思的想法用导图等方式进行挖掘，将这些想法组织成文后，仔细打磨自己的文章，以真诚的态度表达出来，就能创作出有价值的内容。</p>
<h3 id="积极分享传播">积极分享传播</h3>
<p>文章完成后我们可以选择在各个平台发布与传播，积极获取正反馈，也会促进自己更有动力坚持下去。除了个人博客外，我们可以选择简书、知乎、微博这样的内容社区，少数派、即刻等相对垂类的一些内容平台等。</p>
<p>好的内容也会自然地传播，被更多人看到，我们需要做的就是坚持与持续输出，前期可以给自己制定一个固定频率，如半个月/一个月，给自己一些小小的物质激励，后期再慢慢根据自己的情况与意愿调整。</p>
<h2 id="个人博客">个人博客</h2>
<h3 id="为什么选择个人博客">为什么选择个人博客</h3>
<p>上文着重讲了我们如何写有价值的博客文章，现在，我们回到最开始的问题：</p>
<blockquote>
<p>既然已经有了那么多平台了，为什么我们还要选择搭建个人博客呢？</p>
</blockquote>
<p>移动互联网与智能手机普及之后，“blogger” 一词似乎已经成为了时代的眼泪，前段时间我还被加入了一个“致敬仍然在写博客的朋友”的列表，有些哭笑不得。</p>
<p>随着互联网的迅速发展，我们有了更多的表达渠道，却又似乎丧失了表达的欲望。朋友圈、微博等似乎是适合情绪表达的第一阵地，但字数限制与太多的社交关联又让我们望而却步；而知乎、简书这样的平台又似乎太过“专业”，并不适合所有内容，也容易被网络舆论所左右。</p>
<p>个人博客则是一个更完美的选择。我们可以随心所欲地按自己的喜好定制博客的各个模块，而折腾与优化的过程就像装修自己的一个小屋一样，很有成就感。配合个性域名也能打造自己的个人品牌，不管是在个人社交平台还是求职简历上放上自己的个人网站链接都是一个不错的加分项。</p>
<p>还有很重要的一点是，我们在博客上发布的内容与数据都属于我们自己，不会随着平台的消亡而丧失所有数据或经历大规模迁移的痛苦，经历过『虾米音乐』消亡的惨痛教训，我对这一点尤其关注，也会定期备份我的文章数据。</p>
<p>此外，我们可以对个人博客做一些 SEO 优化而无需被内容平台的算法所左右，读者也许会从一篇文章链接到自己的其他想法与态度的表达，让他们感觉文字背后是一个真实的、有趣的人，而不仅仅是互联网同质化知识的一个分子。</p>
<h3 id="如何搭建个人博客">如何搭建个人博客</h3>
<p>我的个人博客最早使用 WordPress 搭建在自己的 Vultr vps 上，因为网络访问比较慢所以迁移到了腾讯云服务器上并且进行备案，虽然访问速度有提升，但是发布博客的流程很繁琐，服务器的维护长期也是一笔不小的开支。</p>
<p>因此，我也一直在探索能够既能保障国内外访问体验，又能够托管在一些平台上，实现部署和发布流程的最优化体验。后来也一直不断在改善博客系统搭建和发布流程，迄今为止对自己的全流程解决方案还是比较满意的，虽然部署和搭建上需要进行一些配置，但后续更新维护都很方便，我对博客搭建流程写了一系列文章。</p>
<h4 id="博客搭建与自动发布系统">博客搭建与自动发布系统</h4>
<p><img src="https://image.pseudoyu.com/images/yu_blog_homepage_20240629.png" alt="yu_blog_homepage_20240629"></p>
<p>我通过 Hugo 这个静态网站生成器来搭建我的个人博客。Hugo 是用 Go 实现的博客工具，采用 Markdown 进行文章编辑，自动生成静态站点文件，支持丰富的主题配置，也可以通过 js 嵌入像是评论系统等插件，高度定制化。</p>
<p>此外，我还对博客配置及所有文章的源文件进行版本管理，配合 GitHub Action 进行自动化部署，自动生成静态站点推送到 GitHub Pages 博客发布仓库。搭建教程请参看：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/">Hugo + GitHub Action，搭建你的博客自动发布系统</a></li>
</ul>
<h4 id="博客评论系统">博客评论系统</h4>
<p>一个完整的博客当然需要评论系统，像 WordPress 这种系统自身具备了评论插件，而静态博客则需要自己对接评论系统。我最开始选择的是第三方的 Disqus，简单易用，但是会自带很多广告推广，也不够简约。因此，我选择了 Randy 的 Cusdis，一个注重数据隐私的开源的评论系统，并通过 Railway 进行自部署，搭建教程请参看：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
</ul>
<h4 id="博客数据统计系统">博客数据统计系统</h4>
<p>作为一个持续更新运营的博客平台，我们一定很好奇哪篇文章阅读量最高、哪个关键词检索最频繁等，数据统计能帮助我们专注在更有价值的内容创作与分享上。</p>
<p><img src="https://image.pseudoyu.com/images/splitbee_data.png" alt="splitbee_data"></p>
<p><img src="https://image.pseudoyu.com/images/google_console_data.png" alt="google_console_data"></p>
<p>类似的工具也很多，我选择了 <a href="https://splitbee.io/">splitbee</a> 与 <a href="https://search.google.com/search-console">Google Console</a> 来统计分析我的访客信息与搜索权重。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_data.png" alt="cloudflare_data"></p>
<p><a href="https://www.cloudflare.com/">Cloudflare</a> 也能够对网络流量进行分析，不过因为有很多网络无关流量，如爬虫等，所以参考性不强。</p>
<p>此外，我选择了一个可代替 Google Analytics 的开源服务 umami，并通过 Vercel 与 Heroku 进行部署，实现了访客数据的实时监控，搭建教程请参看：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
</ul>
<h2 id="总结">总结</h2>
<p>2022 年了，我依然在写博客，并且会继续坚持写下去。博客就像是我的一个私人空间，一篇篇笔记记录了我的变化与成长，也承载了我人生的几段最重要的时光。希望屏幕前的你们也能体会到博客的魅力，让更多的朋友加入我们仍在坚守的“blogger”阵地。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://bytedance.feishu.cn/docs/doccn4sKBEWyyLPziLVyoaudpXd#">讲讲我为什么写 blog</a></li>
<li><a href="https://www.pseudoyu.com">我的 Pseudoyu 个人博客</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/">Hugo + GitHub Action，搭建你的博客自动发布系统</a></li>
<li><a href="https://www.pseudoyu.com/blockchain-guide/">区块链入门指南</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Solidity 智能合约开发 - Hardhat 框架使用</title><link>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</link><pubDate>Thu, 09 Jun 2022 14:38:10 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</guid><description>《后来的我们 - 五月天》 前言 经过了前几篇对智能合约基础、Web3.py、ethers.js 的学习，我们已经掌握了通过程序与区块链网络直接交互的</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>经过了前几篇对智能合约基础、Web3.py、ethers.js 的学习，我们已经掌握了通过程序与区块链网络直接交互的基础知识，不熟悉的同学可以回顾一下：</p>
<ul>
<li><a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/">Solidity 智能合约开发 - 玩转 Web3.py</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/">Solidity 智能合约开发 - 玩转 ethers.js</a></li>
</ul>
<p>但是在真正的复杂业务场景中，我们往往会使用一些进一步封装的框架，如 HardHat、Brownie、Truffle 等，HardHat 是其中应用最广泛、插件拓展最为强大的。本系列将从这篇开始专注于 Hardhat 框架的使用与最佳实践，而本篇则会通过一个简单的例子完成其安装、配置与使用。</p>
<p>本文是对 <a href="https://twitter.com/PatrickAlphaC">Patrick Collins</a> 的 『<a href="https://www.youtube.com/watch?v=gyMwXuJrbJQ">Learn Blockchain, Solidity, and Full Stack Web3 Development with JavaScript</a>』 教程的学习整理，强烈建议看原教程视频了解更多细节。</p>
<p>可以点击<a href="https://github.com/pseudoyu/learn-solidity/tree/master/hardhat_simple_storage">这里</a>访问本测试 Demo 代码仓库。</p>
<h2 id="hardhat-介绍">Hardhat 介绍</h2>
<p><img src="https://image.pseudoyu.com/images/hardhat_homepage.png" alt="hardhat_homepage"></p>
<p>Hardhat 是一个基于 JavaScript 的智能合约开发环境，可以用于灵活地编译、部署、测试和调试基于 EVM 的智能合约，并且提供了一系列工具链来整合代码与外部工具，还提供了丰富的插件生态，提升开发效率。此外，它还提供了模拟以太坊的本地 Hardhat 网络节点，提供强大的本地调试功能。</p>
<p>其 GitHub 地址为 <a href="https://github.com/NomicFoundation/hardhat">NomicFoundation/hardhat</a>，可以访问其<a href="https://hardhat.org/getting-started">官方文档</a>了解更多。</p>
<h2 id="hardhat-使用">Hardhat 使用</h2>
<h3 id="初始化项目">初始化项目</h3>
<p>从零开始搭建一个 Hardhat 项目，我们需要预先安装好 <code>node.js</code> 与 <code>yarn</code> 环境，这部份参照官方说明根据自己的系统环境按照即可。</p>
<p>首先，我们需要初始化项目并安装 <code>hardhat</code> 依赖包。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn init
</span></span><span class="line"><span class="cl">yarn add --dev hardhat
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/yarn_add.png" alt="yarn_add"></p>
<h3 id="初始化-hardhat">初始化 Hardhat</h3>
<p>然后需要运行 <code>yarn hardhat</code>，通过交互式命令来进行初始化，根据项目需要进行配置，我们的测试 Demo 选择默认值。</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_project_init.png" alt="hardhat_project_init"></p>
<h3 id="优化代码格式化">优化代码格式化</h3>
<h4 id="vs-code-配置">VS Code 配置</h4>
<p>我本地是通过 VS Code 进行代码开发的，可以通过安装 <code>Solidity + Hardhat</code> 与 <code>Prettier</code> 两个插件来进行代码格式化，可以使用打开 VS Code 设置，在 <code>settings.json</code> 中增加如下格式化配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;[solidity]&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;editor.defaultFormatter&#34;</span><span class="p">:</span> <span class="s2">&#34;NomicFoundation.hardhat-solidity&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;[javascript]&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;editor.defaultFormatter&#34;</span><span class="p">:</span> <span class="s2">&#34;esbenp.prettier-vscode&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="项目配置">项目配置</h4>
<p>为了统一各个使用项目的开发人员的代码格式化样式，我们还可以为项目配置 <code>prettier</code> 与 <code>prettier-plugin-solidity</code> 插件支持：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn add --dev prettier prettier-plugin-solidity
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/yarn_add_prettier_plugin.png" alt="yarn_add_prettier_plugin"></p>
<p>添加依赖后，可以在项目目录增加 <code>.prettierrc</code> 与 <code>.prettierignore</code> 配置文件来进行格式化统一：</p>
<p>我的 <code>.prettierrc</code> 配置为：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;tabWidth&#34;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;useTabs&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;semi&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;singleQuote&#34;</span><span class="p">:</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>我的 <code>.prettierignore</code> 配置为：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">node_modules
</span></span><span class="line"><span class="cl">package.json
</span></span><span class="line"><span class="cl">img
</span></span><span class="line"><span class="cl">artifacts
</span></span><span class="line"><span class="cl">cache
</span></span><span class="line"><span class="cl">coverage
</span></span><span class="line"><span class="cl">.env
</span></span><span class="line"><span class="cl">.*
</span></span><span class="line"><span class="cl">README.md
</span></span><span class="line"><span class="cl">coverage.json
</span></span></code></pre></div><h3 id="编译合约">编译合约</h3>
<p>无需像 <code>ethers.js</code> 一样自定义 <code>compile</code> 命令，HardHat 预置了 <code>compile</code> 命令，可以将合约放在 <code>contracts</code> 目录下，然后通过 <code>yarn hardhat compile</code> 命令来编译合约：</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_compile_contract.png" alt="hardhat_compile_contract"></p>
<h3 id="添加-dotenv-支持">添加 <code>dotenv</code> 支持</h3>
<p>在开始编写部署脚本之前，我们先配置一下 <code>dotenv</code> 插件，这样我们就可以使用 <code>dotenv</code> 来获取环境变量。我们在开发过程中，会牵扯到很多隐私信息，如私钥等，我们会希望将其存储在 <code>.env</code> 文件或直接设置在终端中，比如我们的 <code>RINKEBY_PRIVATE_TOKEN</code>，这样我们就可以在部署脚本中使用 <code>process.env.RINKEBY_PRIVATE_TOKEN</code> 获取到值，无需在代码中显式写入，减少隐私泄漏风险。</p>
<h4 id="安装-dotenv">安装 <code>dotenv</code></h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn add --dev dotenv
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/yarn_add_dotenv.png" alt="yarn_add_dotenv"></p>
<h4 id="设置环境变量">设置环境变量</h4>
<p>在 <code>.env</code> 文件中，我们可以设置环境变量，比如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">RINKEBY_RPC_URL=url
</span></span><span class="line"><span class="cl">RINKEBY_PRIVATE_KEY=0xkey
</span></span><span class="line"><span class="cl">ETHERSCAN_API_KEY=key
</span></span><span class="line"><span class="cl">COINMARKETCAP_API_KEY=key
</span></span></code></pre></div><p>我们就可以在 <code>hardhat.config.js</code> 中读取环境变量了：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">require</span><span class="p">(</span><span class="s2">&#34;dotenv&#34;</span><span class="p">).</span><span class="nx">config</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">RINKEBY_RPC_URL</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">    <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">RINKEBY_RPC_URL</span> <span class="o">||</span> <span class="s2">&#34;https://eth-rinkeby/example&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">RINKEBY_PRIVATE_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">RINKEBY_PRIVATE_KEY</span> <span class="o">||</span> <span class="s2">&#34;0xkey&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ETHERSCAN_API_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ETHERSCAN_API_KEY</span> <span class="o">||</span> <span class="s2">&#34;key&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">COINMARKETCAP_API_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">COINMARKETCAP_API_KEY</span> <span class="o">||</span> <span class="s2">&#34;key&#34;</span>
</span></span></code></pre></div><h3 id="配置网络环境">配置网络环境</h3>
<p>往往我们的合约需要运行在不同的区块链网络上，如本地测试、开发、上线环境等等，Hardhat 也提供了便捷的方式来配置网络环境。</p>
<h4 id="启动网络">启动网络</h4>
<p>我们可以直接运行脚本来启动一个 Hardhat 自带的网络，但该网络仅仅存活于脚本运行期间，想要启动一个本地可持续的网络，需要运行 <code>yarn hardhat node</code> 命令：</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_localhost_node.png" alt="hardhat_localhost_node"></p>
<p>执行完成后，就生成了测试网络与测试账户，供后续开发调试使用。</p>
<p>我们还可以通过 Alchemy 或 Infura 等平台生成自己的测试网节点，记录其 <code>RPC_URL</code> 供程序连接使用。</p>
<h4 id="定义网络">定义网络</h4>
<p>完成网络环境准备后，我们可以在项目配置 <code>hardhat.config.js</code> 中定义网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">RINKEBY_RPC_URL</span> <span class="o">=</span>
</span></span><span class="line"><span class="cl">    <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">RINKEBY_RPC_URL</span> <span class="o">||</span> <span class="s2">&#34;https://eth-rinkeby/example&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">RINKEBY_PRIVATE_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">RINKEBY_PRIVATE_KEY</span> <span class="o">||</span> <span class="s2">&#34;0xkey&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">defaultNetwork</span><span class="o">:</span> <span class="s2">&#34;hardhat&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">networks</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">locakhost</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">url</span><span class="o">:</span> <span class="s2">&#34;http://localhost:8545&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nx">chainId</span><span class="o">:</span> <span class="mi">31337</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nx">rinkeby</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">url</span><span class="o">:</span> <span class="nx">RINKEBY_RPC_URL</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nx">accounts</span><span class="o">:</span> <span class="p">[</span><span class="nx">RINKEBY_PRIVATE_KEY</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="nx">chainId</span><span class="o">:</span> <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h3 id="脚本">脚本</h3>
<p>在 Hardhat 项目中，我们可以通过在 <code>scripts</code> 目录中编写脚本来实现部署等功能，并且通过便捷的命令执行脚本。</p>
<h4 id="编写部署脚本">编写部署脚本</h4>
<p>接下来我们开始编写 <code>deploy.js</code> 脚本。</p>
<p>首先，我们需要从 <code>hardhat</code> 中导入必要包：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="p">{</span> <span class="nx">ethers</span><span class="p">,</span> <span class="nx">run</span><span class="p">,</span> <span class="nx">network</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;hardhat&#34;</span><span class="p">)</span>
</span></span></code></pre></div><p>接着则编写 <code>main</code> 方法，包含我们的部署核心逻辑：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">async</span> <span class="kd">function</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">SimpleStorageFactory</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">getContractFactory</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SimpleStorage&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Deploying SimpleStorage Contract...&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">simpleStorage</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">SimpleStorageFactory</span><span class="p">.</span><span class="nx">deploy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">deployed</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;SimpleStorage Contract deployed at:&#34;</span><span class="p">,</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">address</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 获取当前值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kr">const</span> <span class="nx">currentValue</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Current value:&#34;</span><span class="p">,</span> <span class="nx">currentValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 设置值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kr">const</span> <span class="nx">transactionResponse</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">store</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">await</span> <span class="nx">transactionResponse</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 获取更新后的值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kr">const</span> <span class="nx">updatedValue</span> <span class="o">=</span> <span class="kr">await</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Updated value:&#34;</span><span class="p">,</span> <span class="nx">updatedValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>最后运行我们的 <code>main</code> 方法：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="nx">then</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="nx">process</span><span class="p">.</span><span class="nx">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">error</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">process</span><span class="p">.</span><span class="nx">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span></code></pre></div><h4 id="运行脚本">运行脚本</h4>
<p>完成脚本编写后，可以通过 Hardhat 提供的 <code>run</code> 命令来运行脚本。</p>
<p>如不加网络参数，则默认使用 <code>hardhat</code> 网络，可以通过 <code>--network</code> 参数指定网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn hardhat run scripts/deploy.js --network rinkeby
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hardhat_deploy_rinkeby.png" alt="hardhat_deploy_rinkeby"></p>
<h3 id="增加-etherscan-合约验证支持">增加 etherscan 合约验证支持</h3>
<p>将合约部署至 Rinkeby 测试网络后可在 Etherscan 上查看合约的地址，并且进行验证。我们可以通过网站进行操作，但 Hardhat 提供了插件支持，更方便进行验证操作。</p>
<h4 id="安装-hardhat-etherscan-插件">安装 hardhat-etherscan 插件</h4>
<p>我们通过 <code>yarn add --dev @nomiclabs/hardhat-etherscan</code> 命令安装插件。</p>
<p><img src="https://image.pseudoyu.com/images/yarn_add_etherscan_verify_support.png" alt="yarn_add_etherscan_verify_support"></p>
<h4 id="启用-etherscan-合约验证支持">启用 etherscan 合约验证支持</h4>
<p>完成安装后，我们需要在 <code>hardhat.config.js</code> 中进行配置：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">require</span><span class="p">(</span><span class="s2">&#34;@nomiclabs/hardhat-etherscan&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">etherscan</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">apiKey</span><span class="o">:</span> <span class="nx">ETHERSCAN_API_KEY</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h4 id="定义-verify-方法">定义 verify 方法</h4>
<p>接下来我们需要在部署脚本 <code>deploy.js</code> 中添加 <code>verify</code> 方法。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="p">{</span> <span class="nx">ethers</span><span class="p">,</span> <span class="nx">run</span><span class="p">,</span> <span class="nx">network</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;hardhat&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">async</span> <span class="kd">function</span> <span class="nx">verify</span><span class="p">(</span><span class="nx">contractAddress</span><span class="p">,</span> <span class="nx">args</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Verifying SimpleStorage Contract...&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">await</span> <span class="nx">run</span><span class="p">(</span><span class="s2">&#34;verify:verify&#34;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">address</span><span class="o">:</span> <span class="nx">contractAddress</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nx">constructorArguements</span><span class="o">:</span> <span class="nx">args</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;already verified!&#34;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Already Verified!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这个方法我们调用了 <code>hardhat</code> 包中的 <code>run</code> 方法，并且传递了一个 <code>verify</code> 命令，并且传递了一个参数 <code>{ address: contractAddress, constructorArguements: args }</code>。因为可能我们的合约已经在 Etherscan 上验证过，所以我们做了一个 <code>try...catch...</code> 错误处理，如果验证过，则会抛出一个错误，并且输出一个提示信息，而不影响我们的部署流程。</p>
<h4 id="设置部署后调用">设置部署后调用</h4>
<p>定义好我们的 <code>verify</code> 方法后，我们可以在部署脚本中调用它：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">async</span> <span class="kd">function</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">network</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">chainId</span> <span class="o">===</span> <span class="mi">4</span> <span class="o">&amp;&amp;</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ETHERSCAN_API_KEY</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">deployTransaction</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">await</span> <span class="nx">verify</span><span class="p">(</span><span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">address</span><span class="p">,</span> <span class="p">[])</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>在这里我们做了两个特殊处理。</p>
<p>首先，我们仅需要在 <code>rinkeby</code> 网络上验证合约，而不需要在本地或其他网络环境验证，因此，我们对 <code>network.config.chainId</code> 进行判断，如果是 <code>4</code>，则执行验证操作；否则，不执行验证操作，此外仅在有 <code>ETHERSCAN_API_KEY</code> 环境变量时执行验证操作。</p>
<p>另外，Etherscan 可能需要在部署后一段时间才能获取到合约地址，因此我们配置了 <code>.wait(6)</code> 等待 6 个区块后再进行验证。</p>
<p>执行效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_verify_contract_etherscan.png" alt="hardhat_verify_contract_etherscan"></p>
<p><img src="https://image.pseudoyu.com/images/verified_contract_on_etherscan.png" alt="verified_contract_on_etherscan"></p>
<p>我们通过 Etherscan 验证后访问后可以直接查看合约源码并进行交互。</p>
<p><img src="https://image.pseudoyu.com/images/interact_with_contract_on_etherscan.png" alt="interact_with_contract_on_etherscan"></p>
<h3 id="合约测试">合约测试</h3>
<p>对于智能合约来说，其大多数操作都需要部署上链，与资产交互，消耗 gas，且一旦有安全隐患会造成严重的后果。因此，我们需要对智能合约进行详细的测试。</p>
<p>Hardhat 提供了完备的测试调试工具，可以在 <code>tests</code> 目录中编写测试脚本，通过 <code>yarn hardhat test</code> 命令运行测试。</p>
<h4 id="编写测试脚本">编写测试脚本</h4>
<p>为我们的部署脚本编写 <code>test-deploy.js</code> 测试程序，首先需要导入必要包：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="p">{</span> <span class="nx">assert</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;chai&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="p">{</span> <span class="nx">ethers</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;hardhat&#34;</span><span class="p">)</span>
</span></span></code></pre></div><p>然后编写测试逻辑：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">describe</span><span class="p">(</span><span class="s2">&#34;SimpleStorage&#34;</span><span class="p">,</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">simpleStorageFactory</span><span class="p">,</span> <span class="nx">simpleStorage</span>
</span></span><span class="line"><span class="cl">    <span class="nx">beforeEach</span><span class="p">(</span><span class="kr">async</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">simpleStorageFactory</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">getContractFactory</span><span class="p">(</span><span class="s2">&#34;SimpleStorage&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">simpleStorage</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorageFactory</span><span class="p">.</span><span class="nx">deploy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">it</span><span class="p">(</span><span class="s2">&#34;Should start with a favorite number of 0&#34;</span><span class="p">,</span> <span class="kr">async</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">currentValue</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">expectedValue</span> <span class="o">=</span> <span class="s2">&#34;0&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="nx">currentValue</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span> <span class="nx">expectedValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// expect(currentValue.toString()).to.equal(expectedValue)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">it</span><span class="p">(</span><span class="s2">&#34;Should update when we call store&#34;</span><span class="p">,</span> <span class="kr">async</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">expectedValue</span> <span class="o">=</span> <span class="s2">&#34;7&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">transactionRespense</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">store</span><span class="p">(</span><span class="nx">expectedValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">await</span> <span class="nx">transactionRespense</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">currentValue</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">simpleStorage</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="nx">currentValue</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span> <span class="nx">expectedValue</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// expect(currentValue.toString()).to.equal(expectedValue)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">})</span>
</span></span></code></pre></div><p>在 Hardhat 的测试脚本中，我们使用 <code>describe</code> 包裹测试类，并且使用 <code>it</code> 包裹测试方法。我们需要保证测试前合约已经部署，因此，我们通过 <code>beforeEach</code> 方法在每个测试方法执行前都会调用 <code>simpleStorageFactory.deploy()</code>，并且将返回的 <code>simpleStorage</code> 对象赋值给 <code>simpleStorage</code> 变量。</p>
<p>我们使用 <code>assert.equal(currentValue.toString(), expectedValue)</code> 来对执行结果与预期结果进行比照，可以用 <code>expect(currentValue.toString()).to.equal(expectedValue)</code> 替代，效果一样。</p>
<p>此外，我们还可以通过 <code>it.only()</code> 来指定仅执行其中一个测试方法。</p>
<h4 id="执行测试脚本">执行测试脚本</h4>
<p>我们通过 <code>yarn hardhat test</code> 运行测试，且可以通过 <code>yarn hardhat test --grep store</code> 来指定测试方法。</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_run_tests.png" alt="hardhat_run_tests"></p>
<h3 id="添加-gas-reporter-支持">添加 <code>gas-reporter</code> 支持</h3>
<p>如上文所述，gas 是我们在开发过程中需要特别关注的资源，尤其在 Ethereum 主网上尤其昂贵。因此，我们需要在测试过程中查看 gas 消耗情况。HardHat 也有一个 <code>gas-reporter</code> 插件，可以很方便地输出 gas 消耗情况。</p>
<h4 id="安装-gas-reporter-插件">安装 <code>gas-reporter</code> 插件</h4>
<p>我们通过 <code>yarn add --dev hardhat-gas-reporter</code> 命令来安装插件：</p>
<p><img src="https://image.pseudoyu.com/images/yarn_add_gas_reporter.png" alt="yarn_add_gas_reporter"></p>
<h4 id="启用-gas-reporter-支持">启用 <code>gas-reporter</code> 支持</h4>
<p>我们通过在 <code>hardhat.config.js</code> 中添加 <code>gasReporter: true</code> 及额外配置项来启用插件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">require</span><span class="p">(</span><span class="s2">&#34;hardhat-gas-reporter&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">COINMARKETCAP_API_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">COINMARKETCAP_API_KEY</span> <span class="o">||</span> <span class="s2">&#34;key&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">gasReporter</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">enabled</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">outputFile</span><span class="o">:</span> <span class="s2">&#34;gas-reporter.txt&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">noColors</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">currency</span><span class="o">:</span> <span class="s2">&#34;USD&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">coinmarketcap</span><span class="o">:</span> <span class="nx">COINMARKETCAP_API_KEY</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">token</span><span class="o">:</span> <span class="s2">&#34;MATIC&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>我们可以指定输出文件、是否开启颜色、指定币种、指定代币名称，以及指定代币的 CoinMarketCap API 密钥来根据项目进一步控制输出。</p>
<p>按照以上配置，运行 <code>yarn hardhat test</code> 输出效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_add_gas_reporter_support_and_export.png" alt="hardhat_add_gas_reporter_support_and_export"></p>
<h3 id="添加-solidity-coverage-支持">添加 <code>solidity-coverage</code> 支持</h3>
<p>合约测试对于保障业务逻辑正确性与安全防范至关重要，因此，我们需要对合约进行覆盖率测试。HardHat 也有一个 <code>solidity-coverage</code> 插件，可以很方便地输出覆盖率情况。</p>
<h4 id="安装-solidity-coverage-插件">安装 <code>solidity-coverage</code> 插件</h4>
<p>我们通过 <code>yarn add --dev solidity-coverage</code> 命令来安装插件：</p>
<p><img src="https://image.pseudoyu.com/images/yarn_add_coverage_support.png" alt="yarn_add_coverage_support"></p>
<h4 id="启用-solidity-coverage-支持">启用 <code>solidity-coverage</code> 支持</h4>
<p>我们仅需在 <code>hardhat.config.js</code> 中导入包即可添加覆盖率测试支持：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="nx">require</span><span class="p">(</span><span class="s2">&#34;solidity-coverage&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h4 id="运行覆盖率测试">运行覆盖率测试</h4>
<p>通过 <code>yarn hardhat coverage</code> 即可运行覆盖率测试：</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_coverage.png" alt="hardhat_coverage"></p>
<h3 id="task">Task</h3>
<p>上文我们对 <code>hardhat</code> 库的基础功能与脚本进行了一些使用。除此之外，我们还可以自定义一些任务供开发调试使用。</p>
<h4 id="编写-task">编写 Task</h4>
<p>Hardhat 中，我们将任务定义在 <code>tasks</code> 目录下，我们将编写一个 <code>block-number.js</code> 的 Task 来获取区块高度：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="p">{</span> <span class="nx">task</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;hardhat/config&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">task</span><span class="p">(</span><span class="s2">&#34;block-number&#34;</span><span class="p">,</span> <span class="s2">&#34;Prints the current block number&#34;</span><span class="p">).</span><span class="nx">setAction</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="kr">async</span> <span class="p">(</span><span class="nx">taskArgs</span><span class="p">,</span> <span class="nx">hre</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kr">const</span> <span class="nx">blockNumber</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">hre</span><span class="p">.</span><span class="nx">ethers</span><span class="p">.</span><span class="nx">provider</span><span class="p">.</span><span class="nx">getBlockNumber</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`Current Block Number: </span><span class="si">${</span><span class="nx">blockNumber</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><p>Task 通过 <code>task()</code> 方法来创建，并通过 <code>setAction()</code> 方法来设置任务的执行函数。其中，<code>taskArgs</code> 是一个包含所有参数的对象，<code>hre</code> 是一个 <code>HardhatRuntimeEnvironment</code> 对象，可以用来获取其他的资源。</p>
<h4 id="运行-task">运行 Task</h4>
<p>定义完成后，在项目命令的 <code>AVAILABLE TASKS</code> 中就有了我们刚定义好的 <code>block-number</code> 任务，可以通过 <code>yarn hardhat block-number</code> 命令来运行任务，同样的，我们可以指定特定网络运行：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn hardhat block-number --network rinkeby
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hardhat_run_tasks.png" alt="hardhat_run_tasks"></p>
<h3 id="hardhat-console">Hardhat Console</h3>
<p>最后，除了通过代码与链/合约进行交互外，我们还可以通过 <code>Hardhat Console</code> 来调试项目，查看链状态，合约的输入、输出等。我们可以通过 <code>yarn hardhat console</code> 命令来打开 Hardhat Console，并进行交互。</p>
<p><img src="https://image.pseudoyu.com/images/hardhat_console.png" alt="hardhat_console"></p>
<h2 id="总结">总结</h2>
<p>以上就是我对 Hardhat 框架的基础配置与使用，它是一个很强大的开发框架，我后续还将会继续深入了解它的更多特性与使用技巧，如果有兴趣，可以继续关注，希望对大家有所帮助。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://www.youtube.com/watch?v=gyMwXuJrbJQ">Learn Blockchain, Solidity, and Full Stack Web3 Development with JavaScript</a></li>
<li><a href="https://github.com/NomicFoundation/hardhat">NomicFoundation/hardhat</a></li>
<li><a href="https://hardhat.org/getting-started">Hardhat 官方文档</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/">Solidity 智能合约开发 - 玩转 Web3.py</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/">Solidity 智能合约开发 - 玩转 ethers.js</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Solidity 智能合约开发 - 玩转 ethers.js</title><link>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</link><pubDate>Wed, 08 Jun 2022 00:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</guid><description>《后来的我们 - 五月天》 前言 在之前的《Solidity 智能合约开发 - 基础》中，我们学习了 Solidity 的基本语法，并且了解了可以通过 Brownie 与 HardHat 等框架进行调试。</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>在之前的《<a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a>》中，我们学习了 Solidity 的基本语法，并且了解了可以通过 <a href="https://github.com/eth-brownie/brownie">Brownie</a> 与 <a href="https://github.com/NomicFoundation/hardhat">HardHat</a> 等框架进行调试。而另一篇《<a href="https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/">Solidity 智能合约开发 - 玩转 Web3.py</a>》中我们也通过 Web3.py 直接与我们本地的 Ganache 节点进行交互了。</p>
<p>原本因为之前比较熟悉 Python 的使用，所以想使用 Brownie 框架进行后续开发。然而经过了一番调研，业界还是使用 HardHat 框架居多，也有更多拓展，且我关注的 Solidity 教程也更新了 <a href="https://www.youtube.com/watch?v=gyMwXuJrbJQ">Javascript 版本</a>，于是还是打算学习一下。</p>
<p>为了更好了解其原理，也为我们后续更好使用框架打好基础，我们这次通过 <a href="https://github.com/ethers-io/ethers.js/">ethers.js</a> 来与我们部署在 <a href="https://dashboard.alchemyapi.io">Alchemy</a> 平台上的 Rinkeby 测试网络进行交互。实现了基础的合约编译、部署至 Rinkeby 网络、与合约交互等功能。</p>
<p>可以点击<a href="https://github.com/pseudoyu/learn-solidity/tree/master/ethers_simple_storage">这里</a>访问本测试 Demo 代码仓库。</p>
<h2 id="ethersjs">ethers.js</h2>
<p>ethers.js 是 Javascript 的一个开源库，可以与以太坊网络进行交互，其 GitHub 地址为 <a href="https://github.com/ethers-io/ethers.js/">ethers.io/ethers.js</a>，可以访问其<a href="https://docs.ethers.io/">官方文档</a>进行使用。</p>
<h3 id="安装">安装</h3>
<p>我们可以通过 yarn 安装 <code>ethers.js</code>，如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn add ethers
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/yarn_add_ethers.png" alt="yarn_add_ethers"></p>
<h3 id="使用">使用</h3>
<p>使用 <code>require</code> 导入库即可使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ethers</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;ethers&#39;</span><span class="p">);</span>
</span></span></code></pre></div><h2 id="solidity-合约编译">Solidity 合约编译</h2>
<h3 id="合约源码">合约源码</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">8</span><span class="p">.</span><span class="mi">7</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">SimpleStorage</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">uint256</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">bool</span> <span class="n">favoriteBool</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">struct</span> <span class="nc">People</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kt">string</span> <span class="nb">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">People</span> <span class="k">public</span> <span class="n">person</span> <span class="o">=</span> <span class="n">People</span><span class="p">({</span><span class="n">favoriteNumber</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nb">name</span><span class="o">:</span> <span class="s">&#34;Arthur&#34;</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">People</span><span class="p">[]</span> <span class="k">public</span> <span class="n">people</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">string</span> <span class="o">=&gt;</span> <span class="kt">uint256</span><span class="p">)</span> <span class="k">public</span> <span class="n">nameToFavoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">store</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">_favoriteNumber</span><span class="p">)</span> <span class="k">public</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">favoriteNumber</span> <span class="o">=</span> <span class="n">_favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">retrieve</span><span class="p">()</span> <span class="k">public</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">addPerson</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">_name</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_favoriteNumber</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">people</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">People</span><span class="p">({</span><span class="n">favoriteNumber</span><span class="o">:</span> <span class="n">_favoriteNumber</span><span class="p">,</span> <span class="nb">name</span><span class="o">:</span> <span class="n">_name</span><span class="p">}));</span>
</span></span><span class="line"><span class="cl">        <span class="n">nameToFavoriteNumber</span><span class="p">[</span><span class="n">_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">_favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这是一个简单的存储合约，通过一个 People 结构体对象来存储人名和他喜欢数字，通过一个数组来存储多个人的信息，并提供了添加、查找方法。</p>
<h3 id="读取合约源文件">读取合约源文件</h3>
<p>当我们通过 VSCode 或其他编辑器完成 Solidity 合约编写与语法检查后，需要编译合约为 abi 文件与 bytecode。</p>
<p>我们可以通过 <code>yarn</code> 安装 <code>solc</code> 命令行工具进行编辑，并且可以选择对应版本，命令如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn add solc@0.8.7-fixed
</span></span></code></pre></div><p>安装完成后，，我们可以通过 <code>solcjs</code> 命令来进行编译，命令如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yarn solcjs --bin --abi --include-path node_modules/ --base-path . -o . SimpleStorage.sol
</span></span></code></pre></div><p>因为编译合约是一个高频操作，我们可以在 <code>package.json</code> 中配置 <code>compile</code> 脚本命令，如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="s2">&#34;scripts&#34;</span><span class="err">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;compile&#34;</span><span class="p">:</span> <span class="s2">&#34;yarn solcjs --bin --abi --include-path node_modules/ --base-path . -o . SimpleStorage.sol&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>之后仅需执行 <code>yarn compile</code> 即可生成合约编译文件。</p>
<h3 id="获取编译结果">获取编译结果</h3>
<p>编译完成后会生成 abi 和 bytecode 文件，分别以 <code>.bin</code> 和 <code>.abi</code> 为后缀。</p>
<h4 id="获取-bytecode-与-abi">获取 bytecode 与 abi</h4>
<p>Solidity 合约的部署与交互需要 bytecode 与 abi 两个部分，我们可以通过通过以下代码将其写入对应变量供后续操作使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs-extra&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">abi</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s2">&#34;./SimpleStorage_sol_SimpleStorage.abi&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">binary</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s2">&#34;./SimpleStorage_sol_SimpleStorage.bin&#34;</span><span class="p">,</span> <span class="s2">&#34;utf-8&#34;</span><span class="p">);</span>
</span></span></code></pre></div><h2 id="创建-rinkeby-测试网络环境alchemy">创建 Rinkeby 测试网络环境（Alchemy）</h2>
<p>智能合约的调试需要将合约部署到实际的链上，我们选择部署到 Alchemy 平台的 Rinkeby 测试网进行后续调试开发，</p>
<h3 id="alchemy-平台">Alchemy 平台</h3>
<p>首先我们访问 <a href="https://dashboard.alchemyapi.io">Alchemy 官网</a>，注册并登录，会看到其 Dashboard，会展示所有已创建的应用。</p>
<p><img src="https://image.pseudoyu.com/images/alchemy_dashboard.png" alt="alchemy_dashboard"></p>
<p>安装完成后选择 Create App 即可快速创建一个 Rinkeby 测试网络节点。</p>
<p><img src="https://image.pseudoyu.com/images/alchemy_create_app.png" alt="alchemy_create_app"></p>
<p>创建完成后，点击 View Details，可以看到我们刚创建的 App 详细信息，点击右上角 View Key，可以查询我们的节点信息，我们需要记录下 HTTP URL，供后续连接使用。</p>
<p><img src="https://image.pseudoyu.com/images/alchemy_app_detail.png" alt="alchemy_app_detail"></p>
<h2 id="创建-rinkeby-测试账户metamask">创建 Rinkeby 测试账户（MetaMask）</h2>
<h3 id="metamask">MetaMask</h3>
<p>完成了 Rinkeby 测试网络环境的创建，我们需要通过 MetaMask 创建账户，获取一些测试 Token，并且将账户私钥记录下来，以便后续使用。</p>
<p><img src="https://image.pseudoyu.com/images/metamask_private_key.png" alt="metamask_private_key"></p>
<h3 id="获取测试-token">获取测试 Token</h3>
<p>创建账户后，我们需要一些测试 Token 来进行后续开发调试，我们可以通过以下网址获取：</p>
<ul>
<li><a href="https://faucets.chain.link">https://faucets.chain.link</a></li>
<li><a href="https://rinkebyfaucet.com/">https://rinkebyfaucet.com/</a></li>
</ul>
<h2 id="连接测试节点与钱包">连接测试节点与钱包</h2>
<h3 id="连接节点">连接节点</h3>
<p><code>ethers.js</code> 提供了库可以方便地连接到我们的测试节点，其中 <code>process.env.ALCHEMY_RPC_URL</code> 为我们在 Alchemy 平台创建 App 的 HTTP URL：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ethers</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;ethers&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">provider</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">providers</span><span class="p">.</span><span class="nx">JsonRpcProvider</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ALCHEMY_RPC_URL</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="连接钱包">连接钱包</h3>
<p><code>ethers.js</code> 也提供了方法可以连接到我们的测试钱包，其中 <code>process.env.RINKEBY_PRIVATE_KEY</code> 为我们从 MetaMask 复制的私钥。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">ethers</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;ethers&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">wallet</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">Wallet</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">RINKEBY_PRIVATE_KEY</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">provider</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><h2 id="solidity-合约部署">Solidity 合约部署</h2>
<h3 id="创建合约">创建合约</h3>
<p>我们可以通过 <code>ethers.js</code> 库创建合约。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">contractFactory</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">ContractFactory</span><span class="p">(</span><span class="nx">abi</span><span class="p">,</span> <span class="nx">binary</span><span class="p">,</span> <span class="nx">wallet</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="部署合约">部署合约</h3>
<p>下面我们介绍一下如何通过 <code>ethers.js</code> 库部署合约，其中 <code>SimpleStorage</code> 合约的 ABI 和 BIN 文件已经在上面的代码中读取过了。</p>
<h4 id="创建合约-1">创建合约</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">contractFactory</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ethers</span><span class="p">.</span><span class="nx">ContractFactory</span><span class="p">(</span><span class="nx">abi</span><span class="p">,</span> <span class="nx">binary</span><span class="p">,</span> <span class="nx">wallet</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="部署合约-1">部署合约</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">contract</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">contractFactory</span><span class="p">.</span><span class="nx">deploy</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="kr">await</span> <span class="nx">contract</span><span class="p">.</span><span class="nx">deployTransaction</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="与合约交互">与合约交互</h3>
<p>我们也可以通过 <code>ethers.js</code> 来与合约进行交互。</p>
<h4 id="retrieve">retrieve()</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">currentFavoriteNumber</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">contract</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">();</span>
</span></span></code></pre></div><h4 id="store">store()</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">transactionResponse</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">contract</span><span class="p">.</span><span class="nx">store</span><span class="p">(</span><span class="s2">&#34;7&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">transactionReceipt</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">transactionResponse</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="从-raw-data-构造交易">从 raw data 构造交易</h3>
<p>除了直接调用部署合约方法等，我们也可以自己构造交易。</p>
<h4 id="构造交易">构造交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">nonce</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">wallet</span><span class="p">.</span><span class="nx">getTransactionCount</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">tx</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">nonce</span><span class="o">:</span> <span class="nx">nonce</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">gasPrice</span><span class="o">:</span> <span class="mi">20000000000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">gasLimit</span><span class="o">:</span> <span class="mi">1000000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">to</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">value</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">data</span><span class="o">:</span> <span class="s2">&#34;0x&#34;</span> <span class="o">+</span> <span class="nx">binary</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="nx">chainId</span><span class="o">:</span> <span class="mi">1337</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><h4 id="签名交易">签名交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">signedTx</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">wallet</span><span class="p">.</span><span class="nx">signTransaction</span><span class="p">(</span><span class="nx">tx</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="发送交易">发送交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sentTxResponse</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">wallet</span><span class="p">.</span><span class="nx">sendTransaction</span><span class="p">(</span><span class="nx">tx</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">await</span> <span class="nx">sentTxResponse</span><span class="p">.</span><span class="nx">wait</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我们通过 <code>ethers.js</code> 库与 Alchemy 的 Rinkeby 测试网络进行交互的步骤，在真正的生产项目开发中我们一般不会直接使用 <code>ethers.js</code> 这样的库，而是会使用 Brownie、HardHat 这样进一步封装的框架，但了解 <code>Web3.py</code> 或 <code>ethers.js</code> 等库的使用方法也非常重要。后续我还会对 HardHat 框架的使用作进一步讲解。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/">Solidity 智能合约开发 - 玩转 Web3.py</a></li>
<li><a href="https://www.youtube.com/watch?v=gyMwXuJrbJQ">Solidity, Blockchain, and Smart Contract - Javascript 版本</a></li>
<li><a href="https://github.com/ethers-io/ethers.js/">ethers.js 项目仓库</a></li>
<li><a href="https://docs.ethers.io/">ethers.js 官方文档</a></li>
<li><a href="https://dashboard.alchemyapi.io">Alchemy 官网</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>[译] 是什么让 Golang 如此受欢迎？语言创造者的回顾</title><link>https://www.pseudoyu.com/en/2022/06/06/golang_creators_look_back/</link><pubDate>Mon, 06 Jun 2022 18:21:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/06/golang_creators_look_back/</guid><description>《后来的我们 - 五月天》 前言 自从 2009 年开源以来，Go 语言的人气一直在增长。其最初创建时背后的五位谷歌软件工程师回顾了是什么推动了这种增长。 Go 的五</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>自从 2009 年开源以来，<a href="https://go.dev/">Go 语言</a>的人气一直在增长。其最初创建时背后的五位谷歌软件工程师回顾了<a href="https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext#R16">是什么推动了这种增长</a>。</p>
<p>Go 的五位创造者在《ACM 通讯》中写道，即使是他们，最早的工作也“极大受益于谷歌许多同事的建议和帮助”，而论文的第二句话强调，它现在是一个公共项目，“有成千上万的个人和几十家公司的贡献”。</p>
<p>在强大的社区支持下，Go 已经实现了不可否认的广泛普及。最近的 <a href="https://www.tiobe.com/tiobe-index/">Tiobe 指数</a>对世界上最受欢迎的编程语言进行了评估，Go 排名第 14 位。</p>
<p>他们的论文指出，<a href="https://thenewstack.io/category/containers/">Docker</a> 和 <a href="https://thenewstack.io/category/kubernetes/">Kubernetes</a> 都是用 Go 编写的，并补充说，这种语言也是“主要云服务供应商的关键基础设施的基础，并且是<a href="https://cncf.io/?utm_content=inline-mention">云原生计算基金会</a>托管的大多数项目的实现方式。”</p>
<p>但更有趣的问题是，为什么 Go 会变得如此流行&hellip;</p>
<p>该论文认为，正是 Go 的“以开发为中心的理念”推动其社区蓬勃发展，然后归功于该社区以及它所构建的技术，最终使 Go 成为“现代云计算环境的重要组成部分”。</p>
<p>简而言之，当回顾过去的 13 年，Go 的创造者们认为，Go 因其对软件工程化的“整体环境”的关注而获得成功。“Go 的方法是不将语言特性看作比环境特性更重要”。</p>
<p>论文作者为 <a href="https://twitter.com/_rsc?lang=en">Russ Cox</a>, <a href="https://github.com/griesemer">Robert Griesemer</a>, <a href="https://twitter.com/rob_pike?lang=en">Rob Pike</a>, <a href="https://www.linkedin.com/in/ianlancetaylor/">Ian Lance Taylor</a> 和 <a href="https://www.computer.org/profiles/kenneth-thompson">Ken Thompson</a>。</p>
<h2 id="早期发展">早期发展</h2>
<p>Go 语言源自谷歌，但这并不影响它的发展，因为自这家搜索引擎公司 1998 年成立到推出 Go，才刚刚过了 10 年。Go 的二进制文件也更容易部署，因为与 Java 的二进制文件不同，Go 的二进制不需要单独的运行时环境来执行。</p>
<p>其他语言特性也使其更具吸引力，因为 Go 是包含“垃圾回收”功能的语言之一，可以自动释放不再被变量使用的内存。论文指出，为此，Go 语言利用了新的多核处理器，在一个专门的内核上运行其垃圾回收，以降低对延迟的影响。</p>
<p>这种并发性是作为语言的核心部分而不是一个独立的可选库提供的。事实上，这在很大程度上解释了为什么 Go 是以这种方式构建的。论文中有一节题为“起源”，描述了 Go 是如何从谷歌的经验中成长起来的，谷歌有一个庞大的多语言代码库，由大约 4000 名活跃的开发人员共享。</p>
<p>他们的日常经验表明，需要一种更好的方式来利用新型多核芯片的性能来处理大规模的负载。回顾过去，该语言的创造者们写道，Go 是他们对“应对这些挑战而设计的语言可能是什么样子”这一问题的回答。Go 是专门为提供一流的并发和并行支持而设计的，这意味着 Go 不仅可以有效地处理多个任务，还可以同时执行多个任务。</p>
<p>在 Go 语言出现，工程师们一直被迫使用笨拙的语法和“大的、固定大小的线程栈”。论文认为，启用并发的线程不受欢迎，因为它们难以创建、使用和管理。一个脚注甚至提到了 <a href="https://web.stanford.edu/~ouster/cgi-bin/papers/threads.pdf">1995 年的论文</a>，该论文来自 TCl 脚本语言的创造者 John Ousterhout，题为“为什么线程是一个坏主意（对于大多数目的）”。</p>
<p>他们写道：“解决这种矛盾关系是创建 Go 的主要动机之一，后来他们称这是该语言的“主要不寻常属性”。</p>
<h2 id="语言设计之外">语言设计之外</h2>
<p>该文件还称，Go 今天的流行是由于更广泛的科技行业现在经常使用云服务提供商以及它们所实现的大规模生产环境（Go 就是为解决这个问题而设计的），除此之外还有一些其他明显的优势。</p>
<p>后来，该文件指出，Go “移除了在 C 和 C++ 程序中引起大量问题的未定义行为”。(例如，如果代码试图做一些危险的事情，如解引用空指针或使用超出数组、分片界限的索引，Go 会简单地抛出一个运行时异常并停止运行程序。)</p>
<p>但 Go 的创造者们将 Go 的流行归功于其他方面。他们强调，“更重要的是早期的工作，为打包、依赖、构建测试、部署和其他软件开发领域的日常任务建立了基础，这些方面通常在语言设计中并不重要”，这些特性吸引了那些开发者通过有用的包在他们的生态系统中“播种”。虽然最初的版本只支持 Linux 和 MacOS X，但这个热情的社区很快就为 Go 的编译器和库创建了 Windows 版本，并将它们移植到其他操作系统。</p>
<p>该论文认为，对开发者的关注应该贯穿语言的开发。例如，它在早期就注意到 Go 的高质量密码学库（包括对安全通信协议 SSL 和 TLS 的支持）。Go 的标准库还包括了一个内置的 HTTPS 客户端和服务端，用于与其他系统进行在线交互。</p>
<p>但更重要的是 Go 处理库的方式。Go 的编译器被设计成克制地导入必要的库，包含在其二进制文件中。这避免了在其他语言中看到的行为，即只是为了确保包含一个必要的功能就要导入整个库。</p>
<p>考虑到开发人员的需求，Go 允许从其他领域轻松导入外部库（同时包含自动检查兼容版本的方式）。论文指出，“作为一种分布式计算的语言，Go 中没有必须发布 Go 软件包的一个中心化服务器”。(虽然现在有一个可用的 Go 软件包公共镜像，以及包含加密签名的日志）</p>
<p>Go 在标准发行版中还拥有对程序剖析等优化技术的支持，以及对模糊处理等测试功能的支持。该论文指出，Go 甚至有一个代码布局的惯例(Go 的 <code>gofmt</code> 工具将源代码解析成这种标准化的布局)。这和其他内置工具能使它更容易建立从 IDE 插件和调试器到框架和构建自动程序的一切。Go 的创造者认为，他们的语言是专门为鼓励创建工具和自动化而设计的，“因此，Go 世界有一个丰富的、不断扩展的、互操作的工具包”。</p>
<p>他们的论文认为，语言只是其吸引力的一部分。“完整的故事必须涉及整个 Go 环境：库、工具、惯例和软件工程的整体方法”。</p>
<h2 id="保持一致性">保持一致性</h2>
<p>他们论文的另一部分也吹捧了语言的一致性。Go 的创造者们承认，在它最早的几年里，“我们在每一个周的版本中都对它进行修补和调整，用户在更新到新的 Go 版本时，常常不得不改变他们的程序”。</p>
<p>但自 2012 年以来（随着 Go 1 版本的正式发布），“我们公开承诺只对语言和标准库进行向后兼容的修改，因此程序在用较新的 Go 版本编译时将继续运行，不会有任何变化。”</p>
<p>结果如何呢？从那时起，这门语言“几乎被冻结了”，论文解释说。但工具却有了戏剧性的增长，具体来说，就是“更好的编译器，更强大的构建和测试工具，以及改进的依赖性管理，更不用说支持 Go 的大量开源工具了”。论文认为，这有助于鼓励创建教学材料，并吸引用户和“第三方软件包蓬勃发展的生态系统”。</p>
<blockquote>
<p>“虽然大多数语言的设计都集中在语法、语义或类型的创新上，但 Go 却专注于软件开发过程本身”。</p>
</blockquote>
<blockquote>
<p><a href="https://cacm.acm.org/magazines/2022/5/260357-the-go-programming-language-and-environment/fulltext">The Go Programming Language and Environment | May 2022 | Communications of the ACM</a></p>
</blockquote>
<p>该论文的的一个观点甚至认为 Go 精心平衡的功能集避免了语言开发者的过度扩张。但是，论文的结尾处提到了这一规则的例外情况，即 Go 确实增加了一个重要的新功能。仅仅两个月前，Go 增加了<a href="https://github.com/golang/proposal/blob/4a54a00950b56dd0096482d0edae46969d7432a6/design/go2draft-contracts.md">参数多态性</a>，它是“为适应 Go 的其他部分而定制的”。</p>
<p>“在坚持一致性、完整性和社区性原则的前提下进行如此大的语言变化，将是对这种方法的严峻考验。”</p>
<p>Go 的创造者们认识到，需要一个社区来维持一种编程语言，也许还需要一个社区来建立一个。论文最后感谢了他们在谷歌的同事，感谢他们在 Go 最早的时候提供的建议和支持，他们预示着社区的支持将如潮水般涌来。“自公开发布以来，由于 Google 的 Go 团队扩大了，再加上一批巨大的开源贡献者，Go 得到了发展和改进。Go 现在是由成千上万的人共同完成的，在此无法一一列举”。</p>
<p>&ldquo;我们感谢所有帮助 Go 发展到今天的人&rdquo;。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li>原文作者：David Cassel</li>
<li><a href="https://thenewstack.io/what-made-golang-so-popular-the-languages-creators-look-back/">原文地址</a></li>
<li><a href="https://github.com/gocn/translator/blob/master/2022/w18_Golang_creators_look_back.md">本文永久链接</a></li>
<li><a href="https://github.com/pseudoyu">译者：张宇</a></li>
<li><a href="https://github.com/cvley">校对：cvley</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>25 岁的自白：花束般的恋爱</title><link>https://www.pseudoyu.com/en/2022/06/06/yearly_review_25/</link><pubDate>Mon, 06 Jun 2022 00:01:29 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/06/yearly_review_25/</guid><description>前言 现在是 2022 年 6 月 6 日，我 25 岁了。其实自两年前的今天发的那篇 『23 岁的自白：去追寻意义』之后，有打算每年都写一篇，算是对自己过去这或许精彩或</description><content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/yu_self.png" alt="yu_self"></p>
<p>现在是 2022 年 6 月 6 日，我 25 岁了。其实自两年前的今天发的那篇 『<a href="https://www.pseudoyu.com/en/2020/06/06/yearly_review_23/">23 岁的自白：去追寻意义</a>』之后，有打算每年都写一篇，算是对自己过去这或许精彩或许碌碌的一年作一个交代。</p>
<p>23 岁确实发生了很多事，但每次打开空白文档时都不知如何下笔。跟高中或是大学不同，这一年经历了很多变动，两个亲近的家人相继离世、感情变动、跨专业读研的压力、求职的焦虑&hellip;</p>
<p>已经很难用一个明确的主题或是几个关键词来概括这些经历，挣扎了几次，最终还是放弃了。也安慰自己说，还有跨年，等工作与未来一段时间的生活状态有更多确定性了，自己想说的一定更多吧。却一直拖到了现在。</p>
<p>那刚刚过去的 24 岁这一年呢？</p>
<h2 id="关于爱情">关于爱情</h2>
<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/I_fell_in_love_like_a_flower_bouquet.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《花束みたいな恋を - 大友良英》</figcaption></i>
</figure>
<hr>
<p>想来也挺有意思，这一年也发生了很多事，而在回忆的时候，却可以用『花束般的恋爱』这一个词来概括。</p>
<p>扪心自问，自己并不是一个面对感情很成熟的人，追求自我、常常害怕承诺、人际界限也处理得并不明白，这些可以称之为“渣男”品质的 buff 一个没少。但我又似乎是一个幸运的人，<del>遇到了</del>遇到过愿意包容并陪着我慢慢成长的她。</p>
<p>这段感情是充满着期待与美好开始的，两个很像的人，有着共同的目标，有着自己热爱的东西，作为同路人携手向前。有很长一段时间我都沉浸在这种幸福的状态中，甚至怀疑自己值不值得这种幸运，毕竟自己曾经真的是一个很烂的人，也做了一些糟糕的事，得到原谅已经是万幸，怎么敢奢求更多。</p>
<p>在过去的这一年里，我变了很多，开始变得愿意去思考未来，期待未来，也开始给出一些承诺，不再害怕改变自己的生活。两个人一起来到北京，养猫、存钱、努力工作，装点着忙碌却充实的生活，期待着能一起回杭州的新阶段，勾画着属于两个人的未来。我常常想，这可能就是我的完美爱情了吧。</p>
<p>可是，感情最忌讳的就是自我满足的付出与理所应当的惯性吧。可能自己一直自认为是一个还算合格的男朋友吧，时间空间上做到了陪伴，还算努力工作，她想要的东西也会尽量满足，但可能也就仅此而已了。仔细回想了一下，有多久没有两个人敞开心扉聊聊了，有多久没有在某个特定的节日精心准备惊喜了，又有多久没有两个人一起出去好好地约会了，甚至在最重要的生日，都忘了吹蜡烛许愿，拖到了第二天来弥补，还有很多很多没有做到的。</p>
<p>也许有很多理由吧，可以用来让自己稍“心安”一点。比如两个人约好了不整什么虚的，甚至提前列好了未来一年互相送的对方想要的礼物；比如连续两个月每周末都加班，实在是没有心力筹划那么多出去玩的行程；比如两个人都已经从朝夕相处的同专业同学转向了新的工作阶段，已经没有那么多共同话题了；比如，&hellip;</p>
<p>当这段感情真的以一种戛然而止的方式结束后，我才后知后觉地明白，也许她并没有从中得到属于她的爱情。当爱情的幻想与现实慢慢重叠，当距离冲淡了热恋期的滤镜，当我将自己的情绪与分享欲都寄托在感情上时，也许感情已经慢慢背离了原本的轨道了，只是，我是那个一直被保护的幸福的人罢了。</p>
<p><img src="https://image.pseudoyu.com/images/flowers_movie_screenshot.jpg" alt="flowers_movie_screenshot"></p>
<p>我一直以来都自认为不属于一个典型的浪漫主义者，从没期待着自己的生活能够像书籍电影那样精彩，只是尽可能依从着自己的情感和意愿继续走下去。未曾想我会从这样一部电影里看到这么多自己生活的影子，甚至看到了结局。</p>
<p>但是，事业刚起步的生活阶段和感情真的没办法共存么？</p>
<p>时至今日，我依然不这么觉得，借用 『<a href="https://space.bilibili.com/37029661">小鹿 Lawrence</a>』某个视频里的一句话：</p>
<blockquote>
<p>她其实是一个很容易满足的人，喂到了小熊猫，就能开心个好几天，甚至是我不用加班剪片子，也可以高兴到手舞足蹈，也会在看完『花束般的恋爱』后，哭得像个傻子。而我共情的点和米老师不太一样，是他们去书店，男主角一直在看『成功学』的书，因为我最近在看管理学。我理解他是因为，我们不是不喜欢文学了，而是真的有的时候生活只有拼了命的去改变、去适应，才能勉强的，维持现状。</p>
</blockquote>
<p>有时候觉得，“维持现状”这个词真美好呀。在有的阶段我们可以惬意地感受、享受爱情的美好，而在有的阶段，仅仅是维持就已经需要拼了命地改变了。</p>
<p>总是觉得两个人的喜欢是基于互相的仰慕，对两个人的个性、所做的事、所热爱的东西出自内心的认可。被仰慕的人内心会被填满，而仰慕者眼神和举止都是在发光。也许自己将更少的关注放在对方作为独立个体的一举一动上了，也许自己曾经的很多吸引的点已经被淹没在生活工作琐事中，不再值得了。有很多的也许，但无论接受与否，至少这个阶段的缘分已经结束了。</p>
<p>不知不觉已经一个月过去了，令我自己都惊讶的是自己并没有那么理所应当地自暴自弃，就像最近刚看完的一部挺喜欢的剧，『我的解放日志』中的一句话：</p>
<blockquote>
<p>“但我很想挣脱，我希望我的人生，可以真正幸福快乐起来。所以你来仰慕我吧，这样到了春天，你我都会蜕变。”</p>
</blockquote>
<p>其实自己很少会公开讲述自己的感情，没想到以这样的方式碎碎念了那么多。这段感情于我的意义很重大，很遗憾没有在合适的时机分享出来。到了现在，大概已经是过期的糖了。</p>
<p>我依然在找寻这段感情或是这段人生的救赎，我的内心依然会保留或是重新燃起这份仰慕，直到没有办法继续前进吧，大概吧，无所谓结局，被爱的人内心会被填充，会感受到幸福吧。</p>
<h2 id="关于其他">关于其他</h2>
<p>过去一年的工作历程中，从步入工作的忐忑，到临危受命地负责了一个项目的痛苦挣扎，再到一切渐渐步入正轨。在工作中得到了很多学习成长，遇到了一个很契合的 leader 和一个很有趣的项目团队，另一位 leader 还常常在 Twitter 上鼓励我沉淀成长，很感谢自己的第一份工作遇到了他们。</p>
<p>很感慨，虽然也有不少起起伏伏，但现在回想起来却大多无足轻重了，自己却为了这些忽视了生活和情感中真正重要的部分，大概这就是人生吧，永远也不可能在上帝视角下看待自己的一举一动。但至少，自己还在坚持选择的行业里做着喜欢的事，这已经是最大的幸运了吧。</p>
<p>有开始重新好好写博客，这一年里发布了 22 篇博文，虽然有一半都是上个月更新的。填了自己一直想写的博客搭建的坑，收到了不少关注和评论，也认识了不少志同道合的朋友。因这几篇文章还入驻了『<a href="https://sspai.com/u/pseudoyu/posts">少数派</a>』成为了作者，文章被其创始人转了，还收到了约稿邀请，很有意思的体验。</p>
<p>新的一年里也还是要继续坚持输出吧。</p>
<p><img src="https://image.pseudoyu.com/images/yu_blog_update.png" alt="yu_blog_update"></p>
<p>一直想好好做开源，但是没想到却是上个月重新整理了自己的各类工具发布的一个 GitHub 项目『<a href="https://github.com/pseudoyu/yu-tools">pseudoyu/yu-tools 个人工具箱</a>』，让我收获了第一个 100 star，意外之喜。</p>
<p><a href="https://star-history.com/#pseudoyu/yu-tools&amp;Date"><img src="https://api.star-history.com.png?repos=pseudoyu/yu-tools&amp;type=Date" alt="Star History Chart"></a></p>
<p>之后新的一年能沉下心多输入和沉淀，对开源项目能有更多代码贡献吧。</p>
<p>大概自己还有着英语专业的魂，在『<a href="https://github.com/gocn/translator">GoCN 翻译小组</a>』完成了 8 篇 Go 语言相关的技术文章的翻译，参与区块链安全余弦大佬牵头的『<a href="https://darkhandbook.io">区块链黑暗森林自救手册</a>』，参与完成了英文版本的翻译和全球发布，也算是为区块链行业做了一些微小的贡献。</p>
<p>大概在技术之路上这些也仅仅是微不足道，但至少有在好好前进吧。</p>
<h2 id="总结">总结</h2>
<p>这就是我的 24 岁，平凡却又难忘的一年岁月。</p>
<p><img src="https://image.pseudoyu.com/images/lawrence_comments.png" alt="lawrence_comments"></p>
<p>对于即将来到的 25 岁，我说不上有太多期待。引用一下我对『<a href="https://space.bilibili.com/37029661">小鹿 Lawrence</a>』一个视频转发评论中所说的话作为结束吧。</p>
<blockquote>
<p>人生就是有这样的时候，需要勉强努力一个人生活下去。</p>
</blockquote>
<p>感谢他作为我最爱的博主在动态下的评论，很受鼓舞。也感谢身边所有关心我的亲人朋友，新的一年，也请多多关照。</p>
]]></content:encoded></item><item><title>让窗口管理也能自动化，基于 yabai+skhd 的 macOS 窗口管理系统</title><link>https://www.pseudoyu.com/en/2022/06/04/macos_window_management_solution_using_yabai_and_skhd/</link><pubDate>Sat, 04 Jun 2022 13:08:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/04/macos_window_management_solution_using_yabai_and_skhd/</guid><description>《后来的我们 - 五月天》 前言 从 2017 年暑假攒钱买了第一台 MacBook Pro 开始，我使用 macOS 已经五年了。随着工作学习需要，也逐渐开始使用多屏工作流。因为随时都需要开</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>从 2017 年暑假攒钱买了第一台 MacBook Pro 开始，我使用 macOS 已经五年了。随着工作学习需要，也逐渐开始使用多屏工作流。因为随时都需要开很多窗口，如 IDE、文本编辑工具、终端、IM 软件、邮件客户端等，稍没注意就很乱，得不停地切换来找到需要的窗口，很不方便，于是我开始了自己的窗口管理方案探索之路。</p>
<h2 id="窗口管理方案需求">窗口管理方案需求</h2>
<p>首先，我梳理了一下自己的窗口管理需求，列出了以下几个核心要点：</p>
<ol>
<li>每次打开一个新窗口后会在当前桌面自动进行智能分屏，如只有单窗口就全屏，两个窗口就二等分，以此类推</li>
<li>通过快捷键对分屏布局进行调整或恢复初始化布局</li>
<li>通过快捷键在不同窗口之间跳转</li>
<li>通过快捷键移动/交换不同窗口位置</li>
<li>通过快捷键便捷地对当前窗口作一些操作，如全屏、居中、发送到某个特定的桌面等</li>
<li>切换速度快</li>
</ol>
<p>针对这些需求，我开始调研目前比较流行的几款窗口管理工具。</p>
<h2 id="窗口管理工具">窗口管理工具</h2>
<p>市面上已经有很多相对成熟的窗口管理工具解决方案，比如 <a href="https://magnet.crowdcafe.com">Magnet</a>、<a href="https://docs.folivora.ai/docs/100_window_snapping_chapter.html">BetterTouchTool 附带的窗口吸附功能</a>等，我都有购买使用，总体来说还是觉得不太适合自己的工作流。</p>
<p>Magnet 主要依赖于快捷键，尽管可以自己定制符合习惯的快捷键，但记忆成本很高，且如果有多台设备也需要用自己的帐号下载后重新配置才可以继续使用，并不方便。</p>
<p><img src="https://image.pseudoyu.com/images/magnet_keyshotcuts.png" alt="magnet_keyshotcuts"></p>
<p>BetterTouchTool 则是依赖于鼠标移动到窗口各个触发角，优势是不需要自己设置快捷键，仅需将鼠标移动到窗口边缘即可实现分屏。但与 Magnet 有着同样的弊端是，每次打开一个新窗口后还是需要自己手动去实现分屏，在很忙或者窗口很多的时候也常常会忘记，不便于管理。</p>
<p><img src="https://image.pseudoyu.com/images/bettertouchtool_setting.png" alt="bettertouchtool_setting"></p>
<p>既然现有的软件都无法完全满足我的需求，作为一个爱折腾的程序员，目标转向了开源社区一些可高度定制化的解决方案。</p>
<h2 id="开源解决方案">开源解决方案</h2>
<h3 id="hammerspoon">Hammerspoon</h3>
<p><a href="https://www.hammerspoon.org">Hammerspoon</a> 是一个强大的 macOS 自动化工具，可以通过自己编写一些 lua 脚本实现窗口管理功能，并且可以自定义快捷键，除了窗口管理外，还可以实现例如休眠控制、剪贴板工具等丰富的功能。我配置使用了一阵子后，发现和 Magnet 类似，也没办法很好地实现智能分屏（或许有写好的脚本，但需要对很多软件进行单独配置，实现起来比较麻烦），于是也弃用了。</p>
<h3 id="yabai--skhd">yabai + skhd</h3>
<p>经过一番调研，从 YouTuber <a href="https://www.youtube.com/c/JoshMedeski">Josh Medeski</a> 的 &lt;<a href="https://www.youtube.com/watch?v=fYsCAOfGjxE">Blazing Fast Window Management on macOS</a>&gt; 视频中找到了一个解决方案，开源、免费、定制化强，仅需一个配置文件就可以完美实现我的所有需求。</p>
<h4 id="yabai">yabai</h4>
<p><a href="https://github.com/koekeishiya/yabai">yabai</a> 是 macOS 内置窗口管理工具的一个开源拓展，可以通过命令行工具实现自由控制窗口和多显示器。它最主要的特色是使用 <code>binary space partitioning</code> 算法自动修改窗口布局，使我们能够专注于窗口内容，不需要主动进行管理，仅需打开对应软件窗口，实现自动编排，工作流不会受到干扰。</p>
<h4 id="skhd">skhd</h4>
<p><a href="https://github.com/koekeishiya/skhd">skhd</a> 是一个 macOS 快捷键管理工具，能够通过配置文件来调用绑定其他程序/命令，如 yabai 的窗口管理命令，实现高度定制化的窗口操作。skhd 的实现很注重性能，响应速度很快。</p>
<h2 id="我的窗口管理配置">我的窗口管理配置</h2>
<h3 id="yabai-1">yabai</h3>
<h4 id="安装与基础配置">安装与基础配置</h4>
<p>yabai 的安装很容易，按照其<a href="https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)">官方 wiki</a> 说明安装即可。</p>
<p>个人推荐通过 <a href="https://brew.sh">brew</a> 进行安装，如果没有安装过 <code>brew</code> 可以先通过官方一键脚本进行安装。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">/bin/bash -c <span class="s2">&#34;</span><span class="k">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></div><p>安装完 <code>brew</code> 后，即可继续通过命令进行安装与基本配置。打开终端，输入以下命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">brew install koekeishiya/formulae/yabai
</span></span></code></pre></div><p>安装脚本插件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo yabai --install-sa
</span></span><span class="line"><span class="cl">sudo yabai --load-sa
</span></span></code></pre></div><p>启动 yabai 服务：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">brew services start yabai
</span></span></code></pre></div><p>注：如果是 macOS Big Sur 或 Monterey 系统，因为需要通过 API 注入的方式来调用脚本，需要配置一下 <code>root</code> 权限与开机自启，官方也提供了详细的操作方法：</p>
<p>编辑 <code>/private/etc/sudoers.d/yabai</code> 文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">sudo visudo -f /private/etc/sudoers.d/yabai
</span></span></code></pre></div><p>在打开的文件中添加以下内容：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">&lt;user&gt; <span class="nv">ALL</span> <span class="o">=</span> <span class="o">(</span>root<span class="o">)</span> NOPASSWD: &lt;path&gt; --load-sa
</span></span></code></pre></div><p>上述 <code>&lt;&gt;</code> 内的 <code>user</code> 和 <code>path</code> 可以通过 <code>whoami</code> 和 <code>which yabai</code> 命令获取。</p>
<p><img src="https://image.pseudoyu.com/images/see_user_and_config_yabai_sudo.png" alt="see_user_and_config_yabai_sudo"></p>
<p>完成以上配置后，后续在 yabai 的 <code>.yabairc</code> 配置文件中加入下述两行：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">sudo yabai --load-sa
</span></span><span class="line"><span class="cl">yabai -m signal --add event=dock_did_restart action=&#34;sudo yabai --load-sa&#34;
</span></span></code></pre></div><h4 id="自定义配置">自定义配置</h4>
<p>yabai 的配置文件由用户在 <code>$HOME</code> 目录下的 <code>.yabairc</code> 文件进行管理，通过编辑器或命令行工具进行编辑：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vi ~/.yabairc
</span></span></code></pre></div><p>以下是我的个人配置，可以复制之后自己进行定制化修改。我已经将我的个人配置放在了 GitHub 代码托管平台，可以点击<a href="https://github.com/pseudoyu/dotfiles/blob/master/yabai/yabairc">这里</a>查看。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl"># !/usr/bin/env sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo yabai --load-sa
</span></span><span class="line"><span class="cl">yabai -m signal --add event=dock_did_restart action=&#34;sudo yabai --load-sa&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 全局配置
</span></span><span class="line"><span class="cl">yabai -m config mouse_follows_focus          off
</span></span><span class="line"><span class="cl">yabai -m config focus_follows_mouse          off
</span></span><span class="line"><span class="cl">yabai -m config window_origin_display        default
</span></span><span class="line"><span class="cl">yabai -m config window_placement             second_child
</span></span><span class="line"><span class="cl">yabai -m config window_topmost               off
</span></span><span class="line"><span class="cl">yabai -m config window_shadow                on
</span></span><span class="line"><span class="cl">yabai -m config window_opacity               off
</span></span><span class="line"><span class="cl">yabai -m config active_window_opacity        1.0
</span></span><span class="line"><span class="cl">yabai -m config normal_window_opacity        0.90
</span></span><span class="line"><span class="cl">yabai -m config window_border                off
</span></span><span class="line"><span class="cl">yabai -m config window_border_width          6
</span></span><span class="line"><span class="cl">yabai -m config active_window_border_color   0xff775759
</span></span><span class="line"><span class="cl">yabai -m config normal_window_border_color   0xff555555
</span></span><span class="line"><span class="cl">yabai -m config insert_feedback_color        0xffd75f5f
</span></span><span class="line"><span class="cl">yabai -m config split_ratio                  0.50
</span></span><span class="line"><span class="cl">yabai -m config auto_balance                 off
</span></span><span class="line"><span class="cl">yabai -m config mouse_modifier               fn
</span></span><span class="line"><span class="cl">yabai -m config mouse_action1                move
</span></span><span class="line"><span class="cl">yabai -m config mouse_action2                resize
</span></span><span class="line"><span class="cl">yabai -m config mouse_drop_action            swap
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># space 配置
</span></span><span class="line"><span class="cl">yabai -m config layout                       bsp
</span></span><span class="line"><span class="cl">yabai -m config top_padding                  15
</span></span><span class="line"><span class="cl">yabai -m config bottom_padding               15
</span></span><span class="line"><span class="cl">yabai -m config left_padding                 15
</span></span><span class="line"><span class="cl">yabai -m config right_padding                15
</span></span><span class="line"><span class="cl">yabai -m config window_gap                   15
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 忽略的 app
</span></span><span class="line"><span class="cl">yabai -m rule --add app=&#34;^System Preferences$&#34; manage=off
</span></span><span class="line"><span class="cl">yabai -m rule --add app=&#34;^Archive Utility$&#34; manage=off
</span></span><span class="line"><span class="cl">yabai -m rule --add app=&#34;^Logi Options+$&#34; manage=off
</span></span><span class="line"><span class="cl">yabai -m rule --add app=&#34;^Alfred Preferences$&#34; manage=off
</span></span></code></pre></div><p>我的配置基本仅在官方提供的示例上进行了部分修改，使用 <code>bsp</code> 算法智能分屏，并调整了 space 为 15，这样的间距更舒服。</p>
<p>我还添加了一些自定义的规则，可以在打开系统配置、解压工具等无法自定义窗口的应用时候忽略。</p>
<p>整体呈现如下（以下效果为打开应用窗口后算法自动编排，且新增窗口会自动重排）：</p>
<p><img src="https://image.pseudoyu.com/images/my_layout_1.png" alt="my_layout_1"></p>
<h3 id="skhd-1">skhd</h3>
<p>配置好了 yabai 后，我们已经实现了智能分屏，但是有时候算法提供的窗口位置不满足我们的需求，或是我们需要频繁在各个窗口之间切换/调整，那就需要用到 skhd 工具来定制一些快捷键配置。</p>
<h4 id="安装">安装</h4>
<p>skhd 也可以通过 <code>brew</code> 包管理工具进行安装，很方便：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">brew install koekeishiya/formulae/skhd
</span></span></code></pre></div><p>安装完成后启动即可：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">brew services start skhd
</span></span></code></pre></div><h4 id="自定义配置-1">自定义配置</h4>
<p>与 yabai 类似，skhd 的配置是通过 <code>$HOME/.skhdrc</code> 配置文件进行管理的，通过编辑器或命令行工具进行编辑即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vi ~/.skhdrc
</span></span></code></pre></div><p>以下是我的个人配置，可以复制之后自己进行定制化修改。我已经将我的个人配置放在了 GitHub 代码托管平台，可以点击<a href="https://github.com/pseudoyu/dotfiles/blob/master/skhd/skhdrc">这里</a>查看。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl"># 窗口聚焦
</span></span><span class="line"><span class="cl">alt - h : yabai -m window --focus west
</span></span><span class="line"><span class="cl">alt - j : yabai -m window --focus south
</span></span><span class="line"><span class="cl">alt - k : yabai -m window --focus north
</span></span><span class="line"><span class="cl">alt - l : yabai -m window --focus east
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 交换窗口
</span></span><span class="line"><span class="cl">shift + alt - h : yabai -m window --swap west
</span></span><span class="line"><span class="cl">shift + alt - j : yabai -m window --swap south
</span></span><span class="line"><span class="cl">shift + alt - k : yabai -m window --swap north
</span></span><span class="line"><span class="cl">shift + alt - l : yabai -m window --swap east
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 移动窗口
</span></span><span class="line"><span class="cl">shift + alt + ctrl - h : yabai -m window --warp west
</span></span><span class="line"><span class="cl">shift + alt + ctrl - h : yabai -m window --warp south
</span></span><span class="line"><span class="cl">shift + alt + ctrl - h : yabai -m window --warp north
</span></span><span class="line"><span class="cl">shift + alt + ctrl - h : yabai -m window --warp east
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 旋转窗口布局
</span></span><span class="line"><span class="cl">alt - r : yabai -m space --rotate 90
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 全屏
</span></span><span class="line"><span class="cl">alt -f : yabai -m window --toggle zoom-fullscreen
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 设置/取消窗口 space
</span></span><span class="line"><span class="cl">alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 挂起窗口至屏幕中央/取消挂起窗口
</span></span><span class="line"><span class="cl">alt - t : yabai -m window --toggle float;\
</span></span><span class="line"><span class="cl">          yabai -m window --grid 4:4:1:1:2:2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 修改窗口切分方式
</span></span><span class="line"><span class="cl">alt - e : yabai -m window --toggle split
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 重置窗口布局
</span></span><span class="line"><span class="cl">shift + alt - 0 : yabai -m space --balance
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 移动窗口至特定桌面
</span></span><span class="line"><span class="cl">shift + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
</span></span><span class="line"><span class="cl">shift + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
</span></span><span class="line"><span class="cl">shift + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
</span></span><span class="line"><span class="cl">shift + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
</span></span><span class="line"><span class="cl">shift + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5
</span></span><span class="line"><span class="cl">shift + alt - 6 : yabai -m window --space 6; yabai -m space --focus 6
</span></span><span class="line"><span class="cl">shift + alt - 7 : yabai -m window --space 7; yabai -m space --focus 7
</span></span><span class="line"><span class="cl">shift + alt - 8 : yabai -m window --space 8; yabai -m space --focus 8
</span></span><span class="line"><span class="cl">shift + alt - 9 : yabai -m window --space 9; yabai -m space --focus 9
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 增加窗口大小
</span></span><span class="line"><span class="cl">shift + alt - w : yabai -m window --resize top:0:-20
</span></span><span class="line"><span class="cl">shift + alt - d : yabai -m window --resize left:-20:0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># 减少窗口大小
</span></span><span class="line"><span class="cl">shift + alt - s : yabai -m window --resize bottom:0:-20
</span></span><span class="line"><span class="cl">shift + alt - a : yabai -m window --resize top:0:20
</span></span></code></pre></div><p>简单来说，我配置了与 vim 快捷键操作逻辑类似的配置，实现了以下常用功能：</p>
<ul>
<li><code>&lt;Option&gt; + hjkl</code> 在不同的窗口之间聚焦</li>
<li><code>&lt;Option&gt; + &lt;Shift&gt; + hjkl</code> 交换不同窗口</li>
<li><code>&lt;Option&gt; + &lt;Shift&gt; + 0</code> 重置窗口布局</li>
<li><code>&lt;Option&gt; + &lt;Shift&gt; + &lt;1~9&gt;</code> 快速将当前窗口移动到特定桌面</li>
<li><code>&lt;Option&gt; + f</code> 全屏</li>
<li><code>&lt;Option&gt; + t</code> 挂起窗口至屏幕中央/取消挂起窗口</li>
<li><code>&lt;Option&gt; + g</code> 设置/取消窗口 space</li>
<li><code>&lt;Option&gt; + r</code> 旋转窗口布局</li>
<li><code>&lt;Option&gt; + e</code> 修改窗口切分方式</li>
</ul>
<p>其中 <code>hjkl</code> 是 vim 编辑器常用的操作，大家也可以修改为上下左右或其他自己喜欢的键位。</p>
<p>完成以上配置后，我们就实现了 yabai 智能窗口管理以及通过简单的快捷键进行窗口操作，接下来我们对 macOS 系统进行一些配置，来优化一下我们的窗口管理系统吧。</p>
<h3 id="macos-桌面管理">macOS 桌面管理</h3>
<p>macOS 提供了多桌面管理的强大功能，可以理解为每个桌面区域都是一个工作区，可以独立摆放不同的窗口，如下图所示：</p>
<p><img src="https://image.pseudoyu.com/images/macos_desktop_management.png" alt="macos_desktop_management"></p>
<p>我们可以通过桌面来区分自己的工作区，如桌面 1 作为自己开发 IDE、终端，桌面 2 作为浏览器查询、写文档，桌面 3 用于处理微信、邮件等通讯工具，桌面 4 作为休闲娱乐、视频播放等，这样我们仅需在几个桌面间切换，实现自己的工作流逻辑，而不需要担心窗口聚焦问题。</p>
<p>为了进一步优化，更快速地完成桌面之间的切换，我们可以通过 <a href="https://www.alfredapp.com">Alfred</a>、<a href="https://www.raycast.com">Raycast</a> 等启动器来快速启动/聚焦应用，也可以通过 <a href="https://alt-tab-macos.netlify.app">AltTab</a> 或 <a href="https://manico.im">Manico</a> 等窗口切换软件提供的快捷键对已开启的应用进行快速切换。</p>
<p>除此之外，macOS 系统设置里也提供了自定义切换的快捷方式，我把 <code>&lt;Option&gt; + &lt;1~9&gt;</code> 修改为了特定的桌面，这样平时工作的时候按对应快捷键就可以迅速到对应的工作区，很快就能形成肌肉记忆。</p>
<p>打开 <strong>系统偏好设置 - 键盘 - 快捷键 - 调度中心</strong>，我们可以为不同的桌面设置对应快捷键，如果没有显示，则可以先打开 9 个空桌面进行配置，之后关闭桌面后仍会保留配置。</p>
<p><img src="https://image.pseudoyu.com/images/keyboardshortcut_to_change_desktop.png" alt="keyboardshortcut_to_change_desktop"></p>
<p>除此之外，还有一个我喜欢的小设置，打开 <strong>系统偏好设置 - 辅助功能 - 显示 - 显示器 - 减弱动态效果</strong>，这样会把不同桌面之间的窗口切换动画效果减弱，提高切换速度，配合我们的自动分屏和快捷键，实现快速强大的多工作区切换。我是速度效率优先，喜欢 macOS 动效的这一步可以不进行设置。</p>
<p><img src="https://image.pseudoyu.com/images/reduce_display_effect.png" alt="reduce_display_effect"></p>
<h2 id="总结">总结</h2>
<p>以上就是我当前的 macOS 窗口管理解决方案，我是一个很爱折腾软件和各项配置的人，有时候常常为了一个小小的需求折腾好几天，一直追求自己的最佳实践。</p>
<p>也许很多配置并不能为我在之后的工作中节省非常多的时间，窗口整理切换也就是几秒钟的差异，但当我在日常工作学习中使用自己当初花了很多心思调研和优化的系统后，或当一个突发的需求使用到了我之前的一个折腾过的软件/配置时，会莫名地很开心、很有成就感，这大概就是折腾的意义吧，也希望大家都能享受到这样的快乐。</p>
<p>我在 GitHub 上维护了一个工具箱项目 『<a href="https://github.com/pseudoyu/yu-tools">GitHub - pseudoyu/yu-tools</a>』，记录了很多其他软硬件的选择，也在不断更新优化，有感兴趣的也欢迎交流，我也会逐步出一些对应的配置/使用教程。</p>
<blockquote>
<p>注：本文由本人授权首发于『<a href="https://sspai.com">少数派</a>』，原文地址为：『<a href="https://sspai.com/post/73620">让窗口管理也能自动化，基于 yabai+skhd 的 macOS 窗口管理系统</a>』。</p>
</blockquote>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://www.youtube.com/watch?v=fYsCAOfGjxE">Blazing Fast Window Management on macOS</a></li>
<li><a href="https://github.com/koekeishiya/yabai">yabai 项目地址</a></li>
<li><a href="https://github.com/koekeishiya/skhd">skhd 项目地址</a></li>
<li><a href="https://github.com/pseudoyu/yu-tools">pseudoyu/yu-tools 个人工具箱项目地址</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Solidity 智能合约开发 - 玩转 Web3.py</title><link>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</link><pubDate>Mon, 30 May 2022 15:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</guid><description>《后来的我们 - 五月天》 前言 在前文《Solidity 智能合约开发 - 基础》中，我们学习了 Solidity 的基本语法，并且了解了可以通过 Brownie 与 HardHat 等框架进行调试。但</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>在前文《<a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a>》中，我们学习了 Solidity 的基本语法，并且了解了可以通过 <a href="https://github.com/eth-brownie/brownie">Brownie</a> 与 <a href="https://github.com/NomicFoundation/hardhat">HardHat</a> 等框架进行调试。但在使用这些封装好的框架之前，我们可以通过 Web3.py 直接与我们本地的 Ganache 节点进行交互，以便更好了解其原理，也为我们后续更好使用框架打好基础。</p>
<p>本文以 Web3.py 为例，实现了基础的合约编译、部署至本地 Ganache 网络、与合约交互等功能。</p>
<p>可以点击<a href="https://github.com/pseudoyu/learn-solidity/tree/master/web3_py_simple_storage">这里</a>访问本测试 Demo 代码仓库。</p>
<h2 id="web3py">Web3.py</h2>
<p>Web3.py 是 Python 的一个开源库，它提供了一个简单的 API，可以让我们通过 Python 程序与以太坊网络进行交互。其 GitHub 地址为 <a href="https://github.com/ethereum/web3.py">ethereum/web3.py</a>，可以访问其<a href="https://web3py.readthedocs.io/en/stable/">官方文档</a>进行使用。</p>
<h3 id="安装">安装</h3>
<p>我们可以通过 Python 包管理工具 pip 安装 Web3.py，如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip3 install web3
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/pip_install_web3.png" alt="pip_install_web3"></p>
<h3 id="使用">使用</h3>
<p>使用 <code>import</code> 导入所需方法即可使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">web3</span> <span class="kn">import</span> <span class="n">Web3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">w3</span> <span class="o">=</span> <span class="n">Web3</span><span class="p">(</span><span class="n">Web3</span><span class="o">.</span><span class="n">HTTPProvider</span><span class="p">(</span><span class="s2">&#34;HTTP://127.0.0.1:7545&#34;</span><span class="p">))</span>
</span></span></code></pre></div><h2 id="solidity-合约编译">Solidity 合约编译</h2>
<h3 id="合约源码">合约源码</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">pragma solidity</span> <span class="o">^</span><span class="mi">0</span><span class="p">.</span><span class="mi">6</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">SimpleStorage</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">uint256</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">bool</span> <span class="n">favoriteBool</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">struct</span> <span class="nc">People</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">uint256</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kt">string</span> <span class="nb">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">People</span> <span class="k">public</span> <span class="n">person</span> <span class="o">=</span> <span class="n">People</span><span class="p">({</span><span class="n">favoriteNumber</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nb">name</span><span class="o">:</span> <span class="s">&#34;Arthur&#34;</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">People</span><span class="p">[]</span> <span class="k">public</span> <span class="n">people</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">mapping</span><span class="p">(</span><span class="kt">string</span> <span class="o">=&gt;</span> <span class="kt">uint256</span><span class="p">)</span> <span class="k">public</span> <span class="n">nameToFavoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">store</span><span class="p">(</span><span class="kt">uint256</span> <span class="n">_favoriteNumber</span><span class="p">)</span> <span class="k">public</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">favoriteNumber</span> <span class="o">=</span> <span class="n">_favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">retrieve</span><span class="p">()</span> <span class="k">public</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint256</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nf">addPerson</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">_name</span><span class="p">,</span> <span class="kt">uint256</span> <span class="n">_favoriteNumber</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">people</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">People</span><span class="p">({</span><span class="n">favoriteNumber</span><span class="o">:</span> <span class="n">_favoriteNumber</span><span class="p">,</span> <span class="nb">name</span><span class="o">:</span> <span class="n">_name</span><span class="p">}));</span>
</span></span><span class="line"><span class="cl">        <span class="n">nameToFavoriteNumber</span><span class="p">[</span><span class="n">_name</span><span class="p">]</span> <span class="o">=</span> <span class="n">_favoriteNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这是一个简单的存储合约，通过一个 People 结构体对象来存储人名和他喜欢数字，通过一个数组来存储多个人的信息，并提供了添加、查找方法。</p>
<h3 id="读取合约源文件">读取合约源文件</h3>
<p>当我们通过 VSCode 或其他编辑器完成 Solidity 合约编写与语法检查后，需要读取合约源文件并存入变量，供后续编译使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;./SimpleStorage.sol&#34;</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">simple_storage_file</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span></code></pre></div><p>上述代码将 <code>SimpleStorage.sol</code> 文件内容读取到变量 <code>simple_storage_file</code> 中。</p>
<h3 id="编译合约">编译合约</h3>
<h4 id="安装-solcx">安装 <code>solcx</code></h4>
<p>合约编译需要预先安装 <code>solcx</code> 工具。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip3 install py-solc-x
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/pip_install_solcx.png" alt="pip_install_solcx"></p>
<h4 id="导入-solcx">导入 <code>solcx</code></h4>
<p>使用 <code>import</code> 导入所需方法即可使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">solcx</span> <span class="kn">import</span> <span class="n">compile_standard</span><span class="p">,</span> <span class="n">install_solc</span>
</span></span></code></pre></div><h4 id="编译">编译</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">install_solc</span><span class="p">(</span><span class="s2">&#34;0.6.0&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">compiled_sol</span> <span class="o">=</span> <span class="n">compile_standard</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;language&#34;</span><span class="p">:</span> <span class="s2">&#34;Solidity&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;sources&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;SimpleStorage.sol&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;content&#34;</span><span class="p">:</span> <span class="n">simple_storage_file</span><span class="p">}},</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;settings&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;outputSelection&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;*&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;*&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;abi&#34;</span><span class="p">,</span> <span class="s2">&#34;metadata&#34;</span><span class="p">,</span> <span class="s2">&#34;evm.bytecode&#34;</span><span class="p">,</span> <span class="s2">&#34;evm.sourceMap&#34;</span><span class="p">]}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">solc_version</span><span class="o">=</span><span class="s2">&#34;0.6.0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><p>上述代码我们安装了 0.6.0 版本的 Solidity 编译程序，使用 <code>solcx</code> 库中的<code>compile_standard</code> 方法对上文读取的合约源文件进行编译，并将编译结果存入变量 <code>compiled_sol</code> 中。</p>
<h4 id="获取编译结果">获取编译结果</h4>
<p>编译成功后，使用以下代码将编译好的合约写入文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;compiled_code.json&#34;</span><span class="p">,</span> <span class="s2">&#34;w&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">json</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">compiled_sol</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span>
</span></span></code></pre></div><h4 id="获取-bytecode-与-abi">获取 bytecode 与 abi</h4>
<p>Solidity 合约的部署与交互需要 bytecode 与 abi 两个部分，我们可以通过通过以下代码将其写入对应变量供后续操作使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># get bytecode</span>
</span></span><span class="line"><span class="cl"><span class="n">bytecode</span> <span class="o">=</span> <span class="n">compiled_sol</span><span class="p">[</span><span class="s2">&#34;contracts&#34;</span><span class="p">][</span><span class="s2">&#34;SimpleStorage.sol&#34;</span><span class="p">][</span><span class="s2">&#34;SimpleStorage&#34;</span><span class="p">][</span><span class="s2">&#34;evm&#34;</span><span class="p">][</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;bytecode&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">][</span><span class="s2">&#34;object&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># get abi</span>
</span></span><span class="line"><span class="cl"><span class="n">abi</span> <span class="o">=</span> <span class="n">compiled_sol</span><span class="p">[</span><span class="s2">&#34;contracts&#34;</span><span class="p">][</span><span class="s2">&#34;SimpleStorage.sol&#34;</span><span class="p">][</span><span class="s2">&#34;SimpleStorage&#34;</span><span class="p">][</span><span class="s2">&#34;abi&#34;</span><span class="p">]</span>
</span></span></code></pre></div><h2 id="本地-ganache-环境">本地 Ganache 环境</h2>
<p>智能合约的调试需要将合约部署到实际的链上，而部署到 Ethereum 主网络或 Rinkeby/Koven 等测试网等也不方便调试，因此，我们需要一个本地的区块链环境，Ganache 就给我们提供了一个这样的本地调试环境。Ganache 主要分为 GUI 和 CLI 两种安装方式。</p>
<h3 id="ganache-gui">Ganache GUI</h3>
<p>在自己的本地环境，如 Mac/Windows 等系统，我们可以选择带图形界面的 Ganache 客户端，安装与使用都十分便捷，在 <a href="https://trufflesuite.com/ganache/">Ganache 官网</a>选择对应版本即可。</p>
<p><img src="https://image.pseudoyu.com/images/ganache_download.png" alt="ganache_download"></p>
<p>安装完成后选择 Quick Start 即可快速启动一条本地运行的区块链网络，并初始化了十个拥有 100 ETH 的账户，开发调试过程中可使用。</p>
<p><img src="https://image.pseudoyu.com/images/ganache_account.png" alt="ganache_account"></p>
<h3 id="ganache-cli-安装">Ganache CLI 安装</h3>
<p>如果您的系统不支持 GUI 安装，我们可以使用 CLI 安装，安装方式如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm install --global yarn
</span></span><span class="line"><span class="cl">yarn global add ganache-cli
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/ganache_cli_install.png" alt="ganache_cli_install"></p>
<p>等待其安装完成后即可启动本地测试网络，与 Ganache GUI 一致，也包含初始化账户与余额。</p>
<p><img src="https://image.pseudoyu.com/images/ganache_cli_start.png" alt="ganache_cli_start"></p>
<h3 id="通过-web3-连接本地-ganache-环境">通过 web3 连接本地 Ganache 环境</h3>
<p>web3 提供了库可以方便地连接到本地 Ganache 环境：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">w3</span> <span class="o">=</span> <span class="n">Web3</span><span class="p">(</span><span class="n">Web3</span><span class="o">.</span><span class="n">HTTPProvider</span><span class="p">(</span><span class="s2">&#34;HTTP://127.0.0.1:7545&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">chain_id</span> <span class="o">=</span> <span class="mi">5777</span>
</span></span><span class="line"><span class="cl"><span class="n">my_address</span> <span class="o">=</span> <span class="s2">&#34;0x2F490e1eA91DF6d3cC856e7AC391a20b1eceD6A5&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">private_key</span> <span class="o">=</span> <span class="s2">&#34;0fa88bf96b526a955a6126ae4cca0e72c9c82144ae9af37b497eb6afbe8a9711&#34;</span>
</span></span></code></pre></div><h2 id="solidity-合约部署">Solidity 合约部署</h2>
<h3 id="创建合约">创建合约</h3>
<p>我们可以通过 web3 库创建合约。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">SimpleStorage</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">contract</span><span class="p">(</span><span class="n">abi</span><span class="o">=</span><span class="n">abi</span><span class="p">,</span> <span class="n">bytecode</span><span class="o">=</span><span class="n">bytecode</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="部署合约">部署合约</h3>
<p>部署合约分为三个主要步骤：</p>
<ol>
<li>构造交易</li>
<li>签名交易</li>
<li>发送交易</li>
</ol>
<h4 id="构造交易">构造交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">nonce</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">getTransactionCount</span><span class="p">(</span><span class="n">my_address</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">transaction</span> <span class="o">=</span> <span class="n">SimpleStorage</span><span class="o">.</span><span class="n">constructor</span><span class="p">()</span><span class="o">.</span><span class="n">buildTransaction</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;chainId&#34;</span><span class="p">:</span> <span class="n">chain_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;gasPrice&#34;</span><span class="p">:</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">gas_price</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;from&#34;</span><span class="p">:</span> <span class="n">my_address</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;nonce&#34;</span><span class="p">:</span> <span class="n">nonce</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><h4 id="签名交易">签名交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">signed_txn</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">account</span><span class="o">.</span><span class="n">sign_transaction</span><span class="p">(</span><span class="n">transaction</span><span class="p">,</span> <span class="n">private_key</span><span class="o">=</span><span class="n">private_key</span><span class="p">)</span>
</span></span></code></pre></div><h4 id="发送交易">发送交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">tx_hash</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">send_raw_transaction</span><span class="p">(</span><span class="n">signed_txn</span><span class="o">.</span><span class="n">rawTransaction</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">tx_receipt</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">wait_for_transaction_receipt</span><span class="p">(</span><span class="n">tx_hash</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="与合约交互">与合约交互</h3>
<p>与部署合约步骤类似，我们可以通过 web3 库与合约交互，也分为构造交易、签名交易和发送交易三个步骤。</p>
<h4 id="构造交易-1">构造交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">simple_storage</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">contract</span><span class="p">(</span><span class="n">address</span><span class="o">=</span><span class="n">tx_receipt</span><span class="o">.</span><span class="n">contractAddress</span><span class="p">,</span> <span class="n">abi</span><span class="o">=</span><span class="n">abi</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">store_transaction</span> <span class="o">=</span> <span class="n">simple_storage</span><span class="o">.</span><span class="n">functions</span><span class="o">.</span><span class="n">store</span><span class="p">(</span><span class="mi">67</span><span class="p">)</span><span class="o">.</span><span class="n">buildTransaction</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;chainId&#34;</span><span class="p">:</span> <span class="n">chain_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;gasPrice&#34;</span><span class="p">:</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">gas_price</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;from&#34;</span><span class="p">:</span> <span class="n">my_address</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;nonce&#34;</span><span class="p">:</span> <span class="n">nonce</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><h4 id="签名交易-1">签名交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">signed_store_txn</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">account</span><span class="o">.</span><span class="n">sign_transaction</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">store_transaction</span><span class="p">,</span> <span class="n">private_key</span><span class="o">=</span><span class="n">private_key</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span></code></pre></div><h4 id="发送交易-1">发送交易</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">send_store_tx</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">send_raw_transaction</span><span class="p">(</span><span class="n">signed_store_txn</span><span class="o">.</span><span class="n">rawTransaction</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">tx_receipt</span> <span class="o">=</span> <span class="n">w3</span><span class="o">.</span><span class="n">eth</span><span class="o">.</span><span class="n">wait_for_transaction_receipt</span><span class="p">(</span><span class="n">send_store_tx</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我们通过 Web3.py 库与本地 Ganache 测试网络进行交互的步骤，在真正的生产项目开发中我们一般不会直接使用 Web3.py 这样的库，而是会使用 Brownie、HardHat 等进一步封装的库，但了解 Web3.py 或 Web3.js 等库的使用方法也非常重要。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/">Solidity 智能合约开发 - 基础</a></li>
<li><a href="https://github.com/ethereum/web3.py">ethereum/web3.py</a></li>
<li><a href="https://github.com/smartcontractkit/full-blockchain-solidity-course-py">Solidity, Blockchain, and Smart Contract - Beginner to Expert Full Course | Python Edition</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Hugo + GitHub Action，搭建你的博客自动发布系统</title><link>https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/</link><pubDate>Sun, 29 May 2022 20:39:29 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/29/deploy_your_blog_using_hugo_and_github_action/</guid><description>《后来的我们 - 五月天》 前言 在之前的一篇《免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）》中，我提到了自己通过 Hugo 这个静态</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>在之前的一篇《<a href="https://www.pseudoyu.com/zh/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a>》中，我提到了自己通过 <a href="https://gohugo.io">Hugo</a> 这个静态网站生成器来真正搭建我的个人博客，并在 Hugo 开源社区中 <a href="https://github.com/shaform/hugo-theme-den">hugo-theme-den</a> 这个主题基础上进行了一些个人定制化改造和配置，满足了自己的需求。</p>
<p>我的方案主要分为以下几个核心部分：</p>
<ol>
<li>个人博客源仓库，对博客配置及所有文章 <code>.md</code> 源文件进行版本管理，配合 GitHub Action 进行自动化部署，自动生成静态站点推送到 GitHub Pages 博客发布仓库。</li>
<li>（可选）GitHub Pages 博客发布仓库，以 <code>username.github.io</code> 形式命名的仓库，使用 GitHub Pages 实现网站部署，可以通过配置域名 CNAME 解析使用自定义域名。</li>
<li>（可选）Cloudflare 账户与 Cloudflare Pages 项目，</li>
<li>Hugo 主题仓库，fork 喜欢的主题，并对自己的个人定制化改造配置进行版本管理，通过 <code>git submodule</code> 的方式链接到个人博客源仓库。</li>
<li>其他组件源仓库，如 <a href="https://www.pseudoyu.com/zh/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">umami 网站数据统计</a>及 <a href="https://www.pseudoyu.com/zh/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">Cusdis 网站评论系统</a>等。</li>
</ol>
<p>下文会对搭建、本地测试、自动化部署维护等过程进行详细讲解，希望对大家所有帮助。</p>
<h2 id="使用-hugo-搭建博客">使用 Hugo 搭建博客</h2>
<p><img src="https://image.pseudoyu.com/images/hugo_website.png" alt="hugo_website"></p>
<p><a href="https://gohugo.io">Hugo</a> 是用 Go 实现的博客工具，采用 Markdown 进行文章编辑，自动生成静态站点文件，支持丰富的主题配置，也可以通过 js 嵌入像是评论系统等插件，高度定制化。除了 Hugo 外， 还有 Gatsby、Jekyll、Hexo、Ghost 等选择，实现和使用都差不多，可以根据自己的偏好进行选择。</p>
<h3 id="安装-hugo">安装 Hugo</h3>
<p>我使用的是 macOS，所以使用官方推荐的 homebrew 方式进行 hugo 程序的安装，其他系统也类似。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">brew install hugo
</span></span></code></pre></div><p>完成后，使用以下命令进行验证：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo version
</span></span></code></pre></div><h3 id="创建-hugo-网站">创建 Hugo 网站</h3>
<p>通过上述命令安装 hugo 程序后，就可以通过 <code>hugo new site</code> 命令进行网站创建、配置与本地调试了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo new site blog-test
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_new_site.png" alt="hugo_new_site"></p>
<h3 id="配置主题">配置主题</h3>
<p>当通过上文命令创建我们的站点后，需要进行主题配置，Hugo 社区有了很丰富的主题，可以通过官网 <a href="https://themes.gohugo.io">Themes</a> 菜单选择自己喜欢的风格，查看预览效果，选择后可以进入主题项目仓库，一般都会有很详细的安装及配置说明。下面我就以我目前在使用的 <a href="https://github.com/shaform/hugo-theme-den">hugo-theme-den</a> 这个主题为例，演示一下配置流程。</p>
<h4 id="关联主题仓库">关联主题仓库</h4>
<p>我们可以将主题仓库直接 <code>git clone</code> 下来进行使用，但这种方式有一些弊端，当之后自己对主题进行修改后，可能会与原主题产生一些冲突，不方便版本管理与后续更新。我采用的是将原主题仓库 <code>fork</code> 到自己的账户，并使用 <code>git submodule</code> 方式进行仓库链接，这样后续可以对主题的修改进行单独维护。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> blog-test/
</span></span><span class="line"><span class="cl">git init
</span></span><span class="line"><span class="cl">git submodule add https://github.com/pseudoyu/hugo-theme-den themes/hugo-theme-den
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_init_theme.png" alt="hugo_init_theme"></p>
<h4 id="更新主题">更新主题</h4>
<p>如果是 clone 了其他人的博客项目进行修改，则需要用以下命令进行初始化：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule update --init --recursive
</span></span></code></pre></div><p>如果需要同步主题仓库的最新修改，需要运行以下命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git submodule update --remote
</span></span></code></pre></div><h4 id="初始化主题配置及发布">初始化主题配置及发布</h4>
<p>每个主题一般都会提供一些实例配置与初始页面，开始使用主题时可以将其 <code>exampleSite/</code> 目录下的文件复制到站点目录下，在此基础上进行调整配置。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp -rf themes/hugo-theme-den/exampleSite/* ./
</span></span></code></pre></div><p>初始化主题基础配置后，我们可以在 <code>config.toml</code> 文件中进行站点细节配置，具体配置项参考各主题说明文档。</p>
<p><img src="https://image.pseudoyu.com/images/hugo_theme_config.png" alt="hugo_theme_config"></p>
<p>完成后，可以通过 <code>hugo new</code> 命令发布新文章。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo new posts/blog-test.md
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_new_post.png" alt="hugo_new_post"></p>
<h4 id="本地调试站点">本地调试站点</h4>
<p>Hugo 会生成静态网页，我们在本地编辑调试时可以通过 <code>hugo server</code> 命令进行本地实时调试预览，无须每次都重新生成。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo server
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_server.png" alt="hugo_server"></p>
<p>运行服务后，我们可以通过浏览器 <code>http://localhost:1313</code> 地址访问我们的本地预览网页。</p>
<p><img src="https://image.pseudoyu.com/images/hugo_server_preview.png" alt="hugo_server_preview"></p>
<h3 id="购买域名">购买域名</h3>
<p>作为一个对外发布的网站，我们需要购买一个域名并配置解析，指向我们网站所在的服务器，才能让外界以比较方便的方式访问。域名购买平台很多，我用过的有 <a href="https://www.cloudflare.com">Cloudflare</a>、<a href="https://www.namesilo.com">NameSilo</a>、<a href="https://www.godaddy.com">GoDaddy</a> 等，我最后常用的还是 Cloudflare，因为其同时还提供了 CDN、网站数据分析、定制规则等强大功能。</p>
<p>首先我们需要注册一个 Cloudflare 账户，登录后选择左侧边栏的“注册域”，并搜索自己想注册的域名。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain.png" alt="cloudflare_register_domain"></p>
<p>选择了心仪的域名后，点击并选择购买时限并填写个人信息。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain_choose.png" alt="cloudflare_register_domain_choose"></p>
<p>选择付款方式，建议可以选择自动续订，以免忘记续费。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain_payment.png" alt="cloudflare_register_domain_payment"></p>
<p>类型选择 Personal 即可，并点击完成购买。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_done.png" alt="cloudflare_register_done"></p>
<p>等待 Cloudflare 处理后即可查看信息。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_domain.jpg" alt="cloudflare_domain"></p>
<h3 id="cloudflare-pages-发布博客推荐">Cloudflare Pages 发布博客（推荐）</h3>
<p><strong>[2024-06-30 更新]</strong></p>
<h4 id="cloudflare-pages-介绍">Cloudflare Pages 介绍</h4>
<p>GitHub Pages 已经是一个免费且强大的静态网站托管平台了，且可以和 GitHub 代码仓库无缝对接，但国内的访问速度不是很理想，又由于我的域名本身托管在 Cloudflare，于是我尝试了 Cloudflare Pages，这是 Cloudflare 推出的静态网站托管服务，完全免费（至少我至今没有超过免费额度），且可以直接连接 GitHub 代码仓库，可以实现和 GitHub Pages 一样的自动化部署功能并且提供更优的访问线路，是目前更好的解决方案。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_pages_create.png" alt="cloudflare_pages_create"></p>
<h4 id="创建-cloudflare-pages-项目">创建 Cloudflare Pages 项目</h4>
<p>首先我们需要注册 Cloudflare 账号，并且在左侧选择「Worker 和 Pages」菜单，点击创建项目。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_pages_with_git.png" alt="cloudflare_pages_with_git"></p>
<p>下一步会有两个选项，一个是直接把静态文件上传，还有一个是连接 git，第一种通常是适用于一些单页面或者非常低频更新从而不需要 GitHub 托管代码的项目，如一些单 html 页面的网站等；而连接 git 则能够更好地针对我们每一次的博客提交自动构建新的网页，也是我们采用的方式。</p>
<h4 id="构建-hugo">构建 Hugo</h4>
<p><img src="https://image.pseudoyu.com/images/yu_blog_test_build_hugo_cloudflare_pages.png" alt="yu_blog_test_build_hugo_cloudflare_pages"></p>
<p>由于 Cloudflare Pages 提供了几乎市面上所有常用的网站构建工具，如 Next.js、Astro、Hugo 等，我们可以选择两种方式来进行部署：</p>
<ol>
<li>直接使用 Cloudflare Pages 提供的构建工具，直接根据仓库代码生成静态网页并部署上线</li>
<li>以与上文 GitHub Pages 类似的方式生成静态网页的仓库或分支，通过 Cloudflare Page 直接进行部署上线</li>
</ol>
<p><img src="https://image.pseudoyu.com/images/cloudflare_build_site_hugo_in_progress.png" alt="cloudflare_build_site_hugo_in_progress"></p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_pages_build_done.png" alt="cloudflare_pages_build_done"></p>
<p>第一种方式可以大大简化我们的部署流程，因此我们要做的只有将上文所创建的博客源仓库（如我的仓库为 <a href="https://github.com/pseudoyu/yu-blog">pseudoyu/yu-blog</a>）进行链接，每次提交就会自动构建并部署，只需要等待几十秒即可完成，而无须像 GitHub Pages 那样自己写各种构建 GitHub Actions 命令，很方便，也是最为推荐的方式。</p>
<p>而第二种方式其实跟 GitHub Pages 的方式类似，比较适用于对于构建过程有一些特殊需求的网站，如我在构建我的个人博客网站时同时在 GitHub Actions 执行了一些 Python 在自动更新我的 About 页面，这些复杂操作就无法直接使用 Cloudflare Pages 提供的构建工具，因此我选择了第二种方式。</p>
<p>可以在自己的博客源仓库中直接使用如下简化版的 GitHub Actions:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">schedule</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c"># Runs everyday at 8:00 AM</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">cron</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0 0 * * *&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">build</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="l">// Other steps you want to add</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;latest&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build Web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy Web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">github_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.GITHUB_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">publish_branch</span><span class="p">:</span><span class="w"> </span><span class="l">cf-pages</span><span class="w">
</span></span></span></code></pre></div><p><code>on</code> 表示 GitHub Action 触发条件，我设置了 <code>push</code>、<code>workflow_dispatch</code> 和 <code>schedule</code> 三个条件：</p>
<ul>
<li><code>push</code>，当这个项目仓库发生推送动作后，执行 GitHub Action</li>
<li><code>workflow_dispatch</code>，可以在 GitHub 项目仓库的 Action 工具栏进行手动调用</li>
<li><code>schedule</code>，定时执行 GitHub Action，如我的设置为北京时间每天早上执行，主要是使用一些自动化统计 CI 来自动更新我博客的关于页面，如本周编码时间，影音记录等，如果你不需要定时功能，可以删除这个条件</li>
</ul>
<p><code>jobs</code> 表示 GitHub Action 中的任务，我们设置了一个 <code>build</code> 任务，<code>runs-on</code> 表示 GitHub Action 运行环境，我们选择了 <code>ubuntu-latest</code>。我们的 <code>build</code> 任务包含了 <code>Checkout</code>、<code>Setup Hugo</code>、<code>Build Web</code> 和 <code>Deploy Web</code> 四个主要步骤，其中 <code>run</code> 是执行的命令，<code>uses</code> 是 GitHub Action 中的一个插件，我们使用了 <code>peaceiris/actions-hugo@v2</code> 和 <code>peaceiris/actions-gh-pages@v3</code> 这两个插件。其中 <code>Checkout</code> 步骤中 <code>with</code> 中配置 <code>submodules</code> 值为 <code>true</code> 可以同步博客源仓库的子模块，即我们的主题模块。</p>
<p>以上 GitHub Actions 会将博客生成的静态文件推送到 <code>cf-pages</code> 分支，因为我们在 Cloudflare Pages 中选择该分支进行部署即可，因为如我们需要添加一些额外的步骤，可以在构建之前添加一些自定义的步骤，很灵活，具体应用可以看「<a href="https://github.com/pseudoyu/yu-blog/blob/master/.github/workflows/deploy.yml">GitHub - yu-blog/.github/workflows/deploy.yml</a>」示例。</p>
<h4 id="配置自定义域名">配置自定义域名</h4>
<p><img src="https://image.pseudoyu.com/images/custom_domain_yu_blog.png" alt="custom_domain_yu_blog"></p>
<p>自定义域名也非常简单，直接在导航栏中选中自定义域，并添加想要绑定的域名。</p>
<p><img src="https://image.pseudoyu.com/images/cf_pages_custom_domain_dns.png" alt="cf_pages_custom_domain_dns"></p>
<p>如果是在 Cloudflare 中注册/托管的域名，可以直接选择「激活域」，会自动添加 DNS 解析，如果是其他平台的域名，则手动添加 CNAME 解析即可。</p>
<p><img src="https://image.pseudoyu.com/images/custom_domain_wait_dns.png" alt="custom_domain_wait_dns"></p>
<p>配置 DNS 完成后，等待生效即可。</p>
<h3 id="github-pages-发布博客">GitHub Pages 发布博客</h3>
<h4 id="创建仓库">创建仓库</h4>
<p>GitHub Pages 项目需要符合 <code>username.github.io</code> 的特殊命名格式，仓库建立完成后，可以在设置中配置自己注册的自定义域名来指向 GitHub Pages 生成的网址。此外，需要将博客站点配置文件 <code>config.toml</code> 中的 <code>baseURL</code> 改为自己的自定义域名，格式为 <code>&quot;https://www.pseudoyu.com/&quot;</code>，这样博客站点才能正常访问 GitHub Pages 生成的网站服务。</p>
<p><img src="https://image.pseudoyu.com/images/github_pages_repo.png" alt="github_pages_repo"></p>
<h4 id="域名解析">域名解析</h4>
<p>按照上文步骤注册好后，需要在域名托管商进行 DNS 解析，在这里我们需要选择 CNAME，指向我们的 GitHub Pages 网址。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_cname_config.png" alt="cloudflare_cname_config"></p>
<p>因为 CNAME 解析没办法设置 root 域名，即只能设置 <code>www.pseudoyu.com</code> 或其他子域名，而不是 <code>pseudoyu.com</code>，因此，我们可以通过 Cloudflare 上自定义规则设置域名重定向，具体配置如下，仅需将我的域名替换成自己的域名即可。即使你是通过 NameSilo 注册的域名，也可以通过 Cloudflare 来添加站点以实现功能，或者其他托管平台也有类似的功能，按照说明配置即可。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_cname_rule_config.png" alt="cloudflare_cname_rule_config"></p>
<p>完成上述准备工作后，我们现在已经可以通过自定义域名来访问我们的 GitHub Pages 页面了，目前因为项目仓库是空的，访问后会报 <code>404</code> 页面。</p>
<p>我们希望 Hugo 生成的静态网站能通过 GitHub Pages 服务进行托管，而无需自己维护服务，更稳定、安全，因此我们需要上传 Hugo 生成的静态网页文件至 GitHub Page 项目仓库。</p>
<h4 id="手动发布">手动发布</h4>
<p>当我们编辑博客内容并通过 <code>hugo server</code> 本地调试后，就可以通过 <code>hugo</code> 命令生成静态网页文件了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> public/
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_gen_pages.png" alt="hugo_gen_pages"></p>
<p>Hugo 默认会将生成的静态网页文件存放在 <code>public/</code> 目录下，我们可以通过将 <code>public/</code> 目录初始化为 git 仓库并关联我们的 <code>pseudoyu/pseudoyu.github.io</code> 远程仓库来推送我们的网页静态文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git init
</span></span><span class="line"><span class="cl">git remote add origin git@github.com:pseudoyu/pseudoyu.github.io
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;add test&#34;</span>
</span></span></code></pre></div><p><img src="https://image.pseudoyu.com/images/hugo_public_init.png" alt="hugo_public_init"></p>
<p>核对文件修改后，即可通过 <code>git push origin master</code> 推送到 GitHub Pages 仓库，稍等几分钟即可通过我们的自定义域名来访问我们的博客站点了，和我们 <code>hugo server</code> 本地调试完全一致。</p>
<h4 id="自动发布">自动发布</h4>
<p>通过上述命令我们可以手动发布我们的静态文件，但还是有以下弊端：</p>
<ol>
<li>发布步骤还是比较繁琐，本地调试后还需要切换到 <code>public/</code> 目录进行上传</li>
<li>无法对博客 <code>.md</code> 源文件进行备份与版本管理</li>
</ol>
<p>因此，我们需要简单顺滑的方式来进行博客发布，首先我们初始化博客源文件的仓库，如我的仓库为 <a href="https://github.com/pseudoyu/yu-blog">pseudoyu/yu-blog</a>。</p>
<p>因为我们的博客基于 GitHub 与 GitHub Pages，可以通过官方提供的 GitHub Action 进行 CI 自动发布，下面我会进行详细讲解。GitHub Action 是一个持续集成和持续交付(CI/CD) 平台，可用于自动执行构建、测试和部署管道，目前已经有很多开发好的工作流，可以通过简单的配置即可直接使用。</p>
<p>配置在仓库目录 <code>.github/workflows</code> 下，以 <code>.yml</code> 为后缀。我的 GitHub Action 配置为 <a href="https://github.com/pseudoyu/yu-blog/blob/master/.github/workflows/deploy.yml">pseudoyu/yu-blog deploy.yml</a>，自动发布示例配置如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">schedule</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c"># Runs everyday at 8:00 AM</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">cron</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0 0 * * *&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">build</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Checkout</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;latest&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build Web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy Web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">PERSONAL_TOKEN</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.PERSONAL_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">EXTERNAL_REPOSITORY</span><span class="p">:</span><span class="w"> </span><span class="l">pseudoyu/pseudoyu.github.io</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">PUBLISH_BRANCH</span><span class="p">:</span><span class="w"> </span><span class="l">master</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">PUBLISH_DIR</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">commit_message</span><span class="p">:</span><span class="w"> </span><span class="l">${{ github.event.head_commit.message }}</span><span class="w">
</span></span></span></code></pre></div><p>首先需要将上述 <code>deploy.yml</code> 中的 <code>EXTERNAL_REPOSITORY</code> 改为自己的 GitHub Pages 仓库，如我的设置为 <code>pseudoyu/pseudoyu.github.io</code>。</p>
<p>因为我们需要从博客仓库推送到外部 GitHub Pages 仓库，需要特定权限，要在 GitHub 账户下 <code>Setting - Developer setting - Personal access tokens</code> 下创建一个 Token。</p>
<p><img src="https://image.pseudoyu.com/images/github_psersonal_access_token.png" alt="github_psersonal_access_token"></p>
<p>权限需要开启 <code>repo</code> 与 <code>workflow</code>。</p>
<p><img src="https://image.pseudoyu.com/images/yu_blog_personal_token.png" alt="yu_blog_personal_token"></p>
<p>配置后复制生成的 Token（注：只会出现一次），然后在我们博客源仓库的 <code>Settings - Secrets - Actions</code> 中添加 <code>PERSONAL_TOKEN</code> 环境变量为刚才的 Token，这样 GitHub Action 就可以获取到 Token 了。</p>
<p>完成上述配置后，推送代码至仓库，即可触发 GitHub Action，自动生成博客页面并推送至 GitHub Pages 仓库。</p>
<p><img src="https://image.pseudoyu.com/images/yu_blog_ci.png" alt="yu_blog_ci"></p>
<p>而 GitHub Pages 仓库更新后，又会自动触发官方页面部署 CI，实现我们的网站发布。</p>
<p><img src="https://image.pseudoyu.com/images/page_build_ci.png" alt="page_build_ci"></p>
<p>经过上述配置，我们已经实现了 Hugo 博客本地搭建及版本管理、GitHub Pages 部署网站发布，Hugp 主题管理及更新等功能，实现了完整的系统。现在每当我们本地通过熟悉的 Markdown 语法完成博客内容编辑后，只需要推送代码，等待几分钟，即可通过我们的自定义域名访问更新后的网站。</p>
<h3 id="组件拓展">组件拓展</h3>
<p>一个完整的博客系统还需要一些组件，如网站数据统计、评论系统等，我针对这两个核心需求也写了完整的 Serverless 搭建教程，可根据需求进行部署配置。</p>
<ul>
<li><a href="https://www.pseudoyu.com/zh/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
<li><a href="https://www.pseudoyu.com/zh/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
</ul>
<h2 id="总结">总结</h2>
<p>以上就是我通过 Hugo 与 GitHub Action 实现的免费博客自动部署系统，我自己的实现仓库在 <a href="https://github.com/pseudoyu/yu-blog">pseudoyu/yu-blog</a> 仓库中，我定制化的主题仓库在 <a href="https://github.com/pseudoyu/hugo-theme-den">pseudoyu/hugo-theme-den</a> 中。</p>
<p>我使用 GitHub Action 还实现了很多好玩的自动化个人统计功能，自动更新我的<a href="https://github.com/pseudoyu">GitHub Profile</a>，项目仓库为 <a href="https://github.com/pseudoyu/pseudoyu">pseudoyu/pseudoyu</a>，可以进入 <code>.github/workflows</code> 中自行探索。这些系统还在不断完善中，欢迎大家参与贡献与交流。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://gohugo.io">Hugo 官网</a></li>
<li><a href="https://github.com/features/actions">GitHub Action</a></li>
<li><a href="https://pages.github.com">GitHub Pages</a></li>
<li><a href="https://www.cloudflare.com">Cloudflare 官网</a></li>
<li><a href="https://www.pseudoyu.com/zh/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a></li>
<li><a href="https://www.pseudoyu.com/zh/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
<li><a href="https://www.pseudoyu.com/zh/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
<li><a href="https://www.pseudoyu.com">我的 Pseudoyu 个人博客</a></li>
<li><a href="https://github.com/pseudoyu">我的 GitHub Profile</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Ghost 5.0 来了，使用 Digital Ocean 一键部署吧</title><link>https://www.pseudoyu.com/en/2022/05/29/deploy_ghost_5_on_digital_ocean_vps/</link><pubDate>Sun, 29 May 2022 14:21:12 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/29/deploy_ghost_5_on_digital_ocean_vps/</guid><description>《后来的我们 - 五月天》 前言 我是一个静态博客与 Serverless 支持者，自己的个人博客与一些知识库项目也都是通过 hugo 生成并托管在 GitHub Pages 上的。这种方式很方便进行版本</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>我是一个静态博客与 Serverless 支持者，自己的<a href="https://www.pseudoyu.com">个人博客</a>与一些<a href="https://www.pseudoyu.com/blockchain-guide">知识库项目</a>也都是通过 <a href="https://gohugo.io">hugo</a> 生成并托管在 <a href="https://pages.github.com">GitHub Pages</a> 上的。这种方式很方便进行版本管理与部署维护，但对于非技术的人来说，通过命令行 git 操作的方式也有些过于 geek，牵扯到多人协作等场景也不太方便。</p>
<p>上周有个前同事（非技术）让我帮忙搭建一个门户网站，主要展示一下公司信息、发布一些资讯、专题、工具等，出于易用性等考虑，也刚好看到 <a href="https://ghost.org">Ghost</a> 官方发布了 5.0 版本，支持了很多强大的功能，如邮件订阅、数据分析等，且可以自部署，所以考虑了这个方案，下文记录一下安装与部署流程。</p>
<h2 id="ghost-50">Ghost 5.0</h2>
<p><img src="https://image.pseudoyu.com/images/ghost_5_intro.jpg" alt="ghost_5_intro"></p>
<p>Ghost 是一个非常老派的博客工具，自 2013 年原型发布以来已经经过了 9 年的发展完善，于最近刚推出 5.0 版本，很适合个人、独立发布平台等。5.0 版本中，有以下特性更新：</p>
<ul>
<li>支持更强大的订阅功能，如订阅分级等</li>
<li>支持多个邮件订阅，修改设计更加方便</li>
<li>支持发布优惠活动，也有更强大的用户分析面板</li>
<li>原生支持视频、博客、GIF、电商产品、NFT 等</li>
<li>发布更多新主题</li>
<li>优化性能 20%+</li>
<li>&hellip;</li>
</ul>
<p>Ghost 官方支持多种部署方式，如 Ghost(Pro) 托管、Docker 镜像、服务器安装等，而因为 Ghost 生成环境依赖 Ubuntu，Node，MySQL 等环境，如果需要自己单独搭建会比较麻烦，且维护成本也较高。经过一番调研，根据官方文档的安装说明，Digital Ocean 是 Ghost 的官方云托管合作伙伴，提供了一键部署安装的方式，简单便捷。</p>
<h2 id="安装部署说明">安装部署说明</h2>
<h3 id="域名购买">域名购买</h3>
<p>作为一个对外发布的网站，我们需要购买一个域名并配置解析，指向我们网站所在的服务器，才能让外界以比较方便的方式访问。域名购买平台很多，我用过的有 <a href="https://www.cloudflare.com">Cloudflare</a>、<a href="https://www.namesilo.com">NameSilo</a>、<a href="https://www.godaddy.com">GoDaddy</a> 等，我最后常用的还是 Cloudflare，因为其同时还提供了 CDN、网站数据分析、定制规则等强大功能。</p>
<p>首先我们需要注册一个 Cloudflare 账户，完成并登录后，选择左侧边栏的“注册域”，并搜索自己想注册的域名。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain.png" alt="cloudflare_register_domain"></p>
<p>选择了心仪的域名后，点击并选择购买时限并填写个人信息。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain_choose.png" alt="cloudflare_register_domain_choose"></p>
<p>选择付款方式，建议可以选择自动续订，以免忘记续费。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_domain_payment.png" alt="cloudflare_register_domain_payment"></p>
<p>类型选择 Personal 即可，并点击完成购买。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_register_done.png" alt="cloudflare_register_done"></p>
<p>等待 Cloudflare 处理后即可查看信息。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_domain.jpg" alt="cloudflare_domain"></p>
<h3 id="digital-ocean-ssh-配置">Digital Ocean ssh 配置</h3>
<p>因为我们后续需要访问 Digital Ocean 的主机，我们需要先注册一个帐号，并配置我们的 ssh key，以便免密登录。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_add_key.png" alt="digital_ocean_add_key"></p>
<p>输入我们的 ssh key，点击添加即可。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_ssh_config.png" alt="digital_ocean_ssh_config"></p>
<h3 id="一键创建-ghost-droplet">一键创建 Ghost Droplet</h3>
<p>如上文所述，Ghost 提供了在 Digital Ocean 上一键创建 Droplet 的支持，我们可以访问<a href="https://ghost.org/docs/install/">安装说明文档</a>，点击 Digital Ocean 图标进行跳转。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_use_digital_ocean.png" alt="ghost_use_digital_ocean"></p>
<p>我们也可以在 Digital Ocean 镜像市场中搜索选择，点击右上角创建。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_market_ghost.png" alt="digital_ocean_market_ghost"></p>
<p>根据官方说明，选择 5 美元/月套餐配置已经足够，后续有更高需求也可以一键扩容（注：如先选择了高配置，无法进行降级）。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_ghost_config.png" alt="digital_ocean_ghost_config"></p>
<p>选择主机实例地区，我选择的是美国区域，可以根据需求自己选择，并选择上文操作添加到 ssh 配置，方便之后进行访问。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_ghost_region.png" alt="digital_ocean_ghost_region"></p>
<p>完成配置选择后，我们选择数量、名称并点击 Create Droplet 即可。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_ghost_create.png" alt="digital_ocean_ghost_create"></p>
<p>等待 Digital Ocean 准备主机，约几分钟就可以完成。</p>
<p><img src="https://image.pseudoyu.com/images/digital_ocean_ghost_done_hide.jpg" alt="digital_ocean_ghost_done_hide"></p>
<h3 id="配置域名解析">配置域名解析</h3>
<p>因为 Ghost 需要进行 https 配置，且出于方便用户进行访问等考虑，我们需要对新创建的服务器进行 DNS 解析。</p>
<p>登录 Cloudflare，选择我们刚注册的域名，选择左侧 DNS 标签栏，配置 A 解析（一般需要配置 root 解析与 www 解析），其他域名托管网站操作也大同小异。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_dns_config.jpg" alt="cloudflare_dns_config"></p>
<h3 id="域名-ssltls-配置可选">域名 SSL/TLS 配置（可选）</h3>
<p>如果使用 Cloudflare 进行托管，可以选择配置 SSL/TLS 加密模式为完全，可以更加保障安全性。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_ssl_config.png" alt="cloudflare_ssl_config"></p>
<h3 id="一键安装-ghost-服务">一键安装 Ghost 服务</h3>
<p>完成域名解析后，我们可通过 Digital Ocean 控制台或其他终端工具连接到主机，进行一键安装。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_one_key_install.jpg" alt="ghost_one_key_install"></p>
<p>Enter 后脚本会自动开始安装服务及各项依赖。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_start_install.png" alt="ghost_start_install"></p>
<p>安装是命令行交互式，我们仅需要输入两个自定义配置：</p>
<ul>
<li>Enter your blog URL</li>
<li>Enter your email(For SSL Certificate)</li>
</ul>
<p>这两个地方输入自己的域名与邮箱，等待安装完成即可。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_install_config.jpg" alt="ghost_install_config"></p>
<h3 id="访问网站">访问网站</h3>
<p>等待脚本执行完成后，我们就可以访问 Ghost 网站了。</p>
<ul>
<li>https://<code>{your domain}</code>/ghost，后台管理界面</li>
<li>https://<code>{your domain}</code>，网站地址</li>
</ul>
<p>第一次登录会需要注册一个管理员帐号，注册完成后登录即可。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_login.png" alt="ghost_login"></p>
<p>登录后即可看到非常美观的 Ghost 后台管理页面。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_dashboard.png" alt="ghost_dashboard"></p>
<p>Ghost 提供了非常多可定制化配置选项，可以根据自己网站的需求进行调整。</p>
<p><img src="https://image.pseudoyu.com/images/ghost_setting.png" alt="ghost_setting"></p>
<h2 id="总结">总结</h2>
<p>以上就是我使用 Ghost 官方推荐的 Digital Ocean 托管方式部署自己的 Ghost 网站，Ghost 升级 5.0 后已经能满足大部分网站的需求，且对商业化、数据处理有了更好的支持，对于个人博客和小团队来说都是比较好的选择，希望对大家有所帮助。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://ghost.org">Ghost 官网</a></li>
<li><a href="https://www.digitalocean.com">Digital Ocean 官网</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a></li>
<li><a href="https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/">轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>Solidity 智能合约开发 - 基础</title><link>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</link><pubDate>Wed, 25 May 2022 01:07:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</guid><description>《后来的我们 - 五月天》 前言 去年读研的时候上的 HKU 的 &amp;lt;COMP7408 Distributed Ledger and Blockchain Technology&amp;gt;，课程中学习了以太坊智能合约的开发，做了一个简单的图书</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>去年读研的时候上的 HKU 的 <code>&lt;COMP7408 Distributed Ledger and Blockchain Technology&gt;</code>，课程中学习了以太坊智能合约的开发，做了一个简单的图书管理 ÐApp，然后毕业设计也选择了基于 Ethereum 做了一个音乐版权应用，详见 <a href="https://github.com/pseudoyu/uright">Uright - 区块链音乐版权管理ÐApp</a>，对 Solidity 开发有一些基础了解。</p>
<p>后来工作后主要做联盟链和业务开发这一块，很久没有碰过合约，对于语法和底层一些概念都已经一知半解，正好最近做的项目是基于 EVM 的一条链，涉及了一些基本的存证、回检和迁移相关合约的开发，调试起来有些吃力，于是打算系统学习一下，梳理一下笔记成文章，敦促自己好好思考总结。</p>
<p>这系列文章也会收录在我的个人知识库项目 《<a href="https://www.pseudoyu.com/blockchain-guide/">区块链入门指南</a>》中，希望在学习过程中不断完善。有兴趣的朋友也可以访问<a href="https://github.com/pseudoyu/blockchain-guide">项目仓库</a>参与贡献或提出建议。</p>
<p>本文为系列第一篇，主要涉及 Solidity 基础知识。</p>
<h2 id="智能合约-与-solidity-语言">智能合约 与 Solidity 语言</h2>
<p>智能合约是运行在链上的程序，合约开发者可以通过智能合约实现与链上资产/数据进行交互，用户可以通过自己的链上账户来调用合约，访问资产与数据。因为区块链保留区块历史记录的链式结构、去中心化、不可篡改等特征，智能合约相比传统应用来说能更公正、透明。</p>
<p>然而，因为智能合约需要与链进行交互，部署、数据写入等操作都会消耗一定费用，数据存储与变更成本也比较高，因此在设计合约时需要着重考虑资源的消耗。此外，常规智能合约一经部署就无法进行修改，因此，合约设计时也需要多考虑其安全性、可升级性与拓展性。</p>
<p>Solidity 是一门面向合约的、为实现智能合约而创建的高级编程语言，在 EVM 虚拟机上运行，语法整体类似于 Javascript，是目前最流行的智能合约语言，也是入门区块链与 Web3 所必须掌握的语言。针对上述的一些合约编写的问题，Solidity 也都有相对完善的解决方案支持，后续会详细讲解。</p>
<h2 id="开发调试工具">开发/调试工具</h2>
<p>与常规编程语言不同，Solidity 智能合约的开发往往无法直接通过一个 IDE 或本地环境进行方便的调试，而是需要与一个链上节点进行交互。开发调试往往也不会直接与主网（即真实资产、数据与业务所在的链）进行交互，否则需要承担高额手续费。目前开发调试主要有以下几种方式与框架：</p>
<ol>
<li><a href="https://github.com/trufflesuite/truffle">Truffle</a>。Truffle 是一个非常流行的 Javascript 的 Solidity 合约开发框架，提供了完整的开发、测试、调试工具链，可以与本地或远程网络进行交互。</li>
<li><a href="https://github.com/eth-brownie/brownie">Brownie</a>。Brownie 是一个基于 Python 的 Solidity 合约开发框架，以简洁的 Python 语法为调试和测试提供了便捷的工具链。</li>
<li><a href="https://github.com/NomicFoundation/hardhat">Hardhat</a>。Hardhat 是另一个基于 Javascript 的开发框架，提供了非常丰富的插件系统，适合开发复杂的合约项目。</li>
</ol>
<p>除了开发框架外，更好地进行 Solidity 还需要熟悉一些工具：</p>
<ol>
<li><a href="https://remix.ethereum.org">Remix IDE</a>。通过 Ethereum 官方提供的基于浏览器的 Remix 开发工具进行调试，Remix 会提供完整的 IDE、编译工具、部署调试的测试节点环境、账户等，可以很方便地进行测试，这是我学习使用时用的最多的工具。Remix 还可以通过 MetaMask 插件与测试网、主网进行直接交互，部分生产环境也会使用它进行编译部署。</li>
<li>Remix IDE 对于语法提示等并不完善，因此，可以使用 <a href="https://code.visualstudio.com">Visual Studio Code</a> 配合 <a href="https://marketplace.visualstudio.com/items?itemName=juanblanco.solidity">Solidity</a> 进行编写，有更好的体验。</li>
<li><a href="https://metamask.io">MetaMask</a>。一个常用的钱包应用，开发过程中可以通过浏览器插件与测试网、主网进行交互，方便开发者进行调试。</li>
<li><a href="https://trufflesuite.com/ganache/">Ganache</a>。Ganache 是一个开源的虚拟本地节点，提供了一个虚拟链网络，可以通过各类 Web3.js、Remix 或一些框架工具与之交互，适合有一定规模的项目进行本地调试与测试。</li>
<li><a href="https://infura.io">Infura</a>。Infura 是一个 IaaS（Infrastructure as a Service）产品，我们可以申请自己的 Ethereum 节点，通过 Infura 提供的 API 进行交互，可以很方便地进行调试，也更接近生产环境。</li>
<li><a href="https://www.openzeppelin.com">OpenZeppelin</a>。OpenZeppelin 提供了非常多的合约开发库与应用，能兼顾安全、稳定的同时给予开发者更好的开发体验，降低合约开发成本。</li>
</ol>
<h2 id="合约编译部署">合约编译/部署</h2>
<p>Solidity 合约是以 <code>.sol</code> 为后缀的文件，无法直接执行，需要编译为 EVM（Ethereum Virtual Machine）可识别的字节码才能在链上运行。</p>
<p><img src="https://image.pseudoyu.com/images/compile_solidity.png" alt="compile_solidity"></p>
<p>编译完成后，由合约账户进行部署到链上，其他账户可通过钱包与合约进行交互，实现链上业务逻辑。</p>
<h2 id="核心语法">核心语法</h2>
<p>经过上文，我们对 Solidity 的开发、调试与部署有了一定了解。接下来我们就具体学习一下 Solidity 的核心语法。</p>
<h3 id="数据类型">数据类型</h3>
<p>与我们常见的编程语言类似，Solidity 有一些内置数据类型。</p>
<h4 id="基本数据类型">基本数据类型</h4>
<ul>
<li><code>boolean</code>，布尔类型有 <code>true</code> 和 <code>false</code> 两种类型，可以通过 <code>bool public boo = true;</code> 来定义，默认值为 <code>false</code></li>
<li><code>int</code>，整数类型，可以指定 <code>int8</code> 到 <code>int256</code>，默认为 <code>int256</code>，通过 <code>int public int = 0;</code> 来定义，默认值为 <code>0</code>，还可以通过 <code>type(int).min</code> 和 <code>type(int).max</code> 来查看类型最小和最大值</li>
<li><code>uint</code>，非负整数类型，可以指定 <code>uint8</code>、<code>uint16</code>、<code>uint256</code>，默认为 <code>uint256</code>，通过 <code>uint8 public u8 = 1;</code> 来定义，默认值为 <code>0</code></li>
<li><code>address</code>，地址类型，可以通过 <code>address public addr = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;</code> 来定义，默认值为 <code>0x0000000000000000000000000000000000000000</code></li>
<li><code>bytes</code>，<code>byte[]</code> 的缩写，分为固定大小数组和可变数组，通过 <code>bytes1 a = 0xb5;</code> 来定义</li>
</ul>
<p>还有一些相对复杂的数据类型，我们单独进行讲解。</p>
<h4 id="enum">Enum</h4>
<p><code>Enum</code> 是枚举类型，可以通过以下语法来定义</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">enum</span> <span class="nc">Status</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Unknown</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">Start</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">End</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">Pause</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>并通过以下语法来进行更新与初始化</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 实例化枚举类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Status</span> <span class="k">public</span> <span class="n">status</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 更新枚举值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nf">pause</span><span class="p">()</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">status</span> <span class="o">=</span> <span class="n">Status</span><span class="p">.</span><span class="n">Pause</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 初始化枚举值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nf">reset</span><span class="p">()</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">delete</span> <span class="n">status</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="数组">数组</h4>
<p>数组是一种存储同类元素的有序集合，通过 <code>uint[] public arr;</code> 来进行定义，在定义时可以预先指定数组大小，如 <code>uint[10] public myFixedSizeArr;</code>。</p>
<p>需要注意的是，我们可以在内存中创建数组（关于 <code>memory</code> 与 <code>storage</code> 等差异后续会详细讲解），但是必须固定大小，如 <code>uint[] memory a = new uint[](5);</code>。</p>
<p>数组类型有一些基本操作方法，如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// 定义数组类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">uint</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="k">public</span> <span class="n">arr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 添加数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">arr</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 删除最后一个数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">arr</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 删除某个索引值数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">delete</span> <span class="n">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 获取数组长度
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">uint</span> <span class="n">len</span> <span class="o">=</span> <span class="n">arr</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="mapping">mapping</h4>
<p><code>mapping</code> 是一种映射类型，使用 <code>mapping(keyType =&gt; valueType)</code> 来定义，其中键需要是内置类型，如 <code>bytes</code>、<code>int</code>、<code>string</code> 或合约类型，而值可以是任何类型，如嵌套 <code>mapping</code> 类型。需要注意的是，<code>mapping</code> 类型是不能被迭代遍历的，需要遍历则需要自行实现对应索引。</p>
<p>下面说明一下各类操作：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// 定义嵌套 mapping 类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">mapping</span><span class="p">(</span><span class="kt">string</span> <span class="o">=&gt;</span> <span class="kd">mapping</span><span class="p">(</span><span class="kt">string</span> <span class="o">=&gt;</span> <span class="kt">string</span><span class="p">))</span> <span class="n">nestedMap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 设置值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">nestedMap</span><span class="p">[</span><span class="n">id</span><span class="p">][</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#34;0707&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 读取值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">string</span> <span class="nb">value</span> <span class="o">=</span> <span class="n">nestedMap</span><span class="p">[</span><span class="n">id</span><span class="p">][</span><span class="n">key</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 删除值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">delete</span> <span class="n">nestedMap</span><span class="p">[</span><span class="n">id</span><span class="p">][</span><span class="n">key</span><span class="p">];</span>
</span></span></code></pre></div><h4 id="struct">Struct</h4>
<p><code>struct</code> 是结构类型，对于复杂业务，我们经常需要定义自己的结构，将关联的数据组合起来，可以在合约内进行定义</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">Struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">struct</span> <span class="nc">Data</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    	<span class="kt">string</span> <span class="n">id</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    	<span class="kt">string</span> <span class="n">hash</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">Data</span> <span class="k">public</span> <span class="nb">data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 添加数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">function</span> <span class="nf">create</span><span class="p">(</span><span class="kt">string</span> <span class="n">calldata</span> <span class="n">_id</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    	<span class="nb">data</span> <span class="o">=</span> <span class="n">Data</span><span class="p">{</span><span class="n">id</span><span class="o">:</span> <span class="n">_id</span><span class="p">,</span> <span class="n">hash</span><span class="o">:</span> <span class="s">&#34;111222&#34;</span><span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 更新数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">function</span> <span class="nf">update</span><span class="p">(</span><span class="kt">string</span> <span class="n">_id</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    	<span class="c1">// 查询数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    	<span class="kt">string</span> <span class="n">id</span> <span class="o">=</span> <span class="nb">data</span><span class="p">.</span><span class="n">id</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 更新
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nb">data</span><span class="p">.</span><span class="n">hash</span> <span class="o">=</span> <span class="s">&#34;222333&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>也可以单独文件定义所有需要的结构类型，由合约按需导入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// &#39;StructDeclaration.sol&#39;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kd">struct</span> <span class="nc">Data</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">string</span> <span class="n">id</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">string</span> <span class="n">hash</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// &#39;Struct.sol&#39;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="s">&#34;./StructDeclaration.sol&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">Struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Data</span> <span class="k">public</span> <span class="nb">data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="变量常量immutable">变量/常量/<code>Immutable</code></h3>
<p>变量是 Solidity 中可改变值的一种数据结构，分为以下三种：</p>
<ul>
<li><code>local</code> 变量</li>
<li><code>state</code> 变量</li>
<li><code>global</code> 变量</li>
</ul>
<p>其中， <code>local</code> 变量定义在方法中，而不会存储在链上，如 <code>string var = &quot;Hello&quot;;</code>；而 <code>state</code> 变量在方法之外定义，会存储在链上，通过 <code>string public var;</code> 定义变量，写入值时会发送交易，而读取值则不会；<code>global</code> 变量则是提供了链信息的全局变量，如当前区块时间戳变量，<code>uint timestamp = block.timestamp;</code>，合约调用者地址变量，<code>address sender = msg.sender;</code> 等。</p>
<p>变量可以通过不同关键字进行声明，表示不同的存储位置。</p>
<ul>
<li><code>storage</code>，会存储在链上</li>
<li><code>memory</code>，在内存中，只有方法被调用的时候才存在</li>
<li><code>calldata</code>，作为调用方法传入参数时存在</li>
</ul>
<p>而常量是一种不可以改变值的变量，使用常量可以节约 gas 费用，我们可以通过 <code>string public constant MY_CONSTANT = &quot;0707&quot;;</code> 来进行定义。<code>immutable</code> 则是一种特殊的类型，它的值可以在 <code>constructor</code> 中初始化，但不可以再次改变。灵活使用这几种类型可以有效节省 gas 费并保障数据安全。</p>
<h3 id="函数">函数</h3>
<p>在 Solidity 中，函数用来定义一些特定业务逻辑。</p>
<h4 id="权限声明">权限声明</h4>
<p>函数分为不同的可见性，用户不同的关键字进行声明：</p>
<ul>
<li><code>public</code>，任何合约都可调用</li>
<li><code>private</code>，只有定义了该方法的合约内部可调用</li>
<li><code>internal</code>，只有在继承合约可调用</li>
<li><code>external</code>，只有其他合约和账户可调用</li>
</ul>
<p>查询数据的合约函数也有不同的声明方式：</p>
<ul>
<li><code>view</code> 可以读取变量，但不能更改</li>
<li><code>pure</code> 不可以读也不可以修改</li>
</ul>
<h4 id="函数修饰符">函数修饰符</h4>
<p><code>modifier</code> 函数修饰符可以在函数运行前/后被调用，主要用来进行权限控制、对输入参数进行校验以及防止重入攻击等。这三种功能修饰符可以通过以下语法定义：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">modifier</span> <span class="nf">onlyOwner</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">require</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span> <span class="o">==</span> <span class="n">owner</span><span class="p">,</span> <span class="s">&#34;Not owner&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">modifier</span> <span class="nf">validAddress</span><span class="p">(</span><span class="kt">address</span> <span class="n">_addr</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">require</span><span class="p">(</span><span class="n">_addr</span> <span class="o">!=</span> <span class="kt">address</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="s">&#34;Not valid address&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">modifier</span> <span class="nf">noReentrancy</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">require</span><span class="p">(</span><span class="o">!</span><span class="n">locked</span><span class="p">,</span> <span class="s">&#34;No reentrancy&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">locked</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">_</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">locked</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>使用函数修饰符则是需要在函数声明时添加对应修饰符，如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">changeOwner</span><span class="p">(</span><span class="kt">address</span> <span class="n">_newOwner</span><span class="p">)</span> <span class="k">public</span> <span class="n">onlyOwner</span> <span class="n">validAddress</span><span class="p">(</span><span class="n">_newOwner</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">owner</span> <span class="o">=</span> <span class="n">_newOwner</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">decrement</span><span class="p">(</span><span class="kt">uint</span> <span class="n">i</span><span class="p">)</span> <span class="k">public</span> <span class="n">noReentrancy</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">-=</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">decrement</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="函数选择器">函数选择器</h4>
<p>当函数被调用时，<code>calldata</code> 的前四个字节要指定以确认调用哪个函数，被称为函数选择器。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">addr</span><span class="p">.</span><span class="nb">call</span><span class="p">(</span><span class="nb">abi</span><span class="p">.</span><span class="nb">encodeWithSignature</span><span class="p">(</span><span class="s">&#34;transfer(address,uint256)&#34;</span><span class="p">,</span> <span class="mi">0</span><span class="n">xSomeAddress</span><span class="p">,</span> <span class="mi">123</span><span class="p">))</span>
</span></span></code></pre></div><p>上述代码 <code>abi.encodeWithSignature() </code> 返回值的前四个字节就是函数选择器。我们如果在执行前预先计算函数选择器的话可以节约一些 <code>gas</code> 费。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">FunctionSelector</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">getSelector</span><span class="p">(</span><span class="kt">string</span> <span class="n">calldata</span> <span class="n">_func</span><span class="p">)</span> <span class="k">external</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">bytes4</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kt">bytes4</span><span class="p">(</span><span class="nb">keccak256</span><span class="p">(</span><span class="kt">bytes</span><span class="p">(</span><span class="n">_func</span><span class="p">)));</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="条件循环结构">条件/循环结构</h3>
<h4 id="条件">条件</h4>
<p>Solidity 使用 <code>if</code>、<code>else if</code>、<code>else</code> 关键字来实现条件逻辑：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>也可以使用简写形式：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">20</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">2</span><span class="p">;</span>
</span></span></code></pre></div><h4 id="循环">循环</h4>
<p>Solidity 使用 <code>for</code>、<code>while</code>、<code>do while</code> 关键字来实现循环逻辑，但是因为后两者容易达到 <code>gas limit</code> 边界值，所以基本上不用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="kt">uint</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// 业务逻辑
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kt">uint</span> <span class="n">j</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">while</span> <span class="p">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">j</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="合约">合约</h3>
<h4 id="构造器">构造器</h4>
<p>Solidity 的 <code>constructor</code> 可以在创建合约的时候执行，主要用来初始化</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">constructor</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">_name</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">name</span> <span class="o">=</span> <span class="n">_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如果合约之间存在继承关系，<code>constructor</code> 也会按照继承顺序。</p>
<h4 id="接口">接口</h4>
<p><code>Interface</code>，通过声明接口来进行合约交互，有以下要求：</p>
<ul>
<li>不能实现任何方法</li>
<li>可以继承其他接口</li>
<li>所有方法都必须声明为 <code>external</code></li>
<li>不能声明构造方法</li>
<li>不能声明状态变量</li>
</ul>
<p>接口用如下语法进行定义：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">Counter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="k">public</span> <span class="n">count</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">increment</span><span class="p">()</span> <span class="k">external</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">interface</span> <span class="nc">ICounter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">count</span><span class="p">()</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">increment</span><span class="p">()</span> <span class="k">external</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>调用则是通过</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">MyContract</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">incrementCounter</span><span class="p">(</span><span class="kt">address</span> <span class="n">_counter</span><span class="p">)</span> <span class="k">external</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">ICounter</span><span class="p">(</span><span class="n">_counter</span><span class="p">).</span><span class="n">increment</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">getCount</span><span class="p">(</span><span class="kt">address</span> <span class="n">_counter</span><span class="p">)</span> <span class="k">external</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">ICounter</span><span class="p">(</span><span class="n">_counter</span><span class="p">).</span><span class="n">count</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="继承">继承</h4>
<p>Solidity 合约支持继承，且可以同时继承多个，使用 <code>is</code> 关键字。</p>
<p>函数可以进行重写，需要被继承的合约方法需要声明为 <code>virtual</code>，重写方法需要使用 <code>override</code> 关键字。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// 定义父合约 A
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">contract</span> <span class="nc">A</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="k">public</span> <span class="k">pure</span> <span class="k">virtual</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="s">&#34;A&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// B 合约继承 A 合约并重写函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">contract</span> <span class="nc">B</span> <span class="k">is</span> <span class="n">A</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="k">public</span> <span class="k">pure</span> <span class="k">virtual</span> <span class="k">override</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="s">&#34;B&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// D 合约继承 B、C 合约并重写函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">contract</span> <span class="nc">D</span> <span class="k">is</span> <span class="n">B</span><span class="p">,</span> <span class="n">C</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="k">public</span> <span class="k">pure</span> <span class="k">override</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">)</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">string</span> <span class="k">memory</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nb">super</span><span class="p">.</span><span class="n">foo</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>有几点需要注意的是，继承顺序会影响业务逻辑，<code>state</code> 状态变量是不可以被继承的。</p>
<p>如果子合约想调用父合约，除了直接调用外，还可以通过 <code>super</code> 关键字来调用，如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">B</span> <span class="k">is</span> <span class="n">A</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="k">public</span> <span class="k">virtual</span> <span class="k">override</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 直接调用
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">A</span><span class="p">.</span><span class="n">foo</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">bar</span><span class="p">()</span> <span class="k">public</span> <span class="k">virtual</span> <span class="k">override</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    	<span class="c1">// 通过 super 关键字调用
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nb">super</span><span class="p">.</span><span class="n">bar</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="合约创建">合约创建</h4>
<p>Solidity 中可以从另一个合约中使用 <code>new</code> 关键字来创建另一个合约</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">create</span><span class="p">(</span><span class="kt">address</span> <span class="n">_owner</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">_model</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Car</span> <span class="n">car</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Car</span><span class="p">(</span><span class="n">_owner</span><span class="p">,</span> <span class="n">_model</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">cars</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">car</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>而 <code>solidity 0.8.0</code> 后支持 <code>create2</code> 特性创建合约</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">create2</span><span class="p">(</span><span class="kt">address</span> <span class="n">_owner</span><span class="p">,</span> <span class="kt">string</span> <span class="k">memory</span> <span class="n">_model</span><span class="p">,</span> <span class="kt">bytes32</span> <span class="n">_salt</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">Car</span> <span class="n">car</span> <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="n">Car</span><span class="p">){</span><span class="n">salt</span><span class="o">:</span> <span class="n">_salt</span><span class="p">}(</span><span class="n">_owner</span><span class="p">,</span> <span class="n">_model</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">cars</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">car</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="导入合约外部库">导入合约/外部库</h4>
<p>复杂业务中，我们往往需要多个合约之间进行配合，这时候可以使用 <code>import</code> 关键字来导入合约，分为本地导入 <code>import &quot;./Foo.sol&quot;;</code> 与外部导入 <code>import &quot;https://github.com/owner/repo/blob/branch/path/to/Contract.sol&quot;;</code> 两种方式。</p>
<p>外部库和合约类似，但不能声明状态变量，也不能发送资产。如果库的所有方法都是 <code>internal</code> 的话会被嵌入合约，如果非 <code>internal</code>，需要提前部署库并且链接起来。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">library</span> <span class="n">SafeMath</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">add</span><span class="p">(</span><span class="kt">uint</span> <span class="n">x</span><span class="p">,</span> <span class="kt">uint</span> <span class="n">y</span><span class="p">)</span> <span class="k">internal</span> <span class="k">pure</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="kt">uint</span> <span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nb">require</span><span class="p">(</span><span class="n">z</span> <span class="o">&gt;=</span> <span class="n">x</span><span class="p">,</span> <span class="s">&#34;uint overflow&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">TestSafeMath</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kn">using</span> <span class="n">SafeMath</span> <span class="k">for</span> <span class="kt">uint</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="事件">事件</h4>
<p>事件机制是合约中非常重要的一个设计。事件允许将信息记录到区块链上，DApp 等应用可以通过监听事件数据来实现业务逻辑，存储成本很低。以下是一个简单的日志抛出机制：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// 定义事件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">event</span> <span class="nc">Log</span><span class="p">(</span><span class="kt">address</span> <span class="k">indexed</span> <span class="nb">sender</span><span class="p">,</span> <span class="kt">string</span> <span class="n">message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">AnotherLog</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 抛出事件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">emit</span> <span class="n">Log</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">Log</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">,</span> <span class="s">&#34;Hello EVM!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">emit</span> <span class="n">AnotherLog</span><span class="p">();</span>
</span></span></code></pre></div><p>定义事件时可以传入 <code>indexed</code> 属性，但最多三个，加了后可以对这个属性的参数进行过滤，<code>var event = myContract.transfer({value: [&quot;99&quot;,&quot;100&quot;,&quot;101&quot;]});</code>。</p>
<h3 id="错误处理">错误处理</h3>
<p>链上错误处理也是合约编写的重要环节。Solidity 可以通过以下几种方式抛出错误。</p>
<p><code>require</code> 都是在执行前验证条件，不满足则抛出异常。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">testRequire</span><span class="p">(</span><span class="kt">uint</span> <span class="n">_i</span><span class="p">)</span> <span class="k">public</span> <span class="k">pure</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">require</span><span class="p">(</span><span class="n">_i</span> <span class="o">&gt;</span> <span class="mi">10</span><span class="p">,</span> <span class="s">&#34;Input must be greater than 10&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><code>revert</code> 用来标记错误与进行回滚。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">testRevert</span><span class="p">(</span><span class="kt">uint</span> <span class="n">_i</span><span class="p">)</span> <span class="k">public</span> <span class="k">pure</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">_i</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nb">revert</span><span class="p">(</span><span class="s">&#34;Input must be greater than 10&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><code>assert</code> 要求一定要满足条件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">testAssert</span><span class="p">()</span> <span class="k">public</span> <span class="k">view</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nb">assert</span><span class="p">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>注意，在 Solidity 中，当出现错误时会回滚交易中发生的所有状态改变，包括所有的资产，账户，合约等。</p>
<p><code>try / catch</code> 也可以捕捉错误，但只能捕捉来自外部函数调用和合约创建的错误。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">Log</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kd">event</span> <span class="nc">LogBytes</span><span class="p">(</span><span class="kt">bytes</span> <span class="nb">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">tryCatchNewContract</span><span class="p">(</span><span class="kt">address</span> <span class="n">_owner</span><span class="p">)</span> <span class="k">public</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">try</span> <span class="k">new</span> <span class="n">Foo</span><span class="p">(</span><span class="n">_owner</span><span class="p">)</span> <span class="k">returns</span> <span class="p">(</span><span class="n">Foo</span> <span class="n">foo</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">emit</span> <span class="n">Log</span><span class="p">(</span><span class="s">&#34;Foo created&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">catch</span> <span class="n">Error</span><span class="p">(</span><span class="kt">string</span> <span class="k">memory</span> <span class="n">reason</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">emit</span> <span class="n">Log</span><span class="p">(</span><span class="n">reason</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="kt">bytes</span> <span class="k">memory</span> <span class="n">reason</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">emit</span> <span class="n">LogBytes</span><span class="p">(</span><span class="n">reason</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="payable-关键字"><code>payable</code> 关键字</h3>
<p>我们可以通过声明 <code>payable</code> 关键字设置方法可从合约中接收 <code>ether</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="c1">// 地址类型可以声明 payable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">address</span> <span class="k">payable</span> <span class="k">public</span> <span class="n">owner</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">constructor</span><span class="p">()</span> <span class="k">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">owner</span> <span class="o">=</span> <span class="k">payable</span><span class="p">(</span><span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 方法声明 payable 来接收 Ether
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nf">deposit</span><span class="p">()</span> <span class="k">public</span> <span class="k">payable</span> <span class="p">{}</span>
</span></span></code></pre></div><h3 id="与-ether-交互">与 <code>Ether</code> 交互</h3>
<p>与 <code>Ether</code> 交互是智能合约的重要应用场景，主要分为发送和接收两部分，分别有不同的方法实现。</p>
<h4 id="发送">发送</h4>
<p>主要通过 <code>transfer</code>、<code>send</code> 与 <code>call</code> 方法实现，其中 <code>call</code> 优化了对重入攻击的防范，在实际应用场景中建议使用（但一般不用来调用其他函数）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">SendEther</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">function</span> <span class="nf">sendViaCall</span><span class="p">(</span><span class="kt">address</span> <span class="k">payable</span> <span class="n">_to</span><span class="p">)</span> <span class="k">public</span> <span class="k">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  	<span class="p">(</span><span class="kt">bool</span> <span class="n">sent</span><span class="p">,</span> <span class="kt">bytes</span> <span class="k">memory</span> <span class="nb">data</span><span class="p">)</span> <span class="o">=</span> <span class="n">_to</span><span class="p">.</span><span class="nb">call</span><span class="p">{</span><span class="nb">value</span><span class="o">:</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">value</span><span class="p">}(</span><span class="s">&#34;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  	<span class="nb">require</span><span class="p">(</span><span class="n">sent</span><span class="p">,</span> <span class="s">&#34;Failed to send Ether&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>而如果需要调用另一个函数，则一般使用 <code>delegatecall</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">B</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="k">public</span> <span class="n">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">address</span> <span class="k">public</span> <span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="k">public</span> <span class="nb">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">setVars</span><span class="p">(</span><span class="kt">uint</span> <span class="n">_num</span><span class="p">)</span> <span class="k">public</span> <span class="k">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">num</span> <span class="o">=</span> <span class="n">_num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nb">sender</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nb">value</span> <span class="o">=</span> <span class="nb">msg</span><span class="p">.</span><span class="nb">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">A</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="k">public</span> <span class="n">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">address</span> <span class="k">public</span> <span class="nb">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="k">public</span> <span class="nb">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">setVars</span><span class="p">(</span><span class="kt">address</span> <span class="n">_contract</span><span class="p">,</span> <span class="kt">uint</span> <span class="n">_num</span><span class="p">)</span> <span class="k">public</span> <span class="k">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="p">(</span><span class="kt">bool</span> <span class="n">success</span><span class="p">,</span> <span class="kt">bytes</span> <span class="k">memory</span> <span class="nb">data</span><span class="p">)</span> <span class="o">=</span> <span class="n">_contract</span><span class="p">.</span><span class="nb">delegatecall</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="nb">abi</span><span class="p">.</span><span class="nb">encodeWithSignature</span><span class="p">(</span><span class="s">&#34;setVars(uint256)&#34;</span><span class="p">,</span> <span class="n">_num</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="接收">接收</h4>
<p>接收 <code>Ether</code> 主要用 <code>receive() external payable</code> 与 <code>fallback() external payable</code> 两种。</p>
<p>当一个不接受任何参数也不返回任何参数的函数、当 <code>Ether</code> 被发送至某个合约但 <code>receive()</code> 方法未实现或 <code>msg.data</code> 非空时，会调用 <code>fallback()</code> 方法。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">contract</span> <span class="nc">ReceiveEther</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 当 msg.data 为空时
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">receive</span><span class="p">()</span> <span class="k">external</span> <span class="k">payable</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 当 msg.data 非空时
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">fallback</span><span class="p">()</span> <span class="k">external</span> <span class="k">payable</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kd">function</span> <span class="nf">getBalance</span><span class="p">()</span> <span class="k">public</span> <span class="k">view</span> <span class="k">returns</span> <span class="p">(</span><span class="kt">uint</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kt">address</span><span class="p">(</span><span class="nb">this</span><span class="p">).</span><span class="nb">balance</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="gas-费">Gas 费</h3>
<p>在 EVM 中执行交易需要耗费 gas 费，<code>gas spent</code> 表示需要多少 gas 量，<code>gas price</code> 为 gas 的单位价格，<code>Ether</code> 和 <code>Wei</code> 是价格单位，1 ether == 1e18 wei。</p>
<p>合约会对 Gas 进行限制，<code>gas limit</code> 由发起交易的用户设置，最多花多少 gas，<code>block gas limit</code>，由区块链网络决定，这个区块中最多允许多少 gas。</p>
<p>我们在合约开发中要尤其考虑尽量节约 gas 费，有以下几个常用技巧：</p>
<ol>
<li>使用 <code>calldata</code> 来替换 <code>memory</code></li>
<li>将状态变量载入内存</li>
<li>使用 <code>i++</code> 而不是 <code>++i</code></li>
<li>缓存数组元素</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-solidity" data-lang="solidity"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nf">sumIfEvenAndLessThan99</span><span class="p">(</span><span class="kt">uint</span><span class="p">[]</span> <span class="n">calldata</span> <span class="n">nums</span><span class="p">)</span> <span class="k">external</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="n">_total</span> <span class="o">=</span> <span class="n">total</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">uint</span> <span class="n">len</span> <span class="o">=</span> <span class="n">nums</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="kt">uint</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="kt">uint</span> <span class="n">num</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">99</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="n">_total</span> <span class="o">+=</span> <span class="n">num</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">total</span> <span class="o">=</span> <span class="n">_total</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>以上就是我们系列第一篇，Solidity 基础知识，后续文章会对其常见应用和实用编码技巧进行学习总结，欢迎大家持续关注。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://solidity-by-example.org">Solidity by Example</a></li>
<li><a href="http://gasolin.idv.tw/learndapp/">Ethereum 區塊鏈！智能合約(Smart Contract)與分散式網頁應用(dApp)入門</a></li>
<li><a href="https://www.pseudoyu.com/blockchain-guide/">区块链入门指南</a></li>
<li><a href="https://github.com/pseudoyu/uright">Uright - 区块链音乐版权管理ÐApp</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>轻量级开源免费博客评论系统解决方案 （Cusdis + Railway）</title><link>https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/</link><pubDate>Tue, 24 May 2022 21:47:47 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/24/free_and_lightweight_blog_comment_system_using_cusdis_and_railway/</guid><description>《后来的我们 - 五月天》 前言 之前写了一篇《免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）》，讲述了一下我使用 Serverless 和一些开源</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/cusdis_intro.png" alt="cusdis_intro"></p>
<p>之前写了一篇《<a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a>》，讲述了一下我使用 Serverless 和一些开源项目搭建的博客系统，也开了个系列来记录搭建过程。</p>
<p>本篇是关于博客评论系统的解决方案，我最早使用的博客评论系统是<del>万恶的</del> <a href="https://disqus.com">Disqus</a>，一个笨重且会收集用户隐私的知名评论系统，因为加载比较慢，且免费版本经常会附带一些广告，实在难以忍受，于是换成了另一个基于 GitHub issues 的评论系统 <a href="https://utteranc.es">utterances</a>，它会为每篇文章生成一个 issue，将，用户通过授权 GitHub 登录来对 issue 发表评论。这种方式的好处是只需要授权一个 <a href="https://github.com/utterances-bot">utterances-bot</a> 来进行管理，无需自己部署服务，维护数据库等。但是用了一段时间后，觉得有几点不足：</p>
<ol>
<li>基于 GitHub API 进行评论管理，如之后接口变动或对这类利用 issue 进行评论的方式进行限制，会不太稳定</li>
<li>读者必须要授权 GitHub 登录，非技术人员或使用移动端阅读的读者使用起来很不方便</li>
<li>会将 GitHub 仓库弄得较乱，也不方便后续迁移到其他系统</li>
</ol>
<p>经过一番调研 <a href="https://lutaonan.com">Randy</a> 的 <a href="https://cusdis.com/">Cusdis</a> 很合我的心意。Cusdis 是一个注重数据隐私的开源的评论系统，十分轻量，经过 gzipped 后大约只有 5kb，从名字来看也知道开发者也是难以忍受 Disqus，自己做了一个替代版，因此它也是支持 Disqus 历史数据导入的，很贴心。</p>
<p>虽然这是一个开发早期的项目，但是已经提供了电子邮件通知以及通过 Webhook 联动 Telegram 等方式进行评论提醒，对使用者来说很方便进行管理。Cusdis 提供了免费托管服务与自行部署两种方式，如果不想折腾可以直接用作者提供的服务。自行部署则需要服务器与一个 Postgre SQL 实例，我们主要示范一下自行部署方式。</p>
<p>因为在上一篇 《<a href="https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/">从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</a>》 中我使用的是 <a href="http://vercel.com/">Vercel</a> 和 <a href="https://www.heroku.com/">Heroku</a> 进行搭建的，作为一个爱折腾的人，这个评论系统我们就用 <a href="https://railway.app/">Railway</a> 来搭建部署。</p>
<p>Railway 和 Vercel 类似，也是一个 PaaS 平台，能够支持多种语言项目的部署。对于个人项目来说，它每月提供的 5 美元免费额度非常够用，实测了一下，把之前的 <a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">umami 网站数据统计系统</a> 连同 Postgre SQL 数据库实例部署在 Railway 平台，大约一个月 0.7 美元，对于个人使用来说完全足够。</p>
<p><img src="https://image.pseudoyu.com/images/railway_price.png" alt="railway_price"></p>
<p>比起 Vercel，它同时支持部署数据库实例，可以将数据库与实例一起部署在单个项目中，减少搭建维护成本。下文会对具体搭建部署流程做个记录，因为官方支持 Railway 一键部署方式，整个搭建流程很顺畅。</p>
<p><strong>[2024-06-30 更新]</strong></p>
<p>鉴于 Railway 从去年 8 月起已经取消了 Free Plan，如果依然想完全免费使用，可以使用 Vercel/Netlify/Zeabur 免费部署主项目，并在 Supabase 上部署一个免费的 PostgreSQL 数据库实例，把链接作为环境变量传入 Cusdis 服务中即可，其他流程大同小异。</p>
<h2 id="搭建部署说明">搭建部署说明</h2>
<h3 id="使用-railway-一键部署服务与数据库实例">使用 Railway 一键部署服务与数据库实例</h3>
<p>首先注册一个 Railway 账号，可以用我的<a href="https://railway.app?referralCode=J0F5LQ">邀请链接</a>。注册登录完成后，点击右上角 New Project 新建项目。</p>
<p><img src="https://image.pseudoyu.com/images/railway_dashboard.png" alt="railway_dashboard"></p>
<p>然后输入 Cusdis 进行搜索，点击出现的项目即可开始部署。前几步也可以通过点击 <a href="https://github.com/djyde/cusdis">Cusdis 项目仓库</a> 中的 <code>Deploy on Railway</code> 按钮进行一键部署。</p>
<p><img src="https://image.pseudoyu.com/images/new_cusids_starter.png" alt="new_cusids_starter"></p>
<p>开始部署前，需要手动填入三个环境变量：</p>
<p><img src="https://image.pseudoyu.com/images/deploy_cusdis_on_railway.png" alt="deploy_cusdis_on_railway"></p>
<ol>
<li>USERNAME: 用来登录的账户</li>
<li>PASSWORD: 用来登录的密码</li>
<li>JWT_SECRET: 一个随机字符串</li>
</ol>
<p>其他一些环境变量已经预先设置默认值，请不要自行修改。</p>
<ol>
<li>NEXTAUTH_URL: <code>${{ RAILWAY_STATIC_URL }}</code></li>
<li>DB_TYPE: <code>pgsql</code></li>
<li>DB_URL: <code>${{ DATABASE_URL }}</code></li>
<li>PORT: <code>3000</code></li>
</ol>
<p>点击部署后，等待完成即可，会自动部署服务并初始化数据库。</p>
<p><img src="https://image.pseudoyu.com/images/cusdis_deploy_done.jpg" alt="cusdis_deploy_done"></p>
<h3 id="配置-cusdis-脚本至个人博客">配置 Cusdis 脚本至个人博客</h3>
<p>部署完成后，点击 cusdis 服务生成的链接，点击访问服务 Dashboard。</p>
<p><img src="https://image.pseudoyu.com/images/cusdis_login.png" alt="cusdis_login"></p>
<p>此处输入部署前配置的用户名与密码，点击登录。登录完成后，点击 Dashboard，进入项目配置页面。</p>
<p>初次登录会弹窗提示需要配置第一个网站，输入网站名称即可完成添加。后续当我们需要添加网站时，点击侧边栏 New Website，填写网站名称即可完成添加。</p>
<p><img src="https://image.pseudoyu.com/images/add_new_website.png" alt="add_new_website"></p>
<p>因为我已经配置了自己的网站，所以界面会有之前的评论记录。</p>
<p><img src="https://image.pseudoyu.com/images/cusdis_dashboard.png" alt="cusdis_dashboard"></p>
<p>下面我们点击上方 Embed Code，复制弹窗中的代码。</p>
<p><img src="https://image.pseudoyu.com/images/cusdis_embed_code.jpg" alt="cusdis_embed_code"></p>
<p>这部份代码需要根据你所用的博客网站类型不同进行部分修改，具体可参考<a href="https://cusdis.com/doc#/">官方文档</a> 的 Integration 模块进行配置。</p>
<p>我所用的是 <a href="https://gohugo.io">Hugo</a>，配置如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;cusdis_thread&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">data-host</span><span class="o">=</span><span class="s">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">data-app-id</span><span class="o">=</span><span class="s">&#34;xxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">data-page-id</span><span class="o">=</span><span class="s">&#34;{{ .File.UniqueID }}&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">data-page-url</span><span class="o">=</span><span class="s">&#34;{{ .Permalink }}&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">data-page-title</span><span class="o">=</span><span class="s">&#34;{{ .Title }}&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">defer</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://cusdis.com/js/widget/lang/zh-cn.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">async</span> <span class="na">defer</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;xxx&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>其中的 <code>data-host</code>，<code>data-app-id</code> 等都需要以刚复制出的 Embed Code 内容为准。其中 <code>&lt;script defer src=&quot;https://cusdis.com/js/widget/lang/zh-cn.js&quot;&gt;&lt;/script&gt;</code> 主要实现了汉化，不同语言支持详见<a href="https://cusdis.com/doc#/advanced/i18n">文档 i18n 模块</a>。</p>
<p>修改后，将其添加到博客的相应位置（一般在最下方），配置部署后，即可看到评论框，呈现效果如下：</p>
<p><img src="https://image.pseudoyu.com/images/cusdis_display.png" alt="cusdis_display"></p>
<h3 id="配置自定义域名">配置自定义域名</h3>
<p>Railway 部署自动生成的域名比较长，且有一些字符，不方便记忆。我们可以在 Railway 中为项目配置自定义域名。</p>
<p><img src="https://image.pseudoyu.com/images/railway_custom_domain.jpg" alt="railway_custom_domain"></p>
<p>填入想要配置的域名/二级域名后，根据官方提示添加 DNS 解析。</p>
<p><img src="https://image.pseudoyu.com/images/railway_domain_dns.jpg" alt="railway_domain_dns"></p>
<p>例如，我使用的是 <a href="https://www.cloudflare.com">Cloudflare</a> 托管的域名，需要先添加一下域名 CNAME 解析。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_domain_dns.jpg" alt="cloudflare_domain_dns"></p>
<p>至此，我们的部署已经完成，可以通过域名访问管理后台，进行评论审核管理等。</p>
<h3 id="更新项目">更新项目</h3>
<p>如前文所述，Cusdis 还是一个正在开发成长的项目，我们想第一时间更新作者发布的新功能。Railway 提供了十分便捷的上游分支管理功能，可以设置项目的父项目，点击即可拉取最新更新，很方便。</p>
<p><img src="https://image.pseudoyu.com/images/railway_update_project.png" alt="railway_update_project"></p>
<h2 id="总结">总结</h2>
<p>以上就是我们为网站添加 Cusdis 评论系统的全流程，配置完成后无需后续维护，可以便捷地通过看板来进行网站管理与评论审核，且数据存储在 Postgre SQL 数据库实例中，方便导出备份与迁移。这是我的博客搭建部署系列教程之一，请持续关注，希望能对大家有所参考。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://cusdis.com">Cusdis 项目官网</a></li>
<li><a href="https://railway.app">Railway 官方网站</a></li>
<li><a href="https://reorx.com/blog/deploy-umami-for-personal-website/">搭建 umami 收集个人网站统计数据</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>通过 mover.io 服务无缝迁移云端网盘文件至 OneDrive</title><link>https://www.pseudoyu.com/en/2022/05/22/migrate_your_files_to_onedrive_using_mover_io/</link><pubDate>Sun, 22 May 2022 13:06:12 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/22/migrate_your_files_to_onedrive_using_mover_io/</guid><description>《后来的我们 - 五月天》 前言 最近学校发了邮件说要把邮箱服务从 Google 转移到 Microsoft，而且原先的 Google Drive 无限流量也将取消，转移为 5T 的 OneDri</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>最近学校发了邮件说要把邮箱服务从 Google 转移到 Microsoft，而且原先的 Google Drive 无限流量也将取消，转移为 5T 的 OneDrive。我原先一直用着 Google Drive 的文件服务，在我的多个设备之间同步和备份文件，到现在也差不多占了 300 多 GB 的空间。因为 Google Drive 在内地需要代理，下载速度很慢，因此，我采用了官方推荐的 <a href="https://mover.io">mover.io</a> 服务来进行云端迁移，无需下载到本地转存，记录一下迁移过程。</p>
<h2 id="moverio-服务">mover.io 服务</h2>
<p><img src="https://image.pseudoyu.com/images/mover_io.png" alt="mover_io"></p>
<p>mover.io 服务是微软提供的一个网盘迁移服务，支持将很多云服务商提供的网盘文件迁移到 Microsoft OneDrive 上，比如 Google Drive、Dropbox、Box 等。它为机构、学校以及个人都提供了迁移服务。</p>
<p>对于个人用户，我们使用 Transfer Wizard 来进行迁移。</p>
<p><img src="https://image.pseudoyu.com/images/mover_transfer_wizard.png" alt="mover_transfer_wizard"></p>
<h2 id="迁移流程">迁移流程</h2>
<h3 id="注册登录-moverio-账户">注册/登录 mover.io 账户</h3>
<p>首先，我们需要注册一个 mover.io 账户，并登录，可以使用 Microsoft 授权登录或使用原来的 mover.io 账户。</p>
<p><img src="https://image.pseudoyu.com/images/mover_io_login.png" alt="mover_io_login"></p>
<h3 id="授权迁移数据源">授权迁移数据源</h3>
<p>登录成功后，界面清晰地给出了操作说明，按照步骤操作即可。</p>
<p><img src="https://image.pseudoyu.com/images/mover_transfer_wizard_setting.png" alt="mover_transfer_wizard_setting"></p>
<h4 id="选择迁移来源">选择迁移来源</h4>
<p>点击 Authorize New Connector 按钮，选择 Google Drive (Single User)，选择需要迁移文件所在的 Google 账户并授权。</p>
<p><img src="https://image.pseudoyu.com/images/mover_source_google.png" alt="mover_source_google"></p>
<p>授权完成后，就会出现所有需要迁移的文件列表。</p>
<p><img src="https://image.pseudoyu.com/images/mover_source_done.png" alt="mover_source_done"></p>
<h4 id="选择迁移目标">选择迁移目标</h4>
<p>点击 Authorize New Connector 按钮，选择 OneDrive for Business (Single User)，选择该数据源并授权。目前目标数据源只支持微软家族的 OneDrive 和 SharePoint 等。</p>
<p><img src="https://image.pseudoyu.com/images/mover_choose_dest.png" alt="mover_choose_dest"></p>
<p><img src="https://image.pseudoyu.com/images/mover_dest_onedrive.png" alt="mover_dest_onedrive"></p>
<p>授权完成后，就会出现迁移目标网盘的文件列表。</p>
<p><img src="https://image.pseudoyu.com/images/mover_dest_onedrive_done.png" alt="mover_dest_onedrive_done"></p>
<h3 id="迁移数据">迁移数据</h3>
<p>来源数据源与目标数据源都迁移完成后，即可选择 Start Copy 开始迁移流程。</p>
<p><img src="https://image.pseudoyu.com/images/mover_start_copy.png" alt="mover_start_copy"></p>
<h3 id="等待迁移完成">等待迁移完成</h3>
<p>完成上述操作后，迁移流程已经开始，仅需等待完成即可，可以通过登录后的 Migration Manager 进行进度查看。</p>
<p><img src="https://image.pseudoyu.com/images/mover_wait_migration_done.png" alt="mover_wait_migration_done"></p>
<p>因为源文件大小不同，迁移时间每个人各不相同，经测试，迁移速度参照如下：</p>
<p><img src="https://image.pseudoyu.com/images/mover_migration_speed.png" alt="mover_migration_speed"></p>
<h2 id="总结">总结</h2>
<p>以上就是我用过 mover.io 服务将所有 Google Drive 文件迁移到 OneDrive 上的过程，希望对大家有所帮助。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://mover.io/">mover.io 官网</a></li>
<li><a href="https://its.hku.hk/kb/ways-on-reducing-storage-on-google-drive-google-photos-and-gmail/#b-transfer-google-drive">Transfer Google Drive
(HKU Connect Google Drive &gt; HKU Microsoft OneDrive)</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>从零开始搭建一个免费的个人博客数据统计系统（umami + Vercel + Heroku）</title><link>https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/</link><pubDate>Sat, 21 May 2022 16:56:47 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/21/free_blog_analysis_using_umami_vercel_and_heroku/</guid><description>《后来的我们 - 五月天》 前言 之前写了一篇《免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）》，讲述了一下我使用 Serverless 和一些开源</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p><img src="https://image.pseudoyu.com/images/umami_dashboard_white.png" alt="umami_dashboard_white"></p>
<p>之前写了一篇《<a href="https://www.pseudoyu.com/en/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/">免费的个人博客系统搭建及部署解决方案（Hugo + GitHub Pages + Cusdis）</a>》，讲述了一下我使用 Serverless 和一些开源项目搭建的博客系统，也开了个系列来记录搭建过程。</p>
<p>前几天看到 <a href="https://reorx.com">Reorx</a> 写的一篇 《<a href="https://reorx.com/blog/deploy-umami-for-personal-website/">搭建 umami 收集个人网站统计数据</a>》，他介绍了 <a href="https://umami.is">umami</a> 这个项目，并使用 <a href="https://railway.app">Railway</a> 进行无服务搭建部署。</p>
<p>只不过我因为之前部署 <a href="https://cusdis.com">Cusdis</a> 的时候使用的是 <a href="https://www.heroku.com/">Heroku</a> 提供的免费 Postgres 数据库服务并用 <a href="http://vercel.com/">Vercel</a> 进行部署，于是在部署 umami 的时候还是想沿用原来的平台，减少搭建和维护成本。</p>
<p>下文会对具体搭建部署流程做个记录，因为官方支持一键部署方式，整个搭建流程很顺畅。</p>
<p><strong>[2024-06-30 更新]</strong></p>
<p>后来由于 Heroku 取消了免费 Plan，如果依然想完全免费使用，可以使用 Vercel/Netlify/Zeabur 免费部署主项目 + Supabase 部署 PostgreSQL 数据库实例部署的方式，把链接作为环境变量传入 Umami 服务中即可，其余流程依然适用。</p>
<h2 id="搭建部署说明">搭建部署说明</h2>
<h3 id="使用-heroku-创建-postgres-数据库">使用 Heroku 创建 Postgres 数据库</h3>
<h4 id="创建-postgres-数据库">创建 Postgres 数据库</h4>
<p>首先注册一个 Heroku 账号，登录成功后，点击右上角按钮创建一个新的应用。</p>
<p><img src="https://image.pseudoyu.com/images/cretae_app_in_heroku_1.png" alt="cretae_app_in_heroku_1"></p>
<p>输入实例名称，地区可以自行选择，我选择的是 United States，点击创建。</p>
<p><img src="https://image.pseudoyu.com/images/cretae_app_in_heroku_2.png" alt="cretae_app_in_heroku_2"></p>
<p>创建完成后，在 Resources Tab 的 Adds-on 中搜索选择 Postgres 数据库。</p>
<p><img src="https://image.pseudoyu.com/images/add_heroku_postgres.png" alt="add_heroku_postgres"></p>
<p>选择 Free Plan 即可，Heroku 中的 Postgres 数据库是免费的，可以持续使用，免去了搭建维护成本。</p>
<p><img src="https://image.pseudoyu.com/images/heroku_postgres_plan.png" alt="heroku_postgres_plan"></p>
<p>创建完成后，在 Setting 中查看 <code>DATABASE_URL</code>，后面部署要用到。</p>
<p><img src="https://image.pseudoyu.com/images/postgres_data_url.jpg" alt="postgres_data_url"></p>
<p>点击新增的 Postgres add-on 跳转进行设置。</p>
<p><img src="https://image.pseudoyu.com/images/postgres_addon_details.png" alt="postgres_addon_details"></p>
<p>进入后，选择 Setting 页面的 View Credentials，并且记录配置参数。</p>
<p><img src="https://image.pseudoyu.com/images/heroku_credentials.png" alt="heroku_credentials"></p>
<p><img src="https://image.pseudoyu.com/images/postgres_settings.jpg" alt="postgres_settings"></p>
<h4 id="初始化-postgres-数据库">初始化 Postgres 数据库</h4>
<p>因为需要初始化数据库，我使用的是 DataGrip 数据库管理工具进行连接，比较方便，也可以通过 Heroku CLI 进行连接和配置。</p>
<p><img src="https://image.pseudoyu.com/images/postgres_config.jpg" alt="postgres_config"></p>
<p>umami 需要通过官方提供的 <a href="https://github.com/mikecao/umami/blob/master/sql/schema.postgresql.sql">umami/sql/schema.postgresql.sql</a> 脚本进行初始化。</p>
<p><img src="https://image.pseudoyu.com/images/postgres_init_script.png" alt="postgres_init_script"></p>
<p>执行完成后，数据库有了五张表与初始化数据，可以进行后续部署工作。</p>
<h3 id="使用-vercel-一键部署-umami-服务">使用 Vercel 一键部署 umami 服务</h3>
<h4 id="部署-umami-服务">部署 umami 服务</h4>
<p>创建好数据库实例之后，可以通过 Vercel 一键部署 umami 服务了。</p>
<p>访问 <a href="https://umami.is">umami 官方文档</a> 的 <a href="https://umami.is/docs/running-on-vercel">Running on Vercel</a> 模块，有操作说明与一键部署脚本。</p>
<p><img src="https://image.pseudoyu.com/images/running_on_vercel.png" alt="running_on_vercel"></p>
<p>点击一键部署按钮后，会跳转至 Vercel 的一键部署页面，创建 umami 的 Github 仓库。</p>
<p><img src="https://image.pseudoyu.com/images/vercel_create_umami_repo.png" alt="vercel_create_umami_repo"></p>
<p>接下来需要填入之前在部署 Heroku Postgres 实例时记录到 <code>DATABASE_URL</code> 参数地址，并且需要填写一个自定义字符串 <code>HASH_SLAT</code>。</p>
<p><img src="https://image.pseudoyu.com/images/vercel_config_umami.png" alt="vercel_config_umami"></p>
<p>点击 Deploy 进行部署，等待几分钟后部署完成即可。</p>
<p><img src="https://image.pseudoyu.com/images/vercel_deploy.png" alt="vercel_deploy"></p>
<p><img src="https://image.pseudoyu.com/images/vecel_deploy_done.png" alt="vecel_deploy_done"></p>
<h4 id="访问-umami-服务">访问 umami 服务</h4>
<p>部署完成后，点击 Dashboard 或分配的 Vercel 域名访问服务，可以看到 umami 的登录界面。</p>
<p><img src="https://image.pseudoyu.com/images/umami_login.png" alt="umami_login"></p>
<p>初次登录输入默认用户名 <code>admin</code> 与默认密码 <code>umami</code>，登录成功后，会跳转至 umami 的管理页面，登录后可以点击右上角头像自行修改密码。</p>
<p><img src="https://image.pseudoyu.com/images/umami_change_password.png" alt="umami_change_password"></p>
<h4 id="配置个人网站至-umami-服务">配置个人网站至 umami 服务</h4>
<p>完成基础帐号配置后，点击侧边栏网站 Tab，点击添加网站。</p>
<p><img src="https://image.pseudoyu.com/images/umami_add_website_1.png" alt="umami_add_website_1"></p>
<p>填写网站基本信息，如果勾选共享链接可以生成一个可公开访问的网址，我把它添加了一个书签放在 iPad 主屏幕上，作为一个数据看板也很不错。</p>
<p><img src="https://image.pseudoyu.com/images/umami_add_website_2.png" alt="umami_add_website_2"></p>
<h4 id="配置-umami-脚本至个人博客网站">配置 umami 脚本至个人博客网站</h4>
<p>网站创建完成，获取 umami 脚本。</p>
<p><img src="https://image.pseudoyu.com/images/get_umami_script.jpg" alt="get_umami_script"></p>
<p>获取后，在个人网站添加 umami 脚本。我使用的是静态博客 Hugo，在主题中的 <code>&lt;head&gt;</code> 标签内添加。</p>
<p><img src="https://image.pseudoyu.com/images/set_umami_script.jpg" alt="set_umami_script"></p>
<p>配置完成部署，即可开始追踪网站数据。</p>
<p><img src="https://image.pseudoyu.com/images/umami_dashboard_white.png" alt="umami_dashboard_white"></p>
<h4 id="配置自定义脚本名称">配置自定义脚本名称</h4>
<p>使用官方的 <code>umami.js</code> 脚本名称，可能会被一些过滤规则拦截，因此我们可以自定义脚本名称，实现更准确地网站数据追踪。</p>
<p>官方也提供了便捷的修改方式，可以在 Vercel 中已经部署的 umami 服务中增加 <code>TRACKER_SCRIPT_NAME</code> 环境变量，配置为自定义名称。</p>
<p><img src="https://image.pseudoyu.com/images/umami_script_environment_varible.png" alt="umami_script_environment_varible"></p>
<p>配置完成后重新部署，再在个人网站脚本中更改脚本名称即可。</p>
<p><img src="https://image.pseudoyu.com/images/change_umami_script.jpg" alt="change_umami_script"></p>
<h4 id="配置自定义域名">配置自定义域名</h4>
<p>如果不想要使用 Vercel 提供的 <code>vercel.app</code> 域名，可以在 Vercel 中添加自定义域名，按照 Vercel 官方指引对域名提供商进行 <code>CANME</code> 等配置。</p>
<p><img src="https://image.pseudoyu.com/images/set_custom_domain.png" alt="set_custom_domain"></p>
<p>例如，我使用的是 <a href="https://www.cloudflare.com">Cloudflare</a> 托管的域名，需要先添加一下域名解析。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_canme_config.png" alt="cloudflare_canme_config"></p>
<p>根据官方说明，Cloudflare 还需要添加一个页面规则，配置完成后即可完成自定义域名配置。</p>
<p><img src="https://image.pseudoyu.com/images/cloudflare_page_rule.png" alt="cloudflare_page_rule"></p>
<h2 id="总结">总结</h2>
<p>以上就是我们为网站添加 umami 网站统计服务的全流程，配置完成后无需后续维护，可以便捷地通过看板来进行网站数据追踪。这是我的博客搭建部署系列教程之一，请持续关注，希望能对大家有所参考。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://umami.is">umami</a></li>
<li><a href="https://reorx.com/blog/deploy-umami-for-personal-website/">搭建 umami 收集个人网站统计数据</a></li>
<li><a href="http://vercel.com">Vercel 官方网站</a></li>
<li><a href="https://www.heroku.com">Heroku 官方网站</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>[译] 用 Go 编写一个简单的内存键值数据库</title><link>https://www.pseudoyu.com/en/2022/05/21/writing_a_simple_in_memory_key_value_database_in_go/</link><pubDate>Sat, 21 May 2022 14:53:51 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/21/writing_a_simple_in_memory_key_value_database_in_go/</guid><description>《后来的我们 - 五月天》 前言 从 Postgres 到 Redis，再到 Prometheus，我们都使用并从事过各种数据库的开发。我花了很多时间来阅读其中一些数据库</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>从 Postgres 到 Redis，再到 Prometheus，我们都使用并从事过各种数据库的开发。我花了很多时间来阅读其中一些数据库的源代码，对于那些像我一样好奇的少数人来说，他们有兴趣学习如何编写一个数据库。本书旨在记录这一过程。</p>
<p><a href="https://github.com/arriqaaq/flashdb">GitHub - arriqaaq/flashdb: FlashDB is an embeddable, in-memory key/value database in Go (with Redis like commands)</a></p>
<h2 id="内存数据库">内存数据库</h2>
<p>与传统数据库的数据主要保存在机械硬盘或者固态硬盘不同的是, 内存数据库主要将数据保存在内存中。 内存数据库主要是通过消除对磁盘的访问来实现最小的响应时间，两者的不同主要体现在内存数据库是将数据保存在主存或者 RAM 中。然而, 传统的数据库则是通过驱动磁盘来获取数据。由于所有的数据都存储与管理在主存中，内存数据库相比传统的数据库更不稳定，因为当计算机断电或 RAM 崩溃时，数据将会丢失。内存数据库可以通过将每个操作存储在日志中或采取快照的方式在磁盘上持久化数据。</p>
<h2 id="目标">目标</h2>
<p>我们的目标是用 Go 编写一个简单、快速、嵌入式和可持久化的键/值数据库，并且实现以下功能</p>
<ul>
<li>支持类似 Redis 的数据结构：<code>string</code>,  <code>hash</code>, <code>set</code>, <code>zset</code></li>
<li>具有低延时和高吞吐量</li>
<li>支持事务，ACID 语义</li>
<li><a href="https://github.com/arriqaaq/flashdb#append-only-file">仅可写入的持久化文件</a>格式</li>
<li>可以通过使用 TTL 来处理<a href="https://github.com/arriqaaq/flashdb#data-expiration">数据过期</a></li>
</ul>
<h2 id="开始">开始</h2>
<p>我们的目的是建立一个非常简单的 KV（键/值）存储，以便让每个人都能轻松理解和实现。在 Go 中，有相当多的嵌入式键/值存储可用，以下是一些例子：</p>
<ul>
<li><a href="https://github.com/dgraph-io/badger">BadgerDB</a> - BadgerDB 是一个完全用 Go 编写的嵌入式、可持久化、简单而快速的键值（KV）数据库。它旨在成为 RocksDB 等非基于 Go 实现的键值存储的高性能替代品</li>
<li><a href="https://github.com/boltdb/bolt">BoltDB</a> - BoltDB 是一个基于 B+ 树的嵌入式 Go 键/值数据库</li>
<li><a href="https://github.com/tidwall/buntdb">BuntDB</a> - BuntDB 是一个应用于 Go 的嵌入式内存键/值数据库，具有自定义索引和地理空间支持</li>
<li><a href="https://github.com/hashicorp/go-memdb">go-memdb</a> - 基于不可变基数树的 Golang 内存数据库</li>
<li><a href="https://github.com/xujiajun/nutsdb">nutsdb</a> - 一个基于磁盘的键值存储</li>
</ul>
<p>读起来比做起来容易，我们可以通过阅读庞大的代码库来了解其内部结构，但这对很多人来说是开始的障碍。<a href="https://github.com/xujiajun/nutsdb">NutsDB</a> 是我在 2-3 年前读到的第一批简单易懂的代码之一。</p>
<p>因此，FlashDB 是由易于理解的组合库组成的。我们的想法是为任何想学习关于如何编写一个简单的 ACID 数据库的新手提供桥梁。</p>
<h2 id="架构">架构</h2>
<p><img src="https://image.pseudoyu.com/images/flashdb_architecture.png" alt="flashdb_architecture"></p>
<p>FlashDB 的架构很简单并且支持各种 Redis 命令。Redis 本质上不是一个普通的键值存储，而是一个数据结构服务器，支持不同种类的值。事实上 Redis 使用以下数据结构实现了各种类型。</p>
<h3 id="字符串">字符串</h3>
<p>Redis 字符串类型是你能与 Redis 键关联的最简单的值类型。由于 Redis 键是字符串，当我们把字符串类型也作为一个值时，我们是把一个字符串映射到另一个字符串。这是用<a href="https://github.com/arriqaaq/art">可变基数树</a>（ART）实现的，这样可以很容易进行扫描。</p>
<ul>
<li><a href="https://github.com/arriqaaq/skiplist">String</a></li>
</ul>
<h3 id="哈希">哈希</h3>
<p>用哈希表示对象很方便，而实际上哈希中可放入的字段数量并没有实际限制（除了可用的内存），所以你可以在应用程序中以许多不同的方式使用哈希。这是用一个非常简单的 HashMap 数据结构实现的。</p>
<ul>
<li><a href="https://github.com/arriqaaq/hash">Hash</a></li>
</ul>
<h3 id="集合">集合</h3>
<p>Redis 集合是无序的字符串集合。我们可以对集合进行一些操作，比如检测某个元素是否已经存在，查找多个集合之间的交集、并集或差集等。这也是用一个简单的 HashMap 数据结构实现的。</p>
<ul>
<li><a href="https://github.com/arriqaaq/set">Set</a></li>
</ul>
<h3 id="有序集合">有序集合</h3>
<p>有序集合是一种数据类型，类似于集合与哈希的混合体。和集合一样，有序集合也是由唯一的、不重复的字符串元素组成的。所以从某种意义上说，有序集合也是一个集合。</p>
<p>虽然集合内的元素并不是有序的，但有序集合中的每个元素都与一个浮点值相关，称为分数（该类型类似于哈希，因为每个元素都被映射到一个值）。</p>
<p>这是对用于字符串的跳表结构稍加修改实现的。</p>
<ul>
<li><a href="https://github.com/arriqaaq/zset">ZSet</a></li>
</ul>
<h2 id="持久化">持久化</h2>
<p>虽然已经有了很多持久化机制，我选择了一个简单的 append-only 日志设计方式，因为它比较容易实现和理解。<strong>AOF</strong>(仅可写入的文件)记录了服务器收到的每一个写操作，这些操作将在服务器启动时再重放，重建原始数据集。命令的记录格式与 API 协议本身相同，以只写入的方式进行。当日志过大时，FlashDB 能够在后台分片处理日志。这是基于 <a href="https://github.com/tidwall/wal">wal</a> 实现的。</p>
<ul>
<li><a href="https://github.com/arriqaaq/aol">Append Only Log</a></li>
</ul>
<h2 id="总结">总结</h2>
<p>综上，<a href="https://github.com/arriqaaq/flashdb">FlashDB</a> 仅依靠上述五个简单的库就完成了，具有事务与 ACID 支持。它很易于理解，但我希望这对任何有兴趣学习如何编写数据库的人来说是一个有用的教程。</p>
<p><a href="https://github.com/arriqaaq/flashdb">GitHub - arriqaaq/flashdb: FlashDB is an embeddable, in-memory key/value database in Go (with Redis like commands)</a></p>
<h2 id="讲座">讲座</h2>
<p>我最近在 Golang meetup 上分享了这个项目，这是幻灯片的内容。</p>
<p><a href="https://www.canva.com/design/DAE8sGRyC2o/ZCuCaezQ6dYA0Oq24QxjUQ/view?utm_content=DAE8sGRyC2o&amp;utm_campaign=designshare&amp;utm_medium=link&amp;utm_source=publishsharelink">https://www.canva.com/design/DAE8sGRyC2o/ZCuCaezQ6dYA0Oq24QxjUQ/view?utm_content=DAE8sGRyC2o&amp;utm_campaign=designshare&amp;utm_medium=link&amp;utm_source=publishsharelink</a></p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://aly.arriqaaq.com/building-a-database-in-go">原文地址</a></li>
<li><a href="https://github.com/gocn/translator/blob/master/2022/w17_Writing_a_simple_in-memory_key-value_Database_in_Go.md">本文永久链接</a></li>
<li><a href="https://github.com/gocn/translator">GoCN &lt;每周译 Go&gt;</a></li>
<li><a href="https://github.com/pseudoyu">译者：张宇</a></li>
<li><a href="https://github.com/xkkhy">校对：小超人</a></li>
</ol>
</blockquote>
]]></content:encoded></item><item><title>个人工具箱（2022 年 5 月）</title><link>https://www.pseudoyu.com/en/2022/05/08/personal_tools_in_2022_may/</link><pubDate>Sun, 08 May 2022 15:47:16 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/08/personal_tools_in_2022_may/</guid><description>《后来的我们 - 五月天》 前言 自己一直是个工具控，也一直信奉着“工欲善其事，必先利其器”的理念，总是不断折腾和优化自己的硬件与软件，针对自己的一</description><content:encoded><![CDATA[<figure >
    <audio controls preload="metadata">
        
        <source src="/audios/here_after_us.mp3" type="audio/mpeg">
    </audio>
    <i><figcaption>《后来的我们 - 五月天》</figcaption></i>
</figure>
<h2 id="前言">前言</h2>
<p>自己一直是个工具控，也一直信奉着“工欲善其事，必先利其器”的理念，总是不断折腾和优化自己的硬件与软件，针对自己的一个特定需求会试图找到最优解，现在也慢慢找到了最适合自己使用习惯的解决方案。因为工作、学习和个人兴趣，设备经过很多次迭代，在这个时间节点作一下记录，后续也会不断更新，希望能够对其他人有所参考。</p>
<p><em><strong>本文仅为 2022 年 5 月所整理的软硬件工具箱，最新版本请访问我在 GitHub 上维护的个人工具箱项目 『<a href="https://github.com/pseudoyu/yu-tools">GitHub - pseudoyu/yu-tools</a>』。</strong></em></p>
<blockquote>
<p>注：下文所提及的所有软件服务均为本人购买/订阅或学生资格所享有的教育授权，请支持正版！</p>
</blockquote>
<h2 id="主要设备">主要设备</h2>
<p><img src="https://image.pseudoyu.com/images/yu_new_desk_setup.jpg" alt="yu_new_desk_setup"></p>
<h3 id="-电脑及配件">💻 电脑及配件</h3>
<ul>
<li><strong>Apple Mac Studio (2022)，M1 Max，64GB RAM，1T SSD</strong>，家里主力电脑，疫情在家很提升工作学习幸福感</li>
<li><strong>Apple MacBook Pro (16-inch，2019) 银色，2.4 GHz 八核 Intel Core i9，32GB RAM，2T SSD</strong>，高频使用，基本走哪都会背着，在公司外接显示屏使用</li>
<li><strong>明基（BenQ）EW3270U 4K 显示器</strong>，配合 Mac Studio 使用，在这个价位的 4K 里已经很不错了</li>
<li><strong>明基（BenQ）ScreenBar Halo 屏幕挂灯</strong>，有了这个后基本上家里没开过主光源了，可以无线控制调节，很有氛围感</li>
<li><strong>HHKB Professional Hybrid Type-S 双模静音版键盘，白色有刻</strong>，目前最爱的键盘</li>
<li><strong>RealForce PFU 联名版 87 键，黑色</strong>，备用键盘，也是静电容经典了，但是没有很习惯，可能后面玩游戏会用，毕竟 HHKB 键位特殊</li>
<li><del><strong>MM-Studio Class65 V2 客制化双模机械键盘，复古白</strong>（原本想通过这把入坑客制化，但是没心情折腾了，等了三个月发团，刚到手就原价转卖了）</del></li>
<li><strong>Apple Magic Keyboard 键盘，白色</strong>，开始用 HHKB 后就基本上不用了</li>
<li><strong>Logitech MX Master 3 鼠标，灰色</strong>，主力鼠标，手感和侧键功能都很棒，配合剪视频也很棒</li>
<li><strong>Apple Magic Mouse 2 鼠标，白色</strong>，手感不太行，基本上不用了</li>
<li><strong>Apple Magic Trackpad 触控板，白色</strong>，在家配合着鼠标使用，体验感不错</li>
<li><strong>闪极 100W Pro 氮化镓 GaN 充电器，黄色</strong>，外出携带，终于摆脱了苹果 96w 的大块头充电器</li>
</ul>
<h3 id="-手机及平板">📱 手机及平板</h3>
<ul>
<li><strong>Apple iPhone 13 蓝色，256GB</strong>，主力手机，配合苹果全家桶体验很好，不过手机基本上戒了，主要就用作沟通和看看资讯，应该很久都不会换了</li>
<li><strong>OnePlus 7 Pro，6.67&quot;，Snapdragon 855，256GB</strong>，之前在香港的时候刷机 Root 了，配合 Google 全家桶很适合留学用，而且拍照风格很自然，不过现在也很少用了</li>
<li><strong>Apple iPad Air (第三代)，256GB</strong>，主要用来作拓展屏或者放视频了，很少作什么生产力工具使用，大部分电脑能做的都不会放到 iPad 上做</li>
</ul>
<h3 id="-相机及配件">🎥 相机及配件</h3>
<ul>
<li><strong>Sony A7M3 微单相机，黑色</strong>，大学攒了好久才买的第一台微单，摄影和视频都很全能，跟着我好多年了，到现在依然很够用</li>
<li><strong>Sony 24-105mm F4 相机镜头</strong>，跟相机一起买的，出门基本上这一只大师镜头就足够应对绝大多数场景，虽然光圈只有 F4，但是成像品质真的高</li>
<li><strong>Sony 55mm F1.8 蔡司相机镜头</strong>，收到的礼物，也是最喜欢的定焦镜头，主要用来拍人像</li>
<li><strong>罗德 Wireless Go 无线麦克风</strong>，之前录视频用得比较多，便携易用，声音也很不错，后面会考虑多录一些视频</li>
</ul>
<h3 id="-音箱及耳机">🎧 音箱及耳机</h3>
<ul>
<li><strong>Apple Airpods Pro 降噪耳机</strong>，原本不太习惯入耳式，后来体验了降噪后就离不开了</li>
<li><strong>Apple HomePod mini 音箱</strong>，家里电脑主要输出设备，家里 Mac Studio 和显示器自带音质都不太行</li>
<li><strong>Divoom Ditoo 像素复古音箱</strong>，收到的礼物，现在放在桌面作装饰，基本上没放过音乐</li>
<li><strong>小爱智能音箱</strong>，联动家里的各类智能家居</li>
</ul>
<h3 id="-存储设备">📦 存储设备</h3>
<ul>
<li><strong>三星 T5 SSD，1TB</strong>，主要用来存储摄影和视频素材，很小，传输速度很快</li>
<li><strong>希捷移动硬盘，1TB</strong>，Mac Studio 用来 Time Machine 备份使用的</li>
</ul>
<h3 id="-休闲娱乐">🎮 休闲娱乐</h3>
<ul>
<li><strong>Kindle Oasis 2 电子书阅读器</strong>，以前看得比较多，现在基本上看实体书以及手机 Books 上看</li>
<li><strong>Nintendo Switch 主机，动物森友会特别版</strong>，主要用来玩宝可梦，<a href="https://pseudoyu.notion.site/f5f9e6e31b4744a7a1284eaf55451462?v=6e3be0ced2f44305b9ff3a8298e72de5">从 18 年开始陆陆续续也买了不少游戏</a>，很多都还没来得及玩，卡带收藏爱好者</li>
<li><strong>Nintendo Switch Pro 手柄，任天堂明星大乱斗特别版</strong>，体验感比自带的 Joy-Con 好多了</li>
</ul>
<h2 id="软件工具">软件工具</h2>
<p><img src="https://image.pseudoyu.com/images/my_softwares_in_may_2022.png" alt="my_softwares_in_may_2022"></p>
<h3 id="-系统拓展">🛠 系统拓展</h3>
<ul>
<li><strong>CleanMyMac X</strong>，电脑管家，主要用来清理缓存和软件卸载</li>
<li><strong>AppCleaner</strong>，功能很单一的应用卸载工具</li>
<li><strong>One Switch</strong>，菜单栏快捷工具，主要用来组织电脑休眠使用的</li>
<li><strong>Alfred 4</strong>，快捷启动工具，配合一些 Workflow 功能很丰富，现在主要还用了它的剪贴板历史功能</li>
<li><strong>Hammperspoon</strong>，主要用来通过 <code>Option + hjkl</code> 组合键来弥补 HHKB 没有上下左右键的一些场景</li>
<li><strong>Bartender 4</strong>，菜单栏管理工具，主要隐藏一些软件服务菜单栏图标</li>
<li><strong>BetterTouchTool</strong>，触控板及 Touchbar 管理，主要给 Macbook Pro 配置触控版用的</li>
<li><strong>Magnet</strong>，分屏工具</li>
<li><strong>iStat Menus</strong>，系统状态显示，主要显示 CPU、内存和网络等状态</li>
<li><strong>AirBuddy</strong>，耳机管理工具，感觉连接耳机更顺滑了一些</li>
<li><strong>HazeOver</strong>，桌面效果工具，显示效果很不错</li>
<li><strong>Plash</strong>，动态桌面拓展，在主屏幕放了一个简约的动态时间显示，也几乎不耗资源</li>
<li><strong>DaisyDisk</strong>，磁盘管理，偶尔用来追踪大文件</li>
<li><strong>Menubar X</strong>，菜单栏网页拓展，之前偶尔挂一些小工具，现在用得也少了</li>
<li><strong>Logi Options+</strong>，罗技配置工具，配置鼠标功能按键用的，不过基本上用的默认值</li>
</ul>
<h3 id="-文件管理">📁 文件管理</h3>
<ul>
<li><strong>OneDrive</strong>，5TB 空间，存储大部分个人数据，通过客户端挂载本地目录来同步，速度不错</li>
<li><strong>iCloud</strong>，200GB 空间，主要用于照片备份与软件数据同步</li>
<li><strong>Dropbox</strong>，2GB 空间，主要配合 Cryptomator 对敏感数据加密备份</li>
<li><del><strong>Google Drive</strong>，1TB 空间（因学校从 Google 服务转向 Microsoft 服务，已弃用）</del></li>
<li><del><strong>百度网盘</strong>，存储影音及备份工具（以前存储大量视频剪辑文件用，已弃用）</del></li>
</ul>
<h3 id="-安全工具">🔐 安全工具</h3>
<ul>
<li><strong>ElPass</strong>，密码管理工具，界面很喜欢，OTP 以及 Server 管理功能很惊艳，现在所有帐号、密码、证件和银行卡都在这里管理了，用 iCloud 和 Dropbox 进行同步和备份</li>
<li><strong>GPG Keychain</strong>，macOS GPG 加密工具客户端，主要用来为 Git 提交进行签名</li>
<li><strong>Cryptomator</strong>，文件目录加密工具，用于加密备份证件等隐私数据，配合网盘使用</li>
<li><strong>DAMA</strong>，图片隐私打码工具，通过 TestFlight 尝鲜了测试版</li>
</ul>
<h3 id="-网络工具">🌏 网络工具</h3>
<ul>
<li><strong>Surge</strong>，网络代理、调试工具，家里的 Mac Studio 通过 Surge 来作为家里 Wifi 的 DHCP 服务器，接管家里的网络实现全网代理，主要给 iPad 访问外网以及 Switch 下载游戏加速用</li>
<li><strong>AdGuard Home</strong>，通过网络流量过滤与 DNS 实现去广告，很强大</li>
<li><strong>ClashX</strong>，网络代理工具，买 Surge 前主力用的，现在留了一个备用线路</li>
<li><strong>OpenVPN Connect</strong>，openvpn 客户端，连接公司内网服务器使用</li>
<li><del><strong>Tunnelblick</strong>，上一个项目在用，不过界面没有上面的好，已弃用</del></li>
<li><strong>Safari</strong>，主力浏览器，通过 iCloud 多设备同步
<ul>
<li><strong>AdGuard Home</strong>，去广告插件</li>
<li><strong>Elpass</strong>，自动填充密码</li>
<li><strong>Downie</strong>，下载插件，一键识别媒体并下载</li>
<li><strong>NetNewsWire</strong>，自动抓取网站订阅链接</li>
<li><strong>Vinegar+Baking Soda</strong>，把 YouTube 以及其他一些视频网站的视频播放器转回 HTML5 播放器，简约，体验感很不错</li>
</ul>
</li>
<li><strong>Brave</strong>
<ul>
<li><strong>MetaMask</strong>，钱包插件</li>
<li><strong>Elpass</strong>，自动填充密码</li>
<li><strong>豆伴</strong>，备份和查看豆瓣数据</li>
<li><strong>YouTube Dual Subtitles</strong>，支持多语言字幕</li>
<li><strong>YouTubeEnhancer</strong>，增强 YouTube 播放器功能</li>
</ul>
</li>
<li><del><strong>Chrome</strong>（迁移至 Brave，已弃用）</del></li>
</ul>
<h3 id="-实用工具">🧰 实用工具</h3>
<ul>
<li><strong>Bob</strong>，划词/截图翻译工具，配合 <a href="https://github.com/clubxdev/bob-plugin-deeplx">DeepL X 拓展插件</a>和 <a href="https://zu1k.com">zu1k</a> 大佬发布的 <a href="https://github.com/zu1k/deepl-api-rs">DeepL Free Api Docker 镜像</a>，完美体验，后面还更新了独立的 OCR 功能，更强大了</li>
<li><strong>Tern-Subtitle File Translator</strong>，我配合了 IBM 提供的 API，进行字幕自动中英翻译</li>
<li><strong>qBittorrent</strong>，通过 RSS 管理器来订阅特定 PT 站的番剧等媒体资源，自动更新下载</li>
<li><strong>Downie</strong>，视频源下载工具，下载 YouTube 或者 B 站的一些视频，作剪辑素材用</li>
<li><strong>PicGo</strong>，图床管理工具，主要写博客的时候上传图片到 GitHub 图床并且生成自定义的 Markdown 格式，可以直接嵌入文章</li>
<li><strong>BetterZip</strong>，压缩/解压工具，基本上装机必备了，目前遇到的格式都支持了</li>
<li><strong>PDF Expert</strong>，PDF 查看编辑工具，主要用来做一些合并和编辑，查看的话经常还是用自带的 Preview</li>
<li><strong>PDF Squeezer</strong>，PDF 压缩工具，压缩效果很不错，使用也很方便</li>
<li><strong>Image Smith</strong>，图片压缩工具，刚尝试的一个新工具，很不错，之后作主力压缩了</li>
<li><strong>TinyPNG4Mac</strong>，之前博客图片上传前都会压一些，功能很简单，现在作为备用了</li>
<li><strong>Rime 鼠须管</strong>，定制化输入法，体验很好且数据本地保存，安全稳定</li>
<li><strong>Time Machine</strong>，备份工具，主要给 Mac Studio 作实时备份用</li>
<li><strong>brew</strong>，Homebrew 安装工具，基本上开发有关的都用 brew 装了，方便管理升级</li>
<li><strong>TestFlight</strong>，尝鲜一些测试版软件用</li>
</ul>
<h3 id="-记录工具">📝 记录工具</h3>
<ul>
<li><strong>Logseq</strong>，现在主力的生活记录、任务管理和笔记工具，基于双向链接打造了自己的信息管理系统，而且通过 Journal 以文本条目的形式记录没有心智负担，建议可以看一下 <a href="https://lutaonan.com">Randy</a> 的 &lt;<a href="https://www.bilibili.com/video/BV1X44y1K7X1">我如何使用 Logseq 管理我的生活和笔记</a>&gt;，很有启发</li>
<li><strong>Notion</strong>，原本作笔记和任务管理，后来都迁移到了 Logseq，所以就只作为软件订阅管理、游戏记录的一些工具，数据库还是很强大的</li>
<li><strong>Hook</strong>，文件资源双向链接工具，目前主要用来追踪本地的一些视频之类的大文件，可以以链接的形式嵌入到 Logseq 里</li>
<li><strong>Office 365</strong>，主要文档/PPT/表格处理工具，其实工作后已经主要都是 Markdown 写为主了，但是最后还是得通过 Word 来排版</li>
<li><strong>iWork 全家桶</strong>，Apple 自带文档处理工具</li>
<li><strong>Typora</strong>，主要 Markdown 编辑器，最完美的 Markdown 编辑器了，偶尔要转存一些文本的时候也会通过 Alfred 唤出来</li>
<li><strong>MarginNote 3</strong>，用来阅读一些论文、书籍的工具，用得不算很多</li>
<li><strong>XMind8 Pro</strong>，主要思维导图工具，之前在学校的时候做笔记用的比较多，工作后反而系统性学习整理得少了，需要保持习惯</li>
</ul>
<h3 id="-开发工具">👨🏻‍💻 开发工具</h3>
<ul>
<li>编辑器
<ul>
<li><strong>JetBrains GoLand</strong>，主力工作 Go 开发 IDE，很强大，目前用 Edu 身份订阅着全家桶，希望后面能通过开源项目续着
<ul>
<li><strong>Material Theme UI + Atom Material Icons</strong>，很美观的主题</li>
<li><strong>GitHub Copilot</strong>，代码 AI 补全，很智能</li>
<li><strong>GitToolBox</strong>，提示一些 Git 状态信息</li>
<li><strong>IdeaVim</strong>，配置 Vim 键位</li>
<li><strong>PlantUML Integration</strong>，用来画 UML 图，目前感觉写和预览体验最好的平台了</li>
<li><strong>WakaTime</strong>，用来记录编码项目、语言和所用时间</li>
</ul>
</li>
<li><strong>VS Code</strong>，代码编辑工具，辅助开发
<ul>
<li><strong>Serendipity</strong>，新尝试的一个很喜欢的主题</li>
<li><strong>GitHub Copilot</strong>，代码 AI 补全，重度依赖</li>
<li><strong>Beancount</strong>，用来复式记账，配合 fava 工具进行可视化</li>
<li><strong>Markdown All in One</strong>，用来增强对 Markdown 的支持，主要用来写博客</li>
<li><strong>Rainbow Brackets</strong>，给配对的括号加上颜色</li>
<li><strong>go</strong>，Go 语言环境支持</li>
<li><strong>solidity</strong>，智能合约编写支持</li>
<li><strong>WakaTime</strong>，用来记录编码项目、语言和所用时间</li>
</ul>
</li>
<li><strong>Atom</strong>
<ul>
<li><strong>go-plus</strong>，Go 语言环境支持</li>
<li><strong>fabric-go</strong>，用来调试 fabric 1.4 版本的链码，可以自动通过镜像部署，很方便，这也是我 Atom 编辑器的唯一用途了</li>
<li><strong>wakatime</strong>，用来记录编码项目、语言和所用时间</li>
</ul>
</li>
<li><strong>JetBrains PyCharm Professional Edition</strong>，Python 编辑器
<ul>
<li><strong>Material Theme UI + Atom Material Icons</strong>，很美观的主题</li>
<li><strong>GitHub Copilot</strong>，代码 AI 补全，很智能</li>
<li><strong>GitToolBox</strong>，提示一些 Git 状态信息</li>
<li><strong>IdeaVim</strong>，配置 Vim 键位</li>
<li><strong>WakaTime</strong>，用来记录编码项目、语言和所用时间</li>
</ul>
</li>
<li><strong>Xcode</strong>，macOS 及 iOS 开发 IDE</li>
</ul>
</li>
<li>终端
<ul>
<li><strong>Warp</strong>，新尝试的 Rust 编写的终端，体验感很棒，完全作为主力终端了</li>
<li><strong>iTerm2</strong>，之前一直用，现在主要用来切多个服务器</li>
</ul>
</li>
<li>服务器管理
<ul>
<li><strong>ssh</strong>，配合 Warp 和 iTerm2 的 Profile 来连接服务器用</li>
<li><strong>Termius</strong>，服务器管理工具，主要是可以云端同步配置，跟公司同事调试测试的时候都不需要自己再配本地环境，比较方便，然后也使用 SFTP 来传文件</li>
<li><strong>ServerCat</strong>，服务器状态监控，界面很不错</li>
<li><strong>Fetch</strong>，备用远程文件传输工具，很老牌了</li>
</ul>
</li>
<li>数据库管理
<ul>
<li><strong>Sequel Ace</strong>，主力数据库管理工具，是之前开源版本 Sequel Pro 的一个维护版本，界面简约但是功能很强大</li>
<li><strong>JetBrains DataGrip</strong>，主要通过 Groovy 脚本来自动导出数据库的 Markdown 文件，很方便写文档</li>
</ul>
</li>
<li>接口调试
<ul>
<li><strong>Paw</strong>，主力接口调试工具，限免的时候注册的，速度很快，多环境以及分支管理很强大</li>
<li><del><strong>Postman</strong>，以前用的接口调试工具，但是界面太繁杂了，而且反应有点慢，弃用了</del></li>
</ul>
</li>
<li>文档查看: <strong>Dash</strong>，配合 Alfred 查文档很方便</li>
<li>容器: <strong>Docker Desktop</strong>，虽然占资源很高，但是确实方便</li>
<li>绘图工具
<ul>
<li><strong>PlantUML</strong>，配合 GoLand 里插件通过语法画流程图，修改和版本维护很方便</li>
<li><strong>Draw.io</strong>，一些很复杂的架构图和部署图通过这个客户端画，有点简陋但是够用</li>
</ul>
</li>
<li>版本控制
<ul>
<li><strong>git</strong>，版本管理工具
<ul>
<li><a href="https://github.com/commitizen/cz-cli">git-cz</a>，交互式规范化提交信息</li>
<li><a href="https://github.com/git-chglog/git-chglog">git-chglog</a>，用来自动生成格式化 CHANGELOG</li>
</ul>
</li>
<li><del><strong>Fork</strong>，git 客户端工具（已弃用，改为命令行配合 alias）</del></li>
<li><strong>GitHub</strong>，我的个人博客、图床以及开发项目都通过 GitHub 管理</li>
<li><strong>GitLab</strong>，工作项目通过公司 GitLab 进行管理</li>
</ul>
</li>
</ul>
<h3 id="-视频剪辑">📹 视频剪辑</h3>
<ul>
<li><strong>Final Cut Pro X</strong>，当时优惠价买了全家桶，从 PR 转到了 FCPX 作为主力剪辑工具，在 macOS 上比 PR 体验好多了</li>
<li><strong>剪映专业版</strong>，语音识别智能匹配字幕的功能很强大，3.0 版本还支持导出 <code>.srt</code> 格式了，再通过一个开源的 <a href="https://github.com/GanymedeNil/srt2fcpxml">srt2fcpxml</a> 工具转回 FCPX 兼容的的字幕格式导入回 FCPX，简化字幕制作工作流，再也不用自己一点点对时间轴了</li>
<li><strong>Compressor</strong>，主力压制工具，配合 FCPX 一些预设可以很便捷联动导出</li>
<li><strong>HandBrake</strong>，备用开源视频压制工具，作一些简单压缩转码使用了</li>
<li><strong>大拍档剪辑助手</strong>，用来清理 FCPX 的缓存，也有一些无版权音乐下载、素材管理的小工具</li>
<li><del><strong>IINA</strong>，之前的主力视频播放器，订阅了 Infuse 后弃用了</del></li>
</ul>
<h3 id="-图片处理">📷 图片处理</h3>
<ul>
<li><strong>Affinity Photo</strong>，替代 Photoshop 的修图和调色工具，我拍完照后会用来处理和套 Luts</li>
<li><strong>Pixelmator Pro</strong>，黑五半价买的，据说很强大，不过还没怎么用</li>
<li><strong>Luminar 4</strong>，做一些简单的效果处理会比 Affinity Photo 这些便捷一些</li>
</ul>
<h3 id="-邮件管理">📮 邮件管理</h3>
<ul>
<li><strong>Spark</strong>，电子邮件聚合工具，多端同步也很快，现在所有邮箱都通过 Spark 来管理了</li>
<li><strong>Alimail</strong>，工作用邮箱</li>
<li><strong>Outlook</strong>，主要用来管理 Office365 开发者帐号</li>
<li><strong>Mail</strong>，Apple 自带邮件客户端</li>
</ul>
<h3 id="-信息管理">📨 信息管理</h3>
<ul>
<li><strong>NetNewsWire</strong>，RSS 订阅工具，多端同步很方便，慢慢转向 RSS 为自己的主要信息输入了</li>
<li><strong>TweetBot</strong>，在电脑端用来发布和刷 Twitter 的客户端，主要是可以通过时间轴排列</li>
<li><strong>Books</strong>，Apple 自带图书应用，可导入 epub 或 pdf 文件阅读</li>
<li>域名及个人网站
<ul>
<li><strong>GitHub Pages</strong>，配合 GitHub Action 实现自动部署</li>
<li><strong>Cloudflare</strong>，管理域名，以及对网站进行 CDN 加速</li>
<li><strong>Vercel</strong>，配合 Heroku 的数据库部署了博客的 Cusdis 评论系统</li>
</ul>
</li>
<li><a href="https://www.douban.com/people/pseudo-yu"><strong>豆瓣</strong></a>，通过 GitHub Action 每天抓取豆瓣提供的 RSS，统计我的影音和书籍并更新到 GitHub 主页和个人网站介绍页里，也通过 Brave 的一个叫“豆伴”的插件来定时备份和导出</li>
</ul>
<h3 id="-通讯社交">💬 通讯社交</h3>
<ul>
<li><strong>微信</strong>，生活和工作大部分都还是会通过微信沟通</li>
<li><strong>腾讯会议</strong>，工作用，主要会议工具</li>
<li><strong>Microsoft Teams</strong>，偶尔参加一些线上研讨会使用</li>
<li><strong>Gather</strong>，有趣的线上交流，正在推荐身边的朋友用，像宝可梦一样，能减轻疫情带来的距离感</li>
<li><strong>钉钉</strong>，工作沟通以及偶尔处理我妹妹学校的一些信息用</li>
<li><strong>Telegram</strong>，主要加了一些科技资讯、软件技巧的群，偶尔看看</li>
<li><strong>Discord</strong>，主要参加一些项目获取资讯用的</li>
<li><del><strong>QQ</strong>，大学时学校常用，已弃用</del></li>
</ul>
<h3 id="-影音娱乐">🎸 影音娱乐</h3>
<ul>
<li><strong>Infuse</strong>，视频播放及媒体管理工具，全平台可用且支持格式很多，配合 Plex 这些媒体服务器可以建立自己本地的动漫、电影和剧集库</li>
<li><strong>Plex Media Server</strong>，流媒体管理服务器，可以指定本地目录自动获取元数据进行媒体库管理</li>
<li><strong>Apple Music</strong>，主要听歌软件，配合 iOS 上的 Music Mate 慢慢建立自己的音乐库</li>
<li><strong>Apple Podcasts</strong>，主要用来听一些博客</li>
<li><strong>爱奇艺</strong>，送的会员，偶尔用来追一些热门自制剧</li>
<li><strong>Netflix</strong>，用来追一些最新剧集，新加坡订阅</li>
<li><strong>Disney+</strong>，用来看一些迪士尼动画、漫威剧集和电影，不过用得也不多了，也是新加坡订阅</li>
</ul>
<h3 id="-手机-app">📲 手机 App</h3>
<p><img src="https://image.pseudoyu.com/images/yu_ios_apps.png" alt="yu_ios_apps"></p>
<ul>
<li>🛠 系统拓展
<ul>
<li><strong>熊猫吃短信</strong>，过滤垃圾短信，很好用</li>
<li><strong>AdGuard</strong>，浏览网页去广告工具</li>
<li><strong>AT</strong>，重要日期纪念日/倒计时</li>
<li><strong>OffScreen</strong>，使用手机时间追踪</li>
<li><strong>谜底时钟</strong>，个性化时钟组件</li>
<li><strong>谜底黑胶</strong>，个性化音乐播放组件</li>
<li><strong>谜底空白</strong>，在屏幕中设置空白位置</li>
<li><strong>Vinegar+Baking Soda</strong>，浏览器看视频使用 HTML5 播放器插件</li>
</ul>
</li>
<li>📁 文件管理
<ul>
<li><strong>文件</strong>，Apple 自带本地及 iCloud 文件管理</li>
<li><strong>OneDrive</strong>，iOS 端</li>
</ul>
</li>
<li>🔐 安全工具
<ul>
<li><strong>Elpass</strong>，密码管理工具 iOS 端，支持双重验证</li>
<li><strong>Google Authenticator</strong>，Google 双重验证工具</li>
<li><strong>Microsoft Authenticator</strong>，Microsoft 双重验证工具</li>
<li><strong>DAMA</strong>，图片隐私打码工具</li>
</ul>
</li>
<li>🌏 网络工具
<ul>
<li><strong>Surge</strong>，Surge 代理工具 iOS 端</li>
<li><strong>Shadowrocket</strong>，备用代理工具</li>
<li><strong>Speedtest</strong>，网络测速工具</li>
<li><strong>小米 WIFI</strong>，管理家庭 Wifi 及设备</li>
</ul>
</li>
<li>🧰 实用工具
<ul>
<li><strong>欧陆词典</strong>，字典应用，可导入不同源</li>
<li><strong>翻译</strong>，苹果自带翻译工具</li>
<li><strong>ServerCat</strong>，服务器状态检测工具移动端</li>
<li><strong>快捷指令</strong>，进行各类自动化操作</li>
<li><strong>TestFlight</strong>，尝鲜一些测试版应用</li>
</ul>
</li>
<li>📝 记录工具
<ul>
<li><strong>Logseq</strong>，iOS 端，主要用来查看</li>
<li><strong>Office 365</strong>，iOS 端，通过 Office365 帐号和 OneDrive 进行同步</li>
<li><strong>iWork 全家桶</strong>，iOS 端</li>
<li><strong>Notability</strong>，笔记工具</li>
</ul>
</li>
<li>🪙 数字资产
<ul>
<li><strong>imToken</strong>，iOS 数字钱包</li>
<li><strong>TokenPocket</strong>，iOS 数字钱包</li>
<li><strong>币安</strong>，Binance 交易所 iOS 客户端</li>
<li><strong>欧易</strong>，OKEX 交易所 iOS 客户端</li>
<li><strong>火币</strong>，Huobi 交易所 iOS 客户端</li>
</ul>
</li>
<li>🏚 家庭管理
<ul>
<li><strong>Home</strong>，苹果自带家庭应用，目前主要用来管 HomePod mini</li>
<li><strong>米家</strong>，管理小米智能家居设备</li>
<li><strong>小爱音箱</strong>，连接和管理小爱智能音箱，语音控制智能家居</li>
<li><strong>点音</strong>，Divoom 像素音箱管理</li>
<li><strong>Yeelight</strong>，控制氛围灯模式</li>
<li><strong>小佩宠物</strong>，控制宠物智能家居</li>
<li><strong>Health</strong>，苹果自带健康数据记录应用，主要用来记录睡眠</li>
<li><strong>Grow</strong>，联动健康应用，生成健康数据</li>
<li><strong>Zepp Life</strong>，联动小米体重秤等，记录健康数据</li>
</ul>
</li>
<li>📨 信息管理
<ul>
<li><strong>Spark</strong>，iOS 端</li>
<li><strong>NetNewsWire</strong>，iOS 端</li>
<li><strong>Apple Books</strong>，电子书阅读器，主要导入 epub 格式看</li>
<li><strong>Patreon</strong>，订阅及赞助支持某些技术大佬的平台</li>
<li><strong>Twitter</strong>，iOS 端，主要国外资讯获取与发布平台</li>
<li><strong>Instagram</strong>，iOS 端，主要用来发布摄影和日常照片</li>
<li><strong>Facebook</strong>，iOS 端，个人状态更新平台，离开香港后用得比较少</li>
<li><strong>微博</strong>，官方客户端，主要股票内资讯获取与发布平台</li>
<li><strong>豆瓣</strong>，iOS 端</li>
<li><strong>少数派</strong>，用来看一些工具类资讯</li>
<li><strong>Outlook</strong>，iOS 端</li>
<li><strong>Mail</strong>，苹果自带邮件应用</li>
</ul>
</li>
<li>👨🏻‍💻 工作求职
<ul>
<li><strong>LinkedIn</strong>，看一些外企的机会</li>
<li><strong>BOSS 直骋</strong>，国内找工作主要用</li>
<li><strong>脉脉</strong>，查询一些公司资讯用</li>
</ul>
</li>
<li>💰 支付工具
<ul>
<li><strong>支付宝</strong>，日常最主要支付工具</li>
<li><strong>招商银行</strong>，招行卡管理</li>
<li><strong>掌上生活</strong>，招行信用卡管理</li>
<li><strong>中国工商银行</strong>，工行卡管理</li>
<li><strong>AlipayHK</strong>，香港支付宝账户</li>
</ul>
</li>
<li>🚆 交通出行
<ul>
<li><strong>Maps</strong>，苹果自带地图应用，主要用来搜路线</li>
<li><strong>高德地图</strong>，公司加班打车用这个</li>
<li><strong>携程旅行</strong>，用来定机票和酒店</li>
<li><strong>铁路 12306</strong>，用来定高铁票，不过后面大多在携程里直接定了</li>
<li><strong>航旅纵横 Pro</strong>，用来查询航班信息、值机以及统计自己的出行，很好用</li>
</ul>
</li>
<li>🛍 生活工具
<ul>
<li><strong>饿了么</strong>，点外卖和水果</li>
<li><strong>淘宝</strong>，买一些日常用品</li>
<li><strong>京东</strong>，主要买数码产品和小家电</li>
<li><strong>大众点评</strong>，查询一些店的评价</li>
<li><strong>大麦</strong>，看一些演出展览</li>
<li><strong>闲鱼</strong>，偶尔会看下一些二手</li>
<li><strong>当当</strong>，买纸质书，大多技术为主</li>
<li><strong>个人所得税</strong>，年度汇算用的</li>
</ul>
</li>
<li>💬 通讯社交
<ul>
<li><strong>微信</strong>，iOS 端</li>
<li><strong>腾讯会议</strong>，iOS 端</li>
<li><strong>钉钉</strong>，iOS 端</li>
<li><strong>Telegram</strong>，iOS 端</li>
<li><strong>Discord</strong>，iOS 端</li>
<li><strong>Clubhouse</strong>，语音聊天室工具，热度过去了现在用得也比较少了</li>
<li><del><strong>QQ</strong>，iOS 客户端，已弃用</del></li>
</ul>
</li>
<li>🎸 影音娱乐
<ul>
<li><strong>Infuse</strong>，iOS 端，可以局域网连接 Mac Studio 的 Plex 媒体库服务器</li>
<li><strong>YouTube</strong>，用来看各类国外博主与技术视频</li>
<li><strong>哔哩哔哩</strong>，主要用来看关注的各类博主更新</li>
<li><strong>爱奇艺</strong>，iOS 客户端</li>
<li><strong>Apple Music</strong>，iOS 端</li>
<li><strong>Music Mate</strong>，探索新音乐，慢慢建立自己的音乐库</li>
<li><strong>Apple Podcasts</strong>，主要通过 iOS 端收听播客</li>
<li><strong>Pokémon Go</strong>，最爱的游戏了，在香港留下了很多记忆，可惜回来后玩不了了</li>
</ul>
</li>
</ul>
<h2 id="总结">总结</h2>
<p>以上就是我在 2022 年 5 月所自用的工具箱，花了好几天，把电脑和手机的 App 都彻底整理分类了一遍，随着使用时间越来越长，一直在做减法，也在不断优化自己的使用，希望能够对大家有所参考。</p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<ol>
<li><a href="https://blog.gasolin.idv.tw/tools/tooling-in-2021-Dec">個人工具箱（2021 十二月）</a></li>
<li><a href="https://github.com/pseudoyu/yu-tools">GitHub - pseudoyu/yu-tools</a></li>
</ol>
</blockquote>
]]></content:encoded></item></channel></rss>