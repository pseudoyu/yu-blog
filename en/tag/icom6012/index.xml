<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>icom6012 on Pseudoyu</title><link>https://www.pseudoyu.com/en/tag/icom6012/</link><description>Recent content in icom6012 on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 20 Oct 2020 09:37:44 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/icom6012/index.xml" rel="self" type="application/rss+xml"/><item><title>ICOM6012 Topic 4 Transport Layer</title><link>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</link><pubDate>Tue, 20 Oct 2020 09:37:44 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/20/icom6012_topic4/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 4 Transport Layer Actions Sender Get application layer message Determine segment header fields values Create segment Pass segment to IP Receiver Receive segment from IP Check header values Extract application layer message Demultiplexes message up to application via socket Services Provide logical communication between processes Run in end system Send side Break app messages into segment Pass to network layer Receive side Reassembles segments into messages Pass to application layer Protocols TCP Features Point-to-point One sender, one receiver Reliable, in-order byte system No message boundaries Full duplex data Bi-directional data flow in same connection MSS: maximum segment size (excluding header) Cumulative ACKs Pipelining TCP congestion and flow control set window size Flow Control Sender will not overwhelm receiver Congestion control Concepts Segment structure Sequence numbers Byte stream &amp;ldquo;number&amp;rdquo; of first byte in segment&amp;rsquo;s data Acknowledgements (ACKs) Seq # of next byte expected from other side Cumulative ACKs Procedure Connection-oriented Handshaking initializes sender, receiver state before data exchange TCP socket identified by 4-tuple Source IP Source Port # Dest IP Dest Port # Server host may support many simultaneous TCP sockets Web servers have different sockets for each connecting client (Non-persistent HTTP will have different socket for each request) Demux Receiver uses all four values to direct segment to appropriate socket 3-way handshake Connection setup Connection management Handshake Agree to establish connection Agree on connection parameters Retransmission Closing a connection Events Data received from application Create segment with seq # (a byte-stream number of first data byte in segment) Start timer if not already running Think of timer as for oldest unACKed segment Expiration interval: TimeOutInterval Timeout Retransmit segment that caused timeout Restart timer ACK received Update what is known to ACKed Start timer if there are still unACKed segment Shortcomings SYN DoS Attack Half-open TCP connections consume all the TCP connection resources SYN packet with a spoofed source address UDP Features</description></item><item><title>ICOM6012 Topic 3 Application Layer</title><link>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</link><pubDate>Mon, 19 Oct 2020 17:50:44 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/19/icom6012_topic3/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 3 Application Layer Creating a Network App Run on different end systems Communication over network No need to write for network-core devices Client-Server Architecture (The Centralized Internet) Server Always-on host Permanent IP address Often in data centers (for scaling) Clients Contact, communicate with server May be intermittently connected May have dynamic IP addresses Don&amp;rsquo;t communicate directly with each other Peer-to-Peer (P2P) Architecture No always-on server</description></item><item><title>ICOM6012 Topic 2 The Big Picture</title><link>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</link><pubDate>Mon, 05 Oct 2020 09:06:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/10/05/icom6012_topic2/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 2 The Big Picture The Internet: &amp;ldquo;nuts and bolts&amp;rdquo; view
Billions of connected computing devices Host = end system Running network apps Internet of things (IoT) Packet switches routers switchers Communication links Fiber, copper, radio, satellite Transmission rate: bandwidth Networks Collection of devices, routers, switches, links Managed by an organization Internet: &amp;ldquo;network of networks&amp;rdquo; Interconnected ISPs Protocols Control sending, receiving of messages Internet standards RFC: Requests for Comments IETF: Internet Engineering Task Force IEEE: Institute of Electronical &amp;amp; Electronic Engineering The Internet: a &amp;ldquo;service&amp;rdquo; view</description></item><item><title>ICOM6012 Topic 1 Overview</title><link>https://www.pseudoyu.com/en/2020/09/09/icom6012_topic1/</link><pubDate>Wed, 09 Sep 2020 20:22:09 +0800</pubDate><guid>https://www.pseudoyu.com/en/2020/09/09/icom6012_topic1/</guid><description>ICOM6012 Internet Infrastructure Technologies Topic 1 Overview Internet&amp;rsquo;s Birthday: Sept. 2 or Oct. 29, 1969.
ARPANET (1969 -) TCP protocol in 1974 &amp;ldquo;Internet = Internetworking&amp;rdquo; NSFNET (1986 -) The Internet (late 1980s) Some Interesting Topics about Internet (More than Technical)
Who controls the Internet? What is Net Neutrality? A TikTok Ban Is Overdue Zoomâ€™s stock surges 41% after earnings beat, adding over $37 billion in market cap Evolution of Computers</description></item></channel></rss>