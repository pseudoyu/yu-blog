<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>server on Pseudoyu</title><link>https://www.pseudoyu.com/en/tag/server/</link><description>Recent content in server on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Jul 2024 15:30:00 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/server/index.xml" rel="self" type="application/rss+xml"/><item><title>How I Rescued Critical Data When My Cloud Server Crashed</title><link>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</link><pubDate>Mon, 01 Jul 2024 15:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/en/2024/07/01/rescue_my_data_from_a_crashed_server/</guid><description>Preface On Friday, my 2C2G server purchased from BandwagonHost suddenly reported a kernel error, making it impossible to connect via SSH or restart. After a series of circuitous rescue attempts, I finally managed to salvage over a thousand images from my image hosting service. Still shaken by the experience, I&amp;rsquo;d like to document the rescue process and, incidentally, discuss the new image hosting solution I&amp;rsquo;ve set up.
Server Rescue This server had been running stably for about a year and a half, hosting many of my critical services, including over a thousand irreplaceable images for my blog&amp;rsquo;s image hosting service, persistently stored on the host via Docker Volume.</description></item></channel></rss>