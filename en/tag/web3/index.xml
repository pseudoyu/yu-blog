<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web3 on Pseudoyu</title><link>https://www.pseudoyu.com/en/tag/web3/</link><description>Recent content in web3 on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 30 Apr 2023 00:10:03 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/web3/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Review #38 - Foundry Contract Testing, Logseq Task Management, and Surge Ponte Remote Development</title><link>https://www.pseudoyu.com/en/2023/04/30/weekly_review_20230430/</link><pubDate>Sun, 30 Apr 2023 00:10:03 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/04/30/weekly_review_20230430/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface This piece is a record and reflection of my life from 2023-04-19 to 2023-04-30.
In my previous weekly review, I mentioned a journey across multiple cities. After returning to Hangzhou, I gradually resumed my original life rhythm. I had much more time alone, with plenty of input, reflection, and interesting things to do. However, it seems that I had less time to organize and dialogue with myself, often only realizing the passage of time several days later.</description></item><item><title>Weekly Review #37 - A Fortnight of Leisure (Wuhan | Hong Kong | Mayday)</title><link>https://www.pseudoyu.com/en/2023/04/18/weekly_review_20230418/</link><pubDate>Tue, 18 Apr 2023 11:39:21 +0800</pubDate><guid>https://www.pseudoyu.com/en/2023/04/18/weekly_review_20230418/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface This piece chronicles my life and reflections from April 3rd to April 18th, 2023.
Perhaps due to my recent change in lifestyle, I had planned numerous engagements as early as March. From the beginning of April, I found myself wandering, experiencing a fortnight of leisure. This journey was akin to a homecoming - departing from Hangzhou where I was raised, to Wuhan, the first place I left home for an extended period, to visit my professor and old friends, and finally to Hong Kong, where I spent some remarkable years, to attend exhibitions and events.</description></item><item><title>Implementing Two-Phase Commit in Solidity Smart Contracts Using State Locks</title><link>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</link><pubDate>Fri, 01 Jul 2022 10:54:57 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/07/01/two_phase_commit_contract_practice_in_solidity/</guid><description>《后来的我们 - 五月天》 Preface In smart contract applications involving interactions between multiple systems or contracts, particularly in businesses where asset or data accuracy is sensitive, we need to ensure data atomicity throughout the entire business process. Therefore, we need to implement a mechanism similar to multi-phase commit at the contract level, which decomposes the state change process in the contract into two</description></item><item><title>Solidity Smart Contract Development - Using the Hardhat Framework</title><link>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</link><pubDate>Thu, 09 Jun 2022 14:38:10 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface After the previous articles on smart contract basics, Web3.py, and ethers.js, we have mastered the fundamental knowledge of interacting directly with blockchain networks through programs. For those unfamiliar, you can review:
Solidity Smart Contract Development - Basics Solidity Smart Contract Development - Mastering Web3.py Solidity Smart Contract Development - Mastering ethers.js However, in real complex business scenarios, we often use some further encapsulated frameworks, such as HardHat, Brownie, Truffle, etc.</description></item><item><title>Solidity Smart Contract Development - Mastering ethers.js</title><link>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</link><pubDate>Wed, 08 Jun 2022 00:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/08/learn_solidity_from_scratch_ethersjs/</guid><description>《後來的我們 - 五月天》 Preface In the previous article &amp;ldquo;Solidity Smart Contract Development - Basics&amp;rdquo;, we learned the basic syntax of Solidity and understood that we can debug using frameworks like Brownie and HardHat. In another article &amp;ldquo;Solidity Smart Contract Development - Mastering Web3.py&amp;rdquo;, we also interacted directly with our local Ganache node using Web3.py. Originally, because I was more familiar with Python,</description></item><item><title>Solidity Smart Contract Development - Mastering Web3.py</title><link>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</link><pubDate>Mon, 30 May 2022 15:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/30/learn_solidity_from_scratch_web3py/</guid><description>《后来的我们 - 五月天》 Preface In the previous article &amp;ldquo;Solidity Smart Contract Development - Basics&amp;rdquo;, we learned the basic syntax of Solidity and understood that we can debug using frameworks such as Brownie and HardHat. However, before using these pre-packaged frameworks, we can interact directly with our local Ganache node using Web3.py to better understand the principles and lay a solid foundation for</description></item><item><title>Solidity Smart Contract Development - Fundamentals</title><link>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</link><pubDate>Wed, 25 May 2022 01:07:33 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/05/25/learn_solidity_from_scratch_basic/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface Last year, during my graduate studies, I took the course &amp;ldquo;COMP7408 Distributed Ledger and Blockchain Technology&amp;rdquo; at HKU. In this course, I learned about Ethereum smart contract development and created a simple library management ÐApp. For my graduation project, I chose to develop a music copyright application based on Ethereum, which can be found at Uright - Blockchain Music Copyright Management ÐApp. Through these experiences, I gained a basic understanding of Solidity development.</description></item></channel></rss>