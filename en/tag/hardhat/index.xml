<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hardhat on Pseudoyu</title><link>https://www.pseudoyu.com/en/tag/hardhat/</link><description>Recent content in hardhat on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 09 Jun 2022 14:38:10 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/en/tag/hardhat/index.xml" rel="self" type="application/rss+xml"/><item><title>Solidity Smart Contract Development - Using the Hardhat Framework</title><link>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</link><pubDate>Thu, 09 Jun 2022 14:38:10 +0800</pubDate><guid>https://www.pseudoyu.com/en/2022/06/09/learn_solidity_from_scratch_hardhat/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Preface After the previous articles on smart contract basics, Web3.py, and ethers.js, we have mastered the fundamental knowledge of interacting directly with blockchain networks through programs. For those unfamiliar, you can review:
Solidity Smart Contract Development - Basics Solidity Smart Contract Development - Mastering Web3.py Solidity Smart Contract Development - Mastering ethers.js However, in real complex business scenarios, we often use some further encapsulated frameworks, such as HardHat, Brownie, Truffle, etc.</description></item></channel></rss>