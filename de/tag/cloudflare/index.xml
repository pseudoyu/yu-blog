<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloudflare on Pseudoyu</title><link>https://www.pseudoyu.com/de/tag/cloudflare/</link><description>Recent content in cloudflare on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>de</language><lastBuildDate>Tue, 02 Jul 2024 06:12:47 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/de/tag/cloudflare/index.xml" rel="self" type="application/rss+xml"/><item><title>Hinzufügen von Datenschutz und Urheberrechtsschutz zu Ihrem Bild-Hosting mit WebP Cloud und Cloudflare WAF</title><link>https://www.pseudoyu.com/de/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/</link><pubDate>Tue, 02 Jul 2024 06:12:47 +0800</pubDate><guid>https://www.pseudoyu.com/de/2024/07/02/protect_your_image_using_webp_and_cloudflare_waf/</guid><description>Vorwort In dem Artikel &amp;ldquo;Aufbau eines kostenlosen Bild-Hosting-Systems von Grund auf (Cloudflare R2 + WebP Cloud + PicGo)&amp;rdquo; habe ich ein kostenloses Bild-Hosting-System mit Cloudflare R2 erstellt und Bilder durch WebP Cloud optimiert.
Bei der Nutzung von WebP Cloud entdeckte ich, dass es Funktionen wie benutzerdefinierte Proxy User Agents und Wasserzeichen anbot. Dies brachte mich auf eine Idee: Könnte ich WebP Cloud nutzen, um die Quelllinks meines Bild-Hostings zu schützen, sodass WebP Clouds Proxy-Links der einzige Zugangspunkt für alle meine Bilder werden, während ich gleichzeitig einheitlich mein exklusives Urheberrechts-Wasserzeichen hinzufüge?</description></item><item><title>Baue dein kostenloses Bildhosting-System von Grund auf (Cloudflare R2 + WebP Cloud + PicGo)</title><link>https://www.pseudoyu.com/de/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/</link><pubDate>Sun, 30 Jun 2024 14:12:47 +0800</pubDate><guid>https://www.pseudoyu.com/de/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/</guid><description>Vorwort Im Artikel &amp;ldquo;Was sich 2024 in meinem Blog geändert hat&amp;rdquo; habe ich das Blogsystem vorgestellt, das ich mit Serverless-Plattformen und einigen Open-Source-Projekten aufgebaut habe, und auch diese Tutorialreihe begonnen, um den gesamten Aufbau- und Bereitstellungsprozess zu dokumentieren.
Dieser Artikel befasst sich mit der Lösung für das Bildhosting-System.
[2024-07-02 Update]
Ich habe ein neues Tutorial geschrieben, das Datenschutz und Urheberrechtsschutz für das Bildhosting-System implementiert, was als zusätzliches Kapitel betrachtet werden kann.</description></item><item><title>Hugo + GitHub Action: Aufbau Ihres automatisierten Blog-Veröffentlichungssystems</title><link>https://www.pseudoyu.com/de/2022/05/29/deploy_your_blog_using_hugo_and_github_action/</link><pubDate>Sun, 29 May 2022 20:39:29 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/05/29/deploy_your_blog_using_hugo_and_github_action/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Vorwort In einem früheren Artikel, &amp;ldquo;Kostenloses Setup und Bereitstellungslösung für ein persönliches Blogsystem (Hugo + GitHub Pages + Cusdis)&amp;rdquo;, erwähnte ich die Verwendung von Hugo, einem statischen Site-Generator, um wirklich meinen persönlichen Blog aufzubauen. Ich nahm einige persönliche Anpassungen und Konfigurationen basierend auf dem hugo-theme-den-Theme aus der Hugo-Open-Source-Community vor, um meinen Bedürfnissen gerecht zu werden.
Meine Lösung besteht primär aus den folgenden Kernkomponenten:
Persönliches Blog-Quellrepository zur Versionskontrolle von Blog-Konfigurationen und allen Artikel-.</description></item><item><title>Kostenlose Lösung für Einrichtung und Bereitstellung eines persönlichen Blog-Systems (Hugo + Cloudflare Pages + Cusdis)</title><link>https://www.pseudoyu.com/de/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/</link><pubDate>Thu, 24 Mar 2022 01:19:28 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/03/24/free_blog_deploy_using_hugo_and_cusdis/</guid><description>Vorwort Pseudoyu ist meine persönliche Blog-Website. Ursprünglich mit WordPress auf meinem Vultr VPS erstellt, wurde sie später auf einen Tencent Cloud Server migriert und für verbesserte Zugriffsgeschwindigkeit registriert. Der Veröffentlichungsprozess blieb jedoch umständlich, und die Serverwartung verursachte erhebliche langfristige Kosten.
Daher suchte ich kontinuierlich nach Lösungen, die sowohl im In- als auch im Ausland optimale Zugriffserfahrungen gewährleisten und gleichzeitig auf Plattformen gehostet werden können, die den Bereitstellungs- und Veröffentlichungsprozess vereinfachen. Ich habe mein Blog-System-Setup und meinen Veröffentlichungsworkflow ständig verfeinert.</description></item></channel></rss>