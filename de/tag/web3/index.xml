<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web3 on Pseudoyu</title><link>https://www.pseudoyu.com/de/tag/web3/</link><description>Recent content in web3 on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>de</language><lastBuildDate>Sun, 30 Apr 2023 00:10:03 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/de/tag/web3/index.xml" rel="self" type="application/rss+xml"/><item><title>Wochenrückblick #38 - Foundry Contract-Tests, Logseq Aufgabenverwaltung und Surge Ponte Remote-Entwicklung</title><link>https://www.pseudoyu.com/de/2023/04/30/weekly_review_20230430/</link><pubDate>Sun, 30 Apr 2023 00:10:03 +0800</pubDate><guid>https://www.pseudoyu.com/de/2023/04/30/weekly_review_20230430/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Vorwort Dieser Beitrag ist eine Aufzeichnung und Reflexion meines Lebens vom 2023-04-19 bis zum 2023-04-30.
In meinem letzten Wochenrückblick erwähnte ich eine Reise durch mehrere Städte. Nach meiner Rückkehr nach Hangzhou nahm ich allmählich meinen ursprünglichen Lebensrhythmus wieder auf. Ich hatte viel mehr Zeit allein, mit reichlich Input, Reflexion und interessanten Dingen zu tun. Allerdings schien es, als hätte ich weniger Zeit, mich zu organisieren und mit mir selbst zu dialogisieren, oft bemerkte ich den Zeitablauf erst mehrere Tage später.</description></item><item><title>Wochenrückblick #37 - Zwei Wochen Muße (Wuhan | Hongkong | Mayday)</title><link>https://www.pseudoyu.com/de/2023/04/18/weekly_review_20230418/</link><pubDate>Tue, 18 Apr 2023 11:39:21 +0800</pubDate><guid>https://www.pseudoyu.com/de/2023/04/18/weekly_review_20230418/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Vorwort Dieser Beitrag zeichnet mein Leben und meine Reflexionen vom 3. bis 18. April 2023 auf.
Vielleicht aufgrund meiner kürzlichen Lebensumstellung hatte ich bereits im März zahlreiche Verpflichtungen geplant. Seit Anfang April befand ich mich auf Wanderschaft und erlebte zwei Wochen der Muße. Diese Reise glich einer Heimkehr - von Hangzhou, wo ich aufwuchs, nach Wuhan, dem ersten Ort, an dem ich für längere Zeit von zu Hause weg war, um meinen Professor und alte Freunde zu besuchen, und schließlich nach Hongkong, wo ich einige bemerkenswerte Jahre verbrachte, um Ausstellungen und Veranstaltungen zu besuchen.</description></item><item><title>Implementierung von Two-Phase Commit in Solidity Smart Contracts unter Verwendung von State Locks</title><link>https://www.pseudoyu.com/de/2022/07/01/two_phase_commit_contract_practice_in_solidity/</link><pubDate>Fri, 01 Jul 2022 10:54:57 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/07/01/two_phase_commit_contract_practice_in_solidity/</guid><description>《后来的我们 - 五月天》 Vorwort In Smart-Contract-Anwendungen, die Interaktionen zwischen mehreren Systemen oder Verträgen beinhalten, insbesondere in Geschäftsbereichen, in denen die Genauigkeit von Vermögenswerte</description></item><item><title>Solidity Smart Contract Entwicklung - Verwendung des Hardhat Frameworks</title><link>https://www.pseudoyu.com/de/2022/06/09/learn_solidity_from_scratch_hardhat/</link><pubDate>Thu, 09 Jun 2022 14:38:10 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/06/09/learn_solidity_from_scratch_hardhat/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Vorwort Nach den vorherigen Artikeln über Smart Contract Grundlagen, Web3.py und ethers.js haben wir die grundlegenden Kenntnisse zur direkten Interaktion mit Blockchain-Netzwerken durch Programme erworben. Für diejenigen, die damit nicht vertraut sind, können Sie folgende Artikel nachlesen:
Solidity Smart Contract Entwicklung - Grundlagen Solidity Smart Contract Entwicklung - Beherrschung von Web3.py Solidity Smart Contract Entwicklung - Beherrschung von ethers.js In realen komplexen Geschäftsszenarien verwenden wir jedoch oft weiter gekapselte Frameworks wie HardHat, Brownie, Truffle usw.</description></item><item><title>Solidity Smart Contract Entwicklung - Beherrschung von ethers.js</title><link>https://www.pseudoyu.com/de/2022/06/08/learn_solidity_from_scratch_ethersjs/</link><pubDate>Wed, 08 Jun 2022 00:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/06/08/learn_solidity_from_scratch_ethersjs/</guid><description>《後來的我們 - 五月天》 Vorwort Im vorherigen Artikel &amp;ldquo;Solidity Smart Contract Entwicklung - Grundlagen&amp;rdquo; haben wir die grundlegende Syntax von Solidity kennengelernt und verstanden, dass wir mit Frameworks wie Brownie und HardHat debuggen können. In einem weiteren Artikel &amp;ldquo;Solidity Smart Contract Entwicklung - Beherrschung von Web3.py&amp;rdquo; haben wir auch direkt mit unserem lokalen Ganache-Node mittels Web3.py interagiert.</description></item><item><title>Solidity Smart Contract Entwicklung - Meistern von Web3.py</title><link>https://www.pseudoyu.com/de/2022/05/30/learn_solidity_from_scratch_web3py/</link><pubDate>Mon, 30 May 2022 15:25:45 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/05/30/learn_solidity_from_scratch_web3py/</guid><description>《后来的我们 - 五月天》 Vorwort Im vorherigen Artikel &amp;ldquo;Solidity Smart Contract Entwicklung - Grundlagen&amp;rdquo; haben wir die grundlegende Syntax von Solidity kennengelernt und verstanden, dass wir mit Frameworks wie Brownie und HardHat debuggen können. Bevor wir jedoch diese vorgefertigten Frameworks verwenden, können wir mit Web3.py direkt mit unserem lokalen Ganache-Node interagieren, um</description></item><item><title>Solidity Smart Contract Entwicklung - Grundlagen</title><link>https://www.pseudoyu.com/de/2022/05/25/learn_solidity_from_scratch_basic/</link><pubDate>Wed, 25 May 2022 01:07:33 +0800</pubDate><guid>https://www.pseudoyu.com/de/2022/05/25/learn_solidity_from_scratch_basic/</guid><description>&amp;#39;Here After Us - Mayday&amp;#39; Vorwort Im letzten Jahr habe ich während meines Masterstudiums den Kurs &amp;ldquo;COMP7408 Distributed Ledger and Blockchain Technology&amp;rdquo; an der HKU belegt. In diesem Kurs lernte ich über die Entwicklung von Ethereum Smart Contracts und erstellte eine einfache Bibliotheksverwaltungs-ÐApp. Für mein Abschlussprojekt entschied ich mich, eine Musik-Copyright-Anwendung basierend auf Ethereum zu entwickeln, die unter Uright - Blockchain Music Copyright Management ÐApp zu finden ist. Durch diese Erfahrungen gewann ich ein grundlegendes Verständnis für die Solidity-Entwicklung.</description></item></channel></rss>