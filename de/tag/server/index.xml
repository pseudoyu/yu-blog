<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>server on Pseudoyu</title><link>https://www.pseudoyu.com/de/tag/server/</link><description>Recent content in server on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>de</language><lastBuildDate>Mon, 01 Jul 2024 15:30:00 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/de/tag/server/index.xml" rel="self" type="application/rss+xml"/><item><title>Wie ich kritische Daten rettete, als mein Cloud-Server abstürzte</title><link>https://www.pseudoyu.com/de/2024/07/01/rescue_my_data_from_a_crashed_server/</link><pubDate>Mon, 01 Jul 2024 15:30:00 +0800</pubDate><guid>https://www.pseudoyu.com/de/2024/07/01/rescue_my_data_from_a_crashed_server/</guid><description>Vorwort Am Freitag meldete mein bei BandwagonHost gekaufter 2C2G-Server plötzlich einen Kernel-Fehler, wodurch eine Verbindung über SSH oder ein Neustart unmöglich wurde. Nach einer Reihe von umständlichen Rettungsversuchen gelang es mir schließlich, über tausend Bilder von meinem Bildhosting-Dienst zu bergen. Noch immer erschüttert von dieser Erfahrung, möchte ich den Rettungsprozess dokumentieren und nebenbei die neue Bildhosting-Lösung erörtern, die ich eingerichtet habe.
Server-Rettung Dieser Server lief seit etwa eineinhalb Jahren stabil und beherbergte viele meiner kritischen Dienste, darunter über tausend unersetzliche Bilder für den Bildhosting-Dienst meines Blogs, die über Docker Volume persistent auf dem Host gespeichert waren.</description></item></channel></rss>