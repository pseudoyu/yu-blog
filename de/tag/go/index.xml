<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Pseudoyu</title><link>https://www.pseudoyu.com/de/tag/go/</link><description>Recent content in go on Pseudoyu</description><generator>Hugo -- gohugo.io</generator><language>de</language><lastBuildDate>Thu, 09 Sep 2021 15:14:26 +0800</lastBuildDate><atom:link href="https://www.pseudoyu.com/de/tag/go/index.xml" rel="self" type="application/rss+xml"/><item><title>BitXHub Cross-chain Plugin (Fabric) Quellcode-Analyse</title><link>https://www.pseudoyu.com/de/2021/09/09/blockchain_crosschain_bitxhub/</link><pubDate>Thu, 09 Sep 2021 15:14:26 +0800</pubDate><guid>https://www.pseudoyu.com/de/2021/09/09/blockchain_crosschain_bitxhub/</guid><description>Vorwort Ich habe zuvor erwähnt, dass die BitXHub Cross-Chain-Plattform von QulianTech eine relativ umfassende Open-Source-Cross-Chain-Lösung in der Branche ist. Sie optimiert hauptsächlich</description></item><item><title>Analyse der Hyperledger Fabric Go SDK Events</title><link>https://www.pseudoyu.com/de/2021/09/01/blockchain_hyperledger_fabric_gosdk_event/</link><pubDate>Wed, 01 Sep 2021 17:21:58 +0800</pubDate><guid>https://www.pseudoyu.com/de/2021/09/01/blockchain_hyperledger_fabric_gosdk_event/</guid><description>Vorwort Kürzlich musste ich im Rahmen der Arbeit an einem Cross-Chain-Adapter das Go SDK verwenden, um eine Verbindung zu einem Fabric-Netzwerk auf einer lokalen Chain herzustellen und Events zu überwachen. Daher habe ich mich entschieden, die von Fabric unterstützten Events und die vom SDK bereitgestellten Überwachungsmethoden zusammenzufassen.
Fabric Events Events sind eine Möglichkeit für Clients, mit dem Fabric-Netzwerk zu interagieren. Wie in der obigen Abbildung dargestellt, kann der Client nach der Ausführung einer Transaktion im Fabric-Netzwerk aufgrund der asynchronen Verarbeitung den Status der eingereichten Transaktion (ob sie akzeptiert wurde) nicht unmittelbar erfahren.</description></item><item><title>Zusammenfassung der Go-Fehlerbehandlung und Best Practices</title><link>https://www.pseudoyu.com/de/2021/08/29/go_error_handling/</link><pubDate>Sun, 29 Aug 2021 00:19:42 +0800</pubDate><guid>https://www.pseudoyu.com/de/2021/08/29/go_error_handling/</guid><description>Vorwort In letzter Zeit habe ich das Go Advanced Training Camp von Herrn Mao Jian von GeekTime überprüft und zusammengefasst. Dies ist ein Kurs, der sich stärker auf Technik und Prinzipien konzentriert und eine breite Palette von Wissenspunkten abdeckt. Daher habe ich beschlossen, eine Serie zu starten, um dies aufzuzeichnen und zusammenzufassen, was auch meine eigene Überprüfung und Referenz erleichtern wird. Dies ist der erste Artikel in der Serie, &amp;ldquo;Go-Fehlerbehandlung&amp;rdquo;.</description></item><item><title>Häufig verwendete Datenstrukturen für das Lösen von LeetCode-Problemen (Go-Edition)</title><link>https://www.pseudoyu.com/de/2021/05/29/algorithm_data_structure_go/</link><pubDate>Sat, 29 May 2021 00:12:17 +0800</pubDate><guid>https://www.pseudoyu.com/de/2021/05/29/algorithm_data_structure_go/</guid><description>Vorwort Kürzlich habe ich wieder begonnen, LeetCode-Algorithmusprobleme mit Go zu lösen. Bei der arbeitsbezogenen Algorithmenpraxis liegt der Hauptfokus darauf, Problemlösungsansätze und Programmierfähigkeiten zu schärfen, anstatt komplexe Datenstrukturen wie in algorithmischen Wettbewerben einzusetzen. Die häufig verwendeten Datenstrukturen und Operationen sind relativ wenige, aber ihre Beherrschung kann die Codequalität erheblich verbessern. Ich habe diese Zusammenfassung für eine einfache Referenz erstellt.
Datenstrukturen Arrays Initialisierung // Initialisierung eines Arrays der Größe 10 mit Standardwert 0 nums := make([10]int) // Initialisierung eines zweidimensionalen booleschen Arrays visited := make([5][10]int) Gängige Methoden for i := 0; i &amp;lt; len(nums); i++ { // Zugriff auf num[i] } Strings Initialisierung s1 := &amp;#34;hallo welt&amp;#34; // Erstellung eines mehrzeiligen Strings s2 := `Dies ist ein mehrzeiliger String.</description></item></channel></rss>